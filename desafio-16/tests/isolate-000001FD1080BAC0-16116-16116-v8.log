v8-version,9,4,146,24,-node.21,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff651a30000,0x7ff655752000,0
shared-library,C:\\windows\\SYSTEM32\\ntdll.dll,0x7ffd55a20000,0x7ffd55c29000,0
shared-library,C:\\windows\\System32\\KERNEL32.DLL,0x7ffd54710000,0x7ffd547cd000,0
shared-library,C:\\windows\\System32\\KERNELBASE.dll,0x7ffd53260000,0x7ffd535dd000,0
shared-library,C:\\windows\\System32\\WS2_32.dll,0x7ffd538b0000,0x7ffd5391f000,0
shared-library,C:\\windows\\System32\\RPCRT4.dll,0x7ffd55030000,0x7ffd55150000,0
shared-library,C:\\windows\\SYSTEM32\\dbghelp.dll,0x7ffd41530000,0x7ffd41751000,0
shared-library,C:\\windows\\System32\\PSAPI.DLL,0x7ffd55380000,0x7ffd55388000,0
shared-library,C:\\windows\\System32\\ucrtbase.dll,0x7ffd536d0000,0x7ffd537e1000,0
shared-library,C:\\windows\\System32\\ADVAPI32.dll,0x7ffd554c0000,0x7ffd5556e000,0
shared-library,C:\\windows\\System32\\msvcrt.dll,0x7ffd53e40000,0x7ffd53ee3000,0
shared-library,C:\\windows\\System32\\sechost.dll,0x7ffd54190000,0x7ffd5422e000,0
shared-library,C:\\windows\\SYSTEM32\\IPHLPAPI.DLL,0x7ffd51be0000,0x7ffd51c0d000,0
shared-library,C:\\windows\\SYSTEM32\\USERENV.dll,0x7ffd525a0000,0x7ffd525c9000,0
shared-library,C:\\windows\\System32\\USER32.dll,0x7ffd54520000,0x7ffd546cd000,0
shared-library,C:\\windows\\System32\\win32u.dll,0x7ffd52f00000,0x7ffd52f26000,0
shared-library,C:\\windows\\System32\\GDI32.dll,0x7ffd546d0000,0x7ffd546f9000,0
shared-library,C:\\windows\\System32\\gdi32full.dll,0x7ffd52f30000,0x7ffd53048000,0
shared-library,C:\\windows\\System32\\msvcp_win.dll,0x7ffd53050000,0x7ffd530ed000,0
shared-library,C:\\windows\\System32\\CRYPT32.dll,0x7ffd530f0000,0x7ffd53252000,0
shared-library,C:\\windows\\SYSTEM32\\bcrypt.dll,0x7ffd528e0000,0x7ffd52907000,0
shared-library,C:\\windows\\SYSTEM32\\WINMM.dll,0x7ffd4c930000,0x7ffd4c963000,0
shared-library,C:\\windows\\SYSTEM32\\CRYPTBASE.DLL,0x7ffd52720000,0x7ffd5272c000,0
shared-library,C:\\windows\\System32\\IMM32.DLL,0x7ffd54ff0000,0x7ffd55021000,0
shared-library,C:\\windows\\SYSTEM32\\powrprof.dll,0x7ffd518c0000,0x7ffd5190d000,0
shared-library,C:\\windows\\SYSTEM32\\UMPDC.dll,0x7ffd519b0000,0x7ffd519c3000,0
shared-library,C:\\windows\\system32\\uxtheme.dll,0x7ffd50600000,0x7ffd506ac000,0
shared-library,C:\\windows\\System32\\combase.dll,0x7ffd53ac0000,0x7ffd53e39000,0
shared-library,C:\\windows\\system32\\mswsock.dll,0x7ffd524e0000,0x7ffd52547000,0
shared-library,C:\\windows\\SYSTEM32\\kernel.appcore.dll,0x7ffd520b0000,0x7ffd520c8000,0
shared-library,C:\\windows\\System32\\bcryptPrimitives.dll,0x7ffd535e0000,0x7ffd5365f000,0
shared-library-end
tick,0x7ffd55ac40b4,148438,0,0x0,6
profiler,begin,1000
new,CodeRange,0x1fd14890000,0
new,MemoryChunk,0x6b37d40000,262144
new,MemoryChunk,0x16339f80000,262144
new,MemoryChunk,0xb793ec0000,262144
new,MemoryChunk,0x1c38f0c0000,262144
new,MemoryChunk,0x1944fc00000,262144
heap-capacity,1031072
heap-available,2198652736
new,MemoryChunk,0x1424f540000,262144
new,MemoryChunk,0x5cd6780000,262144
new,MemoryChunk,0x30f43b00000,262144
new,MemoryChunk,0x5d8b380000,262144
new,MemoryChunk,0x22ee8cc0000,262144
new,MemoryChunk,0x1722ff00000,262144
new,MemoryChunk,0x25dd5bc0000,262144
new,MemoryChunk,0x1fd148c0000,262144
new,MemoryChunk,0x30499e00000,262144
code-creation,Builtin,2,153917,0x7ff6525a03c4,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,153942,0x7ff6525a0924,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,153950,0x7ff6525a0b04,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,153957,0x7ff6525a0d84,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,153963,0x7ff6525a0e64,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,153970,0x7ff6525a0fe4,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,153976,0x7ff6525a1084,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,153983,0x7ff6525a10c4,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,153990,0x7ff6525a1244,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,153997,0x7ff6525a1404,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,154056,0x7ff6525a15c4,104,CallBoundFunction
code-creation,Builtin,2,154066,0x7ff6525a1644,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,154073,0x7ff6525a16c4,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,154079,0x7ff6525a1744,120,Call_ReceiverIsAny
code-creation,Builtin,2,154085,0x7ff6525a17c4,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,154092,0x7ff6525a1bc4,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,154100,0x7ff6525a1fc4,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,154109,0x7ff6525a2404,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,154116,0x7ff6525a2844,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,154123,0x7ff6525a2c84,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,154129,0x7ff6525a30c4,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,154136,0x7ff6525a3484,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,154143,0x7ff6525a3844,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,154150,0x7ff6525a3c04,736,CallProxy
code-creation,Builtin,2,154156,0x7ff6525a3f04,148,CallVarargs
code-creation,Builtin,2,154162,0x7ff6525a3fa4,944,CallWithSpread
code-creation,Builtin,2,154168,0x7ff6525a4364,1956,CallWithSpread_Baseline
code-creation,Builtin,2,154175,0x7ff6525a4b24,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,154181,0x7ff6525a52c4,864,CallWithArrayLike
code-creation,Builtin,2,154187,0x7ff6525a5644,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,154194,0x7ff6525a5d64,156,CallForwardVarargs
code-creation,Builtin,2,154200,0x7ff6525a5e04,156,CallFunctionForwardVarargs
code-creation,Builtin,2,154206,0x7ff6525a5ea4,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,154213,0x7ff6525a5f44,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,154220,0x7ff6525a6044,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,154227,0x7ff6525a6184,28,ConstructFunction
code-creation,Builtin,2,154233,0x7ff6525a61a4,104,ConstructBoundFunction
code-creation,Builtin,2,154239,0x7ff6525a6224,28,ConstructedNonConstructable
code-creation,Builtin,2,154246,0x7ff6525a6244,100,Construct
code-creation,Builtin,2,154252,0x7ff6525a62c4,148,ConstructVarargs
code-creation,Builtin,2,154258,0x7ff6525a6364,968,ConstructWithSpread
code-creation,Builtin,2,154264,0x7ff6525a6744,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,154271,0x7ff6525a6e24,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,154277,0x7ff6525a7524,924,ConstructWithArrayLike
code-creation,Builtin,2,154284,0x7ff6525a78c4,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,154290,0x7ff6525a7f44,196,ConstructForwardVarargs
code-creation,Builtin,2,154297,0x7ff6525a8024,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,154303,0x7ff6525a8104,804,Construct_Baseline
code-creation,Builtin,2,154309,0x7ff6525a8444,820,Construct_WithFeedback
code-creation,Builtin,2,154316,0x7ff6525a8784,476,JSConstructStubGeneric
code-creation,Builtin,2,154322,0x7ff6525a8964,376,JSBuiltinsConstructStub
code-creation,Builtin,2,154328,0x7ff6525a8ae4,676,FastNewObject
code-creation,Builtin,2,154334,0x7ff6525a8da4,292,FastNewClosure
code-creation,Builtin,2,154340,0x7ff6525a8ee4,720,ConstructProxy
code-creation,Builtin,2,154347,0x7ff6525a91c4,360,JSEntry
code-creation,Builtin,2,154353,0x7ff6525a9344,360,JSConstructEntry
code-creation,Builtin,2,154359,0x7ff6525a94c4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,154365,0x7ff6525a9644,96,JSEntryTrampoline
code-creation,Builtin,2,154371,0x7ff6525a96c4,96,JSConstructEntryTrampoline
code-creation,Builtin,2,154378,0x7ff6525a9744,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,154384,0x7ff6525a9864,1116,StringCodePointAt
code-creation,Builtin,2,154390,0x7ff6525a9cc4,1552,StringFromCodePointAt
code-creation,Builtin,2,154396,0x7ff6525aa2e4,544,StringEqual
code-creation,Builtin,2,154403,0x7ff6525aa524,276,StringGreaterThan
code-creation,Builtin,2,154425,0x7ff6525aa644,276,StringGreaterThanOrEqual
code-creation,Builtin,2,154432,0x7ff6525aa764,276,StringLessThan
code-creation,Builtin,2,154438,0x7ff6525aa884,276,StringLessThanOrEqual
code-creation,Builtin,2,154445,0x7ff6525aa9a4,2492,StringSubstring
code-creation,Builtin,2,154451,0x7ff6525ab364,80,OrderedHashTableHealIndex
code-creation,Builtin,2,154457,0x7ff6525ab3c4,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,154464,0x7ff6525ab864,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,154470,0x7ff6525ab8c4,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,154477,0x7ff6525ab924,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,154484,0x7ff6525ab984,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,154490,0x7ff6525ab9e4,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,154497,0x7ff6525aba44,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,154504,0x7ff6525abaa4,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,154511,0x7ff6525abb04,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,154517,0x7ff6525abbe4,52,InterpreterOnStackReplacement
code-creation,Builtin,2,154524,0x7ff6525abc24,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,154530,0x7ff6525abe84,56,BaselineOnStackReplacement
code-creation,Builtin,2,154537,0x7ff6525abec4,84,BaselineLeaveFrame
code-creation,Builtin,2,154543,0x7ff6525abf24,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,154550,0x7ff6525ac004,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,154556,0x7ff6525ac104,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,154563,0x7ff6525ac1e4,1004,CompileLazy
code-creation,Builtin,2,154569,0x7ff6525ac5e4,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,154576,0x7ff6525ac644,252,InstantiateAsmJs
code-creation,Builtin,2,154582,0x7ff6525ac744,32,NotifyDeoptimized
code-creation,Builtin,2,154588,0x7ff6525ac784,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,154595,0x7ff6525acaa4,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,154601,0x7ff6525acdc4,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,154664,0x7ff6525ad0e4,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,154671,0x7ff6525ad404,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,154678,0x7ff6525ad444,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,154685,0x7ff6525ad484,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,154691,0x7ff6525ad4c4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,154698,0x7ff6525ad524,288,CallApiCallback
code-creation,Builtin,2,154705,0x7ff6525ad664,268,CallApiGetter
code-creation,Builtin,2,154711,0x7ff6525ad784,12,HandleApiCall
code-creation,Builtin,2,154717,0x7ff6525ad7a4,12,HandleApiCallAsFunction
code-creation,Builtin,2,154724,0x7ff6525ad7c4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,154730,0x7ff6525ad7e4,64,AllocateInYoungGeneration
code-creation,Builtin,2,154737,0x7ff6525ad844,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,154745,0x7ff6525ad884,64,AllocateInOldGeneration
code-creation,Builtin,2,154753,0x7ff6525ad8e4,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,154761,0x7ff6525ad924,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,154769,0x7ff6525adae4,496,GrowFastDoubleElements
code-creation,Builtin,2,154776,0x7ff6525adce4,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,154782,0x7ff6525ade84,388,DebugBreakTrampoline
code-creation,Builtin,2,154789,0x7ff6525ae024,180,ToNumber
code-creation,Builtin,2,154795,0x7ff6525ae0e4,292,ToNumber_Baseline
code-creation,Builtin,2,154801,0x7ff6525ae224,360,ToNumeric_Baseline
code-creation,Builtin,2,154807,0x7ff6525ae3a4,104,PlainPrimitiveToNumber
code-creation,Builtin,2,154814,0x7ff6525ae424,212,ToNumberConvertBigInt
code-creation,Builtin,2,154820,0x7ff6525ae504,132,Typeof
code-creation,Builtin,2,154826,0x7ff6525ae5a4,104,BigIntToI64
code-creation,Builtin,2,154832,0x7ff6525ae624,4,BigIntToI32Pair
code-creation,Builtin,2,154848,0x7ff6525ae644,232,I64ToBigInt
code-creation,Builtin,2,154855,0x7ff6525ae744,4,I32PairToBigInt
code-creation,Builtin,2,154862,0x7ff6525ae764,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,154868,0x7ff6525ae7e4,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,154875,0x7ff6525af884,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,154881,0x7ff6525b3684,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,154888,0x7ff6525b37a4,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,154894,0x7ff6525b37e4,12,LoadIC_StringLength
code-creation,Builtin,2,154900,0x7ff6525b3804,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,154907,0x7ff6525b3824,3056,LoadIC_NoFeedback
code-creation,Builtin,2,154913,0x7ff6525b4424,32,StoreGlobalIC_Slow
code-creation,Builtin,2,154919,0x7ff6525b4464,7332,StoreIC_NoFeedback
code-creation,Builtin,2,154926,0x7ff6525b6124,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,154932,0x7ff6525b61e4,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,154938,0x7ff6525b6244,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,154945,0x7ff6525b6344,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,154952,0x7ff6525b6444,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,154959,0x7ff6525b6544,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,154966,0x7ff6525b6644,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,154973,0x7ff6525b9e64,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,154980,0x7ff6525bc404,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,154987,0x7ff6525bf844,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,154993,0x7ff6525c1024,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,155000,0x7ff6525c3164,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,155007,0x7ff6525c7d24,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,155014,0x7ff6525c9e64,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,155021,0x7ff6525cc984,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,155030,0x7ff6525ccca4,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,155037,0x7ff6525ccd64,72,HasIndexedInterceptorIC
code-creation,Builtin,2,155045,0x7ff6525ccdc4,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,155052,0x7ff6525cce44,224,DynamicCheckMaps
code-creation,Builtin,2,155059,0x7ff6525ccf44,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,155066,0x7ff6525ccfc4,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,155073,0x7ff6525cd084,152,EnqueueMicrotask
code-creation,Builtin,2,155079,0x7ff6525cd124,8,RunMicrotasksTrampoline
code-creation,Builtin,2,155086,0x7ff6525cd144,3476,RunMicrotasks
code-creation,Builtin,2,155092,0x7ff6525cdee4,2636,HasProperty
code-creation,Builtin,2,155098,0x7ff6525ce944,1156,DeleteProperty
code-creation,Builtin,2,155104,0x7ff6525cede4,1972,CopyDataProperties
code-creation,Builtin,2,155111,0x7ff6525cf5a4,9184,SetDataProperties
code-creation,Builtin,2,155117,0x7ff6525d19a4,28,Abort
code-creation,Builtin,2,155123,0x7ff6525d19c4,28,AbortCSAAssert
code-creation,Builtin,2,155129,0x7ff6525d19e4,12,EmptyFunction
code-creation,Builtin,2,155135,0x7ff6525d1a04,12,Illegal
code-creation,Builtin,2,155141,0x7ff6525d1a24,12,StrictPoisonPillThrower
code-creation,Builtin,2,155147,0x7ff6525d1a44,12,UnsupportedThrower
code-creation,Builtin,2,155154,0x7ff6525d1a64,64,ReturnReceiver
code-creation,Builtin,2,155160,0x7ff6525d1ac4,28,ArrayConstructor
code-creation,Builtin,2,155166,0x7ff6525d1ae4,404,ArrayConstructorImpl
code-creation,Builtin,2,155172,0x7ff6525d1c84,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,155180,0x7ff6525d1d64,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,155187,0x7ff6525d1e44,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,155194,0x7ff6525d1f04,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,155232,0x7ff6525d1fc4,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,155241,0x7ff6525d2084,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,155248,0x7ff6525d2144,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,155256,0x7ff6525d2204,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,155263,0x7ff6525d22c4,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,155271,0x7ff6525d24e4,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,155278,0x7ff6525d26e4,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,155285,0x7ff6525d28a4,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,155293,0x7ff6525d2a44,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,155300,0x7ff6525d2c04,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,155308,0x7ff6525d2da4,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,155316,0x7ff6525d2f84,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,155323,0x7ff6525d3124,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,155330,0x7ff6525d3184,12,ArrayConcat
code-creation,Builtin,2,155336,0x7ff6525d31a4,12,ArrayPrototypeFill
code-creation,Builtin,2,155342,0x7ff6525d31c4,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,155349,0x7ff6525d3584,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,155355,0x7ff6525d3624,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,155362,0x7ff6525d3704,548,ArrayIncludes
code-creation,Builtin,2,155368,0x7ff6525d3944,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,155374,0x7ff6525d3ca4,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,155381,0x7ff6525d3d24,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,155387,0x7ff6525d3da4,552,ArrayIndexOf
code-creation,Builtin,2,155393,0x7ff6525d3fe4,12,ArrayPop
code-creation,Builtin,2,155399,0x7ff6525d4004,616,ArrayPrototypePop
code-creation,Builtin,2,155405,0x7ff6525d4284,12,ArrayPush
code-creation,Builtin,2,155411,0x7ff6525d42a4,2424,ArrayPrototypePush
code-creation,Builtin,2,155418,0x7ff6525d4c24,12,ArrayShift
code-creation,Builtin,2,155424,0x7ff6525d4c44,12,ArrayUnshift
code-creation,Builtin,2,155430,0x7ff6525d4c64,956,CloneFastJSArray
code-creation,Builtin,2,155436,0x7ff6525d5024,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,155443,0x7ff6525d58c4,976,ExtractFastJSArray
code-creation,Builtin,2,155449,0x7ff6525d5ca4,260,ArrayPrototypeEntries
code-creation,Builtin,2,155455,0x7ff6525d5dc4,248,ArrayPrototypeKeys
code-creation,Builtin,2,155462,0x7ff6525d5ec4,260,ArrayPrototypeValues
code-creation,Builtin,2,155468,0x7ff6525d5fe4,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,155474,0x7ff6525d7144,4168,FlattenIntoArray
code-creation,Builtin,2,155481,0x7ff6525d81a4,4172,FlatMapIntoArray
code-creation,Builtin,2,155487,0x7ff6525d9204,372,ArrayPrototypeFlat
code-creation,Builtin,2,155493,0x7ff6525d9384,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,155499,0x7ff6525d9544,12,ArrayBufferConstructor
code-creation,Builtin,2,155506,0x7ff6525d9564,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,155512,0x7ff6525d9584,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,155519,0x7ff6525d95a4,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,155525,0x7ff6525d95c4,804,AsyncFunctionEnter
code-creation,Builtin,2,155531,0x7ff6525d9904,132,AsyncFunctionReject
code-creation,Builtin,2,155538,0x7ff6525d99a4,128,AsyncFunctionResolve
code-creation,Builtin,2,155544,0x7ff6525d9a44,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,155551,0x7ff6525d9a64,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,155557,0x7ff6525da564,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,155578,0x7ff6525db064,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,155586,0x7ff6525db124,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,155593,0x7ff6525db1e4,12,BigIntConstructor
code-creation,Builtin,2,155599,0x7ff6525db204,12,BigIntAsUintN
code-creation,Builtin,2,155606,0x7ff6525db224,12,BigIntAsIntN
code-creation,Builtin,2,155612,0x7ff6525db244,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,155619,0x7ff6525db264,12,BigIntPrototypeToString
code-creation,Builtin,2,155625,0x7ff6525db284,12,BigIntPrototypeValueOf
code-creation,Builtin,2,155631,0x7ff6525db2a4,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,155638,0x7ff6525db2c4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,155645,0x7ff6525db2e4,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,155652,0x7ff6525db304,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,155658,0x7ff6525db324,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,155665,0x7ff6525db344,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,155672,0x7ff6525db364,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,155678,0x7ff6525db384,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,155685,0x7ff6525db3a4,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,155692,0x7ff6525db3c4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,155698,0x7ff6525db3e4,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,155705,0x7ff6525db404,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,155712,0x7ff6525db424,12,CallSitePrototypeGetThis
code-creation,Builtin,2,155718,0x7ff6525db444,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,155725,0x7ff6525db464,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,155731,0x7ff6525db484,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,155738,0x7ff6525db4a4,12,CallSitePrototypeIsEval
code-creation,Builtin,2,155744,0x7ff6525db4c4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,155750,0x7ff6525db4e4,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,155757,0x7ff6525db504,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,155763,0x7ff6525db524,12,CallSitePrototypeToString
code-creation,Builtin,2,155770,0x7ff6525db544,12,ConsoleDebug
code-creation,Builtin,2,155776,0x7ff6525db564,12,ConsoleError
code-creation,Builtin,2,155782,0x7ff6525db584,12,ConsoleInfo
code-creation,Builtin,2,155788,0x7ff6525db5a4,12,ConsoleLog
code-creation,Builtin,2,155794,0x7ff6525db5c4,12,ConsoleWarn
code-creation,Builtin,2,155800,0x7ff6525db5e4,12,ConsoleDir
code-creation,Builtin,2,155806,0x7ff6525db604,12,ConsoleDirXml
code-creation,Builtin,2,155813,0x7ff6525db624,12,ConsoleTable
code-creation,Builtin,2,155819,0x7ff6525db644,12,ConsoleTrace
code-creation,Builtin,2,155825,0x7ff6525db664,12,ConsoleGroup
code-creation,Builtin,2,155831,0x7ff6525db684,12,ConsoleGroupCollapsed
code-creation,Builtin,2,155837,0x7ff6525db6a4,12,ConsoleGroupEnd
code-creation,Builtin,2,155854,0x7ff6525db6c4,12,ConsoleClear
code-creation,Builtin,2,155861,0x7ff6525db6e4,12,ConsoleCount
code-creation,Builtin,2,155867,0x7ff6525db704,12,ConsoleCountReset
code-creation,Builtin,2,155873,0x7ff6525db724,12,ConsoleAssert
code-creation,Builtin,2,155879,0x7ff6525db744,12,ConsoleProfile
code-creation,Builtin,2,155886,0x7ff6525db764,12,ConsoleProfileEnd
code-creation,Builtin,2,155892,0x7ff6525db784,12,ConsoleTime
code-creation,Builtin,2,155898,0x7ff6525db7a4,12,ConsoleTimeLog
code-creation,Builtin,2,155904,0x7ff6525db7c4,12,ConsoleTimeEnd
code-creation,Builtin,2,155910,0x7ff6525db7e4,12,ConsoleTimeStamp
code-creation,Builtin,2,155916,0x7ff6525db804,12,ConsoleContext
code-creation,Builtin,2,155925,0x7ff6525db824,12,DataViewConstructor
code-creation,Builtin,2,155931,0x7ff6525db844,12,DateConstructor
code-creation,Builtin,2,155937,0x7ff6525db864,216,DatePrototypeGetDate
code-creation,Builtin,2,155943,0x7ff6525db944,216,DatePrototypeGetDay
code-creation,Builtin,2,155949,0x7ff6525dba24,216,DatePrototypeGetFullYear
code-creation,Builtin,2,155956,0x7ff6525dbb04,216,DatePrototypeGetHours
code-creation,Builtin,2,155979,0x7ff6525dbbe4,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,155988,0x7ff6525dbcc4,216,DatePrototypeGetMinutes
code-creation,Builtin,2,155994,0x7ff6525dbda4,216,DatePrototypeGetMonth
code-creation,Builtin,2,156001,0x7ff6525dbe84,216,DatePrototypeGetSeconds
code-creation,Builtin,2,156007,0x7ff6525dbf64,124,DatePrototypeGetTime
code-creation,Builtin,2,156013,0x7ff6525dbfe4,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,156020,0x7ff6525dc0c4,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,156026,0x7ff6525dc1a4,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,156033,0x7ff6525dc284,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,156039,0x7ff6525dc364,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,156045,0x7ff6525dc444,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,156052,0x7ff6525dc524,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,156058,0x7ff6525dc604,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,156065,0x7ff6525dc6e4,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,156071,0x7ff6525dc7c4,124,DatePrototypeValueOf
code-creation,Builtin,2,156078,0x7ff6525dc844,352,DatePrototypeToPrimitive
code-creation,Builtin,2,156084,0x7ff6525dc9c4,12,DatePrototypeGetYear
code-creation,Builtin,2,156090,0x7ff6525dc9e4,12,DatePrototypeSetYear
code-creation,Builtin,2,156097,0x7ff6525dca04,12,DateNow
code-creation,Builtin,2,156102,0x7ff6525dca24,12,DateParse
code-creation,Builtin,2,156108,0x7ff6525dca44,12,DatePrototypeSetDate
code-creation,Builtin,2,156115,0x7ff6525dca64,12,DatePrototypeSetFullYear
code-creation,Builtin,2,156121,0x7ff6525dca84,12,DatePrototypeSetHours
code-creation,Builtin,2,156128,0x7ff6525dcaa4,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,156134,0x7ff6525dcac4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,156141,0x7ff6525dcae4,12,DatePrototypeSetMonth
code-creation,Builtin,2,156147,0x7ff6525dcb04,12,DatePrototypeSetSeconds
code-creation,Builtin,2,156153,0x7ff6525dcb24,12,DatePrototypeSetTime
code-creation,Builtin,2,156160,0x7ff6525dcb44,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,156166,0x7ff6525dcb64,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,156173,0x7ff6525dcb84,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,156179,0x7ff6525dcba4,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,156186,0x7ff6525dcbc4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,156192,0x7ff6525dcbe4,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,156199,0x7ff6525dcc04,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,156205,0x7ff6525dcc24,12,DatePrototypeToDateString
code-creation,Builtin,2,156212,0x7ff6525dcc44,12,DatePrototypeToISOString
code-creation,Builtin,2,156218,0x7ff6525dcc64,12,DatePrototypeToUTCString
code-creation,Builtin,2,156224,0x7ff6525dcc84,12,DatePrototypeToString
code-creation,Builtin,2,156231,0x7ff6525dcca4,12,DatePrototypeToTimeString
code-creation,Builtin,2,156237,0x7ff6525dccc4,12,DatePrototypeToJson
code-creation,Builtin,2,156243,0x7ff6525dcce4,12,DateUTC
code-creation,Builtin,2,156249,0x7ff6525dcd04,12,ErrorConstructor
code-creation,Builtin,2,156255,0x7ff6525dcd24,12,ErrorCaptureStackTrace
code-creation,Builtin,2,156262,0x7ff6525dcd44,12,ErrorPrototypeToString
code-creation,Builtin,2,156268,0x7ff6525dcd64,12,FunctionConstructor
code-creation,Builtin,2,156274,0x7ff6525dcd84,68,FunctionPrototypeApply
code-creation,Builtin,2,156281,0x7ff6525dcde4,12,FunctionPrototypeBind
code-creation,Builtin,2,156287,0x7ff6525dce04,32,FunctionPrototypeCall
code-creation,Builtin,2,156293,0x7ff6525dce44,12,FunctionPrototypeToString
code-creation,Builtin,2,156300,0x7ff6525dce64,192,CreateIterResultObject
code-creation,Builtin,2,156306,0x7ff6525dcf44,788,CreateGeneratorObject
code-creation,Builtin,2,156313,0x7ff6525dd264,12,GeneratorFunctionConstructor
code-creation,Builtin,2,156319,0x7ff6525dd284,412,GeneratorPrototypeNext
code-creation,Builtin,2,156325,0x7ff6525dd424,420,GeneratorPrototypeReturn
code-creation,Builtin,2,156332,0x7ff6525dd5e4,424,GeneratorPrototypeThrow
code-creation,Builtin,2,156363,0x7ff6525dd7a4,12,AsyncFunctionConstructor
code-creation,Builtin,2,156371,0x7ff6525dd7c4,372,SuspendGeneratorBaseline
code-creation,Builtin,2,156377,0x7ff6525dd944,88,ResumeGeneratorBaseline
code-creation,Builtin,2,156384,0x7ff6525dd9a4,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,156391,0x7ff6525dd9e4,12,GlobalDecodeURI
code-creation,Builtin,2,156397,0x7ff6525dda04,12,GlobalDecodeURIComponent
code-creation,Builtin,2,156403,0x7ff6525dda24,12,GlobalEncodeURI
code-creation,Builtin,2,156409,0x7ff6525dda44,12,GlobalEncodeURIComponent
code-creation,Builtin,2,156416,0x7ff6525dda64,12,GlobalEscape
code-creation,Builtin,2,156422,0x7ff6525dda84,12,GlobalUnescape
code-creation,Builtin,2,156428,0x7ff6525ddaa4,12,GlobalEval
code-creation,Builtin,2,156434,0x7ff6525ddac4,132,GlobalIsFinite
code-creation,Builtin,2,156441,0x7ff6525ddb64,124,GlobalIsNaN
code-creation,Builtin,2,156447,0x7ff6525ddbe4,12,JsonParse
code-creation,Builtin,2,156453,0x7ff6525ddc04,12,JsonStringify
code-creation,Builtin,2,156459,0x7ff6525ddc24,4608,LoadIC
code-creation,Builtin,2,156466,0x7ff6525dee44,4296,LoadIC_Megamorphic
code-creation,Builtin,2,156472,0x7ff6525dff24,4520,LoadIC_Noninlined
code-creation,Builtin,2,156478,0x7ff6525e10e4,44,LoadICTrampoline
code-creation,Builtin,2,156485,0x7ff6525e1124,24,LoadICBaseline
code-creation,Builtin,2,156491,0x7ff6525e1144,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,156497,0x7ff6525e1184,7376,LoadSuperIC
code-creation,Builtin,2,156503,0x7ff6525e2e64,24,LoadSuperICBaseline
code-creation,Builtin,2,156510,0x7ff6525e2e84,8148,KeyedLoadIC
code-creation,Builtin,2,156516,0x7ff6525e4e64,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,156522,0x7ff6525e81a4,44,KeyedLoadICTrampoline
code-creation,Builtin,2,156528,0x7ff6525e81e4,24,KeyedLoadICBaseline
code-creation,Builtin,2,156535,0x7ff6525e8204,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,156541,0x7ff6525e8244,5104,StoreGlobalIC
code-creation,Builtin,2,156548,0x7ff6525e9644,44,StoreGlobalICTrampoline
code-creation,Builtin,2,156554,0x7ff6525e9684,24,StoreGlobalICBaseline
code-creation,Builtin,2,156560,0x7ff6525e96a4,5340,StoreIC
code-creation,Builtin,2,156566,0x7ff6525eab84,44,StoreICTrampoline
code-creation,Builtin,2,156573,0x7ff6525eabc4,24,StoreICBaseline
code-creation,Builtin,2,156579,0x7ff6525eabe4,5780,KeyedStoreIC
code-creation,Builtin,2,156585,0x7ff6525ec284,44,KeyedStoreICTrampoline
code-creation,Builtin,2,156591,0x7ff6525ec2c4,24,KeyedStoreICBaseline
code-creation,Builtin,2,156597,0x7ff6525ec2e4,404,StoreInArrayLiteralIC
code-creation,Builtin,2,156604,0x7ff6525ec484,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,156610,0x7ff6525ec4a4,140,LookupContextBaseline
code-creation,Builtin,2,156617,0x7ff6525ec544,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,156624,0x7ff6525ec5e4,3244,LoadGlobalIC
code-creation,Builtin,2,156630,0x7ff6525ed2a4,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,156636,0x7ff6525edf44,44,LoadGlobalICTrampoline
code-creation,Builtin,2,156643,0x7ff6525edf84,24,LoadGlobalICBaseline
code-creation,Builtin,2,156649,0x7ff6525edfa4,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,156656,0x7ff6525edfe4,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,156663,0x7ff6525ee004,140,LookupGlobalICBaseline
code-creation,Builtin,2,156669,0x7ff6525ee0a4,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,156676,0x7ff6525ee144,2064,CloneObjectIC
code-creation,Builtin,2,156682,0x7ff6525ee964,24,CloneObjectICBaseline
code-creation,Builtin,2,156688,0x7ff6525ee984,1988,CloneObjectIC_Slow
code-creation,Builtin,2,156695,0x7ff6525ef164,2756,KeyedHasIC
code-creation,Builtin,2,156701,0x7ff6525efc44,24,KeyedHasICBaseline
code-creation,Builtin,2,156707,0x7ff6525efc64,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,156713,0x7ff6525f06c4,1436,IterableToList
code-creation,Builtin,2,156719,0x7ff6525f0c64,1240,IterableToFixedArray
code-creation,Builtin,2,156726,0x7ff6525f1144,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,156734,0x7ff6525f1444,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,156741,0x7ff6525f1484,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,156748,0x7ff6525f1504,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,156754,0x7ff6525f18e4,1616,StringListFromIterable
code-creation,Builtin,2,156761,0x7ff6525f1f44,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,156767,0x7ff6525f2424,4156,MapConstructor
code-creation,Builtin,2,156773,0x7ff6525f3464,1996,MapPrototypeSet
code-creation,Builtin,2,156780,0x7ff6525f3c44,1524,MapPrototypeDelete
code-creation,Builtin,2,156788,0x7ff6525f4244,204,MapPrototypeGet
code-creation,Builtin,2,156794,0x7ff6525f4324,164,MapPrototypeHas
code-creation,Builtin,2,156800,0x7ff6525f43e4,12,MapPrototypeClear
code-creation,Builtin,2,156806,0x7ff6525f4404,284,MapPrototypeEntries
code-creation,Builtin,2,156813,0x7ff6525f4524,144,MapPrototypeGetSize
code-creation,Builtin,2,156819,0x7ff6525f45c4,492,MapPrototypeForEach
code-creation,Builtin,2,156826,0x7ff6525f47c4,284,MapPrototypeKeys
code-creation,Builtin,2,156832,0x7ff6525f48e4,284,MapPrototypeValues
code-creation,Builtin,2,156848,0x7ff6525f4a04,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,156855,0x7ff6525f4e24,1168,MapIteratorToList
code-creation,Builtin,2,156863,0x7ff6525f52c4,12,NumberPrototypeToExponential
code-creation,Builtin,2,156871,0x7ff6525f52e4,12,NumberPrototypeToFixed
code-creation,Builtin,2,156879,0x7ff6525f5304,12,NumberPrototypeToLocaleString
tick,0x7ffd55ac4134,156963,0,0x0,6
code-creation,Builtin,2,156996,0x7ff6525f5324,12,NumberPrototypeToPrecision
code-creation,Builtin,2,157017,0x7ff6525f5344,328,SameValue
code-creation,Builtin,2,157027,0x7ff6525f54a4,204,SameValueNumbersOnly
code-creation,Builtin,2,157035,0x7ff6525f5584,792,Add_Baseline
code-creation,Builtin,2,157044,0x7ff6525f58a4,828,Subtract_Baseline
code-creation,Builtin,2,157053,0x7ff6525f5be4,808,Multiply_Baseline
code-creation,Builtin,2,157063,0x7ff6525f5f24,832,Divide_Baseline
code-creation,Builtin,2,157072,0x7ff6525f6284,764,Modulus_Baseline
code-creation,Builtin,2,157081,0x7ff6525f6584,808,Exponentiate_Baseline
code-creation,Builtin,2,157092,0x7ff6525f68c4,708,BitwiseAnd_Baseline
code-creation,Builtin,2,157106,0x7ff6525f6ba4,700,BitwiseOr_Baseline
code-creation,Builtin,2,157114,0x7ff6525f6e64,708,BitwiseXor_Baseline
code-creation,Builtin,2,157123,0x7ff6525f7144,720,ShiftLeft_Baseline
code-creation,Builtin,2,157131,0x7ff6525f7424,720,ShiftRight_Baseline
code-creation,Builtin,2,157138,0x7ff6525f7704,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,157145,0x7ff6525f7a64,720,Add_WithFeedback
code-creation,Builtin,2,157151,0x7ff6525f7d44,780,Subtract_WithFeedback
code-creation,Builtin,2,157157,0x7ff6525f8064,776,Multiply_WithFeedback
code-creation,Builtin,2,157164,0x7ff6525f8384,804,Divide_WithFeedback
code-creation,Builtin,2,157170,0x7ff6525f86c4,724,Modulus_WithFeedback
code-creation,Builtin,2,157176,0x7ff6525f89a4,764,Exponentiate_WithFeedback
code-creation,Builtin,2,157183,0x7ff6525f8ca4,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,157189,0x7ff6525f8f64,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,157196,0x7ff6525f9224,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,157202,0x7ff6525f94e4,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,157208,0x7ff6525f97a4,692,ShiftRight_WithFeedback
code-creation,Builtin,2,157215,0x7ff6525f9a64,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,157221,0x7ff6525f9da4,1696,Equal_Baseline
code-creation,Builtin,2,157227,0x7ff6525fa464,908,StrictEqual_Baseline
code-creation,Builtin,2,157233,0x7ff6525fa804,1264,LessThan_Baseline
code-creation,Builtin,2,157240,0x7ff6525fad04,1264,GreaterThan_Baseline
code-creation,Builtin,2,157246,0x7ff6525fb204,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,157253,0x7ff6525fb704,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,157259,0x7ff6525fbc04,1620,Equal_WithFeedback
code-creation,Builtin,2,157265,0x7ff6525fc264,940,StrictEqual_WithFeedback
code-creation,Builtin,2,157272,0x7ff6525fc624,1240,LessThan_WithFeedback
code-creation,Builtin,2,157283,0x7ff6525fcb04,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,157292,0x7ff6525fcfe4,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,157298,0x7ff6525fd4c4,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,157305,0x7ff6525fd9a4,332,BitwiseNot_Baseline
code-creation,Builtin,2,157311,0x7ff6525fdb04,460,Decrement_Baseline
code-creation,Builtin,2,157318,0x7ff6525fdce4,464,Increment_Baseline
code-creation,Builtin,2,157324,0x7ff6525fdec4,488,Negate_Baseline
code-creation,Builtin,2,157330,0x7ff6525fe0c4,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,157337,0x7ff6525fe204,440,Decrement_WithFeedback
code-creation,Builtin,2,157343,0x7ff6525fe3c4,444,Increment_WithFeedback
code-creation,Builtin,2,157349,0x7ff6525fe584,472,Negate_WithFeedback
code-creation,Builtin,2,157356,0x7ff6525fe764,252,ObjectAssign
code-creation,Builtin,2,157362,0x7ff6525fe864,864,ObjectCreate
code-creation,Builtin,2,157369,0x7ff6525febe4,12,ObjectDefineGetter
code-creation,Builtin,2,157375,0x7ff6525fec04,12,ObjectDefineProperties
code-creation,Builtin,2,157381,0x7ff6525fec24,12,ObjectDefineProperty
code-creation,Builtin,2,157388,0x7ff6525fec44,12,ObjectDefineSetter
code-creation,Builtin,2,157394,0x7ff6525fec64,1516,ObjectEntries
code-creation,Builtin,2,157400,0x7ff6525ff264,12,ObjectFreeze
code-creation,Builtin,2,157406,0x7ff6525ff284,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,157413,0x7ff652600884,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,157419,0x7ff6526008a4,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,157426,0x7ff652600b04,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,157432,0x7ff652600b24,164,ObjectHasOwn
code-creation,Builtin,2,157438,0x7ff652600be4,388,ObjectIs
code-creation,Builtin,2,157444,0x7ff652600d84,12,ObjectIsFrozen
code-creation,Builtin,2,157451,0x7ff652600da4,12,ObjectIsSealed
code-creation,Builtin,2,157457,0x7ff652600dc4,536,ObjectKeys
code-creation,Builtin,2,157463,0x7ff652600fe4,12,ObjectLookupGetter
code-creation,Builtin,2,157469,0x7ff652601004,12,ObjectLookupSetter
code-creation,Builtin,2,157475,0x7ff652601024,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,157482,0x7ff652601924,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,157489,0x7ff652601a04,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,157495,0x7ff652601a24,12,ObjectPrototypeGetProto
code-creation,Builtin,2,157502,0x7ff652601a44,12,ObjectPrototypeSetProto
code-creation,Builtin,2,157508,0x7ff652601a64,12,ObjectSeal
code-creation,Builtin,2,157514,0x7ff652601a84,1108,ObjectToString
code-creation,Builtin,2,157520,0x7ff652601ee4,1284,ObjectValues
code-creation,Builtin,2,157526,0x7ff652602404,280,OrdinaryHasInstance
code-creation,Builtin,2,157533,0x7ff652602524,344,InstanceOf
code-creation,Builtin,2,157539,0x7ff652602684,632,InstanceOf_WithFeedback
code-creation,Builtin,2,157546,0x7ff652602904,648,InstanceOf_Baseline
code-creation,Builtin,2,157552,0x7ff652602ba4,268,ForInEnumerate
code-creation,Builtin,2,157558,0x7ff652602cc4,148,ForInPrepare
code-creation,Builtin,2,157565,0x7ff652602d64,2584,ForInFilter
code-creation,Builtin,2,157571,0x7ff652603784,52,ReflectApply
code-creation,Builtin,2,157577,0x7ff6526037c4,60,ReflectConstruct
code-creation,Builtin,2,157583,0x7ff652603804,12,ReflectDefineProperty
code-creation,Builtin,2,157589,0x7ff652603824,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,157596,0x7ff652603844,12,ReflectOwnKeys
code-creation,Builtin,2,157602,0x7ff652603864,12,ReflectSet
code-creation,Builtin,2,157608,0x7ff652603884,12,RegExpCapture1Getter
code-creation,Builtin,2,157615,0x7ff6526038a4,12,RegExpCapture2Getter
code-creation,Builtin,2,157621,0x7ff6526038c4,12,RegExpCapture3Getter
code-creation,Builtin,2,157627,0x7ff6526038e4,12,RegExpCapture4Getter
code-creation,Builtin,2,157634,0x7ff652603904,12,RegExpCapture5Getter
code-creation,Builtin,2,157640,0x7ff652603924,12,RegExpCapture6Getter
code-creation,Builtin,2,157646,0x7ff652603944,12,RegExpCapture7Getter
code-creation,Builtin,2,157652,0x7ff652603964,12,RegExpCapture8Getter
code-creation,Builtin,2,157660,0x7ff652603984,12,RegExpCapture9Getter
code-creation,Builtin,2,157667,0x7ff6526039a4,2212,RegExpConstructor
code-creation,Builtin,2,157673,0x7ff652604264,12,RegExpInputGetter
code-creation,Builtin,2,157680,0x7ff652604284,12,RegExpInputSetter
code-creation,Builtin,2,157686,0x7ff6526042a4,12,RegExpLastMatchGetter
code-creation,Builtin,2,157692,0x7ff6526042c4,12,RegExpLastParenGetter
code-creation,Builtin,2,157698,0x7ff6526042e4,12,RegExpLeftContextGetter
code-creation,Builtin,2,157705,0x7ff652604304,908,RegExpPrototypeCompile
code-creation,Builtin,2,157711,0x7ff6526046a4,12,RegExpPrototypeToString
code-creation,Builtin,2,157718,0x7ff6526046c4,12,RegExpRightContextGetter
code-creation,Builtin,2,157724,0x7ff6526046e4,252,RegExpExecAtom
code-creation,Builtin,2,157730,0x7ff6526047e4,1040,RegExpExecInternal
code-creation,Builtin,2,157736,0x7ff652604c04,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,157743,0x7ff652604c24,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,157749,0x7ff652604c44,2684,SetConstructor
code-creation,Builtin,2,157755,0x7ff6526056c4,1284,SetPrototypeHas
code-creation,Builtin,2,157762,0x7ff652605be4,1736,SetPrototypeAdd
code-creation,Builtin,2,157768,0x7ff6526062c4,1476,SetPrototypeDelete
code-creation,Builtin,2,157774,0x7ff6526068a4,12,SetPrototypeClear
code-creation,Builtin,2,157780,0x7ff6526068c4,284,SetPrototypeEntries
code-creation,Builtin,2,157789,0x7ff6526069e4,144,SetPrototypeGetSize
code-creation,Builtin,2,157795,0x7ff652606a84,444,SetPrototypeForEach
code-creation,Builtin,2,157801,0x7ff652606c44,284,SetPrototypeValues
code-creation,Builtin,2,157807,0x7ff652606d64,988,SetIteratorPrototypeNext
code-creation,Builtin,2,157814,0x7ff652607144,1112,SetOrSetIteratorToList
code-creation,Builtin,2,157820,0x7ff6526075a4,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,157849,0x7ff6526075c4,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,157857,0x7ff6526075e4,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,157863,0x7ff652607604,1280,AtomicsLoad
code-creation,Builtin,2,157870,0x7ff652607b24,1008,AtomicsStore
code-creation,Builtin,2,157876,0x7ff652607f24,1704,AtomicsExchange
code-creation,Builtin,2,157882,0x7ff6526085e4,2092,AtomicsCompareExchange
code-creation,Builtin,2,157889,0x7ff652608e24,1804,AtomicsAdd
code-creation,Builtin,2,157895,0x7ff652609544,1804,AtomicsSub
code-creation,Builtin,2,157901,0x7ff652609c64,1804,AtomicsAnd
code-creation,Builtin,2,157907,0x7ff65260a384,1804,AtomicsOr
code-creation,Builtin,2,157913,0x7ff65260aaa4,1804,AtomicsXor
code-creation,Builtin,2,157919,0x7ff65260b1c4,12,AtomicsNotify
code-creation,Builtin,2,157925,0x7ff65260b1e4,12,AtomicsIsLockFree
code-creation,Builtin,2,157931,0x7ff65260b204,12,AtomicsWait
code-creation,Builtin,2,157937,0x7ff65260b224,12,AtomicsWaitAsync
code-creation,Builtin,2,157943,0x7ff65260b244,12,StringFromCodePoint
code-creation,Builtin,2,157950,0x7ff65260b264,1428,StringFromCharCode
code-creation,Builtin,2,157956,0x7ff65260b804,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,157962,0x7ff65260b824,4360,StringPrototypeMatchAll
code-creation,Builtin,2,157969,0x7ff65260c944,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,157975,0x7ff65260c964,1228,StringPrototypeReplace
code-creation,Builtin,2,157981,0x7ff65260ce44,2900,StringPrototypeSplit
code-creation,Builtin,2,157988,0x7ff65260d9a4,12,StringRaw
code-creation,Builtin,2,157993,0x7ff65260d9c4,12,SymbolConstructor
code-creation,Builtin,2,158000,0x7ff65260d9e4,12,SymbolFor
code-creation,Builtin,2,158006,0x7ff65260da04,12,SymbolKeyFor
code-creation,Builtin,2,158012,0x7ff65260da24,88,TypedArrayBaseConstructor
code-creation,Builtin,2,158018,0x7ff65260da84,256,TypedArrayConstructor
code-creation,Builtin,2,158024,0x7ff65260dba4,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,158031,0x7ff65260dbc4,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,158037,0x7ff65260df44,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,158044,0x7ff65260e0c4,584,TypedArrayPrototypeLength
code-creation,Builtin,2,158052,0x7ff65260e324,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,158061,0x7ff65260e344,12,TypedArrayPrototypeFill
code-creation,Builtin,2,158068,0x7ff65260e364,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,158075,0x7ff65260e384,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,158082,0x7ff65260e3a4,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,158088,0x7ff65260e3c4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,158095,0x7ff65260e3e4,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,158101,0x7ff65260e524,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,158108,0x7ff652610ee4,792,GenericJSToWasmWrapper
code-creation,Builtin,2,158115,0x7ff652611204,148,WasmCompileLazy
code-creation,Builtin,2,158121,0x7ff6526112a4,168,WasmDebugBreak
code-creation,Builtin,2,158127,0x7ff652611364,16,WasmOnStackReplace
code-creation,Builtin,2,158134,0x7ff652611384,140,WasmFloat32ToNumber
code-creation,Builtin,2,158140,0x7ff652611424,152,WasmFloat64ToNumber
code-creation,Builtin,2,158147,0x7ff6526114c4,4,WasmI32AtomicWait32
code-creation,Builtin,2,158153,0x7ff6526114e4,4,WasmI64AtomicWait32
code-creation,Builtin,2,158159,0x7ff652611504,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,158165,0x7ff652611524,4320,WeakMapConstructor
code-creation,Builtin,2,158172,0x7ff652612624,196,WeakMapLookupHashIndex
code-creation,Builtin,2,158178,0x7ff652612704,220,WeakMapGet
code-creation,Builtin,2,158184,0x7ff6526127e4,176,WeakMapPrototypeHas
code-creation,Builtin,2,158190,0x7ff6526128a4,204,WeakMapPrototypeSet
code-creation,Builtin,2,158196,0x7ff652612984,144,WeakMapPrototypeDelete
code-creation,Builtin,2,158203,0x7ff652612a24,2876,WeakSetConstructor
code-creation,Builtin,2,158209,0x7ff652613564,176,WeakSetPrototypeHas
code-creation,Builtin,2,158215,0x7ff652613624,204,WeakSetPrototypeAdd
code-creation,Builtin,2,158222,0x7ff652613704,144,WeakSetPrototypeDelete
code-creation,Builtin,2,158228,0x7ff6526137a4,372,WeakCollectionDelete
code-creation,Builtin,2,158235,0x7ff652613924,764,WeakCollectionSet
code-creation,Builtin,2,158241,0x7ff652613c24,296,AsyncGeneratorResolve
code-creation,Builtin,2,158248,0x7ff652613d64,100,AsyncGeneratorReject
code-creation,Builtin,2,158254,0x7ff652613de4,2760,AsyncGeneratorYield
code-creation,Builtin,2,158261,0x7ff6526148c4,2872,AsyncGeneratorReturn
code-creation,Builtin,2,158267,0x7ff652615404,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,158273,0x7ff652615544,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,158280,0x7ff652615564,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,158286,0x7ff652615964,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,158293,0x7ff652615d84,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,158300,0x7ff6526161a4,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,158306,0x7ff652616c64,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,158312,0x7ff652617724,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,158319,0x7ff6526177a4,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,158326,0x7ff652617844,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,158333,0x7ff6526178c4,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,158340,0x7ff652617944,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,158346,0x7ff6526179c4,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,158353,0x7ff652617a64,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,158360,0x7ff6526180a4,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,158366,0x7ff652618764,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,158373,0x7ff652618e24,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,158380,0x7ff652618ea4,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,158387,0x7ff652618fa4,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,158394,0x7ff6526190a4,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,158402,0x7ff652619184,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,158410,0x7ff652619324,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,158418,0x7ff6526194c4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,158425,0x7ff6526195c4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,158432,0x7ff6526196c4,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,158439,0x7ff6526197c4,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,158447,0x7ff652619964,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,158454,0x7ff652619b04,4,DirectCEntry
code-creation,Builtin,2,158460,0x7ff652619b24,1096,StringAdd_CheckNone
code-creation,Builtin,2,158466,0x7ff652619f84,2484,SubString
code-creation,Builtin,2,158472,0x7ff65261a944,16,StackCheck
code-creation,Builtin,2,158478,0x7ff65261a964,84,DoubleToI
code-creation,Builtin,2,158484,0x7ff65261a9c4,2236,GetProperty
code-creation,Builtin,2,158491,0x7ff65261b284,2308,GetPropertyWithReceiver
code-creation,Builtin,2,158497,0x7ff65261bba4,16004,SetProperty
code-creation,Builtin,2,158503,0x7ff65261fa44,13480,SetPropertyInLiteral
code-creation,Builtin,2,158510,0x7ff652622f04,8,MemCopyUint8Uint8
code-creation,Builtin,2,158516,0x7ff652622f24,8,MemMove
code-creation,Builtin,2,158522,0x7ff652622f44,12,IsTraceCategoryEnabled
code-creation,Builtin,2,158529,0x7ff652622f64,12,Trace
code-creation,Builtin,2,158534,0x7ff652622f84,12,FinalizationRegistryUnregister
code-creation,Builtin,2,158541,0x7ff652622fa4,416,AsyncModuleEvaluate
code-creation,Builtin,2,158547,0x7ff652623164,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,158554,0x7ff652623184,12,CallAsyncModuleRejected
code-creation,Builtin,2,158560,0x7ff6526231a4,260,AggregateErrorConstructor
code-creation,Builtin,2,158567,0x7ff6526232c4,856,ArrayPrototypeAt
code-creation,Builtin,2,158573,0x7ff652623624,656,ArrayPrototypeConcat
code-creation,Builtin,2,158579,0x7ff6526238c4,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,158585,0x7ff652624fa4,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,158592,0x7ff652625084,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,158599,0x7ff652625304,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,158606,0x7ff652626004,1464,ArrayEvery
code-creation,Builtin,2,158611,0x7ff6526265c4,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,158618,0x7ff6526266e4,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,158625,0x7ff652626ac4,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,158632,0x7ff6526278c4,4260,ArrayFilter
code-creation,Builtin,2,158638,0x7ff652628984,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,158646,0x7ff652628a64,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,158653,0x7ff652628aa4,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,158660,0x7ff652628be4,528,ArrayFindLoopContinuation
code-creation,Builtin,2,158667,0x7ff652628e04,1460,ArrayPrototypeFind
code-creation,Builtin,2,158673,0x7ff6526293c4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,158680,0x7ff6526294a4,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,158687,0x7ff6526294e4,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,158694,0x7ff652629624,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,158700,0x7ff652629844,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,158707,0x7ff652629e04,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,158713,0x7ff652629fe4,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,158719,0x7ff65262a6a4,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,158726,0x7ff65262a884,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,158732,0x7ff65262af44,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,158739,0x7ff65262b024,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,158747,0x7ff65262b104,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,158754,0x7ff65262bd64,1328,ArrayForEach
code-creation,Builtin,2,158760,0x7ff65262c2a4,3572,ArrayFrom
code-creation,Builtin,2,158766,0x7ff65262d0a4,148,ArrayIsArray
code-creation,Builtin,2,158772,0x7ff65262d144,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,158779,0x7ff65262d2e4,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,158786,0x7ff65262d324,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,158793,0x7ff65262d3c4,312,ConvertToLocaleString
code-creation,Builtin,2,158799,0x7ff65262d504,752,JoinStackPush
code-creation,Builtin,2,158805,0x7ff65262d804,272,JoinStackPop
code-creation,Builtin,2,158812,0x7ff65262d924,6628,ArrayPrototypeJoin
code-creation,Builtin,2,158818,0x7ff65262f324,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,158832,0x7ff652630824,236,ArrayPrototypeToString
code-creation,Builtin,2,158840,0x7ff652630924,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,158846,0x7ff652632064,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,158853,0x7ff652633284,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,158860,0x7ff652634184,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,158867,0x7ff6526342a4,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,158873,0x7ff6526343a4,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,158880,0x7ff6526345c4,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,158887,0x7ff652635244,3912,ArrayMap
code-creation,Builtin,2,158892,0x7ff6526361a4,1000,ArrayOf
code-creation,Builtin,2,158898,0x7ff6526365a4,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,158905,0x7ff652636764,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,158912,0x7ff652636844,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,158919,0x7ff652636924,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,158926,0x7ff6526375c4,2000,ArrayReduceRight
code-creation,Builtin,2,158932,0x7ff652637da4,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,158939,0x7ff652637e64,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,158946,0x7ff652637f44,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,158952,0x7ff652638024,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,158959,0x7ff652638ce4,1604,ArrayReduce
code-creation,Builtin,2,158965,0x7ff652639344,3216,ArrayPrototypeReverse
code-creation,Builtin,2,158971,0x7ff652639fe4,3592,ArrayPrototypeShift
code-creation,Builtin,2,158977,0x7ff65263ae04,5220,ArrayPrototypeSlice
code-creation,Builtin,2,158983,0x7ff65263c284,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,158990,0x7ff65263c364,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,158996,0x7ff65263c5c4,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,159003,0x7ff65263d2c4,1448,ArraySome
code-creation,Builtin,2,159009,0x7ff65263d884,14216,ArrayPrototypeSplice
code-creation,Builtin,2,159015,0x7ff652641024,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,159022,0x7ff652641d04,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,159028,0x7ff652641e64,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,159035,0x7ff652641fc4,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,159041,0x7ff6526420a4,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,159048,0x7ff652642204,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,159056,0x7ff6526422e4,96,ArrayBufferIsView
code-creation,Builtin,2,159063,0x7ff652642364,396,ToInteger
code-creation,Builtin,2,159070,0x7ff652642504,3084,FastCreateDataProperty
code-creation,Builtin,2,159077,0x7ff652643124,676,CheckNumberInRange
code-creation,Builtin,2,159083,0x7ff6526433e4,584,CheckSameObject
code-creation,Builtin,2,159089,0x7ff652643644,904,BooleanConstructor
code-creation,Builtin,2,159095,0x7ff6526439e4,164,BooleanPrototypeToString
code-creation,Builtin,2,159103,0x7ff652643aa4,156,BooleanPrototypeValueOf
code-creation,Builtin,2,159110,0x7ff652643b44,1184,BigIntAddNoThrow
code-creation,Builtin,2,159116,0x7ff652644004,1280,BigIntAdd
code-creation,Builtin,2,159122,0x7ff652644524,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,159129,0x7ff6526449e4,1280,BigIntSubtract
code-creation,Builtin,2,159135,0x7ff652644f04,284,BigIntUnaryMinus
code-creation,Builtin,2,159141,0x7ff652645024,1360,ToString
code-creation,Builtin,2,159147,0x7ff652645584,156,StringPrototypeToString
code-creation,Builtin,2,159154,0x7ff652645624,156,StringPrototypeValueOf
code-creation,Builtin,2,159160,0x7ff6526456c4,2480,StringToList
code-creation,Builtin,2,159166,0x7ff652646084,1012,StringPrototypeCharAt
code-creation,Builtin,2,159172,0x7ff652646484,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,159179,0x7ff652646744,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,159185,0x7ff652646c64,400,StringPrototypeConcat
code-creation,Builtin,2,159191,0x7ff652646e04,992,StringConstructor
code-creation,Builtin,2,159197,0x7ff652647204,1436,StringAddConvertLeft
code-creation,Builtin,2,159204,0x7ff6526477a4,1464,StringAddConvertRight
code-creation,Builtin,2,159210,0x7ff652647d64,816,StringCharAt
code-creation,Builtin,2,159216,0x7ff6526480a4,16,FastNewClosureBaseline
code-creation,Builtin,2,159222,0x7ff6526480c4,196,FastNewFunctionContextEval
code-creation,Builtin,2,159229,0x7ff6526481a4,196,FastNewFunctionContextFunction
code-creation,Builtin,2,159235,0x7ff652648284,248,CreateRegExpLiteral
code-creation,Builtin,2,159241,0x7ff652648384,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,159248,0x7ff6526487c4,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,159254,0x7ff6526489c4,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,159261,0x7ff6526490a4,384,ObjectConstructor
code-creation,Builtin,2,159267,0x7ff652649244,176,CreateEmptyLiteralObject
code-creation,Builtin,2,159273,0x7ff652649304,536,NumberConstructor
code-creation,Builtin,2,159279,0x7ff652649524,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,159286,0x7ff652649584,64,StringToNumber
code-creation,Builtin,2,159292,0x7ff6526495e4,184,NonNumberToNumber
code-creation,Builtin,2,159298,0x7ff6526496a4,240,NonNumberToNumeric
code-creation,Builtin,2,159304,0x7ff6526497a4,36,ToNumeric
code-creation,Builtin,2,159310,0x7ff6526497e4,1184,NumberToString
code-creation,Builtin,2,159316,0x7ff652649ca4,92,ToBoolean
code-creation,Builtin,2,159323,0x7ff652649d04,96,ToBooleanForBaselineJump
code-creation,Builtin,2,159329,0x7ff652649d84,728,ToLength
code-creation,Builtin,2,159335,0x7ff65264a064,1312,ToName
code-creation,Builtin,2,159341,0x7ff65264a5a4,756,ToObject
code-creation,Builtin,2,159347,0x7ff65264a8a4,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,159353,0x7ff65264a984,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,159360,0x7ff65264aa64,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,159367,0x7ff65264ab44,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,159373,0x7ff65264ac84,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,159379,0x7ff65264adc4,216,FastConsoleAssert
code-creation,Builtin,2,159386,0x7ff65264aea4,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,159392,0x7ff65264af64,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,159399,0x7ff65264b0c4,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,159405,0x7ff65264b224,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,159411,0x7ff65264b464,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,159418,0x7ff65264b6a4,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,159424,0x7ff65264b944,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,159431,0x7ff65264bbe4,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,159437,0x7ff65264bf24,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,159443,0x7ff65264c1e4,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,159450,0x7ff65264c544,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,159457,0x7ff65264c8e4,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,159465,0x7ff65264ccc4,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,159472,0x7ff65264d0c4,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,159478,0x7ff65264d484,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,159486,0x7ff65264d844,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,159493,0x7ff65264dc64,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,159499,0x7ff65264e084,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,159506,0x7ff65264e4c4,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,159512,0x7ff65264e904,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,159518,0x7ff65264ed24,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,159525,0x7ff65264f184,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,159531,0x7ff65264f544,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,159538,0x7ff65264f904,828,FinalizationRegistryConstructor
code-creation,Builtin,2,159544,0x7ff65264fc44,1152,FinalizationRegistryRegister
code-creation,Builtin,2,159551,0x7ff6526500e4,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,159557,0x7ff652650384,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,159564,0x7ff6526504e4,924,FastFunctionPrototypeBind
code-creation,Builtin,2,159570,0x7ff652650884,88,IncBlockCounter
code-creation,Builtin,2,159576,0x7ff6526508e4,228,GetTemplateObject
code-creation,Builtin,2,159582,0x7ff6526509e4,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,159589,0x7ff652650a04,92,ForInNext
code-creation,Builtin,2,159595,0x7ff652650a64,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,159602,0x7ff652650b04,116,GetIteratorWithFeedback
code-creation,Builtin,2,159608,0x7ff652650b84,100,GetIteratorBaseline
code-creation,Builtin,2,159614,0x7ff652650c04,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,159621,0x7ff652650d24,1084,CallIteratorWithFeedback
code-creation,Builtin,2,159627,0x7ff652651164,288,MathAbs
code-creation,Builtin,2,159633,0x7ff6526512a4,428,MathCeil
code-creation,Builtin,2,159639,0x7ff652651464,432,MathFloor
code-creation,Builtin,2,159645,0x7ff652651624,488,MathRound
code-creation,Builtin,2,159651,0x7ff652651824,428,MathTrunc
code-creation,Builtin,2,159657,0x7ff6526519e4,368,MathPow
code-creation,Builtin,2,159663,0x7ff652651b64,396,MathMax
code-creation,Builtin,2,159669,0x7ff652651d04,404,MathMin
code-creation,Builtin,2,159675,0x7ff652651ea4,320,MathAcos
code-creation,Builtin,2,159681,0x7ff652652004,320,MathAcosh
code-creation,Builtin,2,159687,0x7ff652652164,320,MathAsin
code-creation,Builtin,2,159693,0x7ff6526522c4,320,MathAsinh
code-creation,Builtin,2,159699,0x7ff652652424,320,MathAtan
code-creation,Builtin,2,159705,0x7ff652652584,416,MathAtan2
code-creation,Builtin,2,159711,0x7ff652652744,320,MathAtanh
code-creation,Builtin,2,159717,0x7ff6526528a4,320,MathCbrt
code-creation,Builtin,2,159723,0x7ff652652a04,168,MathClz32
code-creation,Builtin,2,159729,0x7ff652652ac4,320,MathCos
code-creation,Builtin,2,159735,0x7ff652652c24,320,MathCosh
code-creation,Builtin,2,159741,0x7ff652652d84,320,MathExp
code-creation,Builtin,2,159747,0x7ff652652ee4,320,MathExpm1
code-creation,Builtin,2,159753,0x7ff652653044,272,MathFround
code-creation,Builtin,2,159759,0x7ff652653164,304,MathImul
code-creation,Builtin,2,159765,0x7ff6526532a4,320,MathLog
code-creation,Builtin,2,159771,0x7ff652653404,320,MathLog1p
code-creation,Builtin,2,159777,0x7ff652653564,320,MathLog10
code-creation,Builtin,2,159783,0x7ff6526536c4,320,MathLog2
code-creation,Builtin,2,159789,0x7ff652653824,320,MathSin
code-creation,Builtin,2,159795,0x7ff652653984,180,MathSign
code-creation,Builtin,2,159801,0x7ff652653a44,320,MathSinh
code-creation,Builtin,2,159807,0x7ff652653ba4,268,MathSqrt
code-creation,Builtin,2,159813,0x7ff652653cc4,320,MathTan
code-creation,Builtin,2,159819,0x7ff652653e24,320,MathTanh
code-creation,Builtin,2,159832,0x7ff652653f84,1060,MathHypot
code-creation,Builtin,2,159839,0x7ff6526543c4,332,MathRandom
code-creation,Builtin,2,159845,0x7ff652654524,2956,NumberPrototypeToString
code-creation,Builtin,2,159853,0x7ff6526550c4,136,NumberIsFinite
code-creation,Builtin,2,159860,0x7ff652655164,340,NumberIsInteger
code-creation,Builtin,2,159866,0x7ff6526552c4,116,NumberIsNaN
code-creation,Builtin,2,159873,0x7ff652655344,372,NumberIsSafeInteger
code-creation,Builtin,2,159879,0x7ff6526554c4,156,NumberPrototypeValueOf
code-creation,Builtin,2,159885,0x7ff652655564,196,NumberParseFloat
code-creation,Builtin,2,159891,0x7ff652655644,248,ParseInt
code-creation,Builtin,2,159897,0x7ff652655744,84,NumberParseInt
code-creation,Builtin,2,159903,0x7ff6526557a4,860,Add
code-creation,Builtin,2,159909,0x7ff652655b04,424,Subtract
code-creation,Builtin,2,159915,0x7ff652655cc4,608,Multiply
code-creation,Builtin,2,159921,0x7ff652655f44,532,Divide
code-creation,Builtin,2,159927,0x7ff652656164,592,Modulus
code-creation,Builtin,2,159933,0x7ff6526563c4,524,Exponentiate
code-creation,Builtin,2,159939,0x7ff6526565e4,344,Negate
code-creation,Builtin,2,159946,0x7ff652656744,112,BitwiseNot
code-creation,Builtin,2,159952,0x7ff6526567c4,112,Decrement
code-creation,Builtin,2,159958,0x7ff652656844,112,Increment
code-creation,Builtin,2,159964,0x7ff6526568c4,392,ShiftLeft
code-creation,Builtin,2,159970,0x7ff652656a64,392,ShiftRight
code-creation,Builtin,2,159976,0x7ff652656c04,508,ShiftRightLogical
code-creation,Builtin,2,159982,0x7ff652656e04,388,BitwiseAnd
code-creation,Builtin,2,159988,0x7ff652656fa4,388,BitwiseOr
code-creation,Builtin,2,159995,0x7ff652657144,388,BitwiseXor
code-creation,Builtin,2,160001,0x7ff6526572e4,796,LessThan
code-creation,Builtin,2,160006,0x7ff652657604,796,LessThanOrEqual
code-creation,Builtin,2,160013,0x7ff652657924,796,GreaterThan
code-creation,Builtin,2,160019,0x7ff652657c44,796,GreaterThanOrEqual
code-creation,Builtin,2,160025,0x7ff652657f64,860,Equal
code-creation,Builtin,2,160031,0x7ff6526582c4,348,StrictEqual
code-creation,Builtin,2,160037,0x7ff652658424,3132,ObjectFromEntries
code-creation,Builtin,2,160044,0x7ff652659064,756,CreateObjectWithoutProperties
code-creation,Builtin,2,160050,0x7ff652659364,144,ObjectIsExtensible
code-creation,Builtin,2,160058,0x7ff652659404,148,ObjectPreventExtensions
code-creation,Builtin,2,160065,0x7ff6526594a4,144,ObjectGetPrototypeOf
code-creation,Builtin,2,160072,0x7ff652659544,300,ObjectSetPrototypeOf
code-creation,Builtin,2,160079,0x7ff652659684,80,ObjectPrototypeToString
code-creation,Builtin,2,160085,0x7ff6526596e4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,160091,0x7ff652659764,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,160098,0x7ff652659824,868,FulfillPromise
code-creation,Builtin,2,160104,0x7ff652659ba4,988,RejectPromise
code-creation,Builtin,2,160110,0x7ff652659f84,2416,NewPromiseCapability
code-creation,Builtin,2,160116,0x7ff65265a904,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,160123,0x7ff65265a9c4,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,160129,0x7ff65265aa64,1416,PerformPromiseThen
code-creation,Builtin,2,160136,0x7ff65265b004,648,PromiseReject
code-creation,Builtin,2,160142,0x7ff65265b2a4,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,160148,0x7ff65265b3c4,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,160155,0x7ff65265b444,4560,PromiseAll
code-creation,Builtin,2,160161,0x7ff65265c624,4880,PromiseAllSettled
code-creation,Builtin,2,160167,0x7ff65265d944,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,160174,0x7ff65265dda4,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,160181,0x7ff65265e324,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,160187,0x7ff65265e8a4,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,160194,0x7ff65265ed44,2368,PromiseAny
code-creation,Builtin,2,160200,0x7ff65265f6a4,2908,PromiseConstructor
code-creation,Builtin,2,160206,0x7ff652660204,296,PromisePrototypeCatch
code-creation,Builtin,2,160212,0x7ff652660344,88,PromiseValueThunkFinally
code-creation,Builtin,2,160219,0x7ff6526603a4,84,PromiseThrowerFinally
code-creation,Builtin,2,160225,0x7ff652660404,904,PromiseCatchFinally
code-creation,Builtin,2,160232,0x7ff6526607a4,904,PromiseThenFinally
code-creation,Builtin,2,160239,0x7ff652660b44,1700,PromisePrototypeFinally
code-creation,Builtin,2,160246,0x7ff652661204,1336,PromiseRace
code-creation,Builtin,2,160252,0x7ff652661744,268,PromiseFulfillReactionJob
code-creation,Builtin,2,160258,0x7ff652661864,364,PromiseRejectReactionJob
code-creation,Builtin,2,160264,0x7ff6526619e4,156,PromiseResolveTrampoline
code-creation,Builtin,2,160271,0x7ff652661a84,656,PromiseResolve
code-creation,Builtin,2,160277,0x7ff652661d24,712,ResolvePromise
code-creation,Builtin,2,160283,0x7ff652662004,2224,PromisePrototypeThen
code-creation,Builtin,2,160289,0x7ff6526628c4,1144,PromiseResolveThenableJob
code-creation,Builtin,2,160297,0x7ff652662d44,448,ProxyConstructor
code-creation,Builtin,2,160303,0x7ff652662f24,1760,ProxyDeleteProperty
code-creation,Builtin,2,160309,0x7ff652663624,2112,ProxyGetProperty
code-creation,Builtin,2,160316,0x7ff652663e84,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,160322,0x7ff6526642c4,1668,ProxyHasProperty
code-creation,Builtin,2,160328,0x7ff652664964,760,ProxyIsExtensible
code-creation,Builtin,2,160334,0x7ff652664c64,800,ProxyPreventExtensions
code-creation,Builtin,2,160340,0x7ff652664fa4,1148,ProxyRevocable
code-creation,Builtin,2,160346,0x7ff652665424,120,ProxyRevoke
code-creation,Builtin,2,160353,0x7ff6526654a4,2216,ProxySetProperty
code-creation,Builtin,2,160359,0x7ff652665d64,1292,ProxySetPrototypeOf
code-creation,Builtin,2,160365,0x7ff652666284,208,ReflectIsExtensible
code-creation,Builtin,2,160371,0x7ff652666364,212,ReflectPreventExtensions
code-creation,Builtin,2,160378,0x7ff652666444,188,ReflectGetPrototypeOf
code-creation,Builtin,2,160384,0x7ff652666504,292,ReflectSetPrototypeOf
code-creation,Builtin,2,160390,0x7ff652666644,284,ReflectGet
code-creation,Builtin,2,160397,0x7ff652666764,160,ReflectDeleteProperty
code-creation,Builtin,2,160403,0x7ff652666824,148,ReflectHas
code-creation,Builtin,2,160409,0x7ff6526668c4,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,160415,0x7ff652667ce4,5104,RegExpPrototypeExec
code-creation,Builtin,2,160421,0x7ff6526690e4,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,160428,0x7ff652669a24,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,160434,0x7ff65266bf04,8840,RegExpMatchFast
code-creation,Builtin,2,160441,0x7ff65266e1a4,3600,RegExpPrototypeMatch
code-creation,Builtin,2,160447,0x7ff65266efc4,6328,RegExpReplace
code-creation,Builtin,2,160453,0x7ff652670884,524,RegExpPrototypeReplace
code-creation,Builtin,2,160459,0x7ff652670aa4,1424,RegExpSearchFast
code-creation,Builtin,2,160465,0x7ff652671044,1640,RegExpPrototypeSearch
code-creation,Builtin,2,160472,0x7ff6526716c4,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,160478,0x7ff6526717a4,5872,RegExpSplit
code-creation,Builtin,2,160484,0x7ff652672ea4,476,RegExpPrototypeSplit
code-creation,Builtin,2,160490,0x7ff652673084,2252,RegExpPrototypeTest
code-creation,Builtin,2,160496,0x7ff652673964,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,160503,0x7ff652673ec4,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,160509,0x7ff652673fc4,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,160516,0x7ff6526740c4,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,160522,0x7ff6526741c4,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,160529,0x7ff6526742c4,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,160535,0x7ff6526743c4,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,160542,0x7ff6526744c4,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,160548,0x7ff6526745e4,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,160555,0x7ff652674704,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,160561,0x7ff652674fe4,1500,StringPrototypeAt
code-creation,Builtin,2,160567,0x7ff6526755c4,3008,StringPrototypeEndsWith
code-creation,Builtin,2,160573,0x7ff6526761a4,480,CreateHTML
code-creation,Builtin,2,160579,0x7ff6526763a4,164,StringPrototypeAnchor
code-creation,Builtin,2,160586,0x7ff652676464,128,StringPrototypeBig
code-creation,Builtin,2,160592,0x7ff652676504,128,StringPrototypeBlink
code-creation,Builtin,2,160599,0x7ff6526765a4,128,StringPrototypeBold
code-creation,Builtin,2,160606,0x7ff652676644,168,StringPrototypeFontcolor
code-creation,Builtin,2,160613,0x7ff652676704,168,StringPrototypeFontsize
code-creation,Builtin,2,160619,0x7ff6526767c4,128,StringPrototypeFixed
code-creation,Builtin,2,160625,0x7ff652676864,128,StringPrototypeItalics
code-creation,Builtin,2,160631,0x7ff652676904,168,StringPrototypeLink
code-creation,Builtin,2,160637,0x7ff6526769c4,128,StringPrototypeSmall
code-creation,Builtin,2,160644,0x7ff652676a64,128,StringPrototypeStrike
code-creation,Builtin,2,160650,0x7ff652676b04,128,StringPrototypeSub
code-creation,Builtin,2,160656,0x7ff652676ba4,128,StringPrototypeSup
code-creation,Builtin,2,160662,0x7ff652676c44,1028,StringPrototypeIncludes
code-creation,Builtin,2,160669,0x7ff652677064,628,StringPrototypeIndexOf
code-creation,Builtin,2,160675,0x7ff6526772e4,344,StringPrototypeIterator
code-creation,Builtin,2,160681,0x7ff652677444,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,160688,0x7ff652677c44,1304,StringPrototypeMatch
code-creation,Builtin,2,160694,0x7ff652678164,1304,StringPrototypeSearch
code-creation,Builtin,2,160701,0x7ff652678684,824,StringPrototypePadStart
code-creation,Builtin,2,160707,0x7ff6526789c4,824,StringPrototypePadEnd
code-creation,Builtin,2,160713,0x7ff652678d04,120,StringRepeat
code-creation,Builtin,2,160719,0x7ff652678d84,400,StringPrototypeRepeat
code-creation,Builtin,2,160726,0x7ff652678f24,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,160732,0x7ff65267bae4,3388,StringPrototypeSlice
code-creation,Builtin,2,160738,0x7ff65267c824,3028,StringPrototypeStartsWith
code-creation,Builtin,2,160745,0x7ff65267d404,3328,StringPrototypeSubstr
code-creation,Builtin,2,160751,0x7ff65267e124,3260,StringPrototypeSubstring
code-creation,Builtin,2,160758,0x7ff65267ede4,6916,StringPrototypeTrim
code-creation,Builtin,2,160764,0x7ff652680904,6332,StringPrototypeTrimStart
code-creation,Builtin,2,160771,0x7ff6526821c4,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,160777,0x7ff6526838a4,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,160784,0x7ff652683964,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,160790,0x7ff652683a04,172,SymbolPrototypeToString
code-creation,Builtin,2,160797,0x7ff652683ac4,156,SymbolPrototypeValueOf
code-creation,Builtin,2,160803,0x7ff652683b64,832,TypedArrayPrototypeAt
code-creation,Builtin,2,160809,0x7ff652683ec4,10064,CreateTypedArray
code-creation,Builtin,2,160815,0x7ff652686624,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,160822,0x7ff652686a24,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,160841,0x7ff652686ba4,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,160848,0x7ff652687964,996,TypedArrayPrototypeFind
code-creation,Builtin,2,160854,0x7ff652687d64,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,160861,0x7ff652688164,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,160868,0x7ff652688324,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,160874,0x7ff6526887e4,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,160882,0x7ff6526889a4,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,160888,0x7ff652688e84,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,160895,0x7ff652689204,2352,TypedArrayFrom
code-creation,Builtin,2,160901,0x7ff652689b44,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,160908,0x7ff652689cc4,1028,TypedArrayOf
code-creation,Builtin,2,160914,0x7ff65268a0e4,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,160920,0x7ff65268a4a4,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,160927,0x7ff65268a864,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,160933,0x7ff65268b244,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,160940,0x7ff65268be44,992,TypedArrayPrototypeSome
code-creation,Builtin,2,160947,0x7ff65268c244,1060,TypedArrayMergeSort
code-creation,Builtin,2,160953,0x7ff65268c684,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,160959,0x7ff65268cce4,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,160967,0x7ff65268d7a4,372,TypedArrayPrototypeValues
code-creation,Builtin,2,160974,0x7ff65268d924,952,WeakRefConstructor
code-creation,Builtin,2,160981,0x7ff65268dce4,184,WeakRefDeref
code-creation,Builtin,2,160987,0x7ff65268dda4,680,NewSloppyArgumentsElements
code-creation,Builtin,2,160993,0x7ff65268e064,296,NewStrictArgumentsElements
code-creation,Builtin,2,161000,0x7ff65268e1a4,320,NewRestArgumentsElements
code-creation,Builtin,2,161008,0x7ff65268e304,1388,FastNewSloppyArguments
code-creation,Builtin,2,161014,0x7ff65268e884,524,FastNewStrictArguments
code-creation,Builtin,2,161021,0x7ff65268eaa4,556,FastNewRestArguments
code-creation,Builtin,2,161027,0x7ff65268ece4,676,StringSlowFlatten
code-creation,Builtin,2,161033,0x7ff65268efa4,2068,StringIndexOf
code-creation,Builtin,2,161040,0x7ff65268f7c4,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,161046,0x7ff65268f7e4,20,TestHelperPlus1
code-creation,Builtin,2,161052,0x7ff65268f804,20,TestHelperPlus2
code-creation,Builtin,2,161059,0x7ff65268f824,96,NewSmiBox
code-creation,Builtin,2,161064,0x7ff65268f8a4,24,ReturnTwoValues
code-creation,Builtin,2,161070,0x7ff65268f8c4,32,Load_FastSmiElements_0
code-creation,Builtin,2,161077,0x7ff65268f904,32,Load_FastObjectElements_0
code-creation,Builtin,2,161083,0x7ff65268f944,144,Load_FastDoubleElements_0
code-creation,Builtin,2,161090,0x7ff65268f9e4,32,Store_FastSmiElements_0
code-creation,Builtin,2,161096,0x7ff65268fa24,96,Store_FastObjectElements_0
code-creation,Builtin,2,161103,0x7ff65268faa4,48,Store_FastDoubleElements_0
code-creation,Builtin,2,161109,0x7ff65268fae4,36,Delete_FastSmiElements_0
code-creation,Builtin,2,161116,0x7ff65268fb24,36,Delete_FastObjectElements_0
code-creation,Builtin,2,161122,0x7ff65268fb64,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,161131,0x7ff65268fba4,308,SortCompareDefault
code-creation,Builtin,2,161137,0x7ff65268fce4,92,SortCompareUserFn
code-creation,Builtin,2,161143,0x7ff65268fd44,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,161150,0x7ff65268fd64,312,Copy
code-creation,Builtin,2,161156,0x7ff65268fea4,5776,MergeAt
code-creation,Builtin,2,161162,0x7ff652691544,792,GallopLeft
code-creation,Builtin,2,161168,0x7ff652691864,832,GallopRight
code-creation,Builtin,2,161174,0x7ff652691bc4,3832,ArrayTimSort
code-creation,Builtin,2,161180,0x7ff652692ac4,2112,ArrayPrototypeSort
code-creation,Builtin,2,161187,0x7ff652693324,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,161193,0x7ff6526933a4,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,161200,0x7ff652693424,76,WasmTaggedToFloat64
code-creation,Builtin,2,161206,0x7ff652693484,72,WasmMemoryGrow
code-creation,Builtin,2,161212,0x7ff6526934e4,100,WasmTableInit
code-creation,Builtin,2,161218,0x7ff652693564,100,WasmTableCopy
code-creation,Builtin,2,161224,0x7ff6526935e4,84,WasmTableFill
code-creation,Builtin,2,161231,0x7ff652693644,72,WasmTableGrow
code-creation,Builtin,2,161237,0x7ff6526936a4,144,WasmTableGet
code-creation,Builtin,2,161243,0x7ff652693744,236,WasmTableSet
code-creation,Builtin,2,161249,0x7ff652693844,88,WasmRefFunc
code-creation,Builtin,2,161255,0x7ff6526938a4,144,WasmAllocateFixedArray
code-creation,Builtin,2,161261,0x7ff652693944,44,WasmThrow
code-creation,Builtin,2,161267,0x7ff652693984,52,WasmRethrow
code-creation,Builtin,2,161273,0x7ff6526939c4,44,WasmTriggerTierUp
code-creation,Builtin,2,161279,0x7ff652693a04,32,WasmStackGuard
code-creation,Builtin,2,161286,0x7ff652693a44,32,WasmStackOverflow
code-creation,Builtin,2,161292,0x7ff652693a84,40,WasmTraceMemory
code-creation,Builtin,2,161298,0x7ff652693ac4,32,WasmTraceEnter
code-creation,Builtin,2,161304,0x7ff652693b04,40,WasmTraceExit
code-creation,Builtin,2,161310,0x7ff652693b44,332,WasmAllocateJSArray
code-creation,Builtin,2,161316,0x7ff652693ca4,104,WasmAllocatePair
code-creation,Builtin,2,161323,0x7ff652693d24,64,WasmAllocateRtt
code-creation,Builtin,2,161329,0x7ff652693d84,72,WasmAllocateFreshRtt
code-creation,Builtin,2,161335,0x7ff652693de4,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,161343,0x7ff652693e64,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,161350,0x7ff652693f04,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,161357,0x7ff652693fc4,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,161363,0x7ff652694084,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,161370,0x7ff652694104,60,WasmArrayCopy
code-creation,Builtin,2,161376,0x7ff652694144,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,161382,0x7ff652694244,52,WasmSubtypeCheck
code-creation,Builtin,2,161388,0x7ff652694284,8,WasmInt32ToNumber
code-creation,Builtin,2,161394,0x7ff6526942a4,116,WasmUint32ToNumber
code-creation,Builtin,2,161401,0x7ff652694324,144,UintPtr53ToNumber
code-creation,Builtin,2,161407,0x7ff6526943c4,96,WasmAtomicNotify
code-creation,Builtin,2,161413,0x7ff652694444,116,WasmI32AtomicWait64
code-creation,Builtin,2,161419,0x7ff6526944c4,116,WasmI64AtomicWait64
code-creation,Builtin,2,161426,0x7ff652694544,580,WasmGetOwnProperty
code-creation,Builtin,2,161432,0x7ff6526947a4,40,WasmTrap
code-creation,Builtin,2,161438,0x7ff6526947e4,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,161444,0x7ff652694804,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,161451,0x7ff652694824,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,161457,0x7ff652694844,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,161463,0x7ff652694864,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,161470,0x7ff652694884,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,161477,0x7ff6526948a4,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,161484,0x7ff6526948c4,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,161490,0x7ff6526948e4,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,161497,0x7ff652694904,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,161504,0x7ff652694924,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,161510,0x7ff652694944,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,161516,0x7ff652694964,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,161523,0x7ff652694984,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,161529,0x7ff6526949a4,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,161536,0x7ff6526949c4,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,161542,0x7ff6526949e4,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,161549,0x7ff652694aa4,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,161556,0x7ff652694ac4,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,161563,0x7ff652694b44,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,161570,0x7ff652694bc4,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,161577,0x7ff652694be4,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,161583,0x7ff652694cc4,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,161590,0x7ff652694dc4,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,161598,0x7ff652694de4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,161605,0x7ff652694e04,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,161612,0x7ff652694e24,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,161618,0x7ff652694e44,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,161625,0x7ff652694ee4,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,161632,0x7ff652694f04,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,161638,0x7ff652694f44,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,161645,0x7ff652694f84,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,161652,0x7ff652694fc4,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,161659,0x7ff652695a44,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,161666,0x7ff652695a64,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,161672,0x7ff652695aa4,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,161679,0x7ff652695ac4,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,161687,0x7ff652695b84,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,161695,0x7ff652695c44,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,161701,0x7ff652695cc4,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,161708,0x7ff652695d04,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,161715,0x7ff652695da4,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,161722,0x7ff652695e24,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,161729,0x7ff652695e44,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,161736,0x7ff652695ee4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,161743,0x7ff652695f04,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,161750,0x7ff652695f24,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,161757,0x7ff6526961a4,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,161763,0x7ff652696284,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,161770,0x7ff6526962c4,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,161777,0x7ff6526963a4,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,161784,0x7ff6526964a4,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,161791,0x7ff6526964e4,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,161798,0x7ff6526965c4,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,161804,0x7ff6526965e4,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,161811,0x7ff652696604,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,161818,0x7ff6526966c4,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,161840,0x7ff6526966e4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,161848,0x7ff652696704,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,161855,0x7ff6526967c4,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,161861,0x7ff6526967e4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,161868,0x7ff652696804,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,161875,0x7ff6526968c4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,161882,0x7ff6526968e4,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,161888,0x7ff652696904,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,161895,0x7ff6526969c4,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,161902,0x7ff652696a64,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,161909,0x7ff652696b24,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,161916,0x7ff652696be4,12,CollatorConstructor
code-creation,Builtin,2,161922,0x7ff652696c04,12,CollatorInternalCompare
code-creation,Builtin,2,161929,0x7ff652696c24,12,CollatorPrototypeCompare
code-creation,Builtin,2,161935,0x7ff652696c44,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,161941,0x7ff652696c64,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,161948,0x7ff652696c84,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,161955,0x7ff652696ca4,12,DatePrototypeToLocaleString
code-creation,Builtin,2,161961,0x7ff652696cc4,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,161968,0x7ff652696ce4,12,DateTimeFormatConstructor
code-creation,Builtin,2,161974,0x7ff652696d04,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,161981,0x7ff652696d24,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,161989,0x7ff652696d44,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,161996,0x7ff652696d64,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,162003,0x7ff652696d84,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,162010,0x7ff652696da4,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,162017,0x7ff652696dc4,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,162023,0x7ff652696de4,12,DisplayNamesConstructor
code-creation,Builtin,2,162031,0x7ff652696e04,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,162039,0x7ff652696e24,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,162046,0x7ff652696e44,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,162053,0x7ff652696e64,12,IntlGetCanonicalLocales
code-creation,Builtin,2,162059,0x7ff652696e84,12,ListFormatConstructor
code-creation,Builtin,2,162066,0x7ff652696ea4,224,ListFormatPrototypeFormat
code-creation,Builtin,2,162073,0x7ff652696fa4,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,162080,0x7ff6526970a4,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,162090,0x7ff6526970c4,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,162097,0x7ff6526970e4,12,LocaleConstructor
code-creation,Builtin,2,162104,0x7ff652697104,12,LocalePrototypeBaseName
code-creation,Builtin,2,162111,0x7ff652697124,12,LocalePrototypeCalendar
code-creation,Builtin,2,162117,0x7ff652697144,12,LocalePrototypeCalendars
code-creation,Builtin,2,162124,0x7ff652697164,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,162131,0x7ff652697184,12,LocalePrototypeCollation
code-creation,Builtin,2,162137,0x7ff6526971a4,12,LocalePrototypeCollations
code-creation,Builtin,2,162144,0x7ff6526971c4,12,LocalePrototypeHourCycle
code-creation,Builtin,2,162150,0x7ff6526971e4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,162157,0x7ff652697204,12,LocalePrototypeLanguage
code-creation,Builtin,2,162163,0x7ff652697224,12,LocalePrototypeMaximize
code-creation,Builtin,2,162170,0x7ff652697244,12,LocalePrototypeMinimize
code-creation,Builtin,2,162176,0x7ff652697264,12,LocalePrototypeNumeric
code-creation,Builtin,2,162182,0x7ff652697284,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,162189,0x7ff6526972a4,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,162196,0x7ff6526972c4,12,LocalePrototypeRegion
code-creation,Builtin,2,162202,0x7ff6526972e4,12,LocalePrototypeScript
code-creation,Builtin,2,162209,0x7ff652697304,12,LocalePrototypeTextInfo
code-creation,Builtin,2,162215,0x7ff652697324,12,LocalePrototypeTimeZones
code-creation,Builtin,2,162221,0x7ff652697344,12,LocalePrototypeToString
code-creation,Builtin,2,162228,0x7ff652697364,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,162234,0x7ff652697384,12,NumberFormatConstructor
code-creation,Builtin,2,162240,0x7ff6526973a4,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,162247,0x7ff6526973c4,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,162254,0x7ff6526973e4,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,162260,0x7ff652697404,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,162267,0x7ff652697424,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,162274,0x7ff652697444,12,PluralRulesConstructor
code-creation,Builtin,2,162280,0x7ff652697464,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,162287,0x7ff652697484,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,162293,0x7ff6526974a4,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,162300,0x7ff6526974c4,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,162306,0x7ff6526974e4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,162313,0x7ff652697504,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,162320,0x7ff652697524,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,162326,0x7ff652697544,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,162333,0x7ff652697564,12,SegmenterConstructor
code-creation,Builtin,2,162339,0x7ff652697584,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,162346,0x7ff6526975a4,12,SegmenterPrototypeSegment
code-creation,Builtin,2,162353,0x7ff6526975c4,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,162359,0x7ff6526975e4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,162366,0x7ff652697604,12,SegmentsPrototypeContaining
code-creation,Builtin,2,162372,0x7ff652697624,12,SegmentsPrototypeIterator
code-creation,Builtin,2,162379,0x7ff652697644,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,162386,0x7ff652697664,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,162393,0x7ff652697684,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,162400,0x7ff6526976a4,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,162406,0x7ff652697784,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,162413,0x7ff6526977a4,636,StringToLowerCaseIntl
code-creation,Builtin,2,162420,0x7ff652697a24,12,V8BreakIteratorConstructor
code-creation,Builtin,2,162427,0x7ff652697a44,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,162433,0x7ff652697a64,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,162440,0x7ff652697a84,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,162446,0x7ff652697aa4,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,162455,0x7ff652697ac4,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,162464,0x7ff652697ae4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,162473,0x7ff652697b04,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,162481,0x7ff652697b24,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,162497,0x7ff652697b44,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,162505,0x7ff652697b64,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,162512,0x7ff652697b84,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,162519,0x7ff652697ba4,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,162526,0x7ff652697bc4,24,Wide
code-creation,BytecodeHandler,0,162533,0x7ff652697be4,24,ExtraWide
code-creation,BytecodeHandler,0,162539,0x7ff652697c04,104,DebugBreakWide
code-creation,BytecodeHandler,0,162545,0x7ff652697c84,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,162552,0x7ff652697d04,164,DebugBreak0
code-creation,BytecodeHandler,0,162558,0x7ff652697dc4,104,DebugBreak1
code-creation,BytecodeHandler,0,162565,0x7ff652697e44,104,DebugBreak2
code-creation,BytecodeHandler,0,162571,0x7ff652697ec4,104,DebugBreak3
code-creation,BytecodeHandler,0,162577,0x7ff652697f44,104,DebugBreak4
code-creation,BytecodeHandler,0,162584,0x7ff652697fc4,104,DebugBreak5
code-creation,BytecodeHandler,0,162590,0x7ff652698044,104,DebugBreak6
code-creation,BytecodeHandler,0,162597,0x7ff6526980c4,32,Ldar
code-creation,BytecodeHandler,0,162603,0x7ff652698104,68,LdaZero
code-creation,BytecodeHandler,0,162609,0x7ff652698164,76,LdaSmi
code-creation,BytecodeHandler,0,162615,0x7ff6526981c4,68,LdaUndefined
code-creation,BytecodeHandler,0,162621,0x7ff652698224,68,LdaNull
code-creation,BytecodeHandler,0,162628,0x7ff652698284,68,LdaTheHole
code-creation,BytecodeHandler,0,162635,0x7ff6526982e4,20,LdaTrue
code-creation,BytecodeHandler,0,162641,0x7ff652698304,20,LdaFalse
code-creation,BytecodeHandler,0,162648,0x7ff652698324,76,LdaConstant
code-creation,BytecodeHandler,0,162654,0x7ff652698384,132,LdaContextSlot
code-creation,BytecodeHandler,0,162660,0x7ff652698424,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,162667,0x7ff6526984c4,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,162674,0x7ff652698524,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,162681,0x7ff652698584,32,Star
code-creation,BytecodeHandler,0,162687,0x7ff6526985c4,40,Mov
code-creation,BytecodeHandler,0,162693,0x7ff652698604,40,PushContext
code-creation,BytecodeHandler,0,162699,0x7ff652698644,36,PopContext
code-creation,BytecodeHandler,0,162705,0x7ff652698684,48,TestReferenceEqual
code-creation,BytecodeHandler,0,162712,0x7ff6526986c4,52,TestUndetectable
code-creation,BytecodeHandler,0,162718,0x7ff652698704,36,TestNull
code-creation,BytecodeHandler,0,162725,0x7ff652698744,36,TestUndefined
code-creation,BytecodeHandler,0,162731,0x7ff652698784,336,TestTypeOf
code-creation,BytecodeHandler,0,162737,0x7ff6526988e4,6036,LdaGlobal
code-creation,BytecodeHandler,0,162744,0x7ff65269a084,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,162750,0x7ff65269b244,168,StaGlobal
code-creation,BytecodeHandler,0,162756,0x7ff65269b304,160,StaContextSlot
code-creation,BytecodeHandler,0,162763,0x7ff65269b3c4,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,162772,0x7ff65269b444,124,LdaLookupSlot
code-creation,BytecodeHandler,0,162781,0x7ff65269b4c4,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,162787,0x7ff65269b5c4,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,162794,0x7ff65269c884,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,162802,0x7ff65269c904,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,162809,0x7ff65269ca04,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,162819,0x7ff65269dca4,220,StaLookupSlot
code-creation,BytecodeHandler,0,162857,0x7ff65269dd84,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,162864,0x7ff65269f204,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,162871,0x7ff65269f2c4,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,162878,0x7ff65269f3a4,160,LdaModuleVariable
code-creation,BytecodeHandler,0,162885,0x7ff65269f464,292,StaModuleVariable
code-creation,BytecodeHandler,0,162891,0x7ff65269f5a4,172,StaNamedProperty
code-creation,BytecodeHandler,0,162898,0x7ff65269f664,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,162904,0x7ff65269f724,164,StaKeyedProperty
code-creation,BytecodeHandler,0,162911,0x7ff65269f7e4,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,162917,0x7ff65269f8a4,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,162924,0x7ff65269f984,160,CollectTypeProfile
code-creation,BytecodeHandler,0,162931,0x7ff65269fa44,1028,Add
code-creation,BytecodeHandler,0,162937,0x7ff65269fe64,1064,Sub
code-creation,BytecodeHandler,0,162943,0x7ff6526a02a4,1024,Mul
code-creation,BytecodeHandler,0,162950,0x7ff6526a06c4,988,Div
code-creation,BytecodeHandler,0,162956,0x7ff6526a0aa4,912,Mod
code-creation,BytecodeHandler,0,162962,0x7ff6526a0e44,964,Exp
code-creation,BytecodeHandler,0,162968,0x7ff6526a1224,876,BitwiseOr
code-creation,BytecodeHandler,0,162975,0x7ff6526a15a4,888,BitwiseXor
code-creation,BytecodeHandler,0,162981,0x7ff6526a1924,888,BitwiseAnd
code-creation,BytecodeHandler,0,162987,0x7ff6526a1ca4,900,ShiftLeft
code-creation,BytecodeHandler,0,162993,0x7ff6526a2044,900,ShiftRight
code-creation,BytecodeHandler,0,163000,0x7ff6526a23e4,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,163007,0x7ff6526a27e4,960,AddSmi
code-creation,BytecodeHandler,0,163013,0x7ff6526a2bc4,1000,SubSmi
code-creation,BytecodeHandler,0,163019,0x7ff6526a2fc4,916,MulSmi
code-creation,BytecodeHandler,0,163025,0x7ff6526a3364,920,DivSmi
code-creation,BytecodeHandler,0,163032,0x7ff6526a3704,816,ModSmi
code-creation,BytecodeHandler,0,163038,0x7ff6526a3a44,872,ExpSmi
code-creation,BytecodeHandler,0,163044,0x7ff6526a3dc4,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,163050,0x7ff6526a3fc4,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,163057,0x7ff6526a41c4,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,163063,0x7ff6526a43c4,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,163070,0x7ff6526a45c4,488,ShiftRightSmi
code-creation,BytecodeHandler,0,163076,0x7ff6526a47c4,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,163083,0x7ff6526a4a64,656,Inc
code-creation,BytecodeHandler,0,163089,0x7ff6526a4d04,656,Dec
code-creation,BytecodeHandler,0,163095,0x7ff6526a4fa4,640,Negate
code-creation,BytecodeHandler,0,163101,0x7ff6526a5244,480,BitwiseNot
code-creation,BytecodeHandler,0,163108,0x7ff6526a5444,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,163115,0x7ff6526a54c4,36,LogicalNot
code-creation,BytecodeHandler,0,163121,0x7ff6526a5504,208,TypeOf
code-creation,BytecodeHandler,0,163127,0x7ff6526a55e4,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,163134,0x7ff6526a5664,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,163141,0x7ff6526a56e4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,163148,0x7ff6526a5724,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,163154,0x7ff6526a5ba4,1132,CallProperty
code-creation,BytecodeHandler,0,163160,0x7ff6526a6024,1012,CallProperty0
code-creation,BytecodeHandler,0,163167,0x7ff6526a6424,1028,CallProperty1
code-creation,BytecodeHandler,0,163176,0x7ff6526a6844,1040,CallProperty2
code-creation,BytecodeHandler,0,163183,0x7ff6526a6c64,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,163190,0x7ff6526a7064,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,163197,0x7ff6526a7484,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,163204,0x7ff6526a7884,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,163210,0x7ff6526a7ca4,1132,CallWithSpread
code-creation,BytecodeHandler,0,163217,0x7ff6526a8124,124,CallRuntime
code-creation,BytecodeHandler,0,163224,0x7ff6526a81a4,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,163230,0x7ff6526a8244,80,CallJSRuntime
code-creation,BytecodeHandler,0,163237,0x7ff6526a82a4,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,163243,0x7ff6526a8784,1020,Construct
code-creation,BytecodeHandler,0,163249,0x7ff6526a8b84,536,ConstructWithSpread
code-creation,BytecodeHandler,0,163256,0x7ff6526a8da4,1936,TestEqual
code-creation,BytecodeHandler,0,163262,0x7ff6526a9544,1064,TestEqualStrict
code-creation,BytecodeHandler,0,163269,0x7ff6526a9984,1624,TestLessThan
code-creation,BytecodeHandler,0,163275,0x7ff6526a9fe4,1624,TestGreaterThan
code-creation,BytecodeHandler,0,163282,0x7ff6526aa644,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,163288,0x7ff6526aaca4,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,163295,0x7ff6526ab304,860,TestInstanceOf
code-creation,BytecodeHandler,0,163301,0x7ff6526ab664,156,TestIn
code-creation,BytecodeHandler,0,163308,0x7ff6526ab704,112,ToName
code-creation,BytecodeHandler,0,163314,0x7ff6526ab784,212,ToNumber
code-creation,BytecodeHandler,0,163320,0x7ff6526ab864,232,ToNumeric
code-creation,BytecodeHandler,0,163327,0x7ff6526ab964,112,ToObject
code-creation,BytecodeHandler,0,163333,0x7ff6526ab9e4,116,ToString
code-creation,BytecodeHandler,0,163340,0x7ff6526aba64,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,163347,0x7ff6526abc04,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,163353,0x7ff6526ac1c4,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,163360,0x7ff6526ac224,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,163367,0x7ff6526ac544,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,163374,0x7ff6526acda4,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,163381,0x7ff6526acea4,168,CloneObject
code-creation,BytecodeHandler,0,163387,0x7ff6526acf64,212,GetTemplateObject
code-creation,BytecodeHandler,0,163394,0x7ff6526ad044,328,CreateClosure
code-creation,BytecodeHandler,0,163401,0x7ff6526ad1a4,120,CreateBlockContext
code-creation,BytecodeHandler,0,163407,0x7ff6526ad224,132,CreateCatchContext
code-creation,BytecodeHandler,0,163414,0x7ff6526ad2c4,256,CreateFunctionContext
code-creation,BytecodeHandler,0,163421,0x7ff6526ad3e4,256,CreateEvalContext
code-creation,BytecodeHandler,0,163427,0x7ff6526ad504,132,CreateWithContext
code-creation,BytecodeHandler,0,163434,0x7ff6526ad5a4,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,163440,0x7ff6526adbe4,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,163447,0x7ff6526ade44,632,CreateRestParameter
code-creation,BytecodeHandler,0,163454,0x7ff6526ae0c4,424,JumpLoop
code-creation,BytecodeHandler,0,163460,0x7ff6526ae284,44,Jump
code-creation,BytecodeHandler,0,163467,0x7ff6526ae2c4,56,JumpConstant
code-creation,BytecodeHandler,0,163473,0x7ff6526ae304,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,163480,0x7ff6526ae364,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,163486,0x7ff6526ae3c4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,163493,0x7ff6526ae424,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,163500,0x7ff6526ae484,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,163507,0x7ff6526ae4e4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,163513,0x7ff6526ae544,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,163520,0x7ff6526ae5a4,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,163527,0x7ff6526ae604,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,163538,0x7ff6526ae6a4,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,163545,0x7ff6526ae744,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,163552,0x7ff6526ae7e4,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,163559,0x7ff6526ae884,64,JumpIfTrue
code-creation,BytecodeHandler,0,163565,0x7ff6526ae8e4,64,JumpIfFalse
code-creation,BytecodeHandler,0,163572,0x7ff6526ae944,64,JumpIfNull
code-creation,BytecodeHandler,0,163578,0x7ff6526ae9a4,64,JumpIfNotNull
code-creation,BytecodeHandler,0,163584,0x7ff6526aea04,64,JumpIfUndefined
code-creation,BytecodeHandler,0,163591,0x7ff6526aea64,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,163597,0x7ff6526aeac4,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,163604,0x7ff6526aeb24,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,163611,0x7ff6526aeb84,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,163617,0x7ff6526aec04,464,ForInEnumerate
code-creation,BytecodeHandler,0,163624,0x7ff6526aede4,252,ForInPrepare
code-creation,BytecodeHandler,0,163630,0x7ff6526aeee4,60,ForInContinue
code-creation,BytecodeHandler,0,163636,0x7ff6526aef24,256,ForInNext
code-creation,BytecodeHandler,0,163643,0x7ff6526af044,48,ForInStep
code-creation,BytecodeHandler,0,163649,0x7ff6526af084,36,SetPendingMessage
code-creation,BytecodeHandler,0,163656,0x7ff6526af0c4,116,Throw
code-creation,BytecodeHandler,0,163662,0x7ff6526af144,116,ReThrow
code-creation,BytecodeHandler,0,163669,0x7ff6526af1c4,112,Return
code-creation,BytecodeHandler,0,163675,0x7ff6526af244,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,163682,0x7ff6526af324,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,163689,0x7ff6526af3c4,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,163696,0x7ff6526af464,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,163703,0x7ff6526af504,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,163710,0x7ff6526af584,512,SuspendGenerator
code-creation,BytecodeHandler,0,163716,0x7ff6526af7a4,128,ResumeGenerator
code-creation,BytecodeHandler,0,163723,0x7ff6526af844,152,GetIterator
code-creation,BytecodeHandler,0,163730,0x7ff6526af8e4,116,Debugger
code-creation,BytecodeHandler,0,163736,0x7ff6526af964,124,IncBlockCounter
code-creation,BytecodeHandler,0,163742,0x7ff6526af9e4,56,Abort
code-creation,BytecodeHandler,0,163749,0x7ff6526afa24,32,Star0
code-creation,BytecodeHandler,0,163755,0x7ff6526afa64,60,Illegal
code-creation,BytecodeHandler,0,163763,0x7ff6526afaa4,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,163770,0x7ff6526afb24,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,163777,0x7ff6526afba4,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,163784,0x7ff6526afc24,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,163790,0x7ff6526afca4,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,163797,0x7ff6526afd24,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,163804,0x7ff6526afda4,32,Ldar.Wide
code-creation,BytecodeHandler,0,163810,0x7ff6526afde4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,163816,0x7ff6526afe24,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,163823,0x7ff6526afe64,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,163851,0x7ff6526afec4,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,163858,0x7ff6526aff24,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,163865,0x7ff6526aff64,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,163872,0x7ff6526affa4,32,Star.Wide
code-creation,BytecodeHandler,0,163879,0x7ff6526affe4,40,Mov.Wide
code-creation,BytecodeHandler,0,163885,0x7ff6526b0024,40,PushContext.Wide
code-creation,BytecodeHandler,0,163892,0x7ff6526b0064,36,PopContext.Wide
code-creation,BytecodeHandler,0,163899,0x7ff6526b00a4,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,163905,0x7ff6526b00e4,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,163912,0x7ff6526b1324,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,163919,0x7ff6526b2524,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,163928,0x7ff6526b25e4,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,163936,0x7ff6526b26a4,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,163943,0x7ff6526b2724,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,163950,0x7ff6526b27c4,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,163957,0x7ff6526b28c4,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,163964,0x7ff6526b3bc4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,163971,0x7ff6526b3c64,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,163979,0x7ff6526b3d64,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,163986,0x7ff6526b5044,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,163993,0x7ff6526b5124,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,164000,0x7ff6526b65a4,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,164007,0x7ff6526b6664,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,164014,0x7ff6526b6724,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,164021,0x7ff6526b67e4,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,164028,0x7ff6526b6924,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,164035,0x7ff6526b69e4,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,164042,0x7ff6526b6aa4,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,164049,0x7ff6526b6b64,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,164056,0x7ff6526b6c24,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,164062,0x7ff6526b6d04,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,164069,0x7ff6526b6dc4,984,Add.Wide
code-creation,BytecodeHandler,0,164076,0x7ff6526b71a4,1020,Sub.Wide
code-creation,BytecodeHandler,0,164082,0x7ff6526b75a4,972,Mul.Wide
code-creation,BytecodeHandler,0,164088,0x7ff6526b7984,988,Div.Wide
code-creation,BytecodeHandler,0,164095,0x7ff6526b7d64,916,Mod.Wide
code-creation,BytecodeHandler,0,164101,0x7ff6526b8104,988,Exp.Wide
code-creation,BytecodeHandler,0,164107,0x7ff6526b84e4,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,164114,0x7ff6526b8884,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,164121,0x7ff6526b8c24,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,164127,0x7ff6526b8fc4,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,164134,0x7ff6526b9384,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,164142,0x7ff6526b9744,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,164149,0x7ff6526b9b64,916,AddSmi.Wide
code-creation,BytecodeHandler,0,164156,0x7ff6526b9f04,960,SubSmi.Wide
code-creation,BytecodeHandler,0,164162,0x7ff6526ba2e4,912,MulSmi.Wide
code-creation,BytecodeHandler,0,164168,0x7ff6526ba684,920,DivSmi.Wide
code-creation,BytecodeHandler,0,164176,0x7ff6526baa24,816,ModSmi.Wide
code-creation,BytecodeHandler,0,164185,0x7ff6526bad64,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,164193,0x7ff6526bb0e4,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,164202,0x7ff6526bb2e4,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,164210,0x7ff6526bb4e4,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,164218,0x7ff6526bb6e4,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,164227,0x7ff6526bb8e4,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,164235,0x7ff6526bbae4,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,164244,0x7ff6526bbd84,616,Inc.Wide
code-creation,BytecodeHandler,0,164251,0x7ff6526bc004,616,Dec.Wide
code-creation,BytecodeHandler,0,164260,0x7ff6526bc284,648,Negate.Wide
code-creation,BytecodeHandler,0,164268,0x7ff6526bc524,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,164277,0x7ff6526bc724,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,164285,0x7ff6526bc7a4,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,164294,0x7ff6526bc824,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,164303,0x7ff6526bc864,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,164312,0x7ff6526bcce4,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,164323,0x7ff6526bd164,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,164331,0x7ff6526bd564,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,164337,0x7ff6526bd984,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,164344,0x7ff6526bdda4,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,164351,0x7ff6526be1a4,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,164358,0x7ff6526be5c4,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,164365,0x7ff6526be9e4,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,164372,0x7ff6526bee04,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,164379,0x7ff6526bf284,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,164385,0x7ff6526bf324,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,164392,0x7ff6526bf3e4,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,164399,0x7ff6526bf444,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,164407,0x7ff6526bf924,968,Construct.Wide
code-creation,BytecodeHandler,0,164413,0x7ff6526bfd04,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,164420,0x7ff6526bfee4,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,164427,0x7ff6526c06a4,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,164433,0x7ff6526c0ae4,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,164440,0x7ff6526c10e4,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,164447,0x7ff6526c16e4,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,164454,0x7ff6526c1ce4,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,164461,0x7ff6526c22e4,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,164467,0x7ff6526c2664,160,TestIn.Wide
code-creation,BytecodeHandler,0,164474,0x7ff6526c2724,116,ToName.Wide
code-creation,BytecodeHandler,0,164480,0x7ff6526c27a4,216,ToNumber.Wide
code-creation,BytecodeHandler,0,164487,0x7ff6526c2884,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,164493,0x7ff6526c2984,116,ToObject.Wide
code-creation,BytecodeHandler,0,164500,0x7ff6526c2a04,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,164506,0x7ff6526c2ba4,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,164513,0x7ff6526c3124,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,164520,0x7ff6526c3444,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,164527,0x7ff6526c3c44,172,CloneObject.Wide
code-creation,BytecodeHandler,0,164534,0x7ff6526c3d04,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,164541,0x7ff6526c3dc4,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,164547,0x7ff6526c3f24,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,164554,0x7ff6526c3fa4,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,164561,0x7ff6526c4044,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,164568,0x7ff6526c4164,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,164575,0x7ff6526c4284,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,164582,0x7ff6526c4324,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,164588,0x7ff6526c44e4,44,Jump.Wide
code-creation,BytecodeHandler,0,164595,0x7ff6526c4524,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,164601,0x7ff6526c4564,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,164608,0x7ff6526c45c4,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,164615,0x7ff6526c4624,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,164622,0x7ff6526c4684,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,164630,0x7ff6526c46e4,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,164637,0x7ff6526c4744,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,164644,0x7ff6526c47a4,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,164651,0x7ff6526c4804,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,164658,0x7ff6526c4864,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,164667,0x7ff6526c4904,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,164676,0x7ff6526c49a4,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,164684,0x7ff6526c4a44,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,164691,0x7ff6526c4ae4,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,164698,0x7ff6526c4b44,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,164704,0x7ff6526c4ba4,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,164711,0x7ff6526c4c04,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,164718,0x7ff6526c4c64,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,164724,0x7ff6526c4cc4,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,164731,0x7ff6526c4d24,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,164739,0x7ff6526c4d84,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,164745,0x7ff6526c4de4,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,164752,0x7ff6526c4e64,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,164759,0x7ff6526c5044,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,164766,0x7ff6526c5144,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,164773,0x7ff6526c5184,260,ForInNext.Wide
code-creation,BytecodeHandler,0,164779,0x7ff6526c52a4,48,ForInStep.Wide
code-creation,BytecodeHandler,0,164786,0x7ff6526c52e4,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,164793,0x7ff6526c5384,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,164800,0x7ff6526c5444,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,164807,0x7ff6526c54c4,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,164814,0x7ff6526c56e4,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,164821,0x7ff6526c5784,156,GetIterator.Wide
code-creation,BytecodeHandler,0,164844,0x7ff6526c5824,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,164851,0x7ff6526c58c4,56,Abort.Wide
code-creation,BytecodeHandler,0,164858,0x7ff6526c5904,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,164864,0x7ff6526c5984,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,164871,0x7ff6526c5a04,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,164878,0x7ff6526c5a84,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,164885,0x7ff6526c5b04,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,164892,0x7ff6526c5b84,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,164898,0x7ff6526c5c04,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,164905,0x7ff6526c5c44,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,164912,0x7ff6526c5c64,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,164919,0x7ff6526c5ca4,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,164926,0x7ff6526c5d04,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,164933,0x7ff6526c5d64,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,164940,0x7ff6526c5da4,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,164947,0x7ff6526c5de4,28,Star.ExtraWide
code-creation,BytecodeHandler,0,164954,0x7ff6526c5e04,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,164961,0x7ff6526c5e44,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,164967,0x7ff6526c5e84,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,164974,0x7ff6526c5ec4,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,164981,0x7ff6526c5f04,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,164989,0x7ff6526c7144,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,164997,0x7ff6526c8344,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,165004,0x7ff6526c8404,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,165011,0x7ff6526c84a4,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,165018,0x7ff6526c8524,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,165025,0x7ff6526c85c4,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,165032,0x7ff6526c86c4,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,165039,0x7ff6526c99c4,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,165050,0x7ff6526c9a64,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,165058,0x7ff6526c9b64,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,165066,0x7ff6526cae44,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,165073,0x7ff6526caf24,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,165080,0x7ff6526cc384,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,165088,0x7ff6526cc444,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,165094,0x7ff6526cc4e4,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,165101,0x7ff6526cc5a4,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,165108,0x7ff6526cc6e4,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,165115,0x7ff6526cc7a4,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,165123,0x7ff6526cc864,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,165130,0x7ff6526cc924,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,165137,0x7ff6526cc9e4,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,165144,0x7ff6526ccac4,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,165152,0x7ff6526ccb84,980,Add.ExtraWide
code-creation,BytecodeHandler,0,165158,0x7ff6526ccf64,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,165167,0x7ff6526cd364,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,165173,0x7ff6526cd744,988,Div.ExtraWide
code-creation,BytecodeHandler,0,165180,0x7ff6526cdb24,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,165186,0x7ff6526cdec4,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,165193,0x7ff6526ce2a4,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,165199,0x7ff6526ce644,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,165206,0x7ff6526ce9e4,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,165213,0x7ff6526ced84,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,165220,0x7ff6526cf144,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,165227,0x7ff6526cf504,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,165234,0x7ff6526cf924,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,165240,0x7ff6526cfcc4,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,165247,0x7ff6526d00a4,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,165254,0x7ff6526d0444,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,165261,0x7ff6526d07e4,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,165267,0x7ff6526d0b24,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,165274,0x7ff6526d0ea4,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,165281,0x7ff6526d10a4,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,165288,0x7ff6526d12a4,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,165294,0x7ff6526d14a4,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,165301,0x7ff6526d16a4,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,165308,0x7ff6526d18a4,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,165315,0x7ff6526d1b44,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,165322,0x7ff6526d1dc4,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,165328,0x7ff6526d2044,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,165335,0x7ff6526d22e4,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,165342,0x7ff6526d24e4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,165349,0x7ff6526d2564,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,165356,0x7ff6526d25e4,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,165363,0x7ff6526d2624,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,165370,0x7ff6526d2aa4,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,165377,0x7ff6526d2f24,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,165384,0x7ff6526d3324,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,165391,0x7ff6526d3744,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,165399,0x7ff6526d3b64,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,165407,0x7ff6526d3f64,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,165415,0x7ff6526d4384,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,165422,0x7ff6526d4784,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,165429,0x7ff6526d4ba4,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,165436,0x7ff6526d5024,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,165443,0x7ff6526d50c4,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,165450,0x7ff6526d5184,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,165457,0x7ff6526d51e4,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,165464,0x7ff6526d56c4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,165471,0x7ff6526d5aa4,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,165478,0x7ff6526d5c84,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,165485,0x7ff6526d6444,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,165492,0x7ff6526d6884,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,165499,0x7ff6526d6e84,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,165506,0x7ff6526d7484,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,165515,0x7ff6526d7a84,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,165522,0x7ff6526d8084,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,165531,0x7ff6526d8404,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,165538,0x7ff6526d84a4,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,165544,0x7ff6526d8524,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,165551,0x7ff6526d8604,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,165558,0x7ff6526d8704,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,165565,0x7ff6526d8784,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,165572,0x7ff6526d8924,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,165579,0x7ff6526d8ea4,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,165586,0x7ff6526d91c4,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,165594,0x7ff6526d99c4,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,165601,0x7ff6526d9a84,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,165608,0x7ff6526d9b44,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,165615,0x7ff6526d9ca4,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,165622,0x7ff6526d9d24,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,165630,0x7ff6526d9dc4,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,165637,0x7ff6526d9ee4,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,165644,0x7ff6526da004,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,165651,0x7ff6526da0a4,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,165658,0x7ff6526da264,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,165665,0x7ff6526da2a4,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,165672,0x7ff6526da2e4,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,165679,0x7ff6526da344,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,165686,0x7ff6526da3a4,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,165693,0x7ff6526da404,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,165701,0x7ff6526da464,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,165708,0x7ff6526da4c4,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,165715,0x7ff6526da524,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,165722,0x7ff6526da584,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,165729,0x7ff6526da5e4,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,165736,0x7ff6526da684,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,165783,0x7ff6526da724,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,165791,0x7ff6526da7c4,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,165799,0x7ff6526da864,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,165806,0x7ff6526da8c4,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,165812,0x7ff6526da924,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,165819,0x7ff6526da984,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,165839,0x7ff6526da9e4,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,165847,0x7ff6526daa44,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,165854,0x7ff6526daaa4,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,165861,0x7ff6526dab04,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,165868,0x7ff6526dab64,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,165875,0x7ff6526dabe4,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,165882,0x7ff6526dadc4,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,165889,0x7ff6526daec4,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,165896,0x7ff6526daf04,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,165903,0x7ff6526db024,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,165910,0x7ff6526db064,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,165917,0x7ff6526db104,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,165925,0x7ff6526db1c4,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,165932,0x7ff6526db244,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,165939,0x7ff6526db464,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,165946,0x7ff6526db4e4,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,165953,0x7ff6526db584,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,165959,0x7ff6526db604,56,Abort.ExtraWide
new,MemoryChunk,0x23791c40000,262144
new,MemoryChunk,0x35d8c7c0000,262144
new,MemoryChunk,0x9c76d40000,262144
new,MemoryChunk,0x2cf68500000,262144
new,MemoryChunk,0x144a20c0000,262144
code-creation,Eval,10,171440,0x144a20c1fae,5, node:internal/main/run_main_module:1:1,0x144a20c1e68,~
script-source,95,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x144a20c1fae,95,0,649,C0O0C4O649,,
code-creation,Function,10,171516,0x144a20c2056,58, node:internal/main/run_main_module:1:1,0x144a20c1f28,~
code-source-info,0x144a20c2056,95,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
tick,0x7ff6523869a2,172110,0,0x0,3,0x7ff652173fe0,0x144a20c2059
code-creation,LazyCompile,10,172158,0x144a20c2296,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x1424f54fdc0,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x144a20c2296,9,10647,11000,C0O10657C2O10668C4O10664C9O10685C13O10706C14O10729C19O10742C24O10746C29O10746C35O10890C37O10900C47O10948C60O10906C65O10900C66O10970C71O10970C75O10997,,
code-creation,LazyCompile,10,173132,0x144a20c2fa6,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x1424f54fcf0,~
code-source-info,0x144a20c2fa6,9,9827,10410,C0O9846C6O9861C12O9891C16O9899C17O9930C22O9939C23O9952C30O9998C37O10029C45O9998C63O10131C70O10131C75O10167C89O10202C103O10159C108O10242C109O10254C124O10286C126O10299C141O10322C152O10341C160O10373C165O10322C170O10397C174O10405,,
code-creation,Eval,10,173546,0x144a20c3f7e,5, node:internal/bootstrap/pre_execution:1:1,0x144a20c3b88,~
script-source,96,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupFetch();\x0d\n  setupWebCrypto();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\nfunction setupFetch() {\x0d\n  if (!getOptionValue('--experimental-fetch')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  emitExperimentalWarning('Fetch');\x0d\n\x0d\n  const undici = require('internal/deps/undici/undici');\x0d\n  defineOperation(globalThis\x2C 'fetch'\x2C undici.fetch);\x0d\n  exposeInterface(globalThis\x2C 'FormData'\x2C undici.FormData);\x0d\n  exposeInterface(globalThis\x2C 'Headers'\x2C undici.Headers);\x0d\n  exposeInterface(globalThis\x2C 'Request'\x2C undici.Request);\x0d\n  exposeInterface(globalThis\x2C 'Response'\x2C undici.Response);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      !getOptionValue('--experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let webcrypto;\x0d\n  ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                       ObjectGetOwnPropertyDescriptor({\x0d\n                         get crypto() {\x0d\n                           webcrypto ??= require('internal/crypto/webcrypto');\x0d\n                           return webcrypto.crypto;\x0d\n                         }\x0d\n                       }\x2C 'crypto'));\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    webcrypto ??= require('internal/crypto/webcrypto');\x0d\n    ObjectDefineProperty(globalThis\x2C 'Crypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.Crypto\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'CryptoKey'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.CryptoKey\x0d\n    });\x0d\n    ObjectDefineProperty(globalThis\x2C 'SubtleCrypto'\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: webcrypto.SubtleCrypto\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupFetch\x2C\x0d\n  setupWebCrypto\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x144a20c3f7e,96,0,18262,C0O0C4O18262,,
code-creation,Function,10,174561,0x144a20c4bae,497, node:internal/bootstrap/pre_execution:1:1,0x144a20c3ef8,~
code-source-info,0x144a20c4bae,96,0,18262,C0O0C214O28C220O47C226O72C232O107C238O119C244O135C250O165C256O253C262O253C267O209C273O228C279O319C285O319C290O291C296O429C302O429C307O359C313O379C319O407C325O477C331O477C336O466C342O539C348O539C353O565C358O505C364O589C370O589C374O589C376O17813C383O17835C389O17858C395O17881C401O17905C407O17920C413O17939C419O17957C425O17976C431O18007C437O18034C443O18058C449O18089C455O18122C461O18145C467O18173C473O18197C479O18218C485O18242C491O17828C496O18261,,
code-creation,LazyCompile,10,174937,0x144a20c6476,225,prepareMainThreadExecution node:internal/bootstrap/pre_execution:28:36,0x144a20c3fb0,~
code-source-info,0x144a20c
code-creation,LazyCompile,10,175074,0x144a20c7886,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x5d8b38bdb8,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x144a20c7886,25,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,176831,0x144a20ca0be,397,patchProcessObject node:internal/bootstrap/pre_execution:89:28,0x144a20c4000,~
code-source-info,0x144a20ca0be
code-creation,LazyCompile,10,176940,0x144a20ca3ee,69,internalBinding node:internal/bootstrap/loaders:164:45,0x1424f54f840,~
code-source-info,0x144a20ca3ee,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,177073,0x144a20ca6a6,69,refreshHrtimeBuffer node:internal/process/per_thread:66:29,0x5d8b398598,~
script-source,30,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n};\x0d\n
code-source-info,0x144a20ca6a6,30,1477,1925,C0O1668C7O1695C10O1703C17O1679C25O1677C31O1858C38O1894C41O1902C53O1875C61O1873C68O1924,,
code-creation,LazyCompile,10,177940,0x144a20cb766,832,resolve node:path:158:10,0x22ee8ccd510,~
script-source,41,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x144a20cb
code-creation,LazyCompile,10,180516,0x144a20ced7e,30,validateString node:internal/validators:118:24,0x1424f57ce70,~
script-source,15,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x144a20ced7e,15,3534,3646,C0O3553C6O3589C22O3595C27O3589C29O3645,,
code-creation,LazyCompile,10,180993,0x144a20cf71e,17,isPathSeparator node:path:52:25,0x22ee8cccf90,~
code-source-info,0x144a20cf71e,41,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,181035,0x144a20cf81e,35,isWindowsDeviceRoot node:path:60:29,0x22ee8ccd408,~
code-source-info,0x144a20cf81e,41,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,181093,0x144a20cf93e,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x1424f57eee8,~
script-source,94,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x144a20cf93e,94,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,181411,0x144a20cffa6,442,normalizeString node:path:66:25,0x22ee8ccd458,~
code-source-info,0x144a20cffa
code-creation,LazyCompile,10,181592,0x144a20d06c6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:130:33,0x144a20c4050,~
code-source-info,0x144a20d06c6,96,4358,4593,C16O4411C21O4411C26O4438C28O4456C36O4486C43O4552C49O4571C56O4456C62O4592,,
code-creation,LazyCompile,10,181674,0x144a20d0866,82,getOptionValue node:internal/options:39:24,0x25dd5bfdb40,~
script-source,91,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0x144a20d0866,91,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,181827,0x144a20d0c16,33,getCLIOptionsFromBinding node:internal/options:18:34,0x25dd5bfd848,~
code-source-info,0x144a20d0c16,91,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,182212,0x144a20d0d96,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:277:33,0x144a20c43c0,~
code-source-info,0x144a20d0d96,96,8711,8942,C0O8754C6O8754C11O8727C16O8827C22O8827C27O8798C32O8870C35O8895C40O8870C45O8941,,
code-creation,LazyCompile,10,182286,0x144a20d0f2e,77,toggleTraceCategoryState node:internal/process/per_thread:390:34,0x5d8b398cb8,~
code-source-info,0x144a20d0f2e,30,11548,11855,C0O11573C4O11603C10O11639C16O11671C21O11715C26O11716C33O11660C39O11742C44O11763C49O11763C55O11783C61O11816C66O11837C71O11837C76O11854,,
code-creation,LazyCompile,10,182337,0x144a20d10de,42,setupPerfHooks node:internal/bootstrap/pre_execution:283:24,0x144a20c4410,~
code-source-info,0x144a20d10de,96,8969,9092,C0O8977C6O8977C11O9013C16O9014C20O9038C26O9038C31O9068C36O9069C41O9091,,
code-creation,LazyCompile,10,182394,0x144a20d125e,42,refreshTimeOrigin node:internal/perf/performance:181:27,0x1722ff2b218,~
script-source,73,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('name');\x0d\n  }\x0d\n  name = `${name}`;\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('type');\x0d\n  }\x0d\n  type = `${type}`;\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x144a20d125e,73,4040,4203,C0O4048C7O4069C10O4081C25O4168C28O4168C35O4048C41O4202,,
code-creation,LazyCompile,10,182720,0x144a20d1986,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x22ee8ce2118,~
script-source,46,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x144a20d1986,46,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,182819,0x144a20d1bf6,62,setupInspectorHooks node:internal/bootstrap/pre_execution:288:29,0x144a20c4460,~
code-source-info,0x144a20d1bf6,96,9124,9690,C0O9473C6O9477C11O9502C17O9571C23O9571C28O9539C33O9554C38O9618C44O9618C49O9646C54O9647C61O9689,,
code-creation,Eval,10,183025,0x144a20d1fa6,5, node:internal/inspector_async_hook:1:1,0x144a20d1df0,~
script-source,97,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x144a20d1fa6,97,0,2048,C0O0C4O2048,,
code-creation,Function,10,183163,0x144a20d21c6,79, node:internal/inspector_async_hook:1:1,0x144a20d1f20,~
code-source-info,0x144a20d21c6,97,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,183305,0x144a20d282e,69,setupWarningHandler node:internal/bootstrap/pre_execution:142:29,0x144a20c40a0,~
code-source-info,0x144a20d282e,96,4625,4830,C0O4663C6O4663C11O4646C16O4703C24O4707C33O4752C38O4756C45O4773C50O4789C53O4797C61O4797C68O4829,,
code-creation,LazyCompile,10,183437,0x144a20d298e,20,addListener node:events:618:58,0x30f43b2ba38,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x144a20d298e,23,18854,18928,C0O18876C14O18883C19O18925,,
code-creation,LazyCompile,10,185268,0x144a20d5056,378,_addListener node:events:555:22,0x30f43b2b998,~
code-source-info,0x144a20d
code-creation,LazyCompile,10,185364,0x144a20d5366,15,checkListener node:events:258:23,0x30f43b2b2f8,~
code-source-info,0x144a20d5366,23,7884,7942,C0O7900C8O7900C14O7941,,
code-creation,LazyCompile,10,185402,0x144a20d5456,30, node:internal/validators:236:42,0x1424f57d308,~
code-source-info,0x144a20d5456,15,7461,7580,C0O7483C6O7521C22O7527C27O7521C29O7579,,
code-creation,LazyCompile,10,185522,0x144a20d56d6,380,emit node:events:475:44,0x30f43b2b8d8,~
code-source-info,0x144a20d56d
code-creation,LazyCompile,10,185660,0x144a20d5a7e,172,startListeningIfSignal node:internal/process/signal:22:32,0x1424f57dca8,~
script-source,93,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x144a20d5a7e,93,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,185789,0x144a20d5e3e,19,isSignal node:internal/process/signal:17:18,0x1424f57daf0,~
code-source-info,0x144a20d5e3e,93,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,185856,0x144a20d6076,156,setupFetch node:internal/bootstrap/pre_execution:153:20,0x144a20c40f0,~
code-source-info,0x144a20d6076,96,4888,5357,C0O4896C8O4901C14O4948C15O4955C16O4966C24O4966C28O5020C34O5020C39O5063C46O5079C52O5107C57O5063C62O5118C69O5134C75O5165C80O5118C85O5179C92O5195C98O5225C103O5179C108O5238C115O5254C121O5284C126O5238C131O5297C138O5313C144O5344C149O5297C155O5356,,
new,MemoryChunk,0x1fd14900000,262144
code-creation,Function,11,186000,0x1fd14903060,572,getOptionValue node:internal/options:39:24,0x25dd5bfdb40,^
code-source-info,0x1fd14903060,91,940,1190,,,
code-creation,Function,11,186029,0x1fd14903300,216,isPathSeparator node:path:52:25,0x22ee8cccf90,^
code-source-info,0x1fd14903300,41,1794,1876,,,
code-creation,Function,11,186085,0x1fd14903440,3076,normalizeString node:path:66:25,0x22ee8ccd458,^
code-source-info,0x1fd14903440,41,2226,4212,,,
code-creation,LazyCompile,10,186172,0x144a20d6886,268,setupWebCrypto node:internal/bootstrap/pre_execution:170:24,0x144a20c4140,~
code-source-info,0x144a20d6886,96,5490,6624,C0O5490C8O5498C13O5510C18O5517C23O5527C33O5562C39O5562C45O5620C46O5627C47O5642C48O5642C50O5656C61O5677C71O5723C102O5723C108O5656C113O6000C121O6004C126O6029C132O6049C146O6063C150O6059C152O6106C163O6127C177O6251C185O6106C190O6272C201O6293C215O6420C223O6272C228O6444C239O6465C253O6595C261O6444C267O6623,,
code-creation,LazyCompile,10,186269,0x144a20d6b06,5,get node:internal/bootstrap/node:135:6,0x1424f554a28,~
script-source,10,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `node::RunBootstrapping()` in `src/node.cc`\x2C and is\x0d\n// responsible for setting up node.js core before executing main scripts\x0d\n// under `lib/internal/main/`.\x0d\n//\x0d\n// This file is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/bootstrap/pre_execution.js` or in main scripts. The majority\x0d\n// of the code here focuses on setting up the global proxy and the process\x0d\n// object in a synchronous manner.\x0d\n// As special caution is given to the performance of the startup process\x2C\x0d\n// many dependencies are invoked lazily.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: to save copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/bootstrap/loaders.js`: to setup internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `NativeModule`.\x0d\n//\x0d\n// This file is run to bootstrap both the main thread and the worker threads.\x0d\n// After this file is run\x2C certain properties are setup according to the\x0d\n// configuration of the Node.js instance using the files in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/bootstrap/pre_execution.js` depending on the runtime states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nsetupPrepareStackTrace();\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFill\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPreventExtensions\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  ReflectSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst nativeModule = internalBinding('native_module');\x0d\n\x0d\n// TODO(@jasnell): Once this has gone through one full major\x0d\n// release cycle\x2C remove the Proxy and setter and update the\x0d\n// getter to either return a read-only object or always return\x0d\n// a freshly parsed version of nativeModule.config.\x0d\n\x0d\nconst deprecationHandler = {\x0d\n  warned: false\x2C\x0d\n  message: 'Setting process.config is deprecated. ' +\x0d\n           'In the future the property will be read-only.'\x2C\x0d\n  code: 'DEP0150'\x2C\x0d\n  maybeWarn() {\x0d\n    if (!this.warned) {\x0d\n      process.emitWarning(this.message\x2C {\x0d\n        type: 'DeprecationWarning'\x2C\x0d\n        code: this.code\x0d\n      });\x0d\n      this.warned = true;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C key\x2C descriptor) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectDefineProperty(target\x2C key\x2C descriptor);\x0d\n  }\x2C\x0d\n\x0d\n  deleteProperty(target\x2C key) {\x0d\n    this.maybeWarn();\x0d\n    delete target[key];\x0d\n  }\x2C\x0d\n\x0d\n  preventExtensions(target) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectPreventExtensions(target);\x0d\n  }\x2C\x0d\n\x0d\n  set(target\x2C key\x2C value) {\x0d\n    this.maybeWarn();\x0d\n    return ReflectSet(target\x2C key\x2C value);\x0d\n  }\x2C\x0d\n\x0d\n  get(target\x2C key\x2C receiver) {\x0d\n    const val = ReflectGet(target\x2C key\x2C receiver);\x0d\n    if (val != null && typeof val === 'object') {\x0d\n      // eslint-disable-next-line node-core/prefer-primordials\x0d\n      return new Proxy(val\x2C deprecationHandler);\x0d\n    }\x0d\n    return val;\x0d\n  }\x2C\x0d\n\x0d\n  setPrototypeOf(target\x2C proto) {\x0d\n    this.maybeWarn();\x0d\n    return ObjectSetPrototypeOf(target\x2C proto);\x0d\n  }\x0d\n};\x0d\n\x0d\n// eslint-disable-next-line node-core/prefer-primordials\x0d\nlet processConfig = new Proxy(\x0d\n  JSONParse(nativeModule.config)\x2C\x0d\n  deprecationHandler);\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return processConfig; }\x2C\x0d\n  set(value) {\x0d\n    deprecationHandler.maybeWarn();\x0d\n    processConfig = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n\x0d\n  process.getActiveResourcesInfo = function() {\x0d\n    const timerCounts = internalTimers.getTimerCounts();\x0d\n    return ArrayPrototypeConcat(\x0d\n      rawMethods._getActiveRequestsInfo()\x2C\x0d\n      rawMethods._getActiveHandlesInfo()\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.timeoutCount)\x2C 'Timeout')\x2C\x0d\n      ArrayPrototypeFill(new Array(timerCounts.immediateCount)\x2C 'Immediate'));\x0d\n  };\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n  queueMicrotask\x0d\n} = require('internal/process/task_queues');\x0d\n\x0d\nif (!config.noBrowserGlobals) {\x0d\n  // Override global console from the one provided by the VM\x0d\n  // to the one implemented by Node.js\x0d\n  // https://console.spec.whatwg.org/#console-namespace\x0d\n  exposeNamespace(globalThis\x2C 'console'\x2C\x0d\n                  createGlobalConsole(globalThis.console));\x0d\n\x0d\n  const { URL\x2C URLSearchParams } = require('internal/url');\x0d\n  // https://url.spec.whatwg.org/#url\x0d\n  exposeInterface(globalThis\x2C 'URL'\x2C URL);\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams\x0d\n  exposeInterface(globalThis\x2C 'URLSearchParams'\x2C URLSearchParams);\x0d\n\x0d\n  const {\x0d\n    TextEncoder\x2C TextDecoder\x0d\n  } = require('internal/encoding');\x0d\n  // https://encoding.spec.whatwg.org/#textencoder\x0d\n  exposeInterface(globalThis\x2C 'TextEncoder'\x2C TextEncoder);\x0d\n  // https://encoding.spec.whatwg.org/#textdecoder\x0d\n  exposeInterface(globalThis\x2C 'TextDecoder'\x2C TextDecoder);\x0d\n\x0d\n  const {\x0d\n    AbortController\x2C\x0d\n    AbortSignal\x2C\x0d\n  } = require('internal/abort_controller');\x0d\n  exposeInterface(globalThis\x2C 'AbortController'\x2C AbortController);\x0d\n  exposeInterface(globalThis\x2C 'AbortSignal'\x2C AbortSignal);\x0d\n\x0d\n  const {\x0d\n    EventTarget\x2C\x0d\n    Event\x2C\x0d\n  } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'EventTarget'\x2C EventTarget);\x0d\n  exposeInterface(globalThis\x2C 'Event'\x2C Event);\x0d\n  const {\x0d\n    MessageChannel\x2C\x0d\n    MessagePort\x2C\x0d\n    MessageEvent\x2C\x0d\n  } = require('internal/worker/io');\x0d\n  exposeInterface(globalThis\x2C 'MessageChannel'\x2C MessageChannel);\x0d\n  exposeInterface(globalThis\x2C 'MessagePort'\x2C MessagePort);\x0d\n  exposeInterface(globalThis\x2C 'MessageEvent'\x2C MessageEvent);\x0d\n\x0d\n  // https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope\x0d\n  const timers = require('timers');\x0d\n  defineOperation(globalThis\x2C 'clearInterval'\x2C timers.clearInterval);\x0d\n  defineOperation(globalThis\x2C 'clearTimeout'\x2C timers.clearTimeout);\x0d\n  defineOperation(globalThis\x2C 'setInterval'\x2C timers.setInterval);\x0d\n  defineOperation(globalThis\x2C 'setTimeout'\x2C timers.setTimeout);\x0d\n\x0d\n  defineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\x0d\n\x0d\n  // https://www.w3.org/TR/hr-time-2/#the-performance-attribute\x0d\n  defineReplacableAttribute(globalThis\x2C 'performance'\x2C\x0d\n                            require('perf_hooks').performance);\x0d\n\x0d\n  // Non-standard extensions:\x0d\n  defineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\n  defineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n}\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because snapshot is built without code cache.\x0d\n  // TODO(joyeecheung): https://github.com/nodejs/node/issues/31074\x0d\n  // Make it possible to build snapshot with code cache\x0d\n  get cached_builtins() {\x0d\n    return nativeModule.hasCachedBuiltins();\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n// Preload modules so that they are included in the builtin snapshot.\x0d\nrequire('fs');\x0d\nrequire('v8');\x0d\nrequire('vm');\x0d\nrequire('url');\x0d\nrequire('internal/options');\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x0d\n  });\x0d\n  // Make process globally available to users by putting it on the global proxy\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    value: process\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n    atob\x2C\x0d\n    btoa\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n  delete bufferBinding.zeroFill;\x0d\n\x0d\n  ObjectDefineProperties(globalThis\x2C {\x0d\n    'Buffer': {\x0d\n      value: Buffer\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'atob': {\x0d\n      value: atob\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n    'btoa': {\x0d\n      value: btoa\x2C\x0d\n      enumerable: false\x2C\x0d\n      writable: true\x2C\x0d\n      configurable: true\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction createGlobalConsole(consoleFromVM) {\x0d\n  const consoleFromNode =\x0d\n    require('internal/console/global');\x0d\n  if (config.hasInspector) {\x0d\n    const inspector = require('internal/util/inspector');\x0d\n    // This will be exposed by `require('inspector').console` later.\x0d\n    inspector.consoleFromVM = consoleFromVM;\x0d\n    // TODO(joyeecheung): postpone this until the first time inspector\x0d\n    // is activated.\x0d\n    inspector.wrapConsole(consoleFromNode\x2C consoleFromVM);\x0d\n    const { setConsoleExtensionInstaller } = internalBinding('inspector');\x0d\n    // Setup inspector command line API.\x0d\n    setConsoleExtensionInstaller(inspector.installConsoleExtensions);\x0d\n  }\x0d\n  return consoleFromNode;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#Replaceable\x0d\nfunction defineReplacableAttribute(target\x2C name\x2C value) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x144a20d6b06,10,4267,4295,C0O4272C4O4293,,
tick,0x7ff651b40a74,187235,0,0x0,3,0x7ff652173fe0,0x144a20d6893,0x144a20c64b0,0x144a20c2065
code-creation,LazyCompile,10,187333,0x144a20d7c76,52,get node:internal/bootstrap/node:112:6,0x1424f554988,~
code-source-info,0x144a20d7c76,10,3630,3901,C0O3673C14O3673C20O3713C29O3830C35O3852C43O3837C48O3872C49O3885C51O3896,,
code-creation,LazyCompile,10,187431,0x144a20d7e9e,75,setupDebugEnv node:internal/bootstrap/pre_execution:249:23,0x144a20c42d0,~
code-source-info,0x144a20d7e9e,96,7933,8148,C0O7941C6O7941C11O7974C19O8002C24O8006C29O7975C34O8022C42O8026C48O8071C54O8071C59O8108C64O8121C69O8122C74O8147,,
code-creation,LazyCompile,10,187537,0x144a20d82d6,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x30f43b219f0,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x144a20d82d6,22,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
code-creation,LazyCompile,10,187774,0x144a20d88de,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:228:40,0x144a20c4208,~
code-source-info,0x144a20d88de,96,7477,7671,C0O7485C8O7490C14O7531C15O7538C16O7574C22O7574C27O7555C32O7626C38O7660C43O7660C48O7670,,
code-creation,LazyCompile,10,187831,0x144a20d8af6,62,initializeReport node:internal/bootstrap/pre_execution:238:26,0x144a20c4258,~
code-source-info,0x144a20d8af6,96,7700,7907,C0O7700C8O7727C16O7727C21O7716C27O7766C42O7787C47O7861C55O7766C61O7906,,
code-creation,Eval,10,188038,0x144a20d90a6,5, node:internal/process/report:1:1,0x144a20d8eb0,~
script-source,98,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x144a20d90a6,98,0,2666,C0O0C4O2666,,
code-creation,Function,10,188213,0x144a20d9bb6,306, node:internal/process/report:1:1,0x144a20d9020,~
code-source-info,0x144a20d9bb6,98,0,2666,C0O0C48O45C51O45C56O71C61O26C67O174C70O174C75O91C81O111C87O130C93O153C99O218C102O218C106O218C108O257C114O302C119O307C127O709C281O2611C288O2633C294O2654C300O2626C305O2665,,
code-creation,LazyCompile,10,188452,0x144a20dba6e,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:257:40,0x144a20c4320,~
code-source-info,0x144a20dba6e,96,8252,8352,C0O8289C6O8289C11O8268C16O8330C20O8351,,
code-creation,LazyCompile,10,188511,0x144a20dbb76,57,addSignalHandler node:internal/process/report:98:26,0x144a20d90d8,~
code-source-info,0x144a20dbb76,98,2241,2394,C0O2252C5O2259C10O2259C16O2290C22O2326C27O2335C32O2335C38O2355C41O2363C49O2363C56O2393,,
code-creation,LazyCompile,10,188571,0x144a20dc13e,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:263:46,0x144a20c4370,~
code-source-info,0x144a20dc13e,96,8401,8675,C0O8401C8O8424C18O8424C23O8470C25O8488C26O8495C27O8501C35O8501C40O8531C45O8532C50O8593C58O8593C63O8571C69O8613C74O8621C79O8624C84O8621C91O8674,,
code-creation,LazyCompile,10,188641,0x144a20dc3ce,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:393:37,0x144a20c4540,~
code-source-info,0x144a20dc3ce,96,12545,13091,C0O12553C3O12565C8O12569C14O12608C20O12608C25O12654C33O12677C38O12681C46O12654C52O12708C53O12718C57O12708C61O12802C64O12817C73O12878C76O12886C81O12890C90O12938C93O12953C102O12997C108O12997C113O13021C118O13022C124O13062C127O13077C132O13062C137O13090,,
code-creation,LazyCompile,10,188718,0x144a20dc55e,21,assert node:internal/assert:11:16,0x30f43b209c8,~
script-source,21,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x144a20dc55e,21,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,189330,0x144a20dd3d6,5, node:child_process:1:1,0x144a20dcf00,~
script-source,99,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  } else if (!ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  } else {\x0d\n    options = { ...options };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args = []\x2C options\x2C callback) {\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object') {\x0d\n    if (!ArrayIsArray(args)) {\x0d\n      callback = options;\x0d\n      options = args;\x0d\n      args = [];\x0d\n    }\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = {};\x0d\n    args = [];\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C args);\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = {};\x0d\n  } else if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n  }\x0d\n\x0d\n  if (callback && typeof callback !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('callback'\x2C callback);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\x0d\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\x0d\n        killed: child.killed || killed\x2C\x0d\n        signal: signal\x0d\n      });\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    err = genericNodeError(msg\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x144a20dd3d6,99,0,25421,C0O0C4O25421,,
code-creation,Function,10,190647,0x144a20dde36,748, node:child_process:1:1,0x144a20dd350,~
code-source-info,0x144a20dde
code-creation,LazyCompile,10,190925,0x144a20e0406,82,debuglog node:internal/util/debuglog:71:18,0x30f43b21d40,~
code-source-info,0x144a20e0406,22,2302,3328,C0O2302C28O2432C32O2432C34O2847C35O2847C37O2870C41O2870C43O2963C48O3169C58O3190C63O3216C74O3169C79O3311C81O3325,,
code-creation,Eval,10,191902,0x144a20e33ee,5, node:internal/child_process:1:1,0x144a20e2cf0,~
script-source,100,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x144a20e33ee,100,0,32650,C0O0C4O32650,,
code-creation,Function,10,193477,0x144a20e4a0e,1265, node:internal/child_process:1:1,0x144a20e3368,~
code-source-info,0x144a20e4a0e
code-creation,Function,10,193665,0x144a20e5186,35,<instance_members_initializer> node:internal/child_process:525:3,0x144a20e40d0,~
code-source-info,0x144a20e5186,100,14231,14290,C3O14242C16O14259C26O14285C34O14290,,
code-creation,Eval,10,194928,0x144a20e9476,5, node:net:1:1,0x144a20e8c78,~
script-source,101,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive && enable !== this[kSetKeepAlive]) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && handle.setNoDelay) {\x0d\n    handle.setNoDelay(true);\x0d\n  }\x0d\n\x0d\n  if (self.keepAlive && self.setKeepAlive) {\x0d\n    handle.setKeepAlive(true\x2C handle.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x144a20e9476,101,0,51035,C0O0C4O51035,,
code-creation,Function,10,197520,0x144a20ec356,2547, node:net:1:1,0x144a20e93f0,~
code-source-info,0x144a20ec356,101,0,51035,C0O0C417O1183C423O1200C429O1226C435O1238C441O1249C447O1265C453O1284C459O1309C464O1334C469O1384C475O1384C479O1384C481O1419C487O1419C491O1419C493O1451C499O1451C504O1484C518O1485C524O1451C526O1618C532O1618C537O1543C543O1552C548O1563C553O1574C559O1599C565O1659C571O1659C575O1659C577O1748C580O1748C585O1699C591O1717C597O1731C603O1793C609O1793C614O1782C620O1841C623O1841C628O1821C634O1892C637O1892C642O1875C648O1992C651O1992C656O1936C662O1944C668O1974C674O2092C677O2092C682O2033C688O2042C694O2073C700O2228C706O2228C711O2134C717O2149C728O2191C734O2208C740O2438C746O2438C751O2273C757O2291C763O2308C769O2325C774O2346C780O2358C785O2375C790O2396C796O2408C802O2422C808O2856C814O2856C819O2856C824O2505C830O2538C836O2565C842O2593C848O2619C854O2648C860O2680C866O2709C872O2733C878O2760C884O2779C890O2805C896O2826C902O2910C908O2910C913O2893C919O3073C925O3073C930O2954C936O2978C942O2999C948O3017C954O3036C960O3053C966O3134C969O3134C973O3134C975O3236C981O3236C986O3176C992O3209C998O3319C999O3319C1001O3333C1002O3333C1004O3343C1005O3343C1007O3359C1008O3359C1010O3402C1016O3402C1021O3385C1027O3443C1033O3443C1038O3430C1044O3500C1046O3500C1048O3538C1050O3538C1052O3565C1055O3573C1062O3582C1065O3565C1067O3611C1071O3611C1073O7211C1076O7211C1080O7211C1082O7256C1085O7256C1089O7256C1091O7302C1094O7302C1098O7302C1100O7348C1103O7348C1107O7348C1109O7408C1112O7408C1116O7408C1118O12064C1121O12092C1129O12110C1134O12117C1139O12064C1144O12130C1150O12166C1155O12130C1160O12209C1163O12216C1172O12238C1176O12474C1179O12481C1188O12498C1192O14068C1195O14075C1202O14096C1206O14121C1209O14128C1218O14149C1222O14677C1225O14684C1234O14705C1238O15106C1241O15113C1250O15136C1254O15642C1257O15649C1266O15667C1270O15722C1276O15750C1290O15786C1298O15722C1303O15841C1309O15869C1323O15896C1331O15841C1336O15988C1342O16016C1356O16051C1364O15988C1369O16388C1375O16416C1389O16451C1397O16388C1402O16544C1408O16572C1413O16583C1419O16607C1430O16544C1435O16988C1438O16995C1447O17011C1451O17258C1454O17265C1463O17279C1467O17480C1470O17487C1479O17503C1483O17857C1486O17864C1495O17881C1499O18080C1502O18087C1511O18102C1515O18456C1518O18463C1527O18485C1531O18649C1534O18656C1543O18675C1547O19674C1550O19681C1559O19704C1563O20184C1571O20184C1576O20308C1584O20308C1594O20411C1602O20411C1612O20511C1620O20511C1630O20607C1633O20614C1642O20637C1650O20931C1658O20931C1668O21034C1676O21034C1686O21128C1689O21135C1694O21145C1698O21163C1706O21219C1709O21226C1718O21250C1726O22049C1729O22056C1738O22074C1746O22153C1749O22160C1758O22177C1766O22428C1774O22428C1784O22572C1792O22572C1802O26164C1805O26171C1814O26189C1822O30744C1825O30751C1834O30765C1842O30972C1845O30979C1854O30995C1862O34520C1865O34548C1877O34572C1886O34520C1896O34585C1902O34585C1912O38706C1915O38713C1926O38732C1934O40250C1937O40257C1950O40274C1958O44343C1964O44371C1985O44405C1997O44343C2007O44503C2010O44510C2023O44528C2031O45846C2034O45853C2047O45878C2055O46675C2058O46682C2071O46698C2079O47609C2082O47616C2095O47646C2103O48146C2106O48153C2118O48176C2131O48200C2139O48533C2145O48558C2166O48583C2178O48624C2190O48533C2200O48674C2206O48702C2223O48729C2235O48765C2247O48674C2257O48810C2260O48817C2273O48840C2281O49095C2284O49102C2297O49116C2305O49228C2308O49235C2321O49251C2329O49368C2331O49424C2332O49424C2334O49433C2345O49457C2346O49457C2348O49483C2357O50213C2362O50495C2372O50538C2382O50577C2392O50595C2402O50863C2412O50893C2422O50905C2432O50928C2442O50945C2452O50964C2462O50975C2472O50986C2482O51005C2537O50510C2546O51034,,
code-creation,Eval,10,198317,0x144a20f1cf6,5, node:internal/net:1:1,0x144a20f1b30,~
script-source,102,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x144a20f1cf6,102,0,1818,C0O0C4O1818,,
code-creation,Function,10,198529,0x144a20f20e6,617, node:internal/net:1:1,0x144a20f1c70,~
code-source-info,0x144a20f20e6,102,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,199023,0x144a20f3aee,5, node:internal/dtrace:1:1,0x144a20f39a8,~
script-source,103,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x144a20f3aee,103,0,589,C0O0C4O589,,
code-creation,Function,10,199094,0x144a20f3fc6,140, node:internal/dtrace:1:1,0x144a20f3a68,~
code-source-info,0x144a20f3fc6,103,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,199451,0x144a20f4f8e,34,protoGetter node:net:740:21,0x144a20e98b8,~
code-source-info,0x144a20f4f8e,101,20034,20180,C0O20056C8O20084C13O20095C20O20162C27O20056C33O20179,,
code-creation,Eval,10,200251,0x144a20fa31e,5, node:dgram:1:1,0x144a20f9db8,~
script-source,104,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x144a20fa31e,104,0,28325,C0O0C4O28325,,
code-creation,Function,10,201745,0x144a20fc22e,1501, node:dgram:1:1,0x144a20fa298,~
code-source-info,0x144a20fc22e
tick,0x7ff651b3ba6a,202048,1,0x7ff651bfe150,3,0x7ff6525458c0,0x144a20c2fec,0x144a20c22dd,0x144a20e4c08,0x144a20c300d,0x144a20c22dd,0x144a20de07a,0x144a20c300d,0x144a20c22dd,0x144a20dc43a,0x144a20c6502,0x144a20c2065
code-creation,Eval,10,202619,0x144a20ff636,5, node:internal/dgram:1:1,0x144a20ff430,~
script-source,105,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x144a20ff636,105,0,1941,C0O0C4O1941,,
code-creation,Function,10,202919,0x144a20ff8fe,196, node:internal/dgram:1:1,0x144a20ff5b0,~
code-source-info,0x144a20ff8fe,105,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
new,MemoryChunk,0x170e11c0000,262144
code-creation,LazyCompile,10,203868,0x170e11c3406,152,deprecate node:internal/util:96:19,0x30f43b05aa8,~
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x0d\n  });\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEnumerableProperty\x2C\x0d\n};\x0d\n
code-source-info,0x170e11c3406,16,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
code-creation,Function,11,205252,0x1fd149040c0,1344,deprecate node:internal/util:96:19,0x30f43b05aa8,^
code-source-info,0x1fd149040c0,16,2503,3720,,,
code-creation,Function,11,205305,0x1fd14904660,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x1424f54fdc0,^
code-source-info,0x1fd14904660,9,10647,11000,,,
code-creation,Function,11,205333,0x1fd14904960,548,internalBinding node:internal/bootstrap/loaders:164:45,0x1424f54f840,^
code-source-info,0x1fd14904960,9,5278,5523,,,
code-creation,Function,11,205379,0x1fd14904c00,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x1424f54fcf0,^
code-source-info,0x1fd14904c00,9,9827,10410,,,
code-creation,Eval,10,205972,0x170e11c5ad6,5, node:internal/socket_list:1:1,0x170e11c5980,~
script-source,106,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x170e11c5ad6,106,0,2813,C0O0C4O2813,,
code-creation,Function,10,206193,0x170e11c6116,126, node:internal/socket_list:1:1,0x170e11c5a50,~
code-source-info,0x170e11c6116,106,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
code-creation,LazyCompile,10,206526,0x170e11c6cb6,14,customPromiseExecFunction node:child_process:230:35,0x144a20dd9b8,~
code-source-info,0x170e11c6cb6,99,6803,7183,C0O6803C9O6818C13O7180,,
code-creation,LazyCompile,10,206629,0x170e11c8cd6,129,_forkChild node:child_process:169:20,0x144a20dd458,~
code-source-info,0x170e11c8cd6,99,5058,5540,C0O5058C8O5122C19O5131C22O5145C29O5122C35O5156C40O5156C45O5171C50O5171C54O5199C72O5199C77O5199C79O5247C84O5255C97O5255C103O5390C108O5398C121O5398C128O5539,,
code-creation,LazyCompile,10,213474,0x170e11c96d6,396,setupChannel node:internal/child_process:571:22,0x144a20e36a0,~
code-source-info,0x170e11c96d
code-creation,LazyCompile,10,213675,0x170e11cbeae,72,Control node:internal/child_process:529:14,0x144a20e3ed8,~
code-source-info,0x170e11cbeae,100,14308,14402,C3O14325C11O14325C40O14339C48O14353C52O14369C59O14374C64O14392C71O14401,,
code-creation,LazyCompile,10,213775,0x170e11cbfe6,21,EventEmitter node:events:208:22,0x30f43b2b1b0,~
code-source-info,0x170e11cbfe6,23,6474,6524,C0O6486C3O6499C8O6504C13O6504C20O6523,,
code-creation,LazyCompile,10,213872,0x170e11cc12e,149,EventEmitter.init node:events:327:29,0x30f43b2b5a8,~
code-source-info,0x170e11cc12e,23,10006,10614,C0O10029C6O10066C13O10078C16O10078C21O10104C25O10074C30O10121C32O10136C37O10136C41O10134C45O10161C46O10179C50O10220C60O10213C64O10255C71O10263C80O10291C85O10312C93O10291C98O10366C100O10371C105O10383C108O10396C113O10383C117O10381C123O10556C125O10561C131O10586C138O10596C140O10595C143O10571C148O10613,,
code-creation,Eval,10,214313,0x170e11ccc76,5, node:internal/child_process/serialization:1:1,0x170e11cc990,~
script-source,107,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x170e11ccc76,107,0,4335,C0O0C4O4335,,
code-creation,Function,10,214723,0x170e11cd4de,369, node:internal/child_process/serialization:1:1,0x170e11ccbf0,~
code-source-info,0x170e11cd4de,107,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
code-creation,LazyCompile,10,215128,0x170e11ce17e,23,initMessageChannel node:internal/child_process/serialization:100:21,0x170e11cced8,~
code-source-info,0x170e11ce17e,107,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
code-creation,LazyCompile,10,215278,0x170e11ce7d6,19,_getMaxListeners node:events:404:26,0x30f43b2b778,~
code-source-info,0x170e11ce7d6,23,12272,12400,C0O12293C6O12327C9O12347C13O12367C14O12383C18O12397,,
code-creation,LazyCompile,10,215318,0x170e11ce8ce,5,get node:events:264:16,0x30f43b2b398,~
code-source-info,0x170e11ce8ce,23,8043,8085,C0O8053C4O8080,,
code-creation,LazyCompile,10,215428,0x170e11cec2e,322,arrayClone node:events:879:20,0x30f43b2c040,~
code-source-info,0x170e11cec2e,23,26079,26544,C0O26221C42O26244C50O26255C62O26263C71O26268C72O26282C80O26293C92O26301C104O26309C113O26314C114O26328C122O26339C134O26347C146O26355C158O26363C167O26368C168O26382C176O26393C188O26401C200O26409C212O26417C224O26425C233O26430C234O26444C242O26455C254O26463C266O26471C278O26479C290O26487C302O26495C311O26500C312O26509C317O26516C321O26541,,
code-creation,LazyCompile,10,215604,0x170e11ceefe,22, node:internal/child_process:706:36,0x170e11c91f0,~
code-source-info,0x170e11ceefe,100,20095,20508,C0O20107C5O20115C15O20115C21O20507,,
code-creation,LazyCompile,10,215717,0x170e11cf19e,368,nextTick node:internal/process/task_queues:104:18,0x5d8b39aa50,~
script-source,32,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0x170e11cf19e
code-creation,LazyCompile,10,216045,0x170e11cfa0e,21, node:internal/validators:222:42,0x1424f57d268,~
code-source-info,0x170e11cfa0e,15,7036,7140,C0O7055C6O7096C13O7102C18O7096C20O7139,,
code-creation,LazyCompile,10,216089,0x170e11cfb0e,15,isEmpty node:internal/fixed_queue:95:10,0x5d8b39fc80,~
script-source,34,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x170e11cfb0e,34,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,216309,0x170e11cffc6,13,isEmpty node:internal/fixed_queue:67:10,0x5d8b39fa10,~
code-source-info,0x170e11cffc6,34,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,216345,0x170e11d00b6,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x5d8b39a960,~
code-source-info,0x170e11d00b6,32,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,216416,0x170e11d01ae,23,newAsyncId node:internal/async_hooks:417:20,0x1424f578838,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst promiseHooks = require('internal/promise_hooks');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const destroyed = { destroyed: false };\x0d\n  promise[destroyedSymbol] = destroyed;\x0d\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x170e11d01ae,13,14929,14982,C0O14937C7O14962C16O14977C22O14979,,
tick,0x7ffd55a5b8aa,217585,0,0x0,3,0x7ff652173fe0,0x170e11cf29a,0x170e11cef0d,0x144a20d5827,0x144a20d50a3,0x144a20d299c,0x170e11c8d37,0x144a20dc444,0x144a20c6502,0x144a20c2065
code-creation,LazyCompile,10,217756,0x170e11d168e,35,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x1424f5788d8,~
code-source-info,0x170e11d168e,13,15404,15667,C0O15442C7O15458C9O15457C13O15553C14O15579C19O15589C26O15612C28O15611C31O15631C32O15635C34O15664,,
code-creation,LazyCompile,10,217874,0x170e11d179e,13,initHooksExist node:internal/async_hooks:479:24,0x1424f578ac8,~
code-source-info,0x170e11d179e,13,16671,16705,C0O16679C5O16695C8O16686C12O16702,,
code-creation,LazyCompile,10,217933,0x170e11d1886,16,hasHooks node:internal/async_hooks:471:18,0x1424f578a28,~
code-source-info,0x170e11d1886,13,16531,16579,C0O16542C7O16566C12O16572C15O16576,,
code-creation,LazyCompile,10,217997,0x170e11d1996,59,push node:internal/fixed_queue:99:7,0x5d8b39fcd0,~
code-source-info,0x170e11d1996,34,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,LazyCompile,10,218041,0x170e11d1ade,24,isFull node:internal/fixed_queue:71:9,0x5d8b39fa60,~
code-source-info,0x170e11d1ade,34,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,218080,0x170e11d1bee,37,push node:internal/fixed_queue:75:7,0x5d8b39fac8,~
code-source-info,0x170e11d1bee,34,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,218171,0x170e11d1d0e,30,onNewListener node:child_process:175:51,0x170e11c8b90,~
code-source-info,0x170e11d1d0e,99,5295,5384,C0O5309C2O5318C9O5340C14O5358C19O5366C24O5366C29O5383,,
code-creation,LazyCompile,10,218400,0x170e11d205e,455,initializePolicy node:internal/bootstrap/pre_execution:421:26,0x144a20c45e0,~
code-source-info,0x170e11d205e,96,13401,15246,C0O13436C10O13436C15O13480C17O13511C21O13519C35O13519C41O13646C49O13646C55O13623C60O13638C65O13768C67O13786C75O13790C81O13805C87O13806C94O13847C100O13879C108O13861C116O13938C120O13960C126O13960C132O13938C138O13975C149O13991C153O14006C161O14020C167O14080C175O14080C180O14115C190O14115C197O14191C207O14191C212O14234C214O14288C222O14288C227O14367C235O14367C241O14335C246O14347C251O14417C257O14417C263O14468C269O14468C275O14528C277O14555C279O14579C283O14560C288O14673C290O14689C295O14622C300O14651C305O14716C311O14753C317O14753C322O14795C328O14795C334O14825C340O14845C344O14832C349O14866C356O14914C358O14944C360O14987C366O15009C376O15009C383O14987C389O14588C394O14542C397O15046C401O15074C415O15080C420O15074C421O15166C429O15166C435O15208C441O15232C447O15209C454O15245,,
code-creation,LazyCompile,10,218520,0x170e11d242e,63,initializeClusterIPC node:internal/bootstrap/pre_execution:412:30,0x144a20c4590,~
code-source-info,0x170e11d242e,96,13124,13372,C0O13132C3O13144C10O13148C18O13163C23O13167C29O13206C35O13206C40O13239C45O13239C49O13330C52O13345C62O13371,,
code-creation,LazyCompile,10,218602,0x170e11d259e,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:516:38,0x144a20c4720,~
code-source-info,0x170e11d259e,96,17027,17180,C0O17073C6O17073C11O17043C16O17125C21O17154C26O17179,,
code-creation,Eval,10,218914,0x170e11d2ed6,5, node:internal/source_map/source_map_cache:1:1,0x170e11d2b70,~
script-source,108,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x170e11d2ed6,108,0,7881,C0O0C4O7881,,
code-creation,Function,10,219315,0x170e11d354e,435, node:internal/source_map/source_map_cache:1:1,0x170e11d2e50,~
code-source-info,0x170e11d354e,108,0,7881,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7738C399O7760C405O7778C411O7803C417O7828C423O7852C429O7753C434O7880,,
code-creation,Eval,10,219646,0x170e11d458e,5, node:internal/util/iterable_weak_map:1:1,0x170e11d4340,~
script-source,109,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x170e11d458e,109,0,2042,C0O0C4O2042,,
code-creation,Function,10,219778,0x170e11d4cee,196, node:internal/util/iterable_weak_map:1:1,0x170e11d4508,~
code-source-info,0x170e11d4cee,109,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,219804,0x170e11d4e6e,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x170e11d4818,~
code-source-info,0x170e11d4e6e,109,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,220153,0x170e11d5aa6,5, node:internal/modules/cjs/helpers:1:1,0x170e11d57f0,~
script-source,110,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} referrer\x0d\n * @returns {string}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x170e11d5aa6,110,0,7046,C0O0C4O7046,,
code-creation,Function,10,220517,0x170e11d6026,536, node:internal/modules/cjs/helpers:1:1,0x170e11d5a20,~
code-source-info,0x170e11d6026,110,0,7046,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6877C488O6899C494O6926C500O6944C506O6961C512O6982C518O7006C524O7031C530O6892C535O7045,,
code-creation,LazyCompile,10,220716,0x170e11d6c8e,27,SafeSet node:internal/per_context/primordials:373:16,0x1424f54a230,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x170e11d6c8e,6,11034,11051,C3O11040C7O11046C11O11040C26O11050,,
code-creation,LazyCompile,10,221389,0x170e11d7b16,27,SafeMap node:internal/per_context/primordials:360:16,0x1424f54a0a8,~
code-source-info,0x170e11d7b16,6,10694,10711,C3O10700C7O10706C11O10700C26O10710,,
code-creation,LazyCompile,10,221457,0x170e11d7c0e,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x170e11d4610,~
code-source-info,0x170e11d7c0e,109,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,221532,0x170e11d7f96,27,SafeWeakMap node:internal/per_context/primordials:366:16,0x1424f54a168,~
code-source-info,0x170e11d7f96,6,10871,10888,C3O10877C7O10883C11O10877C26O10887,,
code-creation,LazyCompile,10,221574,0x170e11d809e,27,SafeFinalizationRegistry node:internal/per_context/primordials:387:16,0x1424f54a3b8,~
code-source-info,0x170e11d809e,6,11498,11543,C3O11518C7O11524C11O11518C26O11542,,
code-creation,LazyCompile,10,221745,0x170e11d891e,492,initializeDeprecations node:internal/bootstrap/pre_execution:306:32,0x144a20c44b0,~
code-source-info,0x170e11d891e
code-creation,LazyCompile,10,221891,0x170e11d8ec6,53,initializeWASI node:internal/bootstrap/pre_execution:470:24,0x144a20c4630,~
code-source-info,0x170e11d8ec6,96,15273,15484,C0O15306C6O15306C11O15289C16O15373C21O15377C29O15377C35O15393C37O15425C43O15425C47O15418C52O15483,,
code-creation,LazyCompile,10,221955,0x170e11d90c6,66,initializeCJSLoader node:internal/bootstrap/pre_execution:477:29,0x144a20c4680,~
code-source-info,0x170e11d90c6,96,15516,15839,C0O15542C6O15542C11O15585C16O15590C20O15610C26O15649C31O15656C36O15656C40O15755C51O15777C56O15813C60O15770C65O15838,,
code-creation,Eval,10,222901,0x170e11db016,5, node:internal/modules/cjs/loader:1:1,0x170e11da730,~
script-source,111,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C\x0d\n                             loader.getBaseURL(normalizeReferrerURL(filename))\x2C\x0d\n                             importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x170e11db016,111,0,41761,C0O0C4O41761,,
code-creation,Function,10,224931,0x170e11dcdb6,2547, node:internal/modules/cjs/loader:1:1,0x170e11daf90,~
code-source-info,0x170e11dcdb
code-creation,Eval,10,225560,0x170e11e0d76,5, node:internal/modules/package_json_reader:1:1,0x170e11e0bd0,~
script-source,112,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x170e11e0d76,112,0,1024,C0O0C4O1024,,
code-creation,Function,10,225678,0x170e11e0ec6,113, node:internal/modules/package_json_reader:1:1,0x170e11e0cf0,~
code-source-info,0x170e11e0ec6,112,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,225889,0x170e11e170e,5, node:internal/process/esm_loader:1:1,0x170e11e1518,~
script-source,113,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x170e11e170e,113,0,2982,C0O0C4O2982,,
code-creation,Function,10,226057,0x170e11e19ae,182, node:internal/process/esm_loader:1:1,0x170e11e1688,~
code-source-info,0x170e11e19ae,113,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
code-creation,Eval,10,226539,0x170e11e2cbe,5, node:internal/modules/esm/loader:1:1,0x170e11e2830,~
script-source,114,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst { MessageChannel } = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  ERR_INTERNAL_ASSERTION\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  initializeImportMeta\x0d\n} = require('internal/modules/esm/initialize_import_meta');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  fetchModule\x2C\x0d\n} = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {Function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {Function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  #importMetaInitializer = initializeImportMeta;\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C\x0d\n                             this.getBaseURL(url)\x2C\x0d\n                             importAssertions);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the url to use for the resolution of a given cache key url\x0d\n   * These are not guaranteed to be the same.\x0d\n   *\x0d\n   * In WHATWG HTTP spec for ESM the cache key is the non-I/O bound\x0d\n   * synchronous resolution using only string operations\x0d\n   *   ~= resolveImportMap(new URL(specifier\x2C importerHREF))\x0d\n   *\x0d\n   * The url used for subsequent resolution is the response URL after\x0d\n   * all redirects have been resolved.\x0d\n   *\x0d\n   * https://example.com/foo redirecting to https://example.com/bar\x0d\n   * would have a cache key of https://example.com/foo and baseURL\x0d\n   * of https://example.com/bar\x0d\n   *\x0d\n   * MUST BE SYNCHRONOUS for import.meta initialization\x0d\n   * MUST BE CALLED AFTER receiving the url body due to I/O\x0d\n   * @param {string} url\x0d\n   * @returns {string}\x0d\n   */\x0d\n  getBaseURL(url) {\x0d\n    if (\x0d\n      StringPrototypeStartsWith(url\x2C 'http:') ||\x0d\n      StringPrototypeStartsWith(url\x2C 'https:')\x0d\n    ) {\x0d\n      // The request & response have already settled\x2C so they are in\x0d\n      // fetchModule's cache\x2C in which case\x2C fetchModule returns\x0d\n      // immediately and synchronously\x0d\n      url = fetchModule(new URL(url)\x2C { parentURL: url }).resolvedHREF;\x0d\n      // This should only occur if the module hasn't been fetched yet\x0d\n      if (typeof url !== 'string') {\x0d\n        throw new ERR_INTERNAL_ASSERTION(`Base url for module ${url} not loaded.`);\x0d\n      }\x0d\n    }\x0d\n    return url;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n    if (this.#loaders.length !== 1) {\x0d\n      // We can skip cloning if there are no user provided loaders because\x0d\n      // the Node.js default resolve hook does not use import assertions.\x0d\n      importAssertionsForResolve =\x0d\n        ObjectAssign(ObjectCreate(null)\x2C importAssertions);\x0d\n    }\x0d\n    const { format\x2C url } =\x0d\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const {\x0d\n        format: finalFormat\x2C\x0d\n        source\x2C\x0d\n      } = await this.load(url\x2C {\x0d\n        format\x2C\x0d\n        importAssertions\x2C\x0d\n      });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C url);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<object | object[]>} A list of module export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n        dataUrl ? dataUrl[1] : format\x2C\x0d\n        url);\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const preload = this.#globalPreloaders[i]({\x0d\n        port: insideLoader\x0d\n      });\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload\x2C\x0d\n      // after preload is finished\x2C we disable the ability to replace it\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by\x0d\n      // throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {{ url: string }}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions = ObjectCreate(null)\x0d\n  ) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        importAssertions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof url !== 'string') { // non-strings can be coerced to a url string\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    new URL(url); // Intentionally trigger error if `url` is invalid\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x170e11e2cbe,114,0,18635,C0O0C4O18635,,
code-creation,Function,10,227475,0x170e11e358e,659, node:internal/modules/esm/loader:1:1,0x170e11e2c38,~
code-source-info,0x170e11e358e,114,0,18635,C0O0C122O82C128O82C132O136C138O146C144O163C150O186C156O209C162O235C168O261C174O278C180O295C185O320C191O335C197O359C203O381C209O397C215O427C221O485C227O485C232O466C238O706C244O706C249O732C254O530C260O557C266O582C272O608C278O646C284O675C290O787C296O787C301O749C307O764C313O779C319O869C325O869C330O824C336O845C342O920C348O920C352O920C354O983C360O983C364O983C366O1085C372O1085C377O1041C383O1060C389O1164C395O1164C400O1138C406O1245C412O1245C417O1229C423O1308C429O1308C434O1292C440O1385C446O1385C451O1366C457O1444C463O1444C468O1426C639O18582C646O18551C651O18603C653O18621C658O18634,,
code-creation,Function,10,227545,0x170e11e3a36,154,<instance_members_initializer> node:internal/modules/esm/loader:68:3,0x170e11e30b0,~
code-source-info,0x170e11e3a36,114,1944,2827,C3O1964C17O2126C28O2133C45O2315C56O2322C73O2374C88O2473C95O2473C109O2596C119O2688C126O2688C140O2816C153O2827,,
code-creation,Eval,10,227791,0x170e11e540e,5, node:internal/modules/esm/module_map:1:1,0x170e11e5220,~
script-source,115,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? ObjectCreate(null);\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x170e11e540e,115,0,1487,C0O0C4O1487,,
code-creation,Function,10,227895,0x170e11e5846,175, node:internal/modules/esm/module_map:1:1,0x170e11e5388,~
code-source-info,0x170e11e5846,115,0,1487,C0O0C23O35C26O35C30O35C32O112C35O112C40O88C46O164C52O181C57O221C60O221C65O254C78O255C84O221C86O335C89O335C94O361C99O310C105O397C108O397C113O378C123O510C167O1458C169O1473C174O1486,,
code-creation,Eval,10,228165,0x170e11e62ee,5, node:internal/modules/esm/module_job:1:1,0x170e11e5ff8,~
script-source,116,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAssertions = ObjectCreate(null)\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.importAssertions = importAssertions;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C assertions) => {\x0d\n        const baseURL = this.loader.getBaseURL(url);\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C baseURL\x2C assertions);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import assertions and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x170e11e62ee,116,0,8465,C0O0C4O8465,,
code-creation,Function,10,228570,0x170e11e67e6,343, node:internal/modules/esm/module_job:1:1,0x170e11e6268,~
code-source-info,0x170e11e67e6,116,0,8465,C0O0C88O28C94O51C100O73C106O96C112O119C117O141C123O158C128O183C134O198C139O217C145O243C151O260C157O284C163O306C169O318C175O346C181O371C187O398C193O423C199O494C205O494C210O479C216O560C222O560C227O537C233O625C239O625C244O598C250O690C256O690C260O690C262O743C265O743C267O777C269O777C271O820C272O820C274O852C278O852C280O977C284O977C323O8417C330O8386C335O8436C337O8451C342O8464,,
code-creation,Eval,10,229187,0x170e11e843e,5, node:internal/modules/esm/assert:1:1,0x170e11e8248,~
script-source,117,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = ObjectCreate(null)) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0x170e11e843e,117,0,3734,C0O0C4O3734,,
code-creation,Function,10,229399,0x170e11e8716,201, node:internal/modules/esm/assert:1:1,0x170e11e83b8,~
code-source-info,0x170e11e8716,117,0,3734,C0O0C46O28C51O53C57O80C63O97C68O114C74O191C77O191C82O172C88O356C91O356C96O382C101O237C107O274C113O312C119O486C121O486C123O684C130O722C136O758C142O811C148O843C154O684C156O1280C159O1305C169O1280C174O1280C176O3663C183O3685C189O3709C195O3678C200O3733,,
code-creation,LazyCompile,10,229529,0x170e11e8d26,9, node:internal/modules/esm/assert:43:3,0x170e11e8510,~
code-source-info,0x170e11e8d26,117,1337,1375,C0O1352C2O1356C4O1352C8O1375,,
code-creation,Eval,10,230455,0x170e11ea966,5, node:internal/modules/esm/resolve:1:1,0x170e11ea1a8,~
script-source,118,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: ExportConfig\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type?: PackageType\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap(); /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\nlet experimentalSpecifierResolutionWarned = false;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  let path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    if (!experimentalSpecifierResolutionWarned) {\x0d\n      process.emitWarning(\x0d\n        'The Node.js specifier resolution flag is experimental. It could change or be removed at any time.'\x2C\x0d\n        'ExperimentalWarning');\x0d\n      experimentalSpecifierResolutionWarned = true;\x0d\n    }\x0d\n\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n\x0d\n    // Directory\x0d\n    if (file === undefined) {\x0d\n      file = StringPrototypeEndsWith(path\x2C '/') ?\x0d\n        (resolveDirectoryEntry(resolved) || resolved) : resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n\x0d\n      if (file === resolved) return file;\x0d\n\x0d\n      if (file === undefined) {\x0d\n        throw new ERR_MODULE_NOT_FOUND(\x0d\n          resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    path = file;\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(\x0d\n        patternRegEx\x2C\x0d\n        resolved.href\x2C\x0d\n        () => subpath\x0d\n      )\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      pattern\x2C\x0d\n      false\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolved == null) {\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    if (!pattern) {\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    }\x0d\n\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved != null) {\x0d\n          return { resolved\x2C exact: true };\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(\x0d\n            packageJSONUrl\x2C target\x2C\x0d\n            bestMatchSubpath\x2C bestMatch\x2C\x0d\n            base\x2C pattern\x2C true\x2C\x0d\n            conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier))\x0d\n    return new URL('node:' + specifier);\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:')\x0d\n    return resolved;\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    const parentURL = fileURLToPath(parsedParentURL?.href);\x0d\n\x0d\n    if (\x0d\n      parsedParentURL.protocol === 'http:' ||\x0d\n      parsedParentURL.protocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsed &&\x0d\n          parsed.protocol !== 'https:' &&\x0d\n          parsed.protocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (NativeModule.canBeRequiredByUsers(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  if (\x0d\n    parsed &&\x0d\n    parsed.protocol !== 'file:' &&\x0d\n    parsed.protocol !== 'data:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        parsed.protocol !== 'https:' &&\x0d\n        parsed.protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat(\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ));\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    if (parsed.protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          parsed.protocol === 'https:' ||\x0d\n          parsed.protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) return maybeReturn;\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') return { url: specifier };\x0d\n\x0d\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions\x2C\x0d\n                        isMain ? preserveSymlinksMain : preserveSymlinks);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = async function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x0d\n  ) {\x0d\n    const ret = await $defaultResolve(specifier\x2C context\x2C $defaultResolve);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x0d\n      )\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x170e11ea966,118,0,42310,C0O0C4O42310,,
tick,0x7ff652b1f6d5,233345,1,0x7ff651bfe150,3,0x7ff6525458c0,0x1fd14904e3b,0x1fd149048e5,0x170e11e3702,0x1fd14904f03,0x1fd149048e5,0x170e11e19fc,0x1fd14904f03,0x1fd149048e5,0x170e11dd261,0x1fd14904f03,0x1fd149048e5,0x170e11d90cc,0x144a20c6526,0x144a20c2065
code-creation,Function,10,233413,0x170e11eba96,1191, node:internal/modules/esm/resolve:1:1,0x170e11ea8e0,~
code-source-info,0x170e11eba
code-creation,Eval,10,234117,0x170e11ef556,5, node:internal/modules/esm/get_format:1:1,0x170e11ef2d0,~
script-source,119,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { basename\x2C extname\x2C relative } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\x0d\n  const filepath = fileURLToPath(url);\x0d\n  const ext = extname(filepath);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n\x0d\n  if (experimentalSpecifierResolution !== 'node') {\x0d\n    // Explicit undefined return indicates load hook should rerun format check\x0d\n    if (ignoreErrors) return undefined;\x0d\n    let suggestion = '';\x0d\n    if (getPackageType(url) === 'module' && ext === '') {\x0d\n      const config = getPackageScopeConfig(url);\x0d\n      const fileBasename = basename(filepath);\x0d\n      const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\x0d\n      suggestion = 'Loading extensionless files is not supported inside of ' +\x0d\n        '"type":"module" package.json contexts. The package.json file ' +\x0d\n        `${config.pjsonPath} caused this "type":"module" context. Try ` +\x0d\n        `changing ${filepath} to have a file extension. Note the "bin" ` +\x0d\n        'field of package.json can point to a file with an extension\x2C for example ' +\x0d\n        `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\x0d\n    }\x0d\n    throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\x0d\n  }\x0d\n\x0d\n  return getLegacyExtensionFormat(ext) ?? null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x170e11ef556,119,0,4260,C0O0C4O4260,,
code-creation,Function,10,234445,0x170e11ef9d6,368, node:internal/modules/esm/get_format:1:1,0x170e11ef4d0,~
code-source-info,0x170e11ef9d6,119,0,4260,C0O0C90O26C95O43C100O60C106O94C112O119C118O138C124O162C130O243C133O243C138O211C144O221C150O230C156O288C159O288C164O269C169O342C172O342C177O326C183O471C186O471C191O400C197O423C203O452C209O553C212O553C216O553C218O647C221O647C225O647C227O753C230O753C235O711C241O727C247O826C250O826C255O803C261O808C267O891C270O891C275O917C280O860C286O953C288O966C300O1000C306O1041C312O1082C318O1124C322O1156C330O953C335O953C337O4158C344O4180C350O4201C356O4235C362O4173C367O4259,,
code-creation,Eval,10,234853,0x170e11f0846,5, node:internal/modules/esm/fetch_module:1:1,0x170e11f0580,~
script-source,120,node:internal/modules/esm/fetch_module,'use strict';\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  Buffer: {\x0d\n    concat: BufferConcat\x0d\n  }\x0d\n} = require('buffer');\x0d\nconst {\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_NETWORK_IMPORT_BAD_RESPONSE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { URL } = require('internal/url');\x0d\nconst net = require('net');\x0d\n\x0d\n/**\x0d\n * @typedef CacheEntry\x0d\n * @property {Promise<string> | string} resolvedHREF\x0d\n * @property {Record<string\x2C string>} headers\x0d\n * @property {Promise<Buffer> | Buffer} body\x0d\n */\x0d\n\x0d\n/**\x0d\n * Only for GET requests\x2C other requests would need new Map\x0d\n * HTTP cache semantics keep diff caches\x0d\n *\x0d\n * Maps HREF to pending cache entry\x0d\n * @type {Map<string\x2C Promise<CacheEntry> | CacheEntry>}\x0d\n */\x0d\nconst cacheForGET = new SafeMap();\x0d\n\x0d\n// [1] The V8 snapshot doesn't like some C++ APIs to be loaded eagerly. Do it\x0d\n// lazily/at runtime and not top level of an internal module.\x0d\n\x0d\n// [2] Creating a new agent instead of using the gloabl agent improves\x0d\n// performance and precludes the agent becoming tainted.\x0d\n\x0d\nlet HTTPSAgent;\x0d\nfunction HTTPSGet(url\x2C opts) {\x0d\n  const https = require('https'); // [1]\x0d\n  HTTPSAgent ??= new https.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return https.get(url\x2C {\x0d\n    agent: HTTPSAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nlet HTTPAgent;\x0d\nfunction HTTPGet(url\x2C opts) {\x0d\n  const http = require('http'); // [1]\x0d\n  HTTPAgent ??= new http.Agent({ // [2]\x0d\n    keepAlive: true\x0d\n  });\x0d\n  return http.get(url\x2C {\x0d\n    agent: HTTPAgent\x2C\x0d\n    ...opts\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction dnsLookup(name\x2C opts) {\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  dnsLookup = require('dns/promises').lookup;\x0d\n  return dnsLookup(name\x2C opts);\x0d\n}\x0d\n\x0d\nlet zlib;\x0d\nfunction createBrotliDecompress() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createBrotliDecompress = zlib.createBrotliDecompress;\x0d\n  return createBrotliDecompress();\x0d\n}\x0d\n\x0d\nfunction createUnzip() {\x0d\n  zlib ??= require('zlib'); // [1]\x0d\n  // eslint-disable-next-line no-func-assign\x0d\n  createUnzip = zlib.createUnzip;\x0d\n  return createUnzip();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {Promise<CacheEntry> | CacheEntry}\x0d\n */\x0d\nfunction fetchWithRedirects(parsed) {\x0d\n  const existing = cacheForGET.get(parsed.href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  const handler = parsed.protocol === 'http:' ? HTTPGet : HTTPSGet;\x0d\n  const result = new Promise((fulfill\x2C reject) => {\x0d\n    const req = handler(parsed\x2C {\x0d\n      headers: {\x0d\n        Accept: '*/*'\x0d\n      }\x0d\n    })\x0d\n    .on('error'\x2C reject)\x0d\n    .on('response'\x2C (res) => {\x0d\n      function dispose() {\x0d\n        req.destroy();\x0d\n        res.destroy();\x0d\n      }\x0d\n      if (res.statusCode >= 300 && res.statusCode <= 303) {\x0d\n        if (res.headers.location) {\x0d\n          dispose();\x0d\n          try {\x0d\n            const location = new URL(res.headers.location\x2C parsed);\x0d\n            if (location.protocol !== 'http:' &&\x0d\n              location.protocol !== 'https:') {\x0d\n              reject(new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n                res.headers.location\x2C\x0d\n                parsed.href\x2C\x0d\n                'cannot redirect to non-network location'));\x0d\n              return;\x0d\n            }\x0d\n            return PromisePrototypeThen(\x0d\n              PromiseResolve(fetchWithRedirects(location))\x2C\x0d\n              (entry) => {\x0d\n                cacheForGET.set(parsed.href\x2C entry);\x0d\n                fulfill(entry);\x0d\n              });\x0d\n          } catch (e) {\x0d\n            dispose();\x0d\n            reject(e);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      if (res.statusCode > 303 || res.statusCode < 200) {\x0d\n        dispose();\x0d\n        reject(\x0d\n          new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n            parsed.href\x2C\x0d\n            'HTTP response returned status code of ' + res.statusCode));\x0d\n        return;\x0d\n      }\x0d\n      const { headers } = res;\x0d\n      const contentType = headers['content-type'];\x0d\n      if (!contentType) {\x0d\n        dispose();\x0d\n        reject(new ERR_NETWORK_IMPORT_BAD_RESPONSE(\x0d\n          parsed.href\x2C\x0d\n          'the \\'Content-Type\\' header is required'));\x0d\n        return;\x0d\n      }\x0d\n      /**\x0d\n       * @type {CacheEntry}\x0d\n       */\x0d\n      const entry = {\x0d\n        resolvedHREF: parsed.href\x2C\x0d\n        headers: {\x0d\n          'content-type': res.headers['content-type']\x0d\n        }\x2C\x0d\n        body: new Promise((f\x2C r) => {\x0d\n          const buffers = [];\x0d\n          let size = 0;\x0d\n          let bodyStream = res;\x0d\n          let onError;\x0d\n          if (res.headers['content-encoding'] === 'br') {\x0d\n            bodyStream = createBrotliDecompress();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else if (res.headers['content-encoding'] === 'gzip' ||\x0d\n            res.headers['content-encoding'] === 'deflate') {\x0d\n            bodyStream = createUnzip();\x0d\n            onError = function onError(error) {\x0d\n              bodyStream.close();\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n            res.on('error'\x2C onError);\x0d\n            res.pipe(bodyStream);\x0d\n          } else {\x0d\n            onError = function onError(error) {\x0d\n              dispose();\x0d\n              reject(error);\x0d\n              r(error);\x0d\n            };\x0d\n          }\x0d\n          bodyStream.on('error'\x2C onError);\x0d\n          bodyStream.on('data'\x2C (d) => {\x0d\n            ArrayPrototypePush(buffers\x2C d);\x0d\n            size += d.length;\x0d\n          });\x0d\n          bodyStream.on('end'\x2C () => {\x0d\n            const body = entry.body = /** @type {Buffer} */(\x0d\n              BufferConcat(buffers\x2C size)\x0d\n            );\x0d\n            f(body);\x0d\n          });\x0d\n        })\x2C\x0d\n      };\x0d\n      cacheForGET.set(parsed.href\x2C entry);\x0d\n      fulfill(entry);\x0d\n    });\x0d\n  });\x0d\n  cacheForGET.set(parsed.href\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst allowList = new net.BlockList();\x0d\nallowList.addAddress('::1'\x2C 'ipv6');\x0d\nallowList.addRange('127.0.0.1'\x2C '127.255.255.255');\x0d\n\x0d\n/**\x0d\n * Returns if an address has local status by if it is going to a local\x0d\n * interface or is an address resolved by DNS to be a local interface\x0d\n * @param {string} hostname url.hostname to test\x0d\n * @returns {Promise<boolean>}\x0d\n */\x0d\nasync function isLocalAddress(hostname) {\x0d\n  try {\x0d\n    if (StringPrototypeStartsWith(hostname\x2C '[') &&\x0d\n        StringPrototypeEndsWith(hostname\x2C ']')) {\x0d\n      hostname = StringPrototypeSlice(hostname\x2C 1\x2C -1);\x0d\n    }\x0d\n    const addr = await dnsLookup(hostname\x2C { verbatim: true });\x0d\n    const ipv = addr.family === 4 ? 'ipv4' : 'ipv6';\x0d\n    return allowList.check(addr.address\x2C ipv);\x0d\n  } catch {\x0d\n    // If it errored\x2C the answer is no.\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Fetches a location with a shared cache following redirects.\x0d\n * Does not respect HTTP cache headers.\x0d\n *\x0d\n * This splits the header and body Promises so that things only needing\x0d\n * headers don't need to wait on the body.\x0d\n *\x0d\n * In cases where the request & response have already settled\x2C this returns the\x0d\n * cache value synchronously.\x0d\n *\x0d\n * @param {URL} parsed\x0d\n * @param {ESModuleContext} context\x0d\n * @returns {ReturnType<typeof fetchWithRedirects>}\x0d\n */\x0d\nfunction fetchModule(parsed\x2C { parentURL }) {\x0d\n  const { href } = parsed;\x0d\n  const existing = cacheForGET.get(href);\x0d\n  if (existing) {\x0d\n    return existing;\x0d\n  }\x0d\n  if (parsed.protocol === 'http:') {\x0d\n    return PromisePrototypeThen(isLocalAddress(parsed.hostname)\x2C (is) => {\x0d\n      if (is !== true) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          href\x2C\x0d\n          parentURL\x2C\x0d\n          'http can only be used to load local resources (use https instead).'\x0d\n        );\x0d\n      }\x0d\n      return fetchWithRedirects(parsed);\x0d\n    });\x0d\n  }\x0d\n  return fetchWithRedirects(parsed);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fetchModule: fetchModule\x0d\n};\x0d\n
code-source-info,0x170e11f0846,120,0,8052,C0O0C4O8052,,
code-creation,Function,10,235343,0x170e11f0cde,318, node:internal/modules/esm/fetch_module:1:1,0x170e11f07c0,~
code-source-info,0x170e11f0cde,120,0,8052,C0O0C104O26C110O49C116O61C122O86C128O105C133O117C139O145C145O170C151O273C157O273C162O273C167O250C173O376C179O376C184O402C189O304C195O338C201O427C207O427C212O419C218O465C224O465C229O899C231O899C236O899C238O1197C239O1197C241O1435C242O1435C244O1830C245O1830C247O6127C252O6119C257O6119C259O6141C262O6151C273O6151C279O6179C282O6189C293O6189C299O8000C306O8035C312O8015C317O8051,,
code-creation,LazyCompile,10,235570,0x170e11f19be,37,get BlockList node:net:1826:16,0x144a20eb7e8,~
code-source-info,0x170e11f19be,101,50636,50728,C0O50646C14O50660C19O50689C26O50656C32O50706C36O50723,,
code-creation,Eval,10,235801,0x170e11f1e9e,5, node:internal/blocklist:1:1,0x170e11f1cb8,~
script-source,121,node:internal/blocklist,'use strict';\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  BlockList: BlockListHandle\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  SocketAddress\x2C\x0d\n  kHandle: kSocketAddressHandle\x2C\x0d\n} = require('internal/socketaddress');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { validateInt32\x2C validateString } = require('internal/validators');\x0d\n\x0d\nclass BlockList extends JSTransferable {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[kHandle] = new BlockListHandle();\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `BlockList ${inspect({\x0d\n      rules: this.rules\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  addAddress(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      address = new SocketAddress({\x0d\n        address\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    this[kHandle].addAddress(address[kSocketAddressHandle]);\x0d\n  }\x0d\n\x0d\n  addRange(start\x2C end\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(start)) {\x0d\n      validateString(start\x2C 'start');\x0d\n      validateString(family\x2C 'family');\x0d\n      start = new SocketAddress({\x0d\n        address: start\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    if (!SocketAddress.isSocketAddress(end)) {\x0d\n      validateString(end\x2C 'end');\x0d\n      validateString(family\x2C 'family');\x0d\n      end = new SocketAddress({\x0d\n        address: end\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    const ret = this[kHandle].addRange(\x0d\n      start[kSocketAddressHandle]\x2C\x0d\n      end[kSocketAddressHandle]);\x0d\n    if (ret === false)\x0d\n      throw new ERR_INVALID_ARG_VALUE('start'\x2C start\x2C 'must come before end');\x0d\n  }\x0d\n\x0d\n  addSubnet(network\x2C prefix\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(network)) {\x0d\n      validateString(network\x2C 'network');\x0d\n      validateString(family\x2C 'family');\x0d\n      network = new SocketAddress({\x0d\n        address: network\x2C\x0d\n        family\x2C\x0d\n      });\x0d\n    }\x0d\n    switch (network.family) {\x0d\n      case 'ipv4':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 32);\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        validateInt32(prefix\x2C 'prefix'\x2C 0\x2C 128);\x0d\n        break;\x0d\n    }\x0d\n    this[kHandle].addSubnet(network[kSocketAddressHandle]\x2C prefix);\x0d\n  }\x0d\n\x0d\n  check(address\x2C family = 'ipv4') {\x0d\n    if (!SocketAddress.isSocketAddress(address)) {\x0d\n      validateString(address\x2C 'address');\x0d\n      validateString(family\x2C 'family');\x0d\n      try {\x0d\n        address = new SocketAddress({\x0d\n          address\x2C\x0d\n          family\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Ignore the error. If it's not a valid address\x2C return false.\x0d\n        return false;\x0d\n      }\x0d\n    }\x0d\n    return Boolean(this[kHandle].check(address[kSocketAddressHandle]));\x0d\n  }\x0d\n\x0d\n  get rules() {\x0d\n    return this[kHandle].getRules();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/blocklist:InternalBlockList'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kHandle][owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalBlockList extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n    if (handle !== undefined)\x0d\n      handle[owner_symbol] = this;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalBlockList.prototype.constructor = BlockList.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalBlockList.prototype\x2C BlockList.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  BlockList\x2C\x0d\n  InternalBlockList\x2C\x0d\n};\x0d\n
code-source-info,0x170e11f1e9e,121,0,4043,C0O0C4O4043,,
code-creation,Function,10,236197,0x170e11f28a6,359, node:internal/blocklist:1:1,0x170e11f1e18,~
code-source-info,0x170e11f28a6,121,0,4043,C0O0C35O28C41O40C46O65C51O137C54O137C59O115C65O218C68O218C73O203C78O312C81O312C86O258C92O285C98O410C101O410C106O361C111O380C116O391C121O477C124O477C129O465C135O530C138O530C142O530C144O575C147O575C152O558C158O645C161O645C166O671C171O617C177O724C180O724C185O690C191O705C197O783C204O929C241O3359C251O3528C278O3669C301O3850C306O3884C311O3894C315O3872C319O3947C324O3968C329O3908C334O3983C341O4005C347O4019C353O3998C358O4042,,
code-creation,Eval,10,236548,0x170e11f4176,5, node:internal/socketaddress:1:1,0x170e11f3f80,~
script-source,122,node:internal/socketaddress,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  SocketAddress: _SocketAddress\x2C\x0d\n  AF_INET\x2C\x0d\n  AF_INET6\x2C\x0d\n} = internalBinding('block_list');\x0d\n\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validatePort\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  JSTransferable\x2C\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nclass SocketAddress extends JSTransferable {\x0d\n  static isSocketAddress(value) {\x0d\n    return value?.[kHandle] !== undefined;\x0d\n  }\x0d\n\x0d\n  constructor(options = {}) {\x0d\n    super();\x0d\n    validateObject(options\x2C 'options');\x0d\n    let { family = 'ipv4' } = options;\x0d\n    const {\x0d\n      address = (family === 'ipv4' ? '127.0.0.1' : '::')\x2C\x0d\n      port = 0\x2C\x0d\n      flowlabel = 0\x2C\x0d\n    } = options;\x0d\n\x0d\n    let type;\x0d\n    if (typeof family?.toLowerCase === 'function')\x0d\n      family = family.toLowerCase();\x0d\n    switch (family) {\x0d\n      case 'ipv4':\x0d\n        type = AF_INET;\x0d\n        break;\x0d\n      case 'ipv6':\x0d\n        type = AF_INET6;\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_INVALID_ARG_VALUE('options.family'\x2C options.family);\x0d\n    }\x0d\n\x0d\n    validateString(address\x2C 'options.address');\x0d\n    validatePort(port\x2C 'options.port');\x0d\n    validateUint32(flowlabel\x2C 'options.flowlabel'\x2C false);\x0d\n\x0d\n    this[kHandle] = new _SocketAddress(address\x2C port\x2C type\x2C flowlabel);\x0d\n    this[kDetail] = this[kHandle].detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  get address() {\x0d\n    return this[kDetail].address;\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    return this[kDetail].port;\x0d\n  }\x0d\n\x0d\n  get family() {\x0d\n    return this[kDetail].family === AF_INET ? 'ipv4' : 'ipv6';\x0d\n  }\x0d\n\x0d\n  get flowlabel() {\x0d\n    // The flow label can be changed internally.\x0d\n    return this[kHandle].flowlabel();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `SocketAddress ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/socketaddress:InternalSocketAddress'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kDetail] = handle.detail({\x0d\n      address: undefined\x2C\x0d\n      port: undefined\x2C\x0d\n      family: undefined\x2C\x0d\n      flowlabel: undefined\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      address: this.address\x2C\x0d\n      port: this.port\x2C\x0d\n      family: this.family\x2C\x0d\n      flowlabel: this.flowlabel\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass InternalSocketAddress extends JSTransferable {\x0d\n  constructor(handle) {\x0d\n    super();\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nInternalSocketAddress.prototype.constructor =\x0d\n  SocketAddress.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalSocketAddress.prototype\x2C SocketAddress.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  SocketAddress\x2C\x0d\n  InternalSocketAddress\x2C\x0d\n  kHandle\x2C\x0d\n};\x0d\n
code-source-info,0x170e11f4176,122,0,3363,C0O0C4O3363,,
code-creation,Function,10,236774,0x170e11f4c9e,366, node:internal/socketaddress:1:1,0x170e11f40f0,~
code-source-info,0x170e11f4c9e,122,0,3363,C0O0C38O28C43O53C48O154C51O154C56O108C62O127C68O139C74O275C77O275C82O199C88O218C94O237C100O254C106O369C109O369C114O369C119O335C125O447C128O447C133O432C138O496C141O496C146O484C152O593C155O593C160O544C165O563C170O574C175O656C178O656C182O656C184O692C187O692C191O692C193O742C226O2171C236O2425C246O2602C279O3017C302O3135C307O3176C312O3186C316O3157C320O3243C325O3268C330O3200C335O3283C342O3305C348O3323C354O3349C360O3298C365O3362,,
code-creation,LazyCompile,10,236982,0x170e11f574e,72,BlockList node:internal/blocklist:40:14,0x170e11f1ed0,~
code-source-info,0x170e11f574e,121,814,922,C3O824C11O824C23O838C28O843C33O858C36O854C41O852C45O882C50O887C52O886C58O896C64O910C71O921,,
code-creation,LazyCompile,10,237076,0x170e11f5ef6,115,addAddress node:internal/blocklist:60:13,0x170e11f1f70,~
code-source-info,0x170e11f5ef6,121,1208,1529,C14O1242C19O1261C24O1261C31O1296C39O1296C44O1339C52O1339C57O1380C69O1419C75O1437C81O1390C87O1468C89O1473C91O1472C95O1482C102O1501C104O1500C108O1482C114O1528,,
code-creation,LazyCompile,10,237135,0x170e11f6076,20,isSocketAddress node:internal/socketaddress:43:25,0x170e11f41f8,~
code-source-info,0x170e11f6076,122,784,842,C0O799C9O814C11O813C18O823C19O837,,
code-creation,LazyCompile,10,237237,0x170e11f680e,323,SocketAddress node:internal/socketaddress:47:14,0x170e11f41a8,~
code-source-info,0x170e11f680e,122,859,1842,C7O859C13O881C21O881C33O895C41O895C46O942C58O991C69O1009C81O1050C89O1067C97O1111C99O1122C106O1139C117O1192C122O1192C127O1212C146O1259C151O1284C153O1320C158O1346C160O1378C168O1436C175O1384C180O1378C181O1459C189O1459C194O1508C202O1508C207O1549C220O1549C225O1611C230O1616C235O1631C252O1627C257O1625C261O1684C266O1689C274O1705C276O1704C280O1714C291O1739C296O1763C301O1789C306O1818C310O1714C315O1698C322O1841,,
code-creation,LazyCompile,10,237336,0x170e11f6b5e,99, node:internal/validators:154:3,0x1424f57d020,~
code-source-info,0x170e11f6b5e,15,4537,5108,C0O4596C4O4637C9O4673C14O4712C21O4748C26O4785C33O4821C38O4836C46O4884C50O4898C53O4898C67O4975C75O5042C91O5048C96O5042C98O5107,,
code-creation,LazyCompile,10,237406,0x170e11f6d0e,129,validatePort node:internal/validators:211:22,0x1424f57d1f8,~
code-source-info,0x170e11f6d0e,15,6624,6991,C24O6669C44O6767C47O6767C52O6792C58O6800C65O6817C70O6828C72O6834C75O6823C86O6856C92O6881C99O6891C101O6910C117O6916C122O6910C123O6972C125O6984C128O6988,,
code-creation,LazyCompile,10,237478,0x170e11f6f5e,149, node:internal/validators:101:40,0x1424f57ce20,~
code-source-info,0x170e11f6f5e,15,2980,3505,C0O3012C3O3017C9O3041C15O3081C31O3087C36O3081C37O3148C42O3153C48O3186C64O3192C69O3186C70O3265C80O3319C90O3358C109O3325C114O3319C115O3397C120O3419C125O3433C141O3439C146O3433C148O3504,,
code-creation,LazyCompile,10,237530,0x170e11f70ee,9,isUint32 node:internal/validators:40:18,0x1424f57ccc0,~
code-source-info,0x170e11f70ee,15,835,882,C0O848C2O872C5O861C8O879,,
code-creation,LazyCompile,10,237631,0x170e11f7326,229,addRange node:internal/blocklist:72:11,0x170e11f1fc0,~
code-source-info,0x170e11f7326,121,1543,2235,C17O1580C22O1599C27O1599C34O1632C42O1632C47O1671C55O1671C60O1712C72O1758C78O1774C84O1720C90O1805C95O1824C100O1824C107O1855C115O1855C120O1890C128O1890C133O1931C145O1975C151O1989C157O1937C163O2032C165O2037C167O2036C171O2046C178O2069C180O2068C186O2103C188O2102C192O2046C199O2132C200O2140C205O2158C221O2164C226O2158C228O2234,,
code-creation,Eval,10,237819,0x170e11f77a6,5, node:internal/modules/esm/formats:1:1,0x170e11f7630,~
script-source,123,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeTest\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeTest(\x0d\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\x0d\n      mime\x0d\n    )\x0d\n  ) return 'module';\x0d\n  if (mime === 'application/json') return 'json';\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getLegacyExtensionFormat(ext) {\x0d\n  return legacyExtensionFormatMap[ext];\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getLegacyExtensionFormat\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0x170e11f77a6,123,0,1247,C0O0C4O1247,,
code-creation,Function,10,237933,0x170e11f7a5e,120, node:internal/modules/esm/formats:1:1,0x170e11f7720,~
code-source-info,0x170e11f7a5e,123,0,1247,C0O0C24O28C30O95C33O95C38O76C43O161C46O161C50O161C52O238C57O386C61O386C63O531C67O565C73O629C79O593C83O1125C90O1147C96O1170C102O1199C108O1228C114O1140C119O1246,,
code-creation,Eval,10,238142,0x170e11f80e6,5, node:internal/modules/esm/initialize_import_meta:1:1,0x170e11f7f50,~
script-source,124,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n  getOptionValue('--experimental-import-meta-resolve');\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n} = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {object} meta\x0d\n * @param {{url: string}} context\x0d\n */\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  let url = context.url;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve) {\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  }\x0d\n\x0d\n  url = asyncESM.esmLoader.getBaseURL(url);\x0d\n\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x0d\n};\x0d\n
code-source-info,0x170e11f80e6,124,0,1066,C0O0C4O1066,,
code-creation,Function,10,238237,0x170e11f82ae,90, node:internal/modules/esm/initialize_import_meta:1:1,0x170e11f8060,~
code-source-info,0x170e11f82ae,124,0,1066,C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O1018C78O1040C84O1033C89O1065,,
code-creation,Eval,10,238363,0x170e11f87c6,5, node:internal/modules/esm/load:1:1,0x170e11f8650,~
script-source,125,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  const { importAssertions } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = await defaultGetFormat(url\x2C context);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C context);\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x170e11f87c6,125,0,903,C0O0C4O903,,
code-creation,Function,10,238439,0x170e11f890e,80, node:internal/modules/esm/load:1:1,0x170e11f8740,~
code-source-info,0x170e11f890e,125,0,903,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O196C50O196C55O173C61O863C68O885C74O878C79O902,,
code-creation,Eval,10,238588,0x170e11f8f06,5, node:internal/modules/esm/get_source:1:1,0x170e11f8d00,~
script-source,126,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C context\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    parsed.protocol === 'https:' ||\x0d\n    parsed.protocol === 'http:'\x0d\n  )) {\x0d\n    const res = await fetchModule(parsed\x2C context);\x0d\n    source = await res.body;\x0d\n  } else {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C ArrayPrototypeConcat([\x0d\n      'file'\x2C\x0d\n      'data'\x2C\x0d\n      experimentalNetworkImports ? ['https'\x2C 'http'] : []\x2C\x0d\n    ]));\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0x170e11f8f06,126,0,1929,C0O0C4O1929,,
code-creation,Function,10,238709,0x170e11f909e,212, node:internal/modules/esm/get_source:1:1,0x170e11f8e80,~
code-source-info,0x170e11f909e,126,0,1929,C0O0C46O28C52O53C58O77C64O143C67O143C72O124C77O197C80O197C85O181C91O313C94O313C103O358C110O313C112O443C115O443C119O443C121O537C124O537C129O537C134O520C140O570C143O570C148O601C153O628C156O628C161O620C167O722C170O722C175O748C180O665C186O685C192O782C196O779C198O820C202O820C204O1883C206O1908C211O1928,,
code-creation,Eval,10,239474,0x170e11fa466,5, node:internal/fs/promises:1:1,0x170e11f9cb8,~
script-source,127,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectCreate\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    bufferOrOptions ??= ObjectCreate(null);\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = bufferOrOptions);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x170e11fa466,127,0,23678,C0O0C4O23678,,
code-creation,Function,10,240746,0x170e11fcba6,1672, node:internal/fs/promises:1:1,0x170e11fa3e0,~
code-source-info,0x170e11fcba
code-creation,Function,10,240928,0x170e11fd55e,27,<instance_members_initializer> node:internal/fs/promises:190:3,0x170e11fba40,~
code-source-info,0x170e11fd55e,127,4407,5236,C0O4407C12O4415C26O5236,,
new,MemoryChunk,0x2ee7de00000,262144
code-creation,Eval,10,241447,0x2ee7de0114e,5, node:internal/fs/rimraf:1:1,0x170e11ffca8,~
script-source,128,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x2ee7de0114e,128,0,7392,C0O0C4O7392,,
code-creation,Function,10,241896,0x2ee7de0174e,409, node:internal/fs/rimraf:1:1,0x170e11fff88,~
code-source-info,0x2ee7de0174e,128,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,242191,0x2ee7de025e6,188,from node:buffer:296:28,0x30f43b36f90,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2ee7de025e6,24,8735,9718,C3O8774C9O8810C12O8817C17O8853C18O8859C28O8915C33O8919C39O8951C51O8958C56O9007C57O9037C63O9054C68O9054C73O9070C78O9110C95O9203C104O9210C109O9250C110O9275C113O9275C118O9299C120O9313C122O9322C123O9330C125O9347C127O9346C134O9409C136O9415C138O9414C145O9433C151O9452C155O9498C158O9505C163O9545C164O9572C182O9578C187O9572,,
code-creation,LazyCompile,10,244394,0x2ee7de05016,110,fromString node:buffer:432:20,0x30f43b37378,~
code-source-info,0x2ee7de05016,24,12922,13371,C0O12950C2O12958C8O13003C14O13010C19O13035C25O13042C30O13056C35O13063C40O13080C41O13086C46O13104C51O13115C56O13154C59O13160C64O13191C66O13221C73O13227C78O13221C79O13279C85O13286C90O13300C95O13307C100O13324C101O13333C104O13340C109O13368,,
code-creation,LazyCompile,10,244488,0x2ee7de051ce,177,fromStringFast node:buffer:413:24,0x30f43b372d8,~
code-source-info,0x2ee7de051ce,24,12359,12899,C0O12397C5O12397C11O12422C14O12444C18O12453C21O12433C26O12466C31O12502C36O12473C41O12515C42O12521C44O12535C49O12546C51O12544C54O12532C59O12564C62O12564C65O12589C72O12604C77O12615C85O12589C91O12658C110O12658C116O12690C118O12701C123O12787C130O12806C135O12817C143O12791C149O12846C156O12860C162O12857C168O12871C171O12871C174O12887C176O12896,,
code-creation,LazyCompile,10,244559,0x2ee7de053be,36,FastBuffer node:internal/buffer:958:14,0x5d8b38bb00,~
code-source-info,0x2ee7de053be,25,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,244596,0x2ee7de054be,23,write node:buffer:593:12,0x30f43b376e8,~
code-source-info,0x2ee7de054be,24,17151,17215,C0O17185C17O17185C22O17215,,
code-creation,LazyCompile,10,244643,0x2ee7de055ae,42,alignPool node:buffer:159:19,0x30f43b36d10,~
code-source-info,0x2ee7de055ae,24,4190,4300,C0O4226C4O4241C9O4255C19O4266C25O4279C34O4289C41O4299,,
code-creation,LazyCompile,10,244807,0x2ee7de0596e,251,promisify node:internal/util:324:19,0x30f43b061f8,~
code-source-info,0x2ee7de0596e,16,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
code-creation,LazyCompile,10,245067,0x2ee7de05f1e,65,EventEmitterMixin node:internal/event_target:962:27,0x22ee8cde378,~
script-source,44,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol\x2C kEnumerableProperty } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler ?? null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x2ee7de05f1e,44,26678,27112,C0O26731C23O26922C30O26954C33O26967C38O26922C43O26982C47O27016C52O27057C57O27016C62O27084C64O27109,,
tick,0x7ffd55a42109,246959,1,0x7ff651bfe150,2,0x7ff6525458c0,0x1fd14904e3b,0x1fd149048e5,0x170e11e373b,0x1fd14904f03,0x1fd149048e5,0x170e11e19fc,0x1fd14904f03,0x1fd149048e5,0x170e11dd261,0x1fd14904f03,0x1fd149048e5,0x170e11d90cc,0x144a20c6526,0x144a20c2065
code-creation,Eval,10,247472,0x2ee7de089de,5, node:internal/modules/esm/translators:1:1,0x2ee7de08578,~
script-source,129,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C\x0d\n                                   asyncESM.esmLoader.getBaseURL(url)\x2C\x0d\n                                   assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C {\x0d\n      url: wrap.url\x0d\n    })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x2ee7de089de,129,0,11128,C0O0C4O11128,,
code-creation,Function,10,248209,0x2ee7de0917e,715, node:internal/modules/esm/translators:1:1,0x2ee7de08958,~
code-source-info,0x2ee7de0917e,129,0,11128,C0O0C180O28C186O54C192O76C198O88C204O102C210O127C216O161C222O176C228O198C233O210C239O222C245O249C251O274C257O304C268O343C274O392C275O392C277O543C283O543C288O526C294O591C300O591C305O567C311O576C317O673C323O673C328O620C334O637C340O658C346O767C352O767C357O734C363O748C369O834C375O834C379O834C381O888C387O888C391O888C393O979C399O979C404O956C410O971C416O1008C422O1008C427O1041C440O1042C446O1008C448O1125C454O1125C459O1097C465O1233C471O1233C476O1259C481O1163C487O1194C493O1300C499O1300C504O1276C510O1369C513O1369C517O1369C519O1425C522O1410C528O1455C534O1455C538O1455C540O1524C546O1524C551O1504C557O1586C563O1586C568O1570C574O1623C575O1623C577O1959C579O1959C585O1975C587O1995C591O2011C593O2034C597O2069C598O2069C600O3210C613O3210C619O4512C626O4521C629O4504C631O4555C635O4555C637O4575C650O4575C656O7773C669O7773C675O8235C688O8235C694O10239C707O10239C714O11127,,
code-creation,Eval,10,248970,0x2ee7de0a686,5, node:internal/modules/esm/create_dynamic_module:1:1,0x2ee7de0a4b0,~
script-source,130,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x2ee7de0a686,130,0,1828,C0O0C4O1828,,
code-creation,Function,10,249112,0x2ee7de0a8ae,111, node:internal/modules/esm/create_dynamic_module:1:1,0x2ee7de0a600,~
code-source-info,0x2ee7de0a8ae,130,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,249871,0x2ee7de0bb56,5, node:internal/vm/module:1:1,0x2ee7de0b610,~
script-source,131,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x2ee7de0bb56,131,0,12768,C0O0C4O12768,,
code-creation,Function,10,250591,0x2ee7de0cdb6,872, node:internal/vm/module:1:1,0x2ee7de0bad0,~
code-source-info,0x2ee7de0cdb
code-creation,Function,10,250694,0x2ee7de0d2f6,30,<instance_members_initializer> node:internal/vm/module:256:3,0x2ee7de0c140,~
code-source-info,0x2ee7de0d2f6,131,7051,7088,C3O7060C29O7088,,
code-creation,LazyCompile,10,251089,0x2ee7de0e6ee,30,ESMLoader node:internal/modules/esm/loader:61:1,0x170e11e2d40,~
code-source-info,0x2ee7de0e6ee,114,1718,1718,C9O1718C29O1718,,
code-creation,LazyCompile,10,251181,0x2ee7de0fba6,27,ModuleMap node:internal/modules/esm/module_map:17:14,0x170e11e5490,~
code-source-info,0x2ee7de0fba6,115,534,551,C3O540C7O546C11O540C26O550,,
code-creation,LazyCompile,10,251284,0x2ee7de0fe4e,13,desc.value node:internal/per_context/primordials:334:32,0x1424f54a000,~
code-source-info,0x2ee7de0fe4e,6,9964,10025,C0O9982C7O9989C12O10012,,
code-creation,LazyCompile,10,251324,0x2ee7de0ff56,13,SafeIterator node:internal/per_context/primordials:279:16,0x1424f549a50,~
code-source-info,0x2ee7de0ff56,6,8198,8260,C0O8218C3O8235C7O8233C12O8259,,
code-creation,LazyCompile,10,251365,0x2ee7de1008e,13,next node:internal/per_context/primordials:282:9,0x1424f549b18,~
code-source-info,0x2ee7de1008e,6,8270,8317,C0O8282C3O8299C8O8289C12O8310,,
code-creation,LazyCompile,10,251651,0x2ee7de10706,28,getEmbedderOptions node:internal/options:32:28,0x25dd5bfdac8,~
code-source-info,0x2ee7de10706,91,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,251864,0x2ee7de109ae,315,Module._initPaths node:internal/modules/cjs/loader:1233:29,0x170e11dc298,~
code-source-info,0x2ee7de109ae
code-creation,Eval,10,252163,0x2ee7de13906,5, node:internal/modules/run_main:1:1,0x2ee7de136e0,~
script-source,132,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  handleProcessExit\x2C\x0d\n} = require('internal/modules/esm/handle_process_exit');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href : mainPath;\x0d\n    return esmLoader.import(main\x2C undefined\x2C ObjectCreate(null));\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x2ee7de13906,132,0,2621,C0O0C4O2621,,
code-creation,Function,10,252392,0x2ee7de13bee,178, node:internal/modules/run_main:1:1,0x2ee7de13880,~
code-source-info,0x2ee7de13bee,132,0,2621,C0O0C66O28C72O45C78O107C84O107C89O156C95O164C101O176C107O236C113O236C118O217C124O279C130O279C134O279C136O332C142O332C147O308C153O2549C160O2571C166O2597C172O2564C177O2620,,
code-creation,LazyCompile,10,252603,0x2ee7de1441e,163,initializeESMLoader node:internal/bootstrap/pre_execution:487:29,0x144a20c46d0,~
code-source-info,0x2ee7de1441e,96,15871,16986,C0O15955C6O15955C13O16004C16O16000C21O15998C25O16024C30O16028C34O16048C40O16077C41O16084C42O16189C48O16189C53O16103C58O16144C63O16236C69O16236C74O16440C79O16398C83O16511C88O16472C92O16681C100O16685C106O16804C112O16804C117O16752C122O16760C127O16778C132O16851C138O16851C143O16871C145O16881C149O16896C151O16916C155O16941C157O16960C162O16985,,
code-creation,LazyCompile,10,252751,0x2ee7de14636,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x170e11db788,~
code-source-info,0x2ee7de14636,111,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,252799,0x2ee7de1471e,53,loadPreloadModules node:internal/bootstrap/pre_execution:530:28,0x144a20c47c0,~
code-source-info,0x2ee7de1471e,96,17478,17809,C0O17567C8O17567C13O17599C15O17636C21O17643C26O17724C32O17724C37O17724C42O17689C47O17769C52O17808,,
code-creation,LazyCompile,10,252889,0x2ee7de14916,166,Module._preloadModules node:internal/modules/cjs/loader:1263:34,0x170e11dc328,~
code-source-info,0x2ee7de14916,111,40910,41505,C0O40926C5O40931C11O40960C12O40967C13O40973C17O40986C23O41186C33O41186C42O41238C45O41260C53O41285C58O41285C63O41260C68O41251C85O41315C88O41321C95O41326C100O41349C106O41362C114O41378C116O41378C119O41415C121O41431C125O41420C130O41456C137O41472C141O41456C146O41440C151O41402C154O41481C158O41494C165O41504,,
code-creation,LazyCompile,10,252969,0x2ee7de14b36,94,Module node:internal/modules/cjs/loader:172:16,0x170e11db0e8,~
code-source-info,0x2ee7de14b36,111,5455,5701,C14O5478C16O5486C20O5495C22O5507C25O5512C30O5512C35O5505C39O5528C40O5541C44O5550C49O5568C54O5568C60O5590C71O5590C76O5630C77O5644C81O5655C82O5667C86O5679C88O5693C93O5700,,
code-creation,LazyCompile,10,253118,0x2ee7de14d2e,449,dirname node:path:653:10,0x22ee8ccd768,~
code-source-info,0x2ee7de14d2e
code-creation,LazyCompile,10,253267,0x2ee7de15136,45,updateChildren node:internal/modules/cjs/loader:165:24,0x170e11db098,~
code-source-info,0x2ee7de15136,111,5213,5390,C0O5257C7O5263C15O5278C19O5296C23O5304C26O5304C33O5351C38O5351C44O5389,,
code-creation,LazyCompile,10,253366,0x2ee7de15326,251,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x170e11dbb38,~
code-source-info,0x2ee7de
code-creation,Function,11,253544,0x1fd14905160,2060,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x170e11dbb38,^
code-source-info,0x1fd14905160,111,17765,19316,,,
code-creation,Function,11,253580,0x1fd149059e0,432,getCLIOptionsFromBinding node:internal/options:18:34,0x25dd5bfd848,^
code-source-info,0x1fd149059e0,91,514,620,,,
code-creation,Function,11,253600,0x1fd14905c00,104,next node:internal/per_context/primordials:282:9,0x1424f549b18,^
code-source-info,0x1fd14905c00,6,8270,8317,,,
code-creation,Function,11,253681,0x1fd14905ce0,252,SafeMap node:internal/per_context/primordials:360:16,0x1424f54a0a8,^
code-source-info,0x1fd14905ce0,6,10694,10711,,,
code-creation,Function,11,253706,0x1fd14905e40,272,validateString node:internal/validators:118:24,0x1424f57ce70,^
code-source-info,0x1fd14905e40,15,3534,3646,,,
code-creation,Function,11,253734,0x1fd14905fc0,412,isWindowsDeviceRoot node:path:60:29,0x22ee8ccd408,^
code-source-info,0x1fd14905fc0,41,1991,2136,,,
code-creation,LazyCompile,10,253821,0x2ee7de15aa6,127,Module.require node:internal/modules/cjs/loader:997:36,0x170e11dbf28,~
code-source-info,0x2ee7de15aa6,111,32200,32503,C0O32210C8O32210C13O32239C15O32246C20O32261C36O32267C41O32261C42O32379C51O32391C60O32409C63O32423C76O32423C93O32480C102O32492C126O32502,,
code-creation,LazyCompile,10,253989,0x2ee7de15d8e,619,Module._load node:internal/modules/cjs/loader:757:24,0x170e11dbd88,~
code-source-info,0x2ee7de15d8e
code-creation,LazyCompile,10,254132,0x2ee7de16226,89,logger node:internal/util/debuglog:95:18,0x30f43b21f90,~
code-source-info,0x2ee7de16226,22,2963,3164,C0O2963C3O2996C24O3021C30O3038C34O3028C38O3043C39O3059C45O3076C51O3085C55O3066C60O3090C61O3107C65O3114C72O3127C77O3123C83O3114C88O3152,,
code-creation,LazyCompile,10,254182,0x2ee7de16366,3, node:internal/per_context/primordials:285:21,0x1424f549bc0,~
code-source-info,0x2ee7de16366,6,8339,8370,C0O8351C2O8363,,
code-creation,LazyCompile,10,254240,0x2ee7de1643e,140,debug node:internal/util/debuglog:76:15,0x30f43b21ef0,~
code-source-info,0x2ee7de1643e,22,2432,2838,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C75O2695C81O2712C85O2702C89O2717C90O2733C96O2750C102O2759C106O2740C111O2764C112O2781C116O2788C123O2801C128O2797C134O2788C139O2826,,
code-creation,LazyCompile,10,254300,0x2ee7de165ee,41,init node:internal/util/debuglog:72:16,0x30f43b21ea0,~
code-source-info,0x2ee7de165ee,22,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,254336,0x2ee7de166de,2,testEnabled node:internal/util/debuglog:32:19,0x144a20d81b0,~
code-source-info,0x2ee7de166de,22,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,254402,0x2ee7de16876,116,debuglogImpl node:internal/util/debuglog:49:22,0x30f43b21cf0,~
code-source-info,0x2ee7de16876,22,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,254451,0x2ee7de16a2e,10, node:internal/modules/cjs/loader:272:66,0x170e11dba58,~
code-source-info,0x2ee7de16a2e,111,7980,8007,C0O7993C2O7999C9O8006,,
code-creation,LazyCompile,10,254481,0x2ee7de16ade,2,noop node:internal/util/debuglog:47:14,0x30f43b21ca0,~
code-source-info,0x2ee7de16ade,22,1465,1473,C1O1472,,
code-creation,LazyCompile,10,254692,0x2ee7de16ede,812,Module._resolveFilename node:internal/modules/cjs/loader:848:35,0x170e11dbe10,~
code-source-info,0x2ee7de16ede
code-creation,LazyCompile,10,254865,0x2ee7de1749e,28,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x1424f54fb20,~
code-source-info,0x2ee7de1749e,9,7593,7692,C0O7617C5O7630C10O7634C15O7634C21O7648C23O7666C27O7687,,
code-creation,LazyCompile,10,254956,0x2ee7de17756,327,Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38,0x170e11dbc58,~
code-source-info,0x2ee7de17756,111,20630,21844,C0O20653C5O20670C10O20670C17O20708C25O20708C30O20753C31O20765C32O20812C39O20816C47O20850C52O20877C59O20884C66O20898C72O20898C80O20932C87O20950C93O20950C101O20984C108O21004C114O21017C120O21017C128O21051C133O21084C138O21102C145O21112C152O21119C161O21138C166O21174C171O21146C177O21203C191O21203C196O21268C202O21275C212O21294C213O21345C217O21368C223O21382C229O21556C234O21570C248O21570C253O21626C255O21643C256O21654C264O21721C272O21654C277O21749C286O21750C289O21755C294O21770C299O21755C311O21785C319O21785C324O21824C326O21841,,
code-creation,LazyCompile,10,255056,0x2ee7de17a76,76,trySelfParentPath node:internal/modules/cjs/loader:427:27,0x170e11db408,~
code-source-info,0x2ee7de17a76,111,12696,12971,C0O12710C4O12723C5O12736C6O12753C12O12784C16O12793C17O12815C24O12818C29O12841C36O12844C44O12888C47O12903C52O12903C59O12911C62O12916C66O12909C69O12920C72O12943C73O12956C75O12970,,
code-creation,LazyCompile,10,255148,0x2ee7de17cb6,235,trySelf node:internal/modules/cjs/loader:441:17,0x170e11db458,~
code-source-info,0x2ee7de17cb6,111,12991,13849,C0O13018C4O13035C5O13048C6O13091C9O13091C17O13068C22O13079C27O13130C31O13146C37O13169C38O13182C39O13201C47O13220C48O13233C49O13243C51O13277C55O13269C60O13290C65O13317C70O13363C82O13321C89O13380C94O13398C97O13432C102O13437C107O13398C112O13396C118O13463C119O13476C123O13498C128O13527C133O13557C138O13579C142O13557C149O13622C152O13622C159O13649C168O13527C183O13505C188O13695C200O13718C203O13724C210O13729C215O13764C222O13808C226O13770C231O13764C232O13833C234O13833,,
code-creation,LazyCompile,10,255250,0x2ee7de17f6e,129,readPackageScope node:internal/modules/cjs/loader:321:26,0x170e11db228,~
code-source-info,0x2ee7de17f6e,111,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,255351,0x2ee7de182ce,234,readPackage node:internal/modules/cjs/loader:290:21,0x170e11db1d8,~
code-source-info,0x2ee7de182ce,111,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,LazyCompile,10,255497,0x2ee7de185d6,199,read node:internal/modules/package_json_reader:16:14,0x170e11e0da8,~
code-source-info,0x2ee7de185d6,112,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,255596,0x2ee7de189f6,232,toNamespacedPath node:path:618:19,0x22ee8ccd6f8,~
code-source-info,0x2ee7de189f6,41,20086,21201,C0O20152C6O20189C12O20196C17O20210C19O20222C20O20251C25O20257C30O20257C36O20296C43O20303C48O20316C50O20328C51O20336C58O20340C66O20387C68O20383C73O20445C81O20449C89O20496C91O20492C96O20541C104O20541C110O20594C112O20607C114O20603C121O20638C123O20634C128O20738C133O20760C139O20760C148O20800C151O20833C156O20865C161O20865C167O20845C175O20919C181O20919C189O20966C191O20962C198O20987C204O20987C212O21034C214O21030C219O21137C224O21154C228O21169C229O21184C231O21196,,
code-creation,LazyCompile,10,256065,0x2ee7de19366,436,Module._findPath node:internal/modules/cjs/loader:494:28,0x170e11dbaa8,~
code-source-info,0x2ee7de
code-creation,LazyCompile,10,256203,0x2ee7de19716,109,isAbsolute node:path:402:13,0x22ee8ccd5d0,~
code-source-info,0x2ee7de19716,41,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,256359,0x2ee7de199a6,85,stat node:internal/modules/cjs/loader:151:14,0x170e11db048,~
code-source-info,0x2ee7de199a6,111,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,256492,0x2ee7de19afe,44,tryExtensions node:internal/modules/cjs/loader:400:23,0x170e11db368,~
code-source-info,0x2ee7de19afe,111,11900,12093,C0O11936C2O11948C6O11941C11O11985C16O12001C19O11995C23O11985C29O12022C31O12045C33O12061C34O11957C39O11923C42O12077C43O12090,,
code-creation,LazyCompile,10,256547,0x2ee7de19c2e,50,tryFile node:internal/modules/cjs/loader:384:17,0x170e11db2c8,~
code-source-info,0x2ee7de19c2e,111,11460,11661,C0O11498C3O11498C8O11520C9O11527C14O11534C15O11541C16O11545C24O11570C26O11585C31O11597C36O11597C41O11618C42O11627C45O11634C49O11658,,
code-creation,LazyCompile,10,256681,0x2ee7de19d76,42,toRealPath node:internal/modules/cjs/loader:393:20,0x170e11db318,~
code-source-info,0x2ee7de19d76,111,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
code-creation,LazyCompile,10,257034,0x2ee7de1a18e,1042,realpathSync node:fs:2425:22,0x25dd5bd93f0,~
script-source,80,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = ObjectCreate(null);\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.readSync(fd\x2C buffer\x2C options)\x0d\n    const options = offset || ObjectCreate(null);\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2ee7de1a18e
code-creation,LazyCompile,10,261721,0x2ee7de208b6,123,getOptions node:internal/fs/utils:315:20,0x25dd5be1c98,~
script-source,81,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x2ee7de208b6,81,7566,8210,C0O7597C14O7691C16O7713C17O7724C23O7764C29O7809C31O7833C35O7849C42O7885C48O7925C66O7931C71O7925C72O8021C79O8030C84O8049C87O8072C92O8049C96O8100C102O8129C107O8157C115O8129C120O8192C122O8207,,
tick,0x7ff652b1eec0,263502,0,0x0,3,0x7ff652173fe0,0x2ee7de1a19a,0x2ee7de19d99,0x2ee7de19c5b,0x2ee7de19b15,0x2ee7de194bc,0x2ee7de1716f,0x2ee7de15e18,0x2ee7de15af2,0x2ee7de149a3,0x2ee7de1474d,0x144a20c654c,0x144a20c2065
code-creation,LazyCompile,10,263580,0x2ee7de2283e,48,assertEncoding node:internal/fs/utils:152:24,0x25dd5be16a0,~
code-source-info,0x2ee7de2283e,81,3712,3894,C0O3728C6O3745C9O3752C14O3752C21O3796C24O3824C40O3830C45O3824C47O3893,,
code-creation,LazyCompile,10,263723,0x2ee7de22956,20,toPathIfFileURL node:internal/url:1499:25,0x5d8b3b9258,~
script-source,39,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(input\x2C flags) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\x0d\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x2ee7de22956,39,43048,43173,C0O43069C3O43074C9O43109C11O43130C12O43134C15O43141C19O43170,,
code-creation,LazyCompile,10,266105,0x2ee7de25a9e,17,isURLInstance node:internal/url:1495:23,0x5d8b3b9208,~
code-source-info,0x2ee7de25a9e,39,42921,43020,C0O42942C3O42963C6O42988C12O43010C16O43017,,
code-creation,LazyCompile,10,266172,0x2ee7de25bfe,81, node:internal/fs/utils:669:38,0x25dd5be26c0,~
code-source-info,0x2ee7de25bfe,81,18865,19145,C14O18899C22O18932C25O18932C31O18959C36O18990C49O18965C54O18959C55O19058C68O19058C74O19097C76O19127C78O19127C80O19144,,
code-creation,LazyCompile,10,266236,0x2ee7de25e0e,110, node:internal/fs/utils:358:35,0x25dd5be1d38,~
code-source-info,0x2ee7de25e0e,81,8960,9569,C16O9025C21O9079C26O9079C31O9176C37O9199C41O9228C45O9245C51O9245C60O9297C64O9318C69O9318C76O9364C77O9371C78O9394C94O9394C100O9513C104O9536C106O9536C107O9555C109O9566,,
code-creation,LazyCompile,10,266293,0x2ee7de25f86,16,isUint8Array node:internal/util/types:13:22,0x30f43b07418,~
script-source,17,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2ee7de25f86,17,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,266524,0x2ee7de263ee,23,splitRoot node:fs:2375:33,0x25dd5bd92a8,~
code-source-info,0x2ee7de263ee,80,65400,65466,C0O65413C9O65440C12O65420C19O65457C22O65461,,
code-creation,LazyCompile,10,266751,0x2ee7de264f6,63,handleErrorFromBinding node:internal/fs/utils:341:32,0x25dd5be1ce8,~
code-source-info,0x2ee7de264f6,81,8304,8815,C0O8323C6O8387C11O8387C16O8410C24O8410C29O8468C31O8468C32O8495C38O8727C43O8754C51O8727C56O8801C60O8791C62O8814,,
code-creation,LazyCompile,10,266818,0x2ee7de2666e,53,nextPart node:fs:2401:31,0x25dd5bd93a0,~
code-source-info,0x2ee7de2666e,80,66157,66408,C0O66184C4O66180C9O66217C14O66217C20O66301C22O66312C24O66308C31O66342C33O66338C38O66371C40O66380C41O66194C47O66171C50O66393C52O66403,,
code-creation,LazyCompile,10,266949,0x2ee7de267ce,34,isFileType node:fs:205:20,0x25dd5bd7010,~
code-source-info,0x2ee7de267ce,80,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,Function,11,267211,0x1fd149061c0,6232,resolve node:path:158:10,0x22ee8ccd510,^
code-source-info,0x1fd149061c0,41,4875,9786,,,
code-creation,Function,11,267246,0x1fd14907a80,544,nextPart node:fs:2401:31,0x25dd5bd93a0,^
code-source-info,0x1fd14907a80,80,66157,66408,,,
code-creation,LazyCompile,10,267702,0x2ee7de273a6,72,encodeRealpathResult node:fs:2388:30,0x25dd5bd9350,~
code-source-info,0x2ee7de273a6,80,65746,66012,C0O65769C4O65794C10O65814C17O65823C22O65840C24O65854C25O65875C30O65882C35O65882C41O65911C48O65920C53O65941C55O65957C56O65982C61O65999C66O65982C71O66009,,
code-creation,LazyCompile,10,267792,0x2ee7de27536,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0x170e11d5ad8,~
code-source-info,0x2ee7de27536,110,1194,1482,C0O1231C5O1244C10O1248C15O1248C21O1266C26O1273C35O1304C43O1304C48O1432C53O1432C57O1463C59O1474C61O1481,,
code-creation,LazyCompile,10,267908,0x2ee7de27eae,246,Module.load node:internal/modules/cjs/loader:969:33,0x170e11dbea0,~
code-source-info,0x2ee7de27eae,111,31233,32069,C0O31249C8O31295C16O31249C21O31305C26O31318C32O31305C36O31330C38O31344C42O31359C45O31379C52O31396C55O31401C60O31401C66O31379C71O31370C75O31444C78O31444C83O31523C91O31527C101O31580C106O31591C112O31606C124O31612C129O31606C130O31654C133O31661C140O31672C144O31683C150O31704C151O31716C155O31747C160O31756C165O31860C170O31897C175O31908C187O31949C192O31956C197O31956C204O31970C206O31968C211O32003C216O32012C221O32012C228O32038C233O32047C238O32047C245O32068,,
code-creation,LazyCompile,10,268032,0x2ee7de2815e,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40,0x170e11db3b8,~
code-source-info,0x2ee7de2815e,111,12225,12666,C0O12254C5O12259C10O12259C16O12286C18O12311C20O12338C22O12407C36O12360C44O12407C49O12422C51O12441C55O12451C56O12461C61O12468C63O12516C68O12535C74O12575C77O12586C84O12597C89O12617C91O12641C92O12344C95O12650C97O12663,,
code-creation,LazyCompile,10,268159,0x2ee7de2833e,415,basename node:path:749:11,0x22ee8ccd7d0,~
code-source-info,0x2ee7de2833e
code-creation,LazyCompile,10,268360,0x2ee7de2885e,485,Module._extensions..js node:internal/modules/cjs/loader:1114:37,0x170e11dc040,~
code-source-info,0x2ee7de2885e
code-creation,LazyCompile,10,268521,0x2ee7de28ca6,376,readFileSync node:fs:450:22,0x25dd5bd74c8,~
code-source-info,0x2ee7de28ca
code-creation,LazyCompile,10,268641,0x2ee7de28fc6,30,isEncoding node:buffer:530:40,0x30f43b375c0,~
code-source-info,0x2ee7de28fc6,24,15337,15472,C0O15353C6O15401C12O15408C20O15427C23O15427C28O15455C29O15469,,
code-creation,LazyCompile,10,268686,0x2ee7de290ce,30,normalizeEncoding node:internal/util:160:27,0x30f43b05d58,~
code-source-info,0x2ee7de290ce,16,4365,4473,C0O4376C7O4399C14O4417C19O4430C21O4444C22O4448C25O4455C29O4470,,
code-creation,LazyCompile,10,268744,0x2ee7de29246,113,openSync node:fs:576:18,0x25dd5bd76b0,~
code-source-info,0x2ee7de29246,80,14993,15383,C0O15018C5O15025C11O15072C16O15072C21O15097C37O15104C44O15157C51O15159C58O15185C63O15193C70O15198C73O15209C78O15209C95O15193C101O15334C106O15334C110O15366C112O15380,,
code-creation,LazyCompile,10,268796,0x2ee7de293c6,37, node:internal/fs/utils:681:42,0x25dd5be2710,~
code-source-info,0x2ee7de293c6,81,19192,19331,C14O19248C19O19248C24O19283C29O19283C34O19316C36O19328,,
code-creation,LazyCompile,10,268893,0x2ee7de2979e,515,stringToFlags node:internal/fs/utils:556:23,0x25dd5be2530,~
code-source-info,0x2ee7de2979e
code-creation,LazyCompile,10,269018,0x2ee7de29b8e,97,parseFileMode node:internal/validators:59:23,0x1424f57cd10,~
code-source-info,0x2ee7de29b8e,15,1545,1852,C0O1569C11O1587C17O1625C24O1650C27O1630C34O1677C41O1722C52O1683C57O1677C58O1745C66O1753C73O1789C89O1789C94O1836C96O1849,,
code-creation,LazyCompile,10,269083,0x2ee7de29d26,206, node:internal/validators:84:3,0x1424f57cdd0,~
code-source-info,0x2ee7de29d26,15,2338,2933,C36O2481C39O2486C45O2511C51O2553C67O2559C72O2553C73O2624C78O2629C84O2664C100O2670C105O2664C106O2735C116O2774C129O2787C142O2741C147O2735C148O2814C150O2824C157O2839C162O2855C172O2894C185O2907C198O2861C203O2855C205O2932,,
code-creation,LazyCompile,10,269134,0x2ee7de29eee,9,isInt32 node:internal/validators:36:17,0x1424f57c7b0,~
code-source-info,0x2ee7de29eee,15,769,814,C0O782C2O806C5O795C8O811,,
code-creation,LazyCompile,10,269330,0x2ee7de29ff6,66,tryStatSync node:fs:404:21,0x25dd5bd73d8,~
code-source-info,0x2ee7de29ff6,80,10725,10943,C0O10757C2O10778C7O10786C22O10786C28O10831C36O10855C38O10872C43O10875C48O10875C53O10895C58O10901C62O10895C63O10927C65O10940,,
code-creation,LazyCompile,10,269421,0x2ee7de2a16e,96,tryCreateBuffer node:fs:414:25,0x25dd5bd7428,~
code-source-info,0x2ee7de2a16e,80,10971,11271,C0O11009C2O11022C7O11044C9O11055C11O11053C16O11078C23O11084C28O11078C29O11129C34O11145C39O11145C45O11169C57O11175C58O11204C65O11218C67O11228C72O11231C77O11231C93O11254C95O11268,,
code-creation,LazyCompile,10,269471,0x2ee7de2a2c6,17,allocUnsafe node:buffer:373:42,0x30f43b37138,~
code-source-info,0x2ee7de2a2c6,24,11277,11335,C0O11289C5O11289C9O11310C12O11317C16O11332,,
code-creation,LazyCompile,10,269511,0x2ee7de2a3ce,54, node:buffer:349:36,0x30f43b37080,~
code-source-info,0x2ee7de2a3ce,24,10551,10711,C0O10566C8O10566C13O10599C14O10610C21O10626C23O10623C28O10646C33O10678C46O10652C51O10646C53O10710,,
code-creation,LazyCompile,10,269551,0x2ee7de2a4f6,30,validateNumber node:internal/validators:123:24,0x1424f57cf10,~
code-source-info,0x2ee7de2a4f6,15,3673,3785,C0O3692C6O3728C22O3734C27O3728C29O3784,,
code-creation,LazyCompile,10,269609,0x2ee7de2a60e,119,allocate node:buffer:398:18,0x30f43b37288,~
code-source-info,0x2ee7de2a60e,24,12004,12332,C0O12016C1O12025C6O12038C11O12045C16O12062C17O12071C20O12090C24O12099C27O12080C32O12114C34O12126C39O12137C41O12135C44O12123C49O12157C52O12157C55O12186C62O12201C67O12212C75O12186C81O12236C88O12250C94O12247C100O12261C103O12261C106O12279C108O12288C109O12297C114O12304C118O12329,,
code-creation,LazyCompile,10,269682,0x2ee7de2a7ce,86,tryReadSync node:fs:429:21,0x25dd5bd7478,~
code-source-info,0x2ee7de2a7ce,80,11295,11540,C0O11345C2O11358C7O11383C12O11398C29O11398C35O11435C47O11441C48O11470C55O11484C57O11494C62O11497C67O11497C83O11520C85O11537,,
code-creation,LazyCompile,10,269768,0x2ee7de2a9be,258,readSync node:fs:684:18,0x25dd5bd7780,~
code-source-info,0x2ee7de2a9be,80,17835,18869,C0O17835C2O17879C7O17884C13O17909C18O17909C22O17952C29O17959C34O18036C40O18046C45O18046C50O18083C62O18102C68O18118C75O18129C80O18146C89O18191C94O18218C99O18247C112O18247C117O18295C124O18313C125O18324C130O18338C131O18347C132O18369C138O18380C143O18394C159O18400C164O18394C165O18526C170O18574C181O18526C186O18592C191O18619C195O18639C203O18639C208O18696C210O18718C215O18726C240O18726C246O18820C251O18820C255O18852C257O18866,,
code-creation,LazyCompile,10,269851,0x2ee7de2ac2e,52, node:internal/fs/utils:687:40,0x25dd5be2760,~
code-source-info,0x2ee7de2ac2e,81,19376,19505,C14O19406C22O19410C29O19435C30O19444C31O19455C44O19455C49O19492C51O19502,,
code-creation,LazyCompile,10,269897,0x2ee7de2ad9e,51, node:internal/validators:191:40,0x1424f57d138,~
code-source-info,0x2ee7de2ad9e,15,5871,6107,C14O5905C19O5910C25O5944C30O5975C43O5950C48O5944C50O6106,,
code-creation,LazyCompile,10,269950,0x2ee7de2aef6,151, node:internal/validators:73:3,0x1424f57cd80,~
code-source-info,0x2ee7de2aef6,15,1900,2288,C12O1920C25O1950C32O1984C38O2022C54O2028C59O2022C60O2082C65O2087C71O2118C87O2124C92O2118C93O2178C95O2188C102O2203C107O2217C117O2256C130O2269C143O2223C148O2217C150O2287,,
code-creation,LazyCompile,10,270017,0x2ee7de2b0fe,103, node:internal/fs/utils:637:3,0x25dd5be2620,~
code-source-info,0x2ee7de2b0fe,81,17950,18340,C0O17991C1O18002C6O18016C22O18022C27O18016C28O18082C29O18093C34O18107C50O18113C55O18107C56O18173C58O18184C64O18193C69O18218C82O18308C95O18224C100O18218C102O18339,,
code-creation,LazyCompile,10,270084,0x2ee7de2b406,151, node:internal/fs/utils:892:42,0x25dd5be2a80,~
code-source-info,0x2ee7de2b406,81,25170,25742,C0O25195C6O25236C14O25236C21O25285C27O25326C32O25349C35O25344C37O25341C47O25375C53O25382C56O25369C61O25398C77O25482C80O25477C98O25502C104O25509C117O25404C122O25398C125O25586C143O25592C148O25586C150O25741,,
code-creation,LazyCompile,10,270172,0x2ee7de2b5be,47,closeSync node:fs:526:19,0x25dd5bd75d8,~
code-source-info,0x2ee7de2b5be,80,13812,13940,C0O13822C5O13827C11O13864C13O13871C18O13879C31O13879C36O13909C41O13909C46O13939,,
code-creation,LazyCompile,10,270272,0x2ee7de2b6f6,162,toString node:buffer:783:46,0x30f43b38fc0,~
code-source-info,0x2ee7de2b6f6,24,24080,24672,C0O24080C2O24122C8O24129C13O24155C20O24173C25O24155C31O24181C32O24209C37O24222C38O24232C43O24243C48O24262C50O24272C55O24285C57O24295C58O24309C65O24326C71O24355C76O24367C83O24391C90O24406C92O24414C97O24429C99O24439C100O24445C104O24490C109O24490C115O24512C116O24530C119O24530C124O24559C126O24587C133O24593C138O24587C139O24645C156O24645C161O24669,,
code-creation,LazyCompile,10,270400,0x2ee7de2b9b6,499,getEncodingOps node:buffer:679:24,0x30f43b38e18,~
code-source-info,0x2ee7de2b9b
code-creation,LazyCompile,10,270539,0x2ee7de2bd9e,12,slice node:buffer:594:12,0x30f43b377e0,~
code-source-info,0x2ee7de2bd9e,24,17229,17275,C0O17254C5O17254C11O17275,,
code-creation,LazyCompile,10,271044,0x2ee7de2c876,499,Module._compile node:internal/modules/cjs/loader:1059:37,0x170e11dbfb0,~
code-source-info,0x2ee7de2c
code-creation,LazyCompile,10,271209,0x2ee7de2cdde,224,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x170e11d2ff8,~
code-source-info,0x2ee7de2cdde,108,2312,3375,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2645C68O2662C69O2669C70O2692C75O2719C80O2692C86O2799C88O2830C91O2858C96O2865C101O2830C107O2901C112O2921C117O2928C122O2951C126O2983C131O3001C136O3005C143O3035C150O3067C160O3098C166O3113C170O3001C178O3244C183O3262C188O3266C196O3300C206O3331C212O3346C216O3262C223O3374,,
code-creation,LazyCompile,10,271281,0x2ee7de2d836,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x170e11d2f58,~
code-source-info,0x2ee7de2d836,108,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,271335,0x2ee7de2d9ae,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0x170e11d2fa8,~
code-source-info,0x2ee7de2d9ae,108,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,271387,0x2ee7de2db26,30,validateBoolean node:internal/validators:139:25,0x1424f57cfb0,~
code-source-info,0x2ee7de2db26,15,4199,4313,C0O4218C6O4255C22O4261C27O4255C29O4312,,
code-creation,LazyCompile,10,271519,0x2ee7de2df1e,165,wrapSafe node:internal/modules/cjs/loader:1017:18,0x170e11db638,~
code-source-info,0x2ee7de2df1e,111,32708,33836,C0O32708C9O32752C17O32788C22O32795C27O32795C33O32815C40O32825C45O32842C52O32860C56O32952C64O32825C70O33229C74O33249C81O33259C86O33275C98O33397C102O33414C113O33259C118O33705C130O33730C135O33742C142O33753C147O33783C157O33783C162O33818C164O33818,,
code-creation,LazyCompile,10,271749,0x2ee7de2e6f6,472,compileFunction node:vm:308:25,0x25dd5bf4570,~
script-source,88,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  constants\x2C\x0d\n  compileFunction: _compileFunction\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = {}) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } =\x0d\n        require('internal/vm/module');\x0d\n      const { callbackMap } = internalBinding('module_wrap');\x0d\n      callbackMap.set(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInThisContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInThisContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    ArrayPrototypeUnshift(args\x2C contextifiedObject);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(options = {}) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [timeout\x2C displayErrors\x2C breakOnSigint\x2C breakFirstLine]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = {}) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = {}) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateArray(params\x2C 'params');\x0d\n    ArrayPrototypeForEach(params\x2C\x0d\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = _compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } =\x0d\n      require('internal/vm/module');\x0d\n    const { callbackMap } = internalBinding('module_wrap');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    callbackMap.set(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result.function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = {}) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x2ee7de2e6f
code-creation,LazyCompile,10,272559,0x2ee7de2f8be,95, node:internal/validators:168:39,0x1424f57d070,~
code-source-info,0x2ee7de2f8be,15,5152,5438,C16O5189C21O5194C27O5222C43O5228C48O5222C49O5294C56O5301C61O5336C66O5359C71O5377C87O5383C92O5377C94O5437,,
code-creation,LazyCompile,10,272609,0x2ee7de2fa1e,27, node:vm:313:27,0x2ee7de2e3c8,~
code-source-info,0x2ee7de2fa1e,88,10064,10115,C0O10078C10O10110C21O10078C26O10115,,
code-creation,Eval,10,272670,0x2ee7de2fc96,5, C:\\Users\\gaspa\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x2ee7de2fb50,~
script-source,133,C:\\Users\\gaspa\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js,const cluster = require('cluster')\n\ncluster.on('fork'\x2C () => {\n  throw new Error('0x does not support clustering.')\n})\n
code-source-info,0x2ee7de2fc96,133,0,119,C0O0C4O119,,
code-creation,Function,10,272706,0x2ee7de2fd7e,29, C:\\Users\\gaspa\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\no-cluster.js:1:1,0x2ee7de2fc10,~
code-source-info,0x2ee7de2fd7e,133,0,119,C0O16C3O16C8O44C21O44C28O118,,
code-creation,LazyCompile,10,272818,0x2ee7de2fff6,19,importModuleDynamicallyWrap node:internal/vm/module:435:37,0x2ee7de0bb88,~
code-source-info,0x2ee7de2fff6,131,12139,12597,C0O12139C13O12209C18O12594,,
code-creation,LazyCompile,10,272923,0x2ee7de311ce,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0x170e11d5b28,~
code-source-info,0x2ee7de311ce,110,1765,3805,C0O1765C22O1802C25O1806C29O1802C31O1828C33O1840C53O1873C58O1877C69O1893C73O1873C75O1921C81O1921C83O1949C89O1958C95O1987C104O3182C109O3423C111O3439C115O3586C117O3600C121O3614C126O3637C130O3627C134O3705C137O3733C141O3724C145O3751C148O3774C152O3765C156O3787C158O3802,,
code-creation,LazyCompile,10,273000,0x2ee7de3141e,14,require node:internal/modules/cjs/helpers:101:31,0x2ee7de310a0,~
code-source-info,0x2ee7de3141e,110,3208,3256,C0O3224C3O3235C8O3235C13O3249,,
code-creation,LazyCompile,10,273048,0x2ee7de3155e,10, node:internal/modules/cjs/helpers:29:66,0x170e11d5cf8,~
code-source-info,0x2ee7de3155e,110,838,865,C0O851C2O857C9O864,,
code-creation,LazyCompile,10,273103,0x2ee7de316d6,129,compileForPublicLoader node:internal/bootstrap/loaders:246:25,0x1424f54fb98,~
code-source-info,0x2ee7de316d6,9,7789,8477,C0O7809C6O7956C16O7999C33O7962C38O7956C39O8038C44O8038C48O8081C54O8273C61O8304C69O8273C75O8329C80O8347C90O8363C93O8379C98O8363C102O8345C106O8406C111O8406C115O8432C120O8432C124O8464C128O8472,,
code-creation,Eval,10,273180,0x2ee7de31a36,5, node:cluster:1:1,0x2ee7de318f0,~
script-source,134,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst childOrPrimary = 'NODE_UNIQUE_ID' in process.env ? 'child' : 'primary';\x0d\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\x0d\n
code-source-info,0x2ee7de31a36,134,0,1316,C0O0C4O1316,,
code-creation,Function,10,273258,0x2ee7de31ade,39, node:cluster:1:1,0x2ee7de319b0,~
code-source-info,0x2ee7de31ade,134,0,1316,C0O1195C3O1223C7O1212C19O1251C24O1296C29O1268C33O1266C38O1315,,
code-creation,Eval,10,273625,0x2ee7de3269e,5, node:internal/cluster/primary:1:1,0x2ee7de32318,~
script-source,135,node:internal/cluster/primary,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst { fork } = require('child_process');\x0d\nconst path = require('path');\x0d\nconst EventEmitter = require('events');\x0d\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\x0d\nconst SharedHandle = require('internal/cluster/shared_handle');\x0d\nconst Worker = require('internal/cluster/worker');\x0d\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\x0d\nconst cluster = new EventEmitter();\x0d\nconst intercom = new EventEmitter();\x0d\nconst SCHED_NONE = 1;\x0d\nconst SCHED_RR = 2;\x0d\nconst minPort = 1024;\x0d\nconst maxPort = 65535;\x0d\nconst { validatePort } = require('internal/validators');\x0d\n\x0d\nmodule.exports = cluster;\x0d\n\x0d\nconst handles = new SafeMap();\x0d\ncluster.isWorker = false;\x0d\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\x0d\ncluster.isPrimary = true;\x0d\ncluster.Worker = Worker;\x0d\ncluster.workers = {};\x0d\ncluster.settings = {};\x0d\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\x0d\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\x0d\n\x0d\nlet ids = 0;\x0d\nlet debugPortOffset = 1;\x0d\nlet initialized = false;\x0d\n\x0d\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\x0d\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\x0d\nif (schedulingPolicy === 'rr')\x0d\n  schedulingPolicy = SCHED_RR;\x0d\nelse if (schedulingPolicy === 'none')\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\nelse if (process.platform === 'win32') {\x0d\n  // Round-robin doesn't perform well on\x0d\n  // Windows due to the way IOCP is wired up.\x0d\n  schedulingPolicy = SCHED_NONE;\x0d\n} else\x0d\n  schedulingPolicy = SCHED_RR;\x0d\n\x0d\ncluster.schedulingPolicy = schedulingPolicy;\x0d\n\x0d\ncluster.setupPrimary = function(options) {\x0d\n  const settings = {\x0d\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\x0d\n    exec: process.argv[1]\x2C\x0d\n    execArgv: process.execArgv\x2C\x0d\n    silent: false\x2C\x0d\n    ...cluster.settings\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Tell V8 to write profile data for each process to a separate file.\x0d\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\x0d\n  // file. (Unusable because what V8 logs are memory addresses and each\x0d\n  // process has its own memory mappings.)\x0d\n  if (ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\x0d\n      !ArrayPrototypeSome(settings.execArgv\x2C\x0d\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\x0d\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\x0d\n  }\x0d\n\x0d\n  cluster.settings = settings;\x0d\n\x0d\n  if (initialized === true)\x0d\n    return process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  initialized = true;\x0d\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\x0d\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\x0d\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\x0d\n\x0d\n  process.nextTick(setupSettingsNT\x2C settings);\x0d\n\x0d\n  process.on('internalMessage'\x2C (message) => {\x0d\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\x0d\n      return;\x0d\n\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.state === 'online' || worker.state === 'listening') {\x0d\n        process._debugProcess(worker.process.pid);\x0d\n      } else {\x0d\n        worker.once('online'\x2C function() {\x0d\n          process._debugProcess(this.process.pid);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n// Deprecated alias must be same as setupPrimary\x0d\ncluster.setupMaster = cluster.setupPrimary;\x0d\n\x0d\nfunction setupSettingsNT(settings) {\x0d\n  cluster.emit('setup'\x2C settings);\x0d\n}\x0d\n\x0d\nfunction createWorkerProcess(id\x2C env) {\x0d\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\x0d\n  const execArgv = [...cluster.settings.execArgv];\x0d\n  const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\x0d\n  const nodeOptions = process.env.NODE_OPTIONS || '';\x0d\n\x0d\n  if (ArrayPrototypeSome(execArgv\x2C\x0d\n                         (arg) => RegExpPrototypeTest(debugArgRegex\x2C arg)) ||\x0d\n      RegExpPrototypeTest(debugArgRegex\x2C nodeOptions)) {\x0d\n    let inspectPort;\x0d\n    if ('inspectPort' in cluster.settings) {\x0d\n      if (typeof cluster.settings.inspectPort === 'function')\x0d\n        inspectPort = cluster.settings.inspectPort();\x0d\n      else\x0d\n        inspectPort = cluster.settings.inspectPort;\x0d\n\x0d\n      validatePort(inspectPort);\x0d\n    } else {\x0d\n      inspectPort = process.debugPort + debugPortOffset;\x0d\n      if (inspectPort > maxPort)\x0d\n        inspectPort = inspectPort - maxPort + minPort - 1;\x0d\n      debugPortOffset++;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${inspectPort}`);\x0d\n  }\x0d\n\x0d\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\x0d\n    cwd: cluster.settings.cwd\x2C\x0d\n    env: workerEnv\x2C\x0d\n    serialization: cluster.settings.serialization\x2C\x0d\n    silent: cluster.settings.silent\x2C\x0d\n    windowsHide: cluster.settings.windowsHide\x2C\x0d\n    execArgv: execArgv\x2C\x0d\n    stdio: cluster.settings.stdio\x2C\x0d\n    gid: cluster.settings.gid\x2C\x0d\n    uid: cluster.settings.uid\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction removeWorker(worker) {\x0d\n  assert(worker);\x0d\n  delete cluster.workers[worker.id];\x0d\n\x0d\n  if (ObjectKeys(cluster.workers).length === 0) {\x0d\n    assert(handles.size === 0\x2C 'Resource leak detected.');\x0d\n    intercom.emit('disconnect');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeHandlesForWorker(worker) {\x0d\n  assert(worker);\x0d\n\x0d\n  handles.forEach((handle\x2C key) => {\x0d\n    if (handle.remove(worker))\x0d\n      handles.delete(key);\x0d\n  });\x0d\n}\x0d\n\x0d\ncluster.fork = function(env) {\x0d\n  cluster.setupPrimary();\x0d\n  const id = ++ids;\x0d\n  const workerProcess = createWorkerProcess(id\x2C env);\x0d\n  const worker = new Worker({\x0d\n    id: id\x2C\x0d\n    process: workerProcess\x0d\n  });\x0d\n\x0d\n  worker.on('message'\x2C function(message\x2C handle) {\x0d\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\x0d\n  });\x0d\n\x0d\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if it has disconnected\x2C otherwise we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (!worker.isConnected()) {\x0d\n      removeHandlesForWorker(worker);\x0d\n      removeWorker(worker);\x0d\n    }\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'dead';\x0d\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\x0d\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\x0d\n  });\x0d\n\x0d\n  worker.process.once('disconnect'\x2C () => {\x0d\n    /*\x0d\n     * Now is a good time to remove the handles\x0d\n     * associated with this worker because it is\x0d\n     * not connected to the primary anymore.\x0d\n     */\x0d\n    removeHandlesForWorker(worker);\x0d\n\x0d\n    /*\x0d\n     * Remove the worker from the workers list only\x0d\n     * if its process has exited. Otherwise\x2C we might\x0d\n     * still want to access it.\x0d\n     */\x0d\n    if (worker.isDead())\x0d\n      removeWorker(worker);\x0d\n\x0d\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\x0d\n    worker.state = 'disconnected';\x0d\n    worker.emit('disconnect');\x0d\n    cluster.emit('disconnect'\x2C worker);\x0d\n  });\x0d\n\x0d\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\x0d\n  process.nextTick(emitForkNT\x2C worker);\x0d\n  cluster.workers[worker.id] = worker;\x0d\n  return worker;\x0d\n};\x0d\n\x0d\nfunction emitForkNT(worker) {\x0d\n  cluster.emit('fork'\x2C worker);\x0d\n}\x0d\n\x0d\ncluster.disconnect = function(cb) {\x0d\n  const workers = ObjectKeys(cluster.workers);\x0d\n\x0d\n  if (workers.length === 0) {\x0d\n    process.nextTick(() => intercom.emit('disconnect'));\x0d\n  } else {\x0d\n    for (const worker of ObjectValues(cluster.workers)) {\x0d\n      if (worker.isConnected()) {\x0d\n        worker.disconnect();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    intercom.once('disconnect'\x2C cb);\x0d\n};\x0d\n\x0d\nconst methodMessageMapping = {\x0d\n  close\x2C\x0d\n  exitedAfterDisconnect\x2C\x0d\n  listening\x2C\x0d\n  online\x2C\x0d\n  queryServer\x2C\x0d\n};\x0d\n\x0d\nfunction onmessage(message\x2C handle) {\x0d\n  const worker = this;\x0d\n\x0d\n  const fn = methodMessageMapping[message.act];\x0d\n\x0d\n  if (typeof fn === 'function')\x0d\n    fn(worker\x2C message);\x0d\n}\x0d\n\x0d\nfunction online(worker) {\x0d\n  worker.state = 'online';\x0d\n  worker.emit('online');\x0d\n  cluster.emit('online'\x2C worker);\x0d\n}\x0d\n\x0d\nfunction exitedAfterDisconnect(worker\x2C message) {\x0d\n  worker.exitedAfterDisconnect = true;\x0d\n  send(worker\x2C { ack: message.seq });\x0d\n}\x0d\n\x0d\nfunction queryServer(worker\x2C message) {\x0d\n  // Stop processing if worker already disconnecting\x0d\n  if (worker.exitedAfterDisconnect)\x0d\n    return;\x0d\n\x0d\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\x0d\n              `${message.fd}:${message.index}`;\x0d\n  let handle = handles.get(key);\x0d\n\x0d\n  if (handle === undefined) {\x0d\n    let address = message.address;\x0d\n\x0d\n    // Find shortest path for unix sockets because of the ~100 byte limit\x0d\n    if (message.port < 0 && typeof address === 'string' &&\x0d\n        process.platform !== 'win32') {\x0d\n\x0d\n      address = path.relative(process.cwd()\x2C address);\x0d\n\x0d\n      if (message.address.length < address.length)\x0d\n        address = message.address;\x0d\n    }\x0d\n\x0d\n    // UDP is exempt from round-robin connection balancing for what should\x0d\n    // be obvious reasons: it's connectionless. There is nothing to send to\x0d\n    // the workers except raw datagrams and that's pointless.\x0d\n    if (schedulingPolicy !== SCHED_RR ||\x0d\n        message.addressType === 'udp4' ||\x0d\n        message.addressType === 'udp6') {\x0d\n      handle = new SharedHandle(key\x2C address\x2C message);\x0d\n    } else {\x0d\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\x0d\n    }\x0d\n\x0d\n    handles.set(key\x2C handle);\x0d\n  }\x0d\n\x0d\n  if (!handle.data)\x0d\n    handle.data = message.data;\x0d\n\x0d\n  // Set custom server data\x0d\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\x0d\n    const { data } = handles.get(key);\x0d\n\x0d\n    if (errno)\x0d\n      handles.delete(key);  // Gives other workers a chance to retry.\x0d\n\x0d\n    send(worker\x2C {\x0d\n      errno\x2C\x0d\n      key\x2C\x0d\n      ack: message.seq\x2C\x0d\n      data\x2C\x0d\n      ...reply\x0d\n    }\x2C handle);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction listening(worker\x2C message) {\x0d\n  const info = {\x0d\n    addressType: message.addressType\x2C\x0d\n    address: message.address\x2C\x0d\n    port: message.port\x2C\x0d\n    fd: message.fd\x0d\n  };\x0d\n\x0d\n  worker.state = 'listening';\x0d\n  worker.emit('listening'\x2C info);\x0d\n  cluster.emit('listening'\x2C worker\x2C info);\x0d\n}\x0d\n\x0d\n// Server in worker is closing\x2C remove from list. The handle may have been\x0d\n// removed by a prior call to removeHandlesForWorker() so guard against that.\x0d\nfunction close(worker\x2C message) {\x0d\n  const key = message.key;\x0d\n  const handle = handles.get(key);\x0d\n\x0d\n  if (handle && handle.remove(worker))\x0d\n    handles.delete(key);\x0d\n}\x0d\n\x0d\nfunction send(worker\x2C message\x2C handle\x2C cb) {\x0d\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\x0d\n}\x0d\n\x0d\n// Extend generic Worker with methods specific to the primary process.\x0d\nWorker.prototype.disconnect = function() {\x0d\n  this.exitedAfterDisconnect = true;\x0d\n  send(this\x2C { act: 'disconnect' });\x0d\n  removeHandlesForWorker(this);\x0d\n  removeWorker(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWorker.prototype.destroy = function(signo) {\x0d\n  const proc = this.process;\x0d\n\x0d\n  signo = signo || 'SIGTERM';\x0d\n\x0d\n  if (this.isConnected()) {\x0d\n    this.once('disconnect'\x2C () => proc.kill(signo));\x0d\n    this.disconnect();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  proc.kill(signo);\x0d\n};\x0d\n
code-source-info,0x2ee7de3269e,135,0,11181,C0O0C4O11181,,
code-creation,Function,10,274184,0x2ee7de33066,640, node:internal/cluster/primary:1:1,0x2ee7de32618,~
code-source-info,0x2ee7de
code-creation,Eval,10,274483,0x2ee7de346ae,5, node:internal/cluster/round_robin_handle:1:1,0x2ee7de34498,~
script-source,136,node:internal/cluster/round_robin_handle,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Boolean\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst net = require('net');\x0d\nconst { sendHelper } = require('internal/cluster/utils');\x0d\nconst { append\x2C init\x2C isEmpty\x2C peek\x2C remove } = require('internal/linkedlist');\x0d\nconst { constants } = internalBinding('tcp_wrap');\x0d\n\x0d\nmodule.exports = RoundRobinHandle;\x0d\n\x0d\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags\x2C backlog }) {\x0d\n  this.key = key;\x0d\n  this.all = new SafeMap();\x0d\n  this.free = new SafeMap();\x0d\n  this.handles = init(ObjectCreate(null));\x0d\n  this.handle = null;\x0d\n  this.server = net.createServer(assert.fail);\x0d\n\x0d\n  if (fd >= 0)\x0d\n    this.server.listen({ fd\x2C backlog });\x0d\n  else if (port >= 0) {\x0d\n    this.server.listen({\x0d\n      port\x2C\x0d\n      host: address\x2C\x0d\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\x0d\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\x0d\n      backlog\x2C\x0d\n    });\x0d\n  } else\x0d\n    this.server.listen(address\x2C backlog);  // UNIX socket path.\x0d\n\x0d\n  this.server.once('listening'\x2C () => {\x0d\n    this.handle = this.server._handle;\x0d\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\x0d\n    this.server._handle = null;\x0d\n    this.server = null;\x0d\n  });\x0d\n}\x0d\n\x0d\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(this.all.has(worker.id) === false);\x0d\n  this.all.set(worker.id\x2C worker);\x0d\n\x0d\n  const done = () => {\x0d\n    if (this.handle.getsockname) {\x0d\n      const out = {};\x0d\n      this.handle.getsockname(out);\x0d\n      // TODO(bnoordhuis) Check err.\x0d\n      send(null\x2C { sockname: out }\x2C null);\x0d\n    } else {\x0d\n      send(null\x2C null\x2C null);  // UNIX socket.\x0d\n    }\x0d\n\x0d\n    this.handoff(worker);  // In case there are connections pending.\x0d\n  };\x0d\n\x0d\n  if (this.server === null)\x0d\n    return done();\x0d\n\x0d\n  // Still busy binding.\x0d\n  this.server.once('listening'\x2C done);\x0d\n  this.server.once('error'\x2C (err) => {\x0d\n    send(err.errno\x2C null);\x0d\n  });\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.remove = function(worker) {\x0d\n  const existed = this.all.delete(worker.id);\x0d\n\x0d\n  if (!existed)\x0d\n    return false;\x0d\n\x0d\n  this.free.delete(worker.id);\x0d\n\x0d\n  if (this.all.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  while (!isEmpty(this.handles)) {\x0d\n    const handle = peek(this.handles);\x0d\n    handle.close();\x0d\n    remove(handle);\x0d\n  }\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\x0d\n  append(this.handles\x2C handle);\x0d\n  // eslint-disable-next-line node-core/no-array-destructuring\x0d\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\x0d\n\x0d\n  if (ArrayIsArray(workerEntry)) {\x0d\n    const { 0: workerId\x2C 1: worker } = workerEntry;\x0d\n    this.free.delete(workerId);\x0d\n    this.handoff(worker);\x0d\n  }\x0d\n};\x0d\n\x0d\nRoundRobinHandle.prototype.handoff = function(worker) {\x0d\n  if (!this.all.has(worker.id)) {\x0d\n    return;  // Worker is closing (or has closed) the server.\x0d\n  }\x0d\n\x0d\n  const handle = peek(this.handles);\x0d\n\x0d\n  if (handle === null) {\x0d\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  remove(handle);\x0d\n\x0d\n  const message = { act: 'newconn'\x2C key: this.key };\x0d\n\x0d\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\x0d\n    if (reply.accepted)\x0d\n      handle.close();\x0d\n    else\x0d\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\x0d\n\x0d\n    this.handoff(worker);\x0d\n  });\x0d\n};\x0d\n
code-source-info,0x2ee7de346ae,136,0,3423,C0O0C4O3423,,
code-creation,Function,10,274716,0x2ee7de34a76,217, node:internal/cluster/round_robin_handle:1:1,0x2ee7de34628,~
code-source-info,0x2ee7de34a76,136,0,3423,C0O0C49O28C55O45C61O57C67O74C73O119C76O119C80O119C82O160C85O160C89O160C91O200C94O200C99O185C105O284C108O284C113O244C119O252C125O258C131O267C137O273C143O339C146O339C151O325C157O371C159O386C163O1307C172O1321C176O1999C185O2016C189O2419C198O2440C202O2807C211O2825C216O3422,,
code-creation,Eval,10,274865,0x2ee7de35396,5, node:internal/cluster/utils:1:1,0x2ee7de35220,~
script-source,137,node:internal/cluster/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = {\x0d\n  sendHelper\x2C\x0d\n  internal\x0d\n};\x0d\n\x0d\nconst callbacks = new SafeMap();\x0d\nlet seq = 0;\x0d\n\x0d\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\x0d\n  if (!proc.connected)\x0d\n    return false;\x0d\n\x0d\n  // Mark message as internal. See INTERNAL_PREFIX\x0d\n  // in lib/internal/child_process.js\x0d\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\x0d\n\x0d\n  if (typeof cb === 'function')\x0d\n    callbacks.set(seq\x2C cb);\x0d\n\x0d\n  seq += 1;\x0d\n  return proc.send(message\x2C handle);\x0d\n}\x0d\n\x0d\n// Returns an internalMessage listener that hands off normal messages\x0d\n// to the callback but intercepts and redirects ACK messages.\x0d\nfunction internal(worker\x2C cb) {\x0d\n  return function onInternalMessage(message\x2C handle) {\x0d\n    if (message.cmd !== 'NODE_CLUSTER')\x0d\n      return;\x0d\n\x0d\n    let fn = cb;\x0d\n\x0d\n    if (message.ack !== undefined) {\x0d\n      const callback = callbacks.get(message.ack);\x0d\n\x0d\n      if (callback !== undefined) {\x0d\n        fn = callback;\x0d\n        callbacks.delete(message.ack);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ReflectApply(fn\x2C worker\x2C arguments);\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x2ee7de35396,137,0,1104,C0O0C4O1104,,
code-creation,Function,10,274951,0x2ee7de35556,72, node:internal/cluster/utils:1:1,0x2ee7de35310,~
code-source-info,0x2ee7de35556,137,0,1104,C0O0C24O28C30O45C35O75C42O97C48O112C54O90C58O146C60O146C65O146C67O172C68O172C71O1103,,
code-creation,Eval,10,275121,0x2ee7de35b66,5, node:internal/cluster/shared_handle:1:1,0x2ee7de359e0,~
script-source,138,node:internal/cluster/shared_handle,'use strict';\x0d\nconst { SafeMap } = primordials;\x0d\nconst assert = require('internal/assert');\x0d\nconst dgram = require('internal/dgram');\x0d\nconst net = require('net');\x0d\n\x0d\nmodule.exports = SharedHandle;\x0d\n\x0d\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\x0d\n  this.key = key;\x0d\n  this.workers = new SafeMap();\x0d\n  this.handle = null;\x0d\n  this.errno = 0;\x0d\n\x0d\n  let rval;\x0d\n  if (addressType === 'udp4' || addressType === 'udp6')\x0d\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n  else\x0d\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n  if (typeof rval === 'number')\x0d\n    this.errno = rval;\x0d\n  else\x0d\n    this.handle = rval;\x0d\n}\x0d\n\x0d\nSharedHandle.prototype.add = function(worker\x2C send) {\x0d\n  assert(!this.workers.has(worker.id));\x0d\n  this.workers.set(worker.id\x2C worker);\x0d\n  send(this.errno\x2C null\x2C this.handle);\x0d\n};\x0d\n\x0d\nSharedHandle.prototype.remove = function(worker) {\x0d\n  if (!this.workers.has(worker.id))\x0d\n    return false;\x0d\n\x0d\n  this.workers.delete(worker.id);\x0d\n\x0d\n  if (this.workers.size !== 0)\x0d\n    return false;\x0d\n\x0d\n  this.handle.close();\x0d\n  this.handle = null;\x0d\n  return true;\x0d\n};\x0d\n
code-source-info,0x2ee7de35b66,138,0,1147,C0O0C4O1147,,
code-creation,Function,10,275210,0x2ee7de35d9e,89, node:internal/cluster/shared_handle:1:1,0x2ee7de35ae0,~
code-source-info,0x2ee7de35d9e,138,0,1147,C0O0C22O23C28O64C31O64C35O64C37O107C40O107C44O107C46O147C49O147C53O147C55O166C57O181C61O711C70O725C74O893C83O910C88O1146,,
code-creation,Eval,10,275346,0x2ee7de36386,5, node:internal/cluster/worker:1:1,0x2ee7de36210,~
script-source,139,node:internal/cluster/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\nmodule.exports = Worker;\x0d\n\x0d\n// Common Worker implementation shared between the cluster primary and workers.\x0d\nfunction Worker(options) {\x0d\n  if (!(this instanceof Worker))\x0d\n    return new Worker(options);\x0d\n\x0d\n  ReflectApply(EventEmitter\x2C this\x2C []);\x0d\n\x0d\n  if (options === null || typeof options !== 'object')\x0d\n    options = {};\x0d\n\x0d\n  this.exitedAfterDisconnect = undefined;\x0d\n\x0d\n  this.state = options.state || 'none';\x0d\n  this.id = options.id | 0;\x0d\n\x0d\n  if (options.process) {\x0d\n    this.process = options.process;\x0d\n    this.process.on('error'\x2C (code\x2C signal) =>\x0d\n      this.emit('error'\x2C code\x2C signal)\x0d\n    );\x0d\n    this.process.on('message'\x2C (message\x2C handle) =>\x0d\n      this.emit('message'\x2C message\x2C handle)\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\x0d\n\x0d\nWorker.prototype.kill = function() {\x0d\n  ReflectApply(this.destroy\x2C this\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.send = function() {\x0d\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\x0d\n};\x0d\n\x0d\nWorker.prototype.isDead = function() {\x0d\n  return this.process.exitCode != null || this.process.signalCode != null;\x0d\n};\x0d\n\x0d\nWorker.prototype.isConnected = function() {\x0d\n  return this.process.connected;\x0d\n};\x0d\n
code-source-info,0x2ee7de36386,139,0,1370,C0O0C4O1370,,
code-creation,Function,10,275446,0x2ee7de366ee,141, node:internal/cluster/worker:1:1,0x2ee7de36300,~
code-source-info,0x2ee7de366ee,139,0,1370,C0O0C17O28C22O53C28O109C31O109C35O109C37O131C39O146C43O849C46O877C54O901C59O849C64O914C70O914C75O961C78O968C87O983C91O1053C94O1060C103O1075C107O1165C110O1172C119O1189C123O1287C126O1294C135O1316C140O1369,,
code-creation,LazyCompile,10,275677,0x2ee7de36e86,151,getESMFacade node:internal/bootstrap/loaders:264:15,0x1424f54fc10,~
code-source-info,0x2ee7de36e86,9,8495,9141,C0O8495C8O8514C14O8534C18O8541C19O8570C29O8570C34O8555C39O8619C42O8632C51O8664C53O8664C55O8695C62O8720C67O8695C72O8738C82O8738C87O8787C89O8840C102O8801C107O8799C111O9052C116O9059C121O9059C125O9084C130O9091C140O9091C146O9129C150O9136,,
code-creation,LazyCompile,10,275784,0x2ee7de3726e,40, node:internal/bootstrap/loaders:273:15,0x2ee7de36d80,~
code-source-info,0x2ee7de3726e,9,8868,8976,C0O8882C5O8895C10O8895C14O8924C24O8945C27O8958C32O8924C39O8975,,
code-creation,LazyCompile,10,275847,0x2ee7de373c6,89,syncExports node:internal/bootstrap/loaders:287:14,0x1424f54fc80,~
code-source-info,0x2ee7de373c6,9,9454,9797,C0O9483C5O9509C11O9539C13O9552C17O9544C22O9595C24O9600C28O9614C30O9629C35O9644C37O9668C42O9675C51O9728C54O9740C59O9766C67O9728C73O9675C79O9561C84O9526C88O9796,,
code-creation,LazyCompile,10,275901,0x2ee7de3752e,35,getOwn node:internal/bootstrap/loaders:180:16,0x1424f54f918,~
code-source-info,0x2ee7de3752e,9,5677,5835,C0O5714C5O5721C14O5776C26O5776C34O5832,,
code-creation,RegExp,3,276130,0x1fd14907d00,1532,(?:^|\\/)\\.?\\.$
code-creation,RegExp,3,276406,0x1fd14908360,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,Function,11,276632,0x1fd14908a00,3380,dirname node:path:653:10,0x22ee8ccd768,^
code-source-info,0x1fd14908a00,41,21280,23908,,,
code-creation,Function,11,276680,0x1fd149097a0,1936,toNamespacedPath node:path:618:19,0x22ee8ccd6f8,^
code-source-info,0x1fd149097a0,41,20086,21201,,,
code-creation,Function,11,276708,0x1fd14909fa0,320,isFileType node:fs:205:20,0x25dd5bd7010,^
code-source-info,0x1fd14909fa0,80,5489,5737,,,
code-creation,Function,11,276732,0x1fd1490a140,304,getOwn node:internal/bootstrap/loaders:180:16,0x1424f54f918,^
code-source-info,0x1fd1490a140,9,5677,5835,,,
code-creation,Function,11,276757,0x1fd1490a2e0,672,syncExports node:internal/bootstrap/loaders:287:14,0x1424f54fc80,^
code-source-info,0x1fd1490a2e0,9,9454,9797,,,
code-creation,Eval,10,277124,0x2ee7de381fe,5, C:\\Users\\gaspa\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x2ee7de38058,~
script-source,140,C:\\Users\\gaspa\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js,'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3\x2C\n    readable: false\x2C\n    writable: true\n  })\n  Object.defineProperty(process\x2C 'stdout'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout\x2C 'fd'\x2C {\n    value: socket._handle.fd\n  })\n}\n
code-source-info,0x2ee7de381fe,140,0,494,C0O0C4O494,,
code-creation,Function,10,277182,0x2ee7de384a6,157, C:\\Users\\gaspa\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:1:1,0x2ee7de38178,~
code-source-info,0x2ee7de384a6,140,0,494,C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493,,
code-creation,LazyCompile,10,277317,0x2ee7de38976,37,get SocketAddress node:net:1830:20,0x144a20eb860,~
code-source-info,0x2ee7de38976,101,50750,50858,C0O50760C14O50778C19O50811C26O50774C32O50832C36O50853,,
code-creation,Eval,10,277427,0x2ee7de38d36,5, node:worker_threads:1:1,0x2ee7de38bf0,~
script-source,141,node:worker_threads,'use strict';\x0d\n\x0d\nconst {\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x0d\n} = require('internal/worker');\x0d\n\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  BroadcastChannel\x2C\x0d\n} = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  markAsUntransferable\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nmodule.exports = {\x0d\n  isMainThread\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  resourceLimits\x2C\x0d\n  threadId\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  Worker\x2C\x0d\n  parentPort: null\x2C\x0d\n  workerData: null\x2C\x0d\n  BroadcastChannel\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n};\x0d\n
code-source-info,0x2ee7de38d36,141,0,727,C0O0C4O727,,
code-creation,Function,10,277502,0x2ee7de38f46,180, node:worker_threads:1:1,0x2ee7de38cb0,~
code-source-info,0x2ee7de38f46,141,0,727,C0O149C3O149C8O28C13O45C18O59C23O78C28O101C33O124C38O137C43O303C46O303C51O191C56O207C61O226C66O255C71O280C76O375C79O375C84O348C89O406C96O428C102O445C108O461C114O480C120O505C126O534C132O559C138O578C144O591C150O605C156O658C162O679C168O702C174O421C179O726,,
tick,0x7ff65222ba29,277976,1,0x7ff651bfe150,2,0x7ff6525458c0,0x1fd14904e3b,0x1fd149048e5,0x2ee7de38f49,0x1fd14904f03,0x2ee7de31702,0x2ee7de2756b,0x2ee7de15ebe,0x2ee7de15af2,0x2ee7de31426,0x2ee7de384b6,0x2ee7de2ca41,0x2ee7de28a3b,0x2ee7de27f3e,0x2ee7de15f27,0x2ee7de15af2,0x2ee7de149a3,0x2ee7de1474d,0x144a20c654c,0x144a20c2065
code-creation,Eval,10,278260,0x2ee7de39ece,5, node:internal/worker:1:1,0x2ee7de398f0,~
script-source,142,node:internal/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  JSONStringify\x2C\x0d\n  MathMax\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectEntries\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  Uint32Array\x2C\x0d\n  globalThis: { Atomics\x2C SharedArrayBuffer }\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst path = require('path');\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst errorCodes = require('internal/errors').codes;\x0d\nconst {\x0d\n  ERR_WORKER_NOT_RUNNING\x2C\x0d\n  ERR_WORKER_PATH\x2C\x0d\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\x0d\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = errorCodes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst workerIo = require('internal/worker/io');\x0d\nconst {\x0d\n  drainMessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x0d\n} = workerIo;\x0d\nconst { deserializeError } = require('internal/error_serdes');\x0d\nconst { fileURLToPath\x2C isURLInstance\x2C pathToFileURL } = require('internal/url');\x0d\nconst { validateArray } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  resourceLimits: resourceLimitsRaw\x2C\x0d\n  threadId\x2C\x0d\n  Worker: WorkerImpl\x2C\x0d\n  kMaxYoungGenerationSizeMb\x2C\x0d\n  kMaxOldGenerationSizeMb\x2C\x0d\n  kCodeRangeSizeMb\x2C\x0d\n  kStackSizeMb\x2C\x0d\n  kTotalResourceLimitCount\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kPublicPort = Symbol('kPublicPort');\x0d\nconst kDispose = Symbol('kDispose');\x0d\nconst kOnExit = Symbol('kOnExit');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\x0d\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\x0d\nconst kParentSideStdio = Symbol('kParentSideStdio');\x0d\nconst kLoopStartTime = Symbol('kLoopStartTime');\x0d\nconst kIsOnline = Symbol('kIsOnline');\x0d\n\x0d\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\x0d\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nlet cwdCounter;\x0d\n\x0d\nconst environmentData = new SafeMap();\x0d\n\x0d\nif (isMainThread) {\x0d\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\x0d\n  const originalChdir = process.chdir;\x0d\n  process.chdir = function(path) {\x0d\n    Atomics.add(cwdCounter\x2C 0\x2C 1);\x0d\n    originalChdir(path);\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction setEnvironmentData(key\x2C value) {\x0d\n  if (value === undefined)\x0d\n    environmentData.delete(key);\x0d\n  else\x0d\n    environmentData.set(key\x2C value);\x0d\n}\x0d\n\x0d\nfunction getEnvironmentData(key) {\x0d\n  return environmentData.get(key);\x0d\n}\x0d\n\x0d\nfunction assignEnvironmentData(data) {\x0d\n  if (data === undefined) return;\x0d\n  data.forEach((value\x2C key) => {\x0d\n    environmentData.set(key\x2C value);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass Worker extends EventEmitter {\x0d\n  constructor(filename\x2C options = {}) {\x0d\n    super();\x0d\n    debug(`[${threadId}] create new worker`\x2C filename\x2C options);\x0d\n    if (options.execArgv)\x0d\n      validateArray(options.execArgv\x2C 'options.execArgv');\x0d\n\x0d\n    let argv;\x0d\n    if (options.argv) {\x0d\n      validateArray(options.argv\x2C 'options.argv');\x0d\n      argv = ArrayPrototypeMap(options.argv\x2C String);\x0d\n    }\x0d\n\x0d\n    let url\x2C doEval;\x0d\n    if (options.eval) {\x0d\n      if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'options.eval'\x2C\x0d\n          options.eval\x2C\x0d\n          'must be false when \\'filename\\' is not a string'\x0d\n        );\x0d\n      }\x0d\n      url = null;\x0d\n      doEval = 'classic';\x0d\n    } else if (isURLInstance(filename) && filename.protocol === 'data:') {\x0d\n      url = null;\x0d\n      doEval = 'module';\x0d\n      filename = `import ${JSONStringify(`${filename}`)}`;\x0d\n    } else {\x0d\n      doEval = false;\x0d\n      if (isURLInstance(filename)) {\x0d\n        url = filename;\x0d\n        filename = fileURLToPath(filename);\x0d\n      } else if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'filename'\x2C\x0d\n          ['string'\x2C 'URL']\x2C\x0d\n          filename\x0d\n        );\x0d\n      } else if (path.isAbsolute(filename) ||\x0d\n                 RegExpPrototypeTest(/^\\.\\.?[\\\\/]/\x2C filename)) {\x0d\n        filename = path.resolve(filename);\x0d\n        url = pathToFileURL(filename);\x0d\n      } else {\x0d\n        throw new ERR_WORKER_PATH(filename);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let env;\x0d\n    if (typeof options.env === 'object' && options.env !== null) {\x0d\n      env = ObjectCreate(null);\x0d\n      ArrayPrototypeForEach(\x0d\n        ObjectEntries(options.env)\x2C\x0d\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x0d\n      );\x0d\n    } else if (options.env == null) {\x0d\n      env = process.env;\x0d\n    } else if (options.env !== SHARE_ENV) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.env'\x2C\x0d\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\x0d\n        options.env);\x0d\n    }\x0d\n\x0d\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\x0d\n    this[kHandle] = new WorkerImpl(url\x2C\x0d\n                                   env === process.env ? null : env\x2C\x0d\n                                   options.execArgv\x2C\x0d\n                                   parseResourceLimits(options.resourceLimits)\x2C\x0d\n                                   !!(options.trackUnmanagedFds ?? true));\x0d\n    if (this[kHandle].invalidExecArgv) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\x0d\n    }\x0d\n    if (this[kHandle].invalidNodeOptions) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\x0d\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\x0d\n    }\x0d\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\x0d\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\x0d\n    };\x0d\n    this[kPort] = this[kHandle].messagePort;\x0d\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\x0d\n    this[kPort].start();\x0d\n    this[kPort].unref();\x0d\n    this[kPort][kWaitingStreams] = 0;\x0d\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\x0d\n\x0d\n    let stdin = null;\x0d\n    if (options.stdin)\x0d\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\x0d\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\x0d\n    if (!options.stdout) {\x0d\n      stdout[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stdout\x2C process.stdout);\x0d\n    }\x0d\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\x0d\n    if (!options.stderr) {\x0d\n      stderr[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stderr\x2C process.stderr);\x0d\n    }\x0d\n\x0d\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\x0d\n\x0d\n    const { port1\x2C port2 } = new MessageChannel();\x0d\n    const transferList = [port2];\x0d\n    // If transferList is provided.\x0d\n    if (options.transferList)\x0d\n      ArrayPrototypePush(transferList\x2C\x0d\n                         ...new SafeArrayIterator(options.transferList));\x0d\n\x0d\n    this[kPublicPort] = port1;\x0d\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\x0d\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\x0d\n    });\x0d\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\x0d\n    this[kPort].postMessage({\x0d\n      argv\x2C\x0d\n      type: messageTypes.LOAD_SCRIPT\x2C\x0d\n      filename\x2C\x0d\n      doEval\x2C\x0d\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\x0d\n      workerData: options.workerData\x2C\x0d\n      environmentData\x2C\x0d\n      publicPort: port2\x2C\x0d\n      manifestURL: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').url :\x0d\n        null\x2C\x0d\n      manifestSrc: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').src :\x0d\n        null\x2C\x0d\n      hasStdin: !!options.stdin\x0d\n    }\x2C transferList);\x0d\n    // Use this to cache the Worker's loopStart value once available.\x0d\n    this[kLoopStartTime] = -1;\x0d\n    this[kIsOnline] = false;\x0d\n    this.performance = {\x0d\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\x0d\n    };\x0d\n    // Actually start the new thread now that everything is in place.\x0d\n    this[kHandle].startThread();\x0d\n\x0d\n    process.nextTick(() => process.emit('worker'\x2C this));\x0d\n  }\x0d\n\x0d\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\x0d\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\x0d\n    drainMessagePort(this[kPublicPort]);\x0d\n    drainMessagePort(this[kPort]);\x0d\n    this.removeAllListeners('message');\x0d\n    this.removeAllListeners('messageerrors');\x0d\n    this[kPublicPort].unref();\x0d\n    this[kPort].unref();\x0d\n    this[kDispose]();\x0d\n    if (customErr) {\x0d\n      debug(`[${threadId}] failing with custom error ${customErr} \\\x0d\n        and with reason ${customErrReason}`);\x0d\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\x0d\n    }\x0d\n    this.emit('exit'\x2C code);\x0d\n    this.removeAllListeners();\x0d\n  }\x0d\n\x0d\n  [kOnCouldNotSerializeErr]() {\x0d\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\x0d\n  }\x0d\n\x0d\n  [kOnErrorMessage](serialized) {\x0d\n    // This is what is called for uncaught exceptions.\x0d\n    const error = deserializeError(serialized);\x0d\n    this.emit('error'\x2C error);\x0d\n  }\x0d\n\x0d\n  [kOnMessage](message) {\x0d\n    switch (message.type) {\x0d\n      case messageTypes.UP_AND_RUNNING:\x0d\n        this[kIsOnline] = true;\x0d\n        return this.emit('online');\x0d\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\x0d\n        return this[kOnCouldNotSerializeErr]();\x0d\n      case messageTypes.ERROR_MESSAGE:\x0d\n        return this[kOnErrorMessage](message.error);\x0d\n      case messageTypes.STDIO_PAYLOAD:\x0d\n      {\x0d\n        const { stream\x2C chunks } = message;\x0d\n        const readable = this[kParentSideStdio][stream];\x0d\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\x0d\n          readable.push(chunk\x2C encoding);\x0d\n        });\x0d\n        return;\x0d\n      }\x0d\n      case messageTypes.STDIO_WANTS_MORE_DATA:\x0d\n      {\x0d\n        const { stream } = message;\x0d\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    assert.fail(`Unknown worker message type ${message.type}`);\x0d\n  }\x0d\n\x0d\n  [kDispose]() {\x0d\n    this[kHandle].onexit = null;\x0d\n    this[kHandle] = null;\x0d\n    this[kPort] = null;\x0d\n    this[kPublicPort] = null;\x0d\n\x0d\n    const { stdout\x2C stderr } = this[kParentSideStdio];\x0d\n\x0d\n    if (!stdout.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\x0d\n      stdout.push(null);\x0d\n    }\x0d\n    if (!stderr.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\x0d\n      stderr.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  postMessage(...args) {\x0d\n    if (this[kPublicPort] === null) return;\x0d\n\x0d\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\x0d\n  }\x0d\n\x0d\n  terminate(callback) {\x0d\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\x0d\n\x0d\n    this.ref();\x0d\n\x0d\n    if (typeof callback === 'function') {\x0d\n      process.emitWarning(\x0d\n        'Passing a callback to worker.terminate() is deprecated. ' +\x0d\n        'It returns a Promise instead.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0132');\x0d\n      if (this[kHandle] === null) return PromiseResolve();\x0d\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\x0d\n    }\x0d\n\x0d\n    if (this[kHandle] === null) return PromiseResolve();\x0d\n\x0d\n    this[kHandle].stopThread();\x0d\n\x0d\n    // Do not use events.once() here\x2C because the 'exit' event will always be\x0d\n    // emitted regardless of any errors\x2C and the point is to only resolve\x0d\n    // once the thread has actually stopped.\x0d\n    return new Promise((resolve) => {\x0d\n      this.once('exit'\x2C resolve);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].ref();\x0d\n    this[kPublicPort].ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].unref();\x0d\n    this[kPublicPort].unref();\x0d\n  }\x0d\n\x0d\n  get threadId() {\x0d\n    if (this[kHandle] === null) return -1;\x0d\n\x0d\n    return this[kHandle].threadId;\x0d\n  }\x0d\n\x0d\n  get stdin() {\x0d\n    return this[kParentSideStdio].stdin;\x0d\n  }\x0d\n\x0d\n  get stdout() {\x0d\n    return this[kParentSideStdio].stdout;\x0d\n  }\x0d\n\x0d\n  get stderr() {\x0d\n    return this[kParentSideStdio].stderr;\x0d\n  }\x0d\n\x0d\n  get resourceLimits() {\x0d\n    if (this[kHandle] === null) return {};\x0d\n\x0d\n    return makeResourceLimits(this[kHandle].getResourceLimits());\x0d\n  }\x0d\n\x0d\n  getHeapSnapshot() {\x0d\n    const heapSnapshotTaker = this[kHandle] && this[kHandle].takeHeapSnapshot();\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\x0d\n      heapSnapshotTaker.ondone = (handle) => {\x0d\n        const { HeapSnapshotStream } = require('internal/heap_utils');\x0d\n        resolve(new HeapSnapshotStream(handle));\x0d\n      };\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeWithoutWarning(source\x2C dest) {\x0d\n  const sourceMaxListeners = source._maxListeners;\x0d\n  const destMaxListeners = dest._maxListeners;\x0d\n  source.setMaxListeners(Infinity);\x0d\n  dest.setMaxListeners(Infinity);\x0d\n\x0d\n  source.pipe(dest);\x0d\n\x0d\n  source._maxListeners = sourceMaxListeners;\x0d\n  dest._maxListeners = destMaxListeners;\x0d\n}\x0d\n\x0d\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\x0d\nfunction parseResourceLimits(obj) {\x0d\n  const ret = resourceLimitsArray;\x0d\n  TypedArrayPrototypeFill(ret\x2C -1);\x0d\n  if (typeof obj !== 'object' || obj === null) return ret;\x0d\n\x0d\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\x0d\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\x0d\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\x0d\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\x0d\n  if (typeof obj.codeRangeSizeMb === 'number')\x0d\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\x0d\n  if (typeof obj.stackSizeMb === 'number')\x0d\n    ret[kStackSizeMb] = obj.stackSizeMb;\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction makeResourceLimits(float64arr) {\x0d\n  return {\x0d\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\x0d\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\x0d\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\x0d\n    stackSizeMb: float64arr[kStackSizeMb]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\x0d\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\x0d\n  // has had a chance to turn. So it will be impossible to read the ELU of\x0d\n  // a worker thread immediately after it's been created.\x0d\n  if (!this[kIsOnline] || !this[kHandle]) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  // Cache loopStart\x2C since it's only written to once.\x0d\n  if (this[kLoopStartTime] === -1) {\x0d\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\x0d\n    if (this[kLoopStartTime] === -1)\x0d\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  if (util2) {\x0d\n    const idle = util1.idle - util2.idle;\x0d\n    const active = util1.active - util2.active;\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle = this[kHandle].loopIdleTime();\x0d\n\x0d\n  // Using performance.now() here is fine since it's always the time from\x0d\n  // the beginning of the process\x2C and is why it needs to be offset by the\x0d\n  // loopStart time (which is also calculated from the beginning of the\x0d\n  // process).\x0d\n  const active = now() - this[kLoopStartTime] - idle;\x0d\n\x0d\n  if (!util1) {\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  const idle_delta = idle - util1.idle;\x0d\n  const active_delta = active - util1.active;\x0d\n  const utilization = active_delta / (idle_delta + active_delta);\x0d\n  return { idle: idle_delta\x2C active: active_delta\x2C utilization };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits:\x0d\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  assignEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x2C\x0d\n};\x0d\n
code-source-info,0x2ee7de39ece,142,0,15857,C0O0C4O15857,,
code-creation,Function,10,279536,0x2ee7de3b21e,1185, node:internal/worker:1:1,0x2ee7de39e48,~
code-source-info,0x2ee7de3b21e
code-creation,Eval,10,280285,0x2ee7de3d166,5, node:internal/error_serdes:1:1,0x2ee7de3cea0,~
script-source,143,node:internal/error_serdes,'use strict';\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  EvalError\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeToString\x2C\x0d\n  RangeError\x2C\x0d\n  ReferenceError\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kSerializedError = 0;\x0d\nconst kSerializedObject = 1;\x0d\nconst kInspectedError = 2;\x0d\n\x0d\nconst errors = {\x0d\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x0d\n};\x0d\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\x0d\n\x0d\nfunction TryGetAllProperties(object\x2C target = object) {\x0d\n  const all = ObjectCreate(null);\x0d\n  if (object === null)\x0d\n    return all;\x0d\n  ObjectAssign(all\x2C\x0d\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\x0d\n  const keys = ObjectGetOwnPropertyNames(object);\x0d\n  ArrayPrototypeForEach(keys\x2C (key) => {\x0d\n    let descriptor;\x0d\n    try {\x0d\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\x0d\n    } catch { return; }\x0d\n    const getter = descriptor.get;\x0d\n    if (getter && key !== '__proto__') {\x0d\n      try {\x0d\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n    }\x0d\n    if ('value' in descriptor && typeof descriptor.value !== 'function') {\x0d\n      delete descriptor.get;\x0d\n      delete descriptor.set;\x0d\n      all[key] = descriptor;\x0d\n    }\x0d\n  });\x0d\n  return all;\x0d\n}\x0d\n\x0d\nfunction GetConstructors(object) {\x0d\n  const constructors = [];\x0d\n\x0d\n  for (let current = object;\x0d\n    current !== null;\x0d\n    current = ObjectGetPrototypeOf(current)) {\x0d\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\x0d\n    if (desc && desc.value) {\x0d\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\x0d\n        value: desc.value\x2C enumerable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return constructors;\x0d\n}\x0d\n\x0d\nfunction GetName(object) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\x0d\n  return desc && desc.value;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect;\x0d\nfunction inspect(...args) {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect.inspect(...args);\x0d\n}\x0d\n\x0d\nlet serialize;\x0d\nfunction serializeError(error) {\x0d\n  if (!serialize) serialize = require('v8').serialize;\x0d\n  try {\x0d\n    if (typeof error === 'object' &&\x0d\n        ObjectPrototypeToString(error) === '[object Error]') {\x0d\n      const constructors = GetConstructors(error);\x0d\n      for (let i = 0; i < constructors.length; i++) {\x0d\n        const name = GetName(constructors[i]);\x0d\n        if (errorConstructorNames.has(name)) {\x0d\n          const serialized = serialize({\x0d\n            constructor: name\x2C\x0d\n            properties: TryGetAllProperties(error)\x0d\n          });\x0d\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  try {\x0d\n    const serialized = serialize(error);\x0d\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return Buffer.concat([Buffer.from([kInspectedError])\x2C\x0d\n                        Buffer.from(inspect(error)\x2C 'utf8')]);\x0d\n}\x0d\n\x0d\nlet deserialize;\x0d\nfunction deserializeError(error) {\x0d\n  if (!deserialize) deserialize = require('v8').deserialize;\x0d\n  switch (error[0]) {\x0d\n    case kSerializedError: {\x0d\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\x0d\n      const ctor = errors[constructor];\x0d\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\x0d\n        value: { value: 'Error'\x2C configurable: true }\x2C\x0d\n        enumerable: true\x0d\n      });\x0d\n      return ObjectCreate(ctor.prototype\x2C properties);\x0d\n    }\x0d\n    case kSerializedObject:\x0d\n      return deserialize(error.subarray(1));\x0d\n    case kInspectedError: {\x0d\n      const buf = Buffer.from(error.buffer\x2C\x0d\n                              error.byteOffset + 1\x2C\x0d\n                              error.byteLength - 1);\x0d\n      return buf.toString('utf8');\x0d\n    }\x0d\n  }\x0d\n  require('assert').fail('This should not happen');\x0d\n}\x0d\n\x0d\nmodule.exports = { serializeError\x2C deserializeError };\x0d\n
code-source-info,0x2ee7de3d166,143,0,4324,C0O0C4O4324,,
code-creation,Function,10,280663,0x2ee7de3d586,335, node:internal/error_serdes:1:1,0x2ee7de3d0e0,~
code-source-info,0x2ee7de3d586,143,0,4324,C0O0C100O32C106O32C111O49C115O32C117O70C123O96C128O106C133O120C139O146C145O163C151O180C157O205C163O240C169O270C175O295C180O310C186O338C191O353C196O372C201O384C207O406C212O422C217O436C222O492C223O492C225O522C227O522C229O550C231O550C233O571C240O576C246O583C252O594C258O606C264O616C270O629C276O645C282O571C284O690C287O702C294O690C299O690C301O2171C302O2171C304O2376C305O2376C307O3408C308O3408C310O4268C317O4287C323O4303C329O4283C334O4323,,
code-creation,LazyCompile,10,281296,0x2ee7de3eaa6,914,Socket node:net:285:16,0x144a20e9728,~
code-source-info,0x2ee7de3eaa
code-creation,LazyCompile,10,281688,0x2ee7de3f176,109,Duplex node:internal/streams/duplex:52:16,0x22ee8cf7fb0,~
script-source,55,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a duplex stream is just a stream that is both readable and writable.\x0d\n// Since JS doesn't have multiple prototype inheritance\x2C this class\x0d\n// prototypically inherits from Readable\x2C and then parasitically from\x0d\n// Writable.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Duplex;\x0d\n\x0d\nconst Readable = require('internal/streams/readable');\x0d\nconst Writable = require('internal/streams/writable');\x0d\n\x0d\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(Duplex\x2C Readable);\x0d\n\x0d\n{\x0d\n  // Allow the keys array to be GC'ed.\x0d\n  for (const method of ObjectKeys(Writable.prototype)) {\x0d\n    if (!Duplex.prototype[method])\x0d\n      Duplex.prototype[method] = Writable.prototype[method];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Duplex(options) {\x0d\n  if (!(this instanceof Duplex))\x0d\n    return new Duplex(options);\x0d\n\x0d\n  Readable.call(this\x2C options);\x0d\n  Writable.call(this\x2C options);\x0d\n  this.allowHalfOpen = true;\x0d\n\x0d\n  if (options) {\x0d\n    if (options.readable === false)\x0d\n      this.readable = false;\x0d\n\x0d\n    if (options.writable === false)\x0d\n      this.writable = false;\x0d\n\x0d\n    if (options.allowHalfOpen === false) {\x0d\n      this.allowHalfOpen = false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Duplex.prototype\x2C {\x0d\n  writable:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable')\x2C\x0d\n  writableHighWaterMark:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark')\x2C\x0d\n  writableObjectMode:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode')\x2C\x0d\n  writableBuffer:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer')\x2C\x0d\n  writableLength:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength')\x2C\x0d\n  writableFinished:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished')\x2C\x0d\n  writableCorked:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked')\x2C\x0d\n  writableEnded:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded')\x2C\x0d\n  writableNeedDrain:\x0d\n    ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain')\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    get() {\x0d\n      if (this._readableState === undefined ||\x0d\n        this._writableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed && this._writableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      if (this._readableState && this._writableState) {\x0d\n        this._readableState.destroyed = value;\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nlet duplexify;\x0d\n\x0d\nDuplex.from = function(body) {\x0d\n  if (!duplexify) {\x0d\n    duplexify = require('internal/streams/duplexify');\x0d\n  }\x0d\n  return duplexify(body\x2C 'body');\x0d\n};\x0d\n
code-source-info,0x2ee7de3f176,55,2002,2430,C0O2017C2O2028C7O2053C12O2060C17O2080C18O2086C23O2095C28O2095C34O2119C39O2128C44O2128C50O2152C51O2171C55O2184C59O2216C65O2225C70O2243C71O2257C75O2285C81O2294C86O2312C87O2326C91O2354C97O2368C102O2388C103O2407C108O2429,,
new,MemoryChunk,0x1a2d22c0000,262144
code-creation,LazyCompile,10,282206,0x2ee7de3f81e,220,Readable node:internal/streams/readable:181:18,0x1722ff0c230,~
script-source,56,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  Symbol\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Readable;\x0d\nReadable.ReadableState = ReadableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst BufferList = require('internal/streams/buffer_list');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_PUSH_AFTER_EOF\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateObject } = require('internal/validators');\x0d\n\x0d\nconst kPaused = Symbol('kPaused');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst from = require('internal/streams/from');\x0d\n\x0d\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Readable\x2C Stream);\x0d\nconst nop = () => {};\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream.\x0d\n  // These options can be provided separately as readableXXX and writableXXX.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag. Used to make read(n) ignore n and to\x0d\n  // make all the buffer merging and length checks go away.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.readableObjectMode);\x0d\n\x0d\n  // The point at which it stops calling _read() to fill the buffer\x0d\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // A linked list is used to store data chunks instead of an array because the\x0d\n  // linked list can remove elements from the beginning faster than\x0d\n  // array.shift().\x0d\n  this.buffer = new BufferList();\x0d\n  this.length = 0;\x0d\n  this.pipes = [];\x0d\n  this.flowing = null;\x0d\n  this.ended = false;\x0d\n  this.endEmitted = false;\x0d\n  this.reading = false;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\x0d\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\x0d\n  // any actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first read call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // Whenever we return null\x2C then we set a flag to say\x0d\n  // that we're awaiting a 'readable' event emission.\x0d\n  this.needReadable = false;\x0d\n  this.emittedReadable = false;\x0d\n  this.readableListening = false;\x0d\n  this.resumeScheduled = false;\x0d\n  this[kPaused] = null;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Has it been destroyed.\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true no further\x0d\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\x0d\n  // since when autoDestroy is disabled we need a way to tell whether the\x0d\n  // stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Ref the piped dest which we need a drain event on it\x0d\n  // type: null | Writable | Set<Writable>.\x0d\n  this.awaitDrainWriters = null;\x0d\n  this.multiAwaitDrain = false;\x0d\n\x0d\n  // If true\x2C a maybeReadMore has been scheduled.\x0d\n  this.readingMore = false;\x0d\n\x0d\n  this.dataEmitted = false;\x0d\n\x0d\n  this.decoder = null;\x0d\n  this.encoding = null;\x0d\n  if (options && options.encoding) {\x0d\n    this.decoder = new StringDecoder(options.encoding);\x0d\n    this.encoding = options.encoding;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction Readable(options) {\x0d\n  if (!(this instanceof Readable))\x0d\n    return new Readable(options);\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the ReadableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = this instanceof Stream.Duplex;\x0d\n\x0d\n  this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal && !isDuplex)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    if (this._readableState.needReadable) {\x0d\n      maybeReadMore(this\x2C this._readableState);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nReadable.prototype.destroy = destroyImpl.destroy;\x0d\nReadable.prototype._undestroy = destroyImpl.undestroy;\x0d\nReadable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\n// Manually shove something into the read() buffer.\x0d\n// This returns true if the highWaterMark has not been hit yet\x2C\x0d\n// similar to how Writable.write() returns true if you should\x0d\n// write() some more.\x0d\nReadable.prototype.push = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\n// Unshift should *always* be something directly out of read().\x0d\nReadable.prototype.unshift = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nfunction readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\x0d\n  debug('readableAddChunk'\x2C chunk);\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let err;\x0d\n  if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      encoding = encoding || state.defaultEncoding;\x0d\n      if (state.encoding !== encoding) {\x0d\n        if (addToFront && state.encoding) {\x0d\n          // When unshifting\x2C if state.encoding is set\x2C we have to save\x0d\n          // the string in the BufferList with the state encoding.\x0d\n          chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\x0d\n        } else {\x0d\n          chunk = Buffer.from(chunk\x2C encoding);\x0d\n          encoding = '';\x0d\n        }\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = '';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = '';\x0d\n    } else if (chunk != null) {\x0d\n      err = new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    errorOrDestroy(stream\x2C err);\x0d\n  } else if (chunk === null) {\x0d\n    state.reading = false;\x0d\n    onEofChunk(stream\x2C state);\x0d\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\x0d\n    if (addToFront) {\x0d\n      if (state.endEmitted)\x0d\n        errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\x0d\n      else\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C true);\x0d\n    } else if (state.ended) {\x0d\n      errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    } else if (state.destroyed || state.errored) {\x0d\n      return false;\x0d\n    } else {\x0d\n      state.reading = false;\x0d\n      if (state.decoder && !encoding) {\x0d\n        chunk = state.decoder.write(chunk);\x0d\n        if (state.objectMode || chunk.length !== 0)\x0d\n          addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n        else\x0d\n          maybeReadMore(stream\x2C state);\x0d\n      } else {\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n      }\x0d\n    }\x0d\n  } else if (!addToFront) {\x0d\n    state.reading = false;\x0d\n    maybeReadMore(stream\x2C state);\x0d\n  }\x0d\n\x0d\n  // We can push more data if we are below the highWaterMark.\x0d\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\x0d\n  // This is to work around cases where hwm=0\x2C such as the repl.\x0d\n  return !state.ended &&\x0d\n    (state.length < state.highWaterMark || state.length === 0);\x0d\n}\x0d\n\x0d\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\x0d\n  if (state.flowing && state.length === 0 && !state.sync &&\x0d\n      stream.listenerCount('data') > 0) {\x0d\n    // Use the guard to avoid creating `Set()` repeatedly\x0d\n    // when we have multiple pipes.\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n    state.dataEmitted = true;\x0d\n    stream.emit('data'\x2C chunk);\x0d\n  } else {\x0d\n    // Update the buffer info.\x0d\n    state.length += state.objectMode ? 1 : chunk.length;\x0d\n    if (addToFront)\x0d\n      state.buffer.unshift(chunk);\x0d\n    else\x0d\n      state.buffer.push(chunk);\x0d\n\x0d\n    if (state.needReadable)\x0d\n      emitReadable(stream);\x0d\n  }\x0d\n  maybeReadMore(stream\x2C state);\x0d\n}\x0d\n\x0d\nReadable.prototype.isPaused = function() {\x0d\n  const state = this._readableState;\x0d\n  return state[kPaused] === true || state.flowing === false;\x0d\n};\x0d\n\x0d\n// Backwards compatibility.\x0d\nReadable.prototype.setEncoding = function(enc) {\x0d\n  const decoder = new StringDecoder(enc);\x0d\n  this._readableState.decoder = decoder;\x0d\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\x0d\n  this._readableState.encoding = this._readableState.decoder.encoding;\x0d\n\x0d\n  const buffer = this._readableState.buffer;\x0d\n  // Iterate over current buffer to convert already stored Buffers:\x0d\n  let content = '';\x0d\n  for (const data of buffer) {\x0d\n    content += decoder.write(data);\x0d\n  }\x0d\n  buffer.clear();\x0d\n  if (content !== '')\x0d\n    buffer.push(content);\x0d\n  this._readableState.length = content.length;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Don't raise the hwm > 1GB.\x0d\nconst MAX_HWM = 0x40000000;\x0d\nfunction computeNewHighWaterMark(n) {\x0d\n  if (n >= MAX_HWM) {\x0d\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\x0d\n    n = MAX_HWM;\x0d\n  } else {\x0d\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\x0d\n    // tiny amounts.\x0d\n    n--;\x0d\n    n |= n >>> 1;\x0d\n    n |= n >>> 2;\x0d\n    n |= n >>> 4;\x0d\n    n |= n >>> 8;\x0d\n    n |= n >>> 16;\x0d\n    n++;\x0d\n  }\x0d\n  return n;\x0d\n}\x0d\n\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction howMuchToRead(n\x2C state) {\x0d\n  if (n <= 0 || (state.length === 0 && state.ended))\x0d\n    return 0;\x0d\n  if (state.objectMode)\x0d\n    return 1;\x0d\n  if (NumberIsNaN(n)) {\x0d\n    // Only flow one buffer at a time.\x0d\n    if (state.flowing && state.length)\x0d\n      return state.buffer.first().length;\x0d\n    return state.length;\x0d\n  }\x0d\n  if (n <= state.length)\x0d\n    return n;\x0d\n  return state.ended ? state.length : 0;\x0d\n}\x0d\n\x0d\n// You can override either this method\x2C or the async _read(n) below.\x0d\nReadable.prototype.read = function(n) {\x0d\n  debug('read'\x2C n);\x0d\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\x0d\n  // in this scenario\x2C so we are doing it manually.\x0d\n  if (n === undefined) {\x0d\n    n = NaN;\x0d\n  } else if (!NumberIsInteger(n)) {\x0d\n    n = NumberParseInt(n\x2C 10);\x0d\n  }\x0d\n  const state = this._readableState;\x0d\n  const nOrig = n;\x0d\n\x0d\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\x0d\n  if (n > state.highWaterMark)\x0d\n    state.highWaterMark = computeNewHighWaterMark(n);\x0d\n\x0d\n  if (n !== 0)\x0d\n    state.emittedReadable = false;\x0d\n\x0d\n  // If we're doing read(0) to trigger a readable event\x2C but we\x0d\n  // already have a bunch of data in the buffer\x2C then just trigger\x0d\n  // the 'readable' event and move on.\x0d\n  if (n === 0 &&\x0d\n      state.needReadable &&\x0d\n      ((state.highWaterMark !== 0 ?\x0d\n        state.length >= state.highWaterMark :\x0d\n        state.length > 0) ||\x0d\n       state.ended)) {\x0d\n    debug('read: emitReadable'\x2C state.length\x2C state.ended);\x0d\n    if (state.length === 0 && state.ended)\x0d\n      endReadable(this);\x0d\n    else\x0d\n      emitReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  n = howMuchToRead(n\x2C state);\x0d\n\x0d\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\x0d\n  if (n === 0 && state.ended) {\x0d\n    if (state.length === 0)\x0d\n      endReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // All the actual chunk generation logic needs to be\x0d\n  // *below* the call to _read.  The reason is that in certain\x0d\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\x0d\n  // may be a completely synchronous operation which may change\x0d\n  // the state of the read buffer\x2C providing enough data when\x0d\n  // before there was *not* enough.\x0d\n  //\x0d\n  // So\x2C the steps are:\x0d\n  // 1. Figure out what the state of things will be after we do\x0d\n  // a read from the buffer.\x0d\n  //\x0d\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\x0d\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\x0d\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\x0d\n  // that the Readable class should behave improperly\x2C as streams are\x0d\n  // designed to be sync/async agnostic.\x0d\n  // Take note if the _read call is sync or async (ie\x2C if the read call\x0d\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\x0d\n  // 'readable' etc.\x0d\n  //\x0d\n  // 3. Actually pull the requested chunks out of the buffer and return.\x0d\n\x0d\n  // if we need a readable event\x2C then we need to do some reading.\x0d\n  let doRead = state.needReadable;\x0d\n  debug('need readable'\x2C doRead);\x0d\n\x0d\n  // If we currently have less than the highWaterMark\x2C then also read some.\x0d\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\x0d\n    doRead = true;\x0d\n    debug('length less than watermark'\x2C doRead);\x0d\n  }\x0d\n\x0d\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\x0d\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\x0d\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\x0d\n  if (state.ended || state.reading || state.destroyed || state.errored ||\x0d\n      !state.constructed) {\x0d\n    doRead = false;\x0d\n    debug('reading\x2C ended or constructing'\x2C doRead);\x0d\n  } else if (doRead) {\x0d\n    debug('do read');\x0d\n    state.reading = true;\x0d\n    state.sync = true;\x0d\n    // If the length is currently zero\x2C then we *need* a readable event.\x0d\n    if (state.length === 0)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // Call internal read method\x0d\n    this._read(state.highWaterMark);\x0d\n\x0d\n    state.sync = false;\x0d\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\x0d\n    // and we need to re-evaluate how much data we can return to the user.\x0d\n    if (!state.reading)\x0d\n      n = howMuchToRead(nOrig\x2C state);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (n > 0)\x0d\n    ret = fromList(n\x2C state);\x0d\n  else\x0d\n    ret = null;\x0d\n\x0d\n  if (ret === null) {\x0d\n    state.needReadable = state.length <= state.highWaterMark;\x0d\n    n = 0;\x0d\n  } else {\x0d\n    state.length -= n;\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (state.length === 0) {\x0d\n    // If we have nothing in the buffer\x2C then we want to know\x0d\n    // as soon as we *do* get something into the buffer.\x0d\n    if (!state.ended)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\x0d\n    if (nOrig !== n && state.ended)\x0d\n      endReadable(this);\x0d\n  }\x0d\n\x0d\n  if (ret !== null) {\x0d\n    state.dataEmitted = true;\x0d\n    this.emit('data'\x2C ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onEofChunk(stream\x2C state) {\x0d\n  debug('onEofChunk');\x0d\n  if (state.ended) return;\x0d\n  if (state.decoder) {\x0d\n    const chunk = state.decoder.end();\x0d\n    if (chunk && chunk.length) {\x0d\n      state.buffer.push(chunk);\x0d\n      state.length += state.objectMode ? 1 : chunk.length;\x0d\n    }\x0d\n  }\x0d\n  state.ended = true;\x0d\n\x0d\n  if (state.sync) {\x0d\n    // If we are sync\x2C wait until next tick to emit the data.\x0d\n    // Otherwise we risk emitting data in the flow()\x0d\n    // the readable code triggers during a read() call.\x0d\n    emitReadable(stream);\x0d\n  } else {\x0d\n    // Emit 'readable' now to make sure it gets picked up.\x0d\n    state.needReadable = false;\x0d\n    state.emittedReadable = true;\x0d\n    // We have to emit readable now that we are EOF. Modules\x0d\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\x0d\n    emitReadable_(stream);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Don't emit readable right away in sync mode\x2C because this can trigger\x0d\n// another read() call => stack overflow.  This way\x2C it might trigger\x0d\n// a nextTick recursion warning\x2C but that's not so bad.\x0d\nfunction emitReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable'\x2C state.needReadable\x2C state.emittedReadable);\x0d\n  state.needReadable = false;\x0d\n  if (!state.emittedReadable) {\x0d\n    debug('emitReadable'\x2C state.flowing);\x0d\n    state.emittedReadable = true;\x0d\n    process.nextTick(emitReadable_\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitReadable_(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable_'\x2C state.destroyed\x2C state.length\x2C state.ended);\x0d\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\x0d\n    stream.emit('readable');\x0d\n    state.emittedReadable = false;\x0d\n  }\x0d\n\x0d\n  // The stream needs another readable event if:\x0d\n  // 1. It is not flowing\x2C as the flow mechanism will take\x0d\n  //    care of it.\x0d\n  // 2. It is not ended.\x0d\n  // 3. It is below the highWaterMark\x2C so we can schedule\x0d\n  //    another readable later.\x0d\n  state.needReadable =\x0d\n    !state.flowing &&\x0d\n    !state.ended &&\x0d\n    state.length <= state.highWaterMark;\x0d\n  flow(stream);\x0d\n}\x0d\n\x0d\n\x0d\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\x0d\n// and called read() to consume some data.  that may have triggered\x0d\n// in turn another _read(n) call\x2C in which case reading = true if\x0d\n// it's in progress.\x0d\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\x0d\n// then go ahead and try to read some more preemptively.\x0d\nfunction maybeReadMore(stream\x2C state) {\x0d\n  if (!state.readingMore && state.constructed) {\x0d\n    state.readingMore = true;\x0d\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeReadMore_(stream\x2C state) {\x0d\n  // Attempt to read more data if we should.\x0d\n  //\x0d\n  // The conditions for reading more data are (one of):\x0d\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\x0d\n  //   is responsible for filling the buffer with enough data if such data\x0d\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\x0d\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\x0d\n  //   when the stream consumer calls read() instead.\x0d\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\x0d\n  //   the loop below is responsible for ensuring read() is called. Failing to\x0d\n  //   call read here would abort the flow and there's no other mechanism for\x0d\n  //   continuing the flow if the stream consumer has just subscribed to the\x0d\n  //   'data' event.\x0d\n  //\x0d\n  // In addition to the above conditions to keep reading data\x2C the following\x0d\n  // conditions prevent the data from being read:\x0d\n  // - The stream has ended (state.ended).\x0d\n  // - There is already a pending 'read' operation (state.reading). This is a\x0d\n  //   case where the stream has called the implementation defined _read()\x0d\n  //   method\x2C but they are processing the call asynchronously and have _not_\x0d\n  //   called push() with new data. In this case we skip performing more\x0d\n  //   read()s. The execution ends in this method again after the _read() ends\x0d\n  //   up calling push() with more data.\x0d\n  while (!state.reading && !state.ended &&\x0d\n         (state.length < state.highWaterMark ||\x0d\n          (state.flowing && state.length === 0))) {\x0d\n    const len = state.length;\x0d\n    debug('maybeReadMore read 0');\x0d\n    stream.read(0);\x0d\n    if (len === state.length)\x0d\n      // Didn't get any data\x2C stop spinning.\x0d\n      break;\x0d\n  }\x0d\n  state.readingMore = false;\x0d\n}\x0d\n\x0d\n// Abstract method.  to be overridden in specific implementation classes.\x0d\n// call cb(er\x2C data) where data is <= n in length.\x0d\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\x0d\n// arbitrary\x2C and perhaps not very meaningful.\x0d\nReadable.prototype._read = function(n) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\x0d\n};\x0d\n\x0d\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\x0d\n  const src = this;\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (state.pipes.length === 1) {\x0d\n    if (!state.multiAwaitDrain) {\x0d\n      state.multiAwaitDrain = true;\x0d\n      state.awaitDrainWriters = new SafeSet(\x0d\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.pipes.push(dest);\x0d\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\x0d\n\x0d\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\x0d\n              dest !== process.stdout &&\x0d\n              dest !== process.stderr;\x0d\n\x0d\n  const endFn = doEnd ? onend : unpipe;\x0d\n  if (state.endEmitted)\x0d\n    process.nextTick(endFn);\x0d\n  else\x0d\n    src.once('end'\x2C endFn);\x0d\n\x0d\n  dest.on('unpipe'\x2C onunpipe);\x0d\n  function onunpipe(readable\x2C unpipeInfo) {\x0d\n    debug('onunpipe');\x0d\n    if (readable === src) {\x0d\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\x0d\n        unpipeInfo.hasUnpiped = true;\x0d\n        cleanup();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    debug('onend');\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n\x0d\n  let cleanedUp = false;\x0d\n  function cleanup() {\x0d\n    debug('cleanup');\x0d\n    // Cleanup event handlers once the pipe is broken.\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    if (ondrain) {\x0d\n      dest.removeListener('drain'\x2C ondrain);\x0d\n    }\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('unpipe'\x2C onunpipe);\x0d\n    src.removeListener('end'\x2C onend);\x0d\n    src.removeListener('end'\x2C unpipe);\x0d\n    src.removeListener('data'\x2C ondata);\x0d\n\x0d\n    cleanedUp = true;\x0d\n\x0d\n    // If the reader is waiting for a drain event from this\x0d\n    // specific writer\x2C then it would cause it to never start\x0d\n    // flowing again.\x0d\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\x0d\n    // If we don't know\x2C then assume that we are waiting for one.\x0d\n    if (ondrain && state.awaitDrainWriters &&\x0d\n        (!dest._writableState || dest._writableState.needDrain))\x0d\n      ondrain();\x0d\n  }\x0d\n\x0d\n  function pause() {\x0d\n    // If the user unpiped during `dest.write()`\x2C it is possible\x0d\n    // to get stuck in a permanently paused state if that write\x0d\n    // also returned false.\x0d\n    // => Check whether `dest` is still a piping destination.\x0d\n    if (!cleanedUp) {\x0d\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\x0d\n        debug('false write response\x2C pause'\x2C 0);\x0d\n        state.awaitDrainWriters = dest;\x0d\n        state.multiAwaitDrain = false;\x0d\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\x0d\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\x0d\n        state.awaitDrainWriters.add(dest);\x0d\n      }\x0d\n      src.pause();\x0d\n    }\x0d\n    if (!ondrain) {\x0d\n      // When the dest drains\x2C it reduces the awaitDrain counter\x0d\n      // on the source.  This would be more elegant with a .once()\x0d\n      // handler in flow()\x2C but adding and removing repeatedly is\x0d\n      // too slow.\x0d\n      ondrain = pipeOnDrain(src\x2C dest);\x0d\n      dest.on('drain'\x2C ondrain);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  src.on('data'\x2C ondata);\x0d\n  function ondata(chunk) {\x0d\n    debug('ondata');\x0d\n    const ret = dest.write(chunk);\x0d\n    debug('dest.write'\x2C ret);\x0d\n    if (ret === false) {\x0d\n      pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the dest has an error\x2C then stop piping into it.\x0d\n  // However\x2C don't suppress the throwing behavior for this.\x0d\n  function onerror(er) {\x0d\n    debug('onerror'\x2C er);\x0d\n    unpipe();\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    if (EE.listenerCount(dest\x2C 'error') === 0) {\x0d\n      const s = dest._writableState || dest._readableState;\x0d\n      if (s && !s.errorEmitted) {\x0d\n        // User incorrectly emitted 'error' directly on the stream.\x0d\n        errorOrDestroy(dest\x2C er);\x0d\n      } else {\x0d\n        dest.emit('error'\x2C er);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Make sure our error handler is attached before userland ones.\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Both close and finish should trigger unpipe\x2C but only once.\x0d\n  function onclose() {\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('close'\x2C onclose);\x0d\n  function onfinish() {\x0d\n    debug('onfinish');\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('finish'\x2C onfinish);\x0d\n\x0d\n  function unpipe() {\x0d\n    debug('unpipe');\x0d\n    src.unpipe(dest);\x0d\n  }\x0d\n\x0d\n  // Tell the dest that it's being piped to.\x0d\n  dest.emit('pipe'\x2C src);\x0d\n\x0d\n  // Start the flow if it hasn't been started already.\x0d\n\x0d\n  if (dest.writableNeedDrain === true) {\x0d\n    if (state.flowing) {\x0d\n      pause();\x0d\n    }\x0d\n  } else if (!state.flowing) {\x0d\n    debug('pipe resume');\x0d\n    src.resume();\x0d\n  }\x0d\n\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction pipeOnDrain(src\x2C dest) {\x0d\n  return function pipeOnDrainFunctionResult() {\x0d\n    const state = src._readableState;\x0d\n\x0d\n    // `ondrain` will call directly\x2C\x0d\n    // `this` maybe not a reference to dest\x2C\x0d\n    // so we use the real dest here.\x0d\n    if (state.awaitDrainWriters === dest) {\x0d\n      debug('pipeOnDrain'\x2C 1);\x0d\n      state.awaitDrainWriters = null;\x0d\n    } else if (state.multiAwaitDrain) {\x0d\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\x0d\n      state.awaitDrainWriters.delete(dest);\x0d\n    }\x0d\n\x0d\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\x0d\n      EE.listenerCount(src\x2C 'data')) {\x0d\n      src.resume();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nReadable.prototype.unpipe = function(dest) {\x0d\n  const state = this._readableState;\x0d\n  const unpipeInfo = { hasUnpiped: false };\x0d\n\x0d\n  // If we're not piping anywhere\x2C then do nothing.\x0d\n  if (state.pipes.length === 0)\x0d\n    return this;\x0d\n\x0d\n  if (!dest) {\x0d\n    // remove all.\x0d\n    const dests = state.pipes;\x0d\n    state.pipes = [];\x0d\n    this.pause();\x0d\n\x0d\n    for (let i = 0; i < dests.length; i++)\x0d\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Try to find the right one.\x0d\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\x0d\n  if (index === -1)\x0d\n    return this;\x0d\n\x0d\n  state.pipes.splice(index\x2C 1);\x0d\n  if (state.pipes.length === 0)\x0d\n    this.pause();\x0d\n\x0d\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Set up data events if they are asked for\x0d\n// Ensure readable listeners eventually get something.\x0d\nReadable.prototype.on = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (ev === 'data') {\x0d\n    // Update readableListening so that resume() may be a no-op\x0d\n    // a few lines down. This is needed to support once('readable').\x0d\n    state.readableListening = this.listenerCount('readable') > 0;\x0d\n\x0d\n    // Try start flowing on next tick if stream isn't explicitly paused.\x0d\n    if (state.flowing !== false)\x0d\n      this.resume();\x0d\n  } else if (ev === 'readable') {\x0d\n    if (!state.endEmitted && !state.readableListening) {\x0d\n      state.readableListening = state.needReadable = true;\x0d\n      state.flowing = false;\x0d\n      state.emittedReadable = false;\x0d\n      debug('on readable'\x2C state.length\x2C state.reading);\x0d\n      if (state.length) {\x0d\n        emitReadable(this);\x0d\n      } else if (!state.reading) {\x0d\n        process.nextTick(nReadingNextTick\x2C this);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.addListener = Readable.prototype.on;\x0d\n\x0d\nReadable.prototype.removeListener = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.removeListener.call(this\x2C\x0d\n                                                   ev\x2C fn);\x0d\n\x0d\n  if (ev === 'readable') {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.off = Readable.prototype.removeListener;\x0d\n\x0d\nReadable.prototype.removeAllListeners = function(ev) {\x0d\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\x0d\n                                                        arguments);\x0d\n\x0d\n  if (ev === 'readable' || ev === undefined) {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\n\x0d\nfunction updateReadableListening(self) {\x0d\n  const state = self._readableState;\x0d\n  state.readableListening = self.listenerCount('readable') > 0;\x0d\n\x0d\n  if (state.resumeScheduled && state[kPaused] === false) {\x0d\n    // Flowing needs to be set to true now\x2C otherwise\x0d\n    // the upcoming resume will not flow.\x0d\n    state.flowing = true;\x0d\n\x0d\n    // Crude way to check if we should resume.\x0d\n  } else if (self.listenerCount('data') > 0) {\x0d\n    self.resume();\x0d\n  } else if (!state.readableListening) {\x0d\n    state.flowing = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction nReadingNextTick(self) {\x0d\n  debug('readable nexttick read 0');\x0d\n  self.read(0);\x0d\n}\x0d\n\x0d\n// pause() and resume() are remnants of the legacy readable stream API\x0d\n// If the user uses them\x2C then switch into old mode.\x0d\nReadable.prototype.resume = function() {\x0d\n  const state = this._readableState;\x0d\n  if (!state.flowing) {\x0d\n    debug('resume');\x0d\n    // We flow only if there is no one listening\x0d\n    // for readable\x2C but we still have to call\x0d\n    // resume().\x0d\n    state.flowing = !state.readableListening;\x0d\n    resume(this\x2C state);\x0d\n  }\x0d\n  state[kPaused] = false;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction resume(stream\x2C state) {\x0d\n  if (!state.resumeScheduled) {\x0d\n    state.resumeScheduled = true;\x0d\n    process.nextTick(resume_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resume_(stream\x2C state) {\x0d\n  debug('resume'\x2C state.reading);\x0d\n  if (!state.reading) {\x0d\n    stream.read(0);\x0d\n  }\x0d\n\x0d\n  state.resumeScheduled = false;\x0d\n  stream.emit('resume');\x0d\n  flow(stream);\x0d\n  if (state.flowing && !state.reading)\x0d\n    stream.read(0);\x0d\n}\x0d\n\x0d\nReadable.prototype.pause = function() {\x0d\n  debug('call pause flowing=%j'\x2C this._readableState.flowing);\x0d\n  if (this._readableState.flowing !== false) {\x0d\n    debug('pause');\x0d\n    this._readableState.flowing = false;\x0d\n    this.emit('pause');\x0d\n  }\x0d\n  this._readableState[kPaused] = true;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction flow(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('flow'\x2C state.flowing);\x0d\n  while (state.flowing && stream.read() !== null);\x0d\n}\x0d\n\x0d\n// Wrap an old-style stream as the async data source.\x0d\n// This is *not* part of the readable stream interface.\x0d\n// It is an ugly unfortunate mess of history.\x0d\nReadable.prototype.wrap = function(stream) {\x0d\n  let paused = false;\x0d\n\x0d\n  // TODO (ronag): Should this.destroy(err) emit\x0d\n  // 'error' on the wrapped stream? Would require\x0d\n  // a static factory method\x2C e.g. Readable.wrap(stream).\x0d\n\x0d\n  stream.on('data'\x2C (chunk) => {\x0d\n    if (!this.push(chunk) && stream.pause) {\x0d\n      paused = true;\x0d\n      stream.pause();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  stream.on('end'\x2C () => {\x0d\n    this.push(null);\x0d\n  });\x0d\n\x0d\n  stream.on('error'\x2C (err) => {\x0d\n    errorOrDestroy(this\x2C err);\x0d\n  });\x0d\n\x0d\n  stream.on('close'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  stream.on('destroy'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  this._read = () => {\x0d\n    if (paused && stream.resume) {\x0d\n      paused = false;\x0d\n      stream.resume();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\x0d\n  const streamKeys = ObjectKeys(stream);\x0d\n  for (let j = 1; j < streamKeys.length; j++) {\x0d\n    const i = streamKeys[j];\x0d\n    if (this[i] === undefined && typeof stream[i] === 'function') {\x0d\n      this[i] = stream[i].bind(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncIterator] = function() {\x0d\n  return streamToAsyncIterator(this);\x0d\n};\x0d\n\x0d\nReadable.prototype.iterator = function(options) {\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  return streamToAsyncIterator(this\x2C options);\x0d\n};\x0d\n\x0d\nfunction streamToAsyncIterator(stream\x2C options) {\x0d\n  if (typeof stream.read !== 'function') {\x0d\n    stream = Readable.wrap(stream\x2C { objectMode: true });\x0d\n  }\x0d\n\x0d\n  const iter = createAsyncIterator(stream\x2C options);\x0d\n  iter.stream = stream;\x0d\n  return iter;\x0d\n}\x0d\n\x0d\nasync function* createAsyncIterator(stream\x2C options) {\x0d\n  let callback = nop;\x0d\n\x0d\n  const opts = {\x0d\n    destroyOnReturn: true\x2C\x0d\n    destroyOnError: true\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  function next(resolve) {\x0d\n    if (this === stream) {\x0d\n      callback();\x0d\n      callback = nop;\x0d\n    } else {\x0d\n      callback = resolve;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let error = state.errored;\x0d\n  let errorEmitted = state.errorEmitted;\x0d\n  let endEmitted = state.endEmitted;\x0d\n  let closeEmitted = state.closeEmitted;\x0d\n\x0d\n  stream\x0d\n    .on('readable'\x2C next)\x0d\n    .on('error'\x2C function(err) {\x0d\n      error = err;\x0d\n      errorEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('end'\x2C function() {\x0d\n      endEmitted = true;\x0d\n      next.call(this);\x0d\n    })\x0d\n    .on('close'\x2C function() {\x0d\n      closeEmitted = true;\x0d\n      next.call(this);\x0d\n    });\x0d\n\x0d\n  let errorThrown = false;\x0d\n  try {\x0d\n    while (true) {\x0d\n      const chunk = stream.destroyed ? null : stream.read();\x0d\n      if (chunk !== null) {\x0d\n        yield chunk;\x0d\n      } else if (errorEmitted) {\x0d\n        throw error;\x0d\n      } else if (endEmitted) {\x0d\n        break;\x0d\n      } else if (closeEmitted) {\x0d\n        break;\x0d\n      } else {\x0d\n        await new Promise(next);\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    if (opts.destroyOnError) {\x0d\n      destroyImpl.destroyer(stream\x2C err);\x0d\n    }\x0d\n    errorThrown = true;\x0d\n    throw err;\x0d\n  } finally {\x0d\n    if (!errorThrown && opts.destroyOnReturn) {\x0d\n      if (state.autoDestroy || !endEmitted) {\x0d\n        // TODO(ronag): ERR_PREMATURE_CLOSE?\x0d\n        destroyImpl.destroyer(stream\x2C null);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Making it explicit these properties are not enumerable\x0d\n// because otherwise some prototype manipulation in\x0d\n// userland will fail.\x0d\nObjectDefineProperties(Readable.prototype\x2C {\x0d\n  readable: {\x0d\n    get() {\x0d\n      const r = this._readableState;\x0d\n      // r.readable === false means that this is part of a Duplex stream\x0d\n      // where the readable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable readable side through\x0d\n      // deprecated setter.\x0d\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\x0d\n        !r.endEmitted;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compat.\x0d\n      if (this._readableState) {\x0d\n        this._readableState.readable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableDidRead: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.dataEmitted;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableAborted: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._readableState.readable !== false &&\x0d\n        (this._readableState.destroyed || this._readableState.errored) &&\x0d\n        !this._readableState.endEmitted\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableHighWaterMark: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableBuffer: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState && this._readableState.buffer;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableFlowing: {\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.flowing;\x0d\n    }\x2C\x0d\n    set: function(state) {\x0d\n      if (this._readableState) {\x0d\n        this._readableState.flowing = state;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableLength: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableObjectMode: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEncoding: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.encoding : null;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // We ignore the value if the stream\x0d\n      // has not been initialized yet.\x0d\n      if (!this._readableState) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      this._readableState.destroyed = value;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  readableEnded: {\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.endEmitted : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  // Legacy getter for `pipesCount`.\x0d\n  pipesCount: {\x0d\n    get() {\x0d\n      return this.pipes.length;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy property for `paused`.\x0d\n  paused: {\x0d\n    get() {\x0d\n      return this[kPaused] !== false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPaused] = !!value;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n// Exposed for testing purposes only.\x0d\nReadable._fromList = fromList;\x0d\n\x0d\n// Pluck off n bytes from an array of buffers.\x0d\n// Length is the combined lengths of all the buffers in the list.\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction fromList(n\x2C state) {\x0d\n  // nothing buffered.\x0d\n  if (state.length === 0)\x0d\n    return null;\x0d\n\x0d\n  let ret;\x0d\n  if (state.objectMode)\x0d\n    ret = state.buffer.shift();\x0d\n  else if (!n || n >= state.length) {\x0d\n    // Read it all\x2C truncate the list.\x0d\n    if (state.decoder)\x0d\n      ret = state.buffer.join('');\x0d\n    else if (state.buffer.length === 1)\x0d\n      ret = state.buffer.first();\x0d\n    else\x0d\n      ret = state.buffer.concat(state.length);\x0d\n    state.buffer.clear();\x0d\n  } else {\x0d\n    // read part of list.\x0d\n    ret = state.buffer.consume(n\x2C state.decoder);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction endReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  debug('endReadable'\x2C state.endEmitted);\x0d\n  if (!state.endEmitted) {\x0d\n    state.ended = true;\x0d\n    process.nextTick(endReadableNT\x2C state\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endReadableNT(state\x2C stream) {\x0d\n  debug('endReadableNT'\x2C state.endEmitted\x2C state.length);\x0d\n\x0d\n  // Check that we didn't get one last unshift.\x0d\n  if (!state.errorEmitted && !state.closeEmitted &&\x0d\n      !state.endEmitted && state.length === 0) {\x0d\n    state.endEmitted = true;\x0d\n    stream.emit('end');\x0d\n\x0d\n    if (stream.writable && stream.allowHalfOpen === false) {\x0d\n      process.nextTick(endWritableNT\x2C stream);\x0d\n    } else if (state.autoDestroy) {\x0d\n      // In case of duplex streams we need a way to detect\x0d\n      // if the writable side is ready for autoDestroy as well.\x0d\n      const wState = stream._writableState;\x0d\n      const autoDestroy = !wState || (\x0d\n        wState.autoDestroy &&\x0d\n        // We don't expect the writable to ever 'finish'\x0d\n        // if writable is explicitly set to false.\x0d\n        (wState.finished || wState.writable === false)\x0d\n      );\x0d\n\x0d\n      if (autoDestroy) {\x0d\n        stream.destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endWritableNT(stream) {\x0d\n  const writable = stream.writable && !stream.writableEnded &&\x0d\n    !stream.destroyed;\x0d\n  if (writable) {\x0d\n    stream.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.from = function(iterable\x2C opts) {\x0d\n  return from(Readable\x2C iterable\x2C opts);\x0d\n};\x0d\n\x0d\nReadable.wrap = function(src\x2C options) {\x0d\n  return new Readable({\x0d\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\x0d\n    ...options\x2C\x0d\n    destroy(err\x2C callback) {\x0d\n      destroyImpl.destroyer(src\x2C err);\x0d\n      callback(err);\x0d\n    }\x0d\n  }).wrap(src);\x0d\n};\x0d\n
code-source-info,0x2ee7de3f81e,56,6426,7336,C0O6426C9O6441C16O6452C21O6479C28O6486C33O6508C34O6667C41O6683C44O6690C48O6672C52O6703C71O6725C76O6723C80O6774C84O6813C92O6841C95O6862C99O6852C103O6894C111O6925C114O6949C118O6939C122O6984C130O7017C133O7043C137O7033C141O7071C149O7082C151O7099C158O7132C166O7099C171O7157C178O7164C186O7164C192O7190C199O7202C212O7202C219O7335,,
code-creation,LazyCompile,10,284292,0x1a2d22c3d6e,18,Stream node:internal/streams/legacy:10:16,0x1722ff0ea90,~
script-source,57,node:internal/streams/legacy,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EE = require('events');\x0d\n\x0d\nfunction Stream(opts) {\x0d\n  EE.call(this\x2C opts);\x0d\n}\x0d\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\x0d\nObjectSetPrototypeOf(Stream\x2C EE);\x0d\n\x0d\nStream.prototype.pipe = function(dest\x2C options) {\x0d\n  const source = this;\x0d\n\x0d\n  function ondata(chunk) {\x0d\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\x0d\n      source.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  source.on('data'\x2C ondata);\x0d\n\x0d\n  function ondrain() {\x0d\n    if (source.readable && source.resume) {\x0d\n      source.resume();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dest.on('drain'\x2C ondrain);\x0d\n\x0d\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\x0d\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\x0d\n  if (!dest._isStdio && (!options || options.end !== false)) {\x0d\n    source.on('end'\x2C onend);\x0d\n    source.on('close'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  let didOnEnd = false;\x0d\n  function onend() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n\x0d\n  function onclose() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    if (typeof dest.destroy === 'function') dest.destroy();\x0d\n  }\x0d\n\x0d\n  // Don't leave dangling pipes when there are errors.\x0d\n  function onerror(er) {\x0d\n    cleanup();\x0d\n    if (EE.listenerCount(this\x2C 'error') === 0) {\x0d\n      this.emit('error'\x2C er);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  prependListener(source\x2C 'error'\x2C onerror);\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Remove all the event listeners that were added.\x0d\n  function cleanup() {\x0d\n    source.removeListener('data'\x2C ondata);\x0d\n    dest.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    source.removeListener('end'\x2C onend);\x0d\n    source.removeListener('close'\x2C onclose);\x0d\n\x0d\n    source.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n\x0d\n    source.removeListener('end'\x2C cleanup);\x0d\n    source.removeListener('close'\x2C cleanup);\x0d\n\x0d\n    dest.removeListener('close'\x2C cleanup);\x0d\n  }\x0d\n\x0d\n  source.on('end'\x2C cleanup);\x0d\n  source.on('close'\x2C cleanup);\x0d\n\x0d\n  dest.on('close'\x2C cleanup);\x0d\n  dest.emit('pipe'\x2C source);\x0d\n\x0d\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction prependListener(emitter\x2C event\x2C fn) {\x0d\n  // Sadly this is not cacheable as some libraries bundle their own\x0d\n  // event emitter implementation with them.\x0d\n  if (typeof emitter.prependListener === 'function')\x0d\n    return emitter.prependListener(event\x2C fn);\x0d\n\x0d\n  // This is a hack to make sure that our error handler is attached before any\x0d\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\x0d\n  // to continue to work with older versions of Node.js that do not include\x0d\n  // the prependListener() method. The goal is to eventually remove this hack.\x0d\n  if (!emitter._events || !emitter._events[event])\x0d\n    emitter.on(event\x2C fn);\x0d\n  else if (ArrayIsArray(emitter._events[event]))\x0d\n    emitter._events[event].unshift(fn);\x0d\n  else\x0d\n    emitter._events[event] = [fn\x2C emitter._events[event]];\x0d\n}\x0d\n\x0d\nmodule.exports = { Stream\x2C prependListener };\x0d\n
code-source-info,0x1a2d22c3d6e,57,136,171,C0O148C5O151C10O151C17O170,,
code-creation,LazyCompile,10,284612,0x1a2d22c4636,354,ReadableState node:internal/streams/readable:78:23,0x1722ff0c1e0,~
code-source-info,0x1a2d22c
code-creation,LazyCompile,10,284757,0x1a2d22c4a46,98,getHighWaterMark node:internal/streams/state:19:26,0x1722ff11578,~
script-source,60,node:internal/streams/state,'use strict';\x0d\n\x0d\nconst {\x0d\n  MathFloor\x2C\x0d\n  NumberIsInteger\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\x0d\n\x0d\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\x0d\n  return options.highWaterMark != null ? options.highWaterMark :\x0d\n    isDuplex ? options[duplexKey] : null;\x0d\n}\x0d\n\x0d\nfunction getDefaultHighWaterMark(objectMode) {\x0d\n  return objectMode ? 16 : 16 * 1024;\x0d\n}\x0d\n\x0d\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\x0d\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\x0d\n  if (hwm != null) {\x0d\n    if (!NumberIsInteger(hwm) || hwm < 0) {\x0d\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\x0d\n    }\x0d\n    return MathFloor(hwm);\x0d\n  }\x0d\n\x0d\n  // Default value\x0d\n  return getDefaultHighWaterMark(state.objectMode);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n};\x0d\n
code-source-info,0x1a2d22c4a46,60,442,862,C0O497C12O497C18O549C21O573C26O578C33O606C38O633C47O655C56O701C69O707C74O701C75O757C80O764C84O779C85O810C88O847C93O817C97O859,,
code-creation,LazyCompile,10,284874,0x1a2d22c4cde,26,highWaterMarkFrom node:internal/streams/state:10:27,0x1722ff11418,~
code-source-info,0x1a2d22c4cde,60,177,321,C0O228C7O260C15O281C19O299C25O318,,
code-creation,LazyCompile,10,284908,0x1a2d22c4db6,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0x1722ff11528,~
code-source-info,0x1a2d22c4db6,60,357,413,C0O375C12O410,,
code-creation,LazyCompile,10,284956,0x1a2d22c4e96,17,BufferList node:internal/streams/buffer_list:14:14,0x1722ff108d0,~
script-source,59,node:internal/streams/buffer_list,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolIterator\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nmodule.exports = class BufferList {\x0d\n  constructor() {\x0d\n    this.head = null;\x0d\n    this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  push(v) {\x0d\n    const entry = { data: v\x2C next: null };\x0d\n    if (this.length > 0)\x0d\n      this.tail.next = entry;\x0d\n    else\x0d\n      this.head = entry;\x0d\n    this.tail = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  unshift(v) {\x0d\n    const entry = { data: v\x2C next: this.head };\x0d\n    if (this.length === 0)\x0d\n      this.tail = entry;\x0d\n    this.head = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    if (this.length === 0)\x0d\n      return;\x0d\n    const ret = this.head.data;\x0d\n    if (this.length === 1)\x0d\n      this.head = this.tail = null;\x0d\n    else\x0d\n      this.head = this.head.next;\x0d\n    --this.length;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  clear() {\x0d\n    this.head = this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  join(s) {\x0d\n    if (this.length === 0)\x0d\n      return '';\x0d\n    let p = this.head;\x0d\n    let ret = '' + p.data;\x0d\n    while ((p = p.next) !== null)\x0d\n      ret += s + p.data;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  concat(n) {\x0d\n    if (this.length === 0)\x0d\n      return Buffer.alloc(0);\x0d\n    const ret = Buffer.allocUnsafe(n >>> 0);\x0d\n    let p = this.head;\x0d\n    let i = 0;\x0d\n    while (p) {\x0d\n      TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\x0d\n      i += p.data.length;\x0d\n      p = p.next;\x0d\n    }\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes or characters from the buffered data.\x0d\n  consume(n\x2C hasStrings) {\x0d\n    const data = this.head.data;\x0d\n    if (n < data.length) {\x0d\n      // `slice` is the same for buffers and strings.\x0d\n      const slice = data.slice(0\x2C n);\x0d\n      this.head.data = data.slice(n);\x0d\n      return slice;\x0d\n    }\x0d\n    if (n === data.length) {\x0d\n      // First chunk is a perfect match.\x0d\n      return this.shift();\x0d\n    }\x0d\n    // Result spans more than one buffer.\x0d\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\x0d\n  }\x0d\n\x0d\n  first() {\x0d\n    return this.head.data;\x0d\n  }\x0d\n\x0d\n  *[SymbolIterator]() {\x0d\n    for (let p = this.head; p; p = p.next) {\x0d\n      yield p.data;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of characters from the buffered data.\x0d\n  _getString(n) {\x0d\n    let ret = '';\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const str = p.data;\x0d\n      if (n > str.length) {\x0d\n        ret += str;\x0d\n        n -= str.length;\x0d\n      } else {\x0d\n        if (n === str.length) {\x0d\n          ret += str;\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          ret += StringPrototypeSlice(str\x2C 0\x2C n);\x0d\n          this.head = p;\x0d\n          p.data = StringPrototypeSlice(str\x2C n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes from the buffered data.\x0d\n  _getBuffer(n) {\x0d\n    const ret = Buffer.allocUnsafe(n);\x0d\n    const retLen = n;\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const buf = p.data;\x0d\n      if (n > buf.length) {\x0d\n        TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n        n -= buf.length;\x0d\n      } else {\x0d\n        if (n === buf.length) {\x0d\n          TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          TypedArrayPrototypeSet(ret\x2C\x0d\n                                 new Uint8Array(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\x0d\n                                 retLen - n);\x0d\n          this.head = p;\x0d\n          p.data = buf.slice(n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x0d\n    });\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x1a2d22c4e96,59,278,355,C0O288C1O298C5O311C6O321C10O334C11O346C16O354,,
code-creation,LazyCompile,10,285298,0x1a2d22c55e6,98,construct node:internal/streams/destroy:225:19,0x22ee8cf6c70,~
script-source,54,node:internal/streams/destroy,'use strict';\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_MULTIPLE_CALLBACK\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kConstruct = Symbol('kConstruct');\x0d\n\x0d\nfunction checkError(err\x2C w\x2C r) {\x0d\n  if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Backwards compat. cb() is undocumented and unused in core but\x0d\n// unfortunately might be used by modules.\x0d\nfunction destroy(err\x2C cb) {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n  // With duplex streams we use the writable side for state.\x0d\n  const s = w || r;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    if (typeof cb === 'function') {\x0d\n      cb();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n\x0d\n  // We set destroyed to true before firing error callbacks in order\x0d\n  // to make it re-entrance safe in case destroy() is called within callbacks\x0d\n  checkError(err\x2C w\x2C r);\x0d\n\x0d\n  if (w) {\x0d\n    w.destroyed = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.destroyed = true;\x0d\n  }\x0d\n\x0d\n  // If still constructing then defer calling _destroy.\x0d\n  if (!s.constructed) {\x0d\n    this.once(kDestroy\x2C function(er) {\x0d\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _destroy(this\x2C err\x2C cb);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\nfunction _destroy(self\x2C err\x2C cb) {\x0d\n  let called = false;\x0d\n\x0d\n  function onDestroy(err) {\x0d\n    if (called) {\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = self._readableState;\x0d\n    const w = self._writableState;\x0d\n\x0d\n    checkError(err\x2C w\x2C r);\x0d\n\x0d\n    if (w) {\x0d\n      w.closed = true;\x0d\n    }\x0d\n    if (r) {\x0d\n      r.closed = true;\x0d\n    }\x0d\n\x0d\n    if (typeof cb === 'function') {\x0d\n      cb(err);\x0d\n    }\x0d\n\x0d\n    if (err) {\x0d\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\x0d\n    } else {\x0d\n      process.nextTick(emitCloseNT\x2C self);\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const result = self._destroy(err || null\x2C onDestroy);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            process.nextTick(onDestroy\x2C null);\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            process.nextTick(onDestroy\x2C err);\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onDestroy(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseNT(self\x2C err) {\x0d\n  emitErrorNT(self\x2C err);\x0d\n  emitCloseNT(self);\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w) {\x0d\n    w.closeEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.closeEmitted = true;\x0d\n  }\x0d\n\x0d\n  if ((w && w.emitClose) || (r && r.emitClose)) {\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if ((w && w.errorEmitted) || (r && r.errorEmitted)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.errorEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.errorEmitted = true;\x0d\n  }\x0d\n\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\nfunction undestroy() {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = true;\x0d\n    r.closed = false;\x0d\n    r.closeEmitted = false;\x0d\n    r.destroyed = false;\x0d\n    r.errored = null;\x0d\n    r.errorEmitted = false;\x0d\n    r.reading = false;\x0d\n    r.ended = false;\x0d\n    r.endEmitted = false;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.constructed = true;\x0d\n    w.destroyed = false;\x0d\n    w.closed = false;\x0d\n    w.closeEmitted = false;\x0d\n    w.errored = null;\x0d\n    w.errorEmitted = false;\x0d\n    w.ended = false;\x0d\n    w.ending = false;\x0d\n    w.finalCalled = false;\x0d\n    w.prefinished = false;\x0d\n    w.finished = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\x0d\n  // We have tests that rely on errors being emitted\x0d\n  // in the same tick\x2C so changing this is semver major.\x0d\n  // For now when you opt-in to autoDestroy we allow\x0d\n  // the error to be emitted nextTick. In a future\x0d\n  // semver major update we should change the default to this.\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if ((w && w.destroyed) || (r && r.destroyed)) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if ((r && r.autoDestroy) || (w && w.autoDestroy))\x0d\n    stream.destroy(err);\x0d\n  else if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n    if (sync) {\x0d\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\x0d\n    } else {\x0d\n      emitErrorNT(stream\x2C err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction construct(stream\x2C cb) {\x0d\n  if (typeof stream._construct !== 'function') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = false;\x0d\n  }\x0d\n  if (w) {\x0d\n    w.constructed = false;\x0d\n  }\x0d\n\x0d\n  stream.once(kConstruct\x2C cb);\x0d\n\x0d\n  if (stream.listenerCount(kConstruct) > 1) {\x0d\n    // Duplex\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.nextTick(constructNT\x2C stream);\x0d\n}\x0d\n\x0d\nfunction constructNT(stream) {\x0d\n  let called = false;\x0d\n\x0d\n  function onConstruct(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = stream._readableState;\x0d\n    const w = stream._writableState;\x0d\n    const s = w || r;\x0d\n\x0d\n    if (r) {\x0d\n      r.constructed = true;\x0d\n    }\x0d\n    if (w) {\x0d\n      w.constructed = true;\x0d\n    }\x0d\n\x0d\n    if (s.destroyed) {\x0d\n      stream.emit(kDestroy\x2C err);\x0d\n    } else if (err) {\x0d\n      errorOrDestroy(stream\x2C err\x2C true);\x0d\n    } else {\x0d\n      process.nextTick(emitConstructNT\x2C stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const result = stream._construct(onConstruct);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onConstruct\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onConstruct(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitConstructNT(stream) {\x0d\n  stream.emit(kConstruct);\x0d\n}\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream && stream.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\n// Normalize destroy for legacy.\x0d\nfunction destroyer(stream\x2C err) {\x0d\n  if (!stream) return;\x0d\n  if (isRequest(stream)) return stream.abort();\x0d\n  if (isRequest(stream.req)) return stream.req.abort();\x0d\n  if (typeof stream.destroy === 'function') return stream.destroy(err);\x0d\n  if (typeof stream.close === 'function') return stream.close();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  construct\x2C\x0d\n  destroyer\x2C\x0d\n  destroy\x2C\x0d\n  undestroy\x2C\x0d\n  errorOrDestroy\x0d\n};\x0d\n
code-source-info,0x1a2d22c55e6,54,4850,5261,C0O4886C8O4920C9O4927C10O4955C15O4991C20O5012C24O5026C25O5040C29O5057C33O5071C34O5085C38O5111C45O5116C48O5111C54O5149C61O5163C64O5149C72O5175C77O5202C78O5209C79O5220C82O5228C90O5228C97O5260,,
code-creation,LazyCompile,10,285793,0x1a2d22c62be,266,Writable node:internal/streams/writable:219:18,0x1722ff1aec8,~
script-source,63,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// A bit simpler than readable streams.\x0d\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\x0d\n// the drain event emission and buffering.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeSymbolHasInstance\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Writable;\x0d\nWritable.WritableState = WritableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\n\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_MULTIPLE_CALLBACK\x2C\x0d\n  ERR_STREAM_CANNOT_PIPE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n  ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Writable\x2C Stream);\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\nconst kOnFinished = Symbol('kOnFinished');\x0d\n\x0d\nfunction WritableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream\x2C\x0d\n  // e.g. options.readableObjectMode vs. options.writableObjectMode\x2C etc.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag to indicate whether or not this stream\x0d\n  // contains buffers or objects.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.writableObjectMode);\x0d\n\x0d\n  // The point at which write() starts returning false\x0d\n  // Note: 0 is a valid value\x2C means that we always return false if\x0d\n  // the entire buffer is not flushed immediately on write().\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // if _final has been called.\x0d\n  this.finalCalled = false;\x0d\n\x0d\n  // drain event flag.\x0d\n  this.needDrain = false;\x0d\n  // At the start of calling end()\x0d\n  this.ending = false;\x0d\n  // When end() has been called\x2C and returned.\x0d\n  this.ended = false;\x0d\n  // When 'finish' is emitted.\x0d\n  this.finished = false;\x0d\n\x0d\n  // Has it been destroyed\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Should we decode strings into buffers before passing to _write?\x0d\n  // this is here so that some node-core streams can optimize string\x0d\n  // handling at a lower level.\x0d\n  const noDecode = !!(options && options.decodeStrings === false);\x0d\n  this.decodeStrings = !noDecode;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Not an actual buffer we keep track of\x2C but a measurement\x0d\n  // of how much we're waiting to get pushed to some underlying\x0d\n  // socket or file.\x0d\n  this.length = 0;\x0d\n\x0d\n  // A flag to see when we're in the middle of a write.\x0d\n  this.writing = false;\x0d\n\x0d\n  // When true all writes will be buffered until .uncork() call.\x0d\n  this.corked = 0;\x0d\n\x0d\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\x0d\n  // or on a later tick.  We set this to true at first\x2C because any\x0d\n  // actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first write call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // A flag to know if we're processing previously buffered items\x2C which\x0d\n  // may call the _write() callback in the same tick\x2C so that we don't\x0d\n  // end up in an overlapped onwrite situation.\x0d\n  this.bufferProcessing = false;\x0d\n\x0d\n  // The callback that's passed to _write(chunk\x2C cb).\x0d\n  this.onwrite = onwrite.bind(undefined\x2C stream);\x0d\n\x0d\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\x0d\n  this.writecb = null;\x0d\n\x0d\n  // The amount that is being written when _write is called.\x0d\n  this.writelen = 0;\x0d\n\x0d\n  // Storage for data passed to the afterWrite() callback in case of\x0d\n  // synchronous _write() completion.\x0d\n  this.afterWriteTickInfo = null;\x0d\n\x0d\n  resetBuffer(this);\x0d\n\x0d\n  // Number of pending user-supplied write callbacks\x0d\n  // this must be 0 before 'finish' can be emitted.\x0d\n  this.pendingcb = 0;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // Emit prefinish if the only thing we're waiting for is _write cbs\x0d\n  // This is relevant for synchronous Transform streams.\x0d\n  this.prefinished = false;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'finish' (and potentially 'end').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true all write() calls\x0d\n  // should return false. This is needed since when autoDestroy\x0d\n  // is disabled we need a way to tell whether the stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  this[kOnFinished] = [];\x0d\n}\x0d\n\x0d\nfunction resetBuffer(state) {\x0d\n  state.buffered = [];\x0d\n  state.bufferedIndex = 0;\x0d\n  state.allBuffers = true;\x0d\n  state.allNoop = true;\x0d\n}\x0d\n\x0d\nWritableState.prototype.getBuffer = function getBuffer() {\x0d\n  return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\x0d\n  get() {\x0d\n    return this.buffered.length - this.bufferedIndex;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction Writable(options) {\x0d\n  // Writable ctor is applied to Duplexes\x2C too.\x0d\n  // `realHasInstance` is necessary because using plain `instanceof`\x0d\n  // would return false\x2C as no `_writableState` property is attached.\x0d\n\x0d\n  // Trying to use the custom `instanceof` for Writable here will also break the\x0d\n  // Node.js LazyTransform implementation\x2C which has a non-trivial getter for\x0d\n  // `_writableState` that would lead to infinite recursion.\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the WritableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = (this instanceof Stream.Duplex);\x0d\n\x0d\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this))\x0d\n    return new Writable(options);\x0d\n\x0d\n  this._writableState = new WritableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n    if (options.signal)\x0d\n      addAbortSignalNoValidate(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    const state = this._writableState;\x0d\n\x0d\n    if (!state.writing) {\x0d\n      clearBuffer(this\x2C state);\x0d\n    }\x0d\n\x0d\n    finishMaybe(this\x2C state);\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\x0d\n  value: function(object) {\x0d\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\x0d\n    if (this !== Writable) return false;\x0d\n\x0d\n    return object && object._writableState instanceof WritableState;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\x0d\nWritable.prototype.pipe = function() {\x0d\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = state.defaultEncoding;\x0d\n  } else {\x0d\n    if (!encoding)\x0d\n      encoding = state.defaultEncoding;\x0d\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (typeof cb !== 'function')\x0d\n      cb = nop;\x0d\n  }\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  } else if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      if (state.decodeStrings !== false) {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n        encoding = 'buffer';\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = 'buffer';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = 'buffer';\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (state.ending) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    process.nextTick(cb\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C true);\x0d\n    return err;\x0d\n  }\x0d\n  state.pendingcb++;\x0d\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\x0d\n}\x0d\n\x0d\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\x0d\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\x0d\n};\x0d\n\x0d\nWritable.prototype.cork = function() {\x0d\n  this._writableState.corked++;\x0d\n};\x0d\n\x0d\nWritable.prototype.uncork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (state.corked) {\x0d\n    state.corked--;\x0d\n\x0d\n    if (!state.writing)\x0d\n      clearBuffer(this\x2C state);\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\x0d\n  // node::ParseEncoding() requires lower case.\x0d\n  if (typeof encoding === 'string')\x0d\n    encoding = StringPrototypeToLowerCase(encoding);\x0d\n  if (!Buffer.isEncoding(encoding))\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  this._writableState.defaultEncoding = encoding;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// If we're already writing something\x2C then just put this\x0d\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\x0d\n// If we return false\x2C then we need a drain event\x2C so set that flag.\x0d\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\x0d\n  const len = state.objectMode ? 1 : chunk.length;\x0d\n\x0d\n  state.length += len;\x0d\n\x0d\n  // stream._write resets state.length\x0d\n  const ret = state.length < state.highWaterMark;\x0d\n  // We must ensure that previous needDrain will not be reset to false.\x0d\n  if (!ret)\x0d\n    state.needDrain = true;\x0d\n\x0d\n  if (state.writing || state.corked || state.errored || !state.constructed) {\x0d\n    state.buffered.push({ chunk\x2C encoding\x2C callback });\x0d\n    if (state.allBuffers && encoding !== 'buffer') {\x0d\n      state.allBuffers = false;\x0d\n    }\x0d\n    if (state.allNoop && callback !== nop) {\x0d\n      state.allNoop = false;\x0d\n    }\x0d\n  } else {\x0d\n    state.writelen = len;\x0d\n    state.writecb = callback;\x0d\n    state.writing = true;\x0d\n    state.sync = true;\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n    state.sync = false;\x0d\n  }\x0d\n\x0d\n  // Return false if errored or destroyed in order to break\x0d\n  // any synchronous while(stream.write(data)) loops.\x0d\n  return ret && !state.errored && !state.destroyed;\x0d\n}\x0d\n\x0d\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\x0d\n  state.writelen = len;\x0d\n  state.writecb = cb;\x0d\n  state.writing = true;\x0d\n  state.sync = true;\x0d\n  if (state.destroyed)\x0d\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\x0d\n  else if (writev)\x0d\n    stream._writev(chunk\x2C state.onwrite);\x0d\n  else\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\x0d\n  --state.pendingcb;\x0d\n\x0d\n  cb(er);\x0d\n  // Ensure callbacks are invoked even when autoDestroy is\x0d\n  // not enabled. Passing `er` here doesn't make sense since\x0d\n  // it's related to one specific write\x2C not to the buffered\x0d\n  // writes.\x0d\n  errorBuffer(state);\x0d\n  // This can emit error\x2C but error must always follow cb.\x0d\n  errorOrDestroy(stream\x2C er);\x0d\n}\x0d\n\x0d\nfunction onwrite(stream\x2C er) {\x0d\n  const state = stream._writableState;\x0d\n  const sync = state.sync;\x0d\n  const cb = state.writecb;\x0d\n\x0d\n  if (typeof cb !== 'function') {\x0d\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  state.writing = false;\x0d\n  state.writecb = null;\x0d\n  state.length -= state.writelen;\x0d\n  state.writelen = 0;\x0d\n\x0d\n  if (er) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    er.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (!state.errored) {\x0d\n      state.errored = er;\x0d\n    }\x0d\n\x0d\n    // In case of duplex streams we need to notify the readable side of the\x0d\n    // error.\x0d\n    if (stream._readableState && !stream._readableState.errored) {\x0d\n      stream._readableState.errored = er;\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\x0d\n    } else {\x0d\n      onwriteError(stream\x2C state\x2C er\x2C cb);\x0d\n    }\x0d\n  } else {\x0d\n    if (state.buffered.length > state.bufferedIndex) {\x0d\n      clearBuffer(stream\x2C state);\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      // It is a common case that the callback passed to .write() is always\x0d\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\x0d\n      // rather just increase a counter\x2C to improve performance and avoid\x0d\n      // memory allocations.\x0d\n      if (state.afterWriteTickInfo !== null &&\x0d\n          state.afterWriteTickInfo.cb === cb) {\x0d\n        state.afterWriteTickInfo.count++;\x0d\n      } else {\x0d\n        state.afterWriteTickInfo = { count: 1\x2C cb\x2C stream\x2C state };\x0d\n        process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\x0d\n      }\x0d\n    } else {\x0d\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\x0d\n  state.afterWriteTickInfo = null;\x0d\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\x0d\n}\x0d\n\x0d\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\x0d\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\x0d\n    state.needDrain;\x0d\n  if (needDrain) {\x0d\n    state.needDrain = false;\x0d\n    stream.emit('drain');\x0d\n  }\x0d\n\x0d\n  while (count-- > 0) {\x0d\n    state.pendingcb--;\x0d\n    cb();\x0d\n  }\x0d\n\x0d\n  if (state.destroyed) {\x0d\n    errorBuffer(state);\x0d\n  }\x0d\n\x0d\n  finishMaybe(stream\x2C state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then invoke callbacks.\x0d\nfunction errorBuffer(state) {\x0d\n  if (state.writing) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\x0d\n    const { chunk\x2C callback } = state.buffered[n];\x0d\n    const len = state.objectMode ? 1 : chunk.length;\x0d\n    state.length -= len;\x0d\n    callback(new ERR_STREAM_DESTROYED('write'));\x0d\n  }\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](new ERR_STREAM_DESTROYED('end'));\x0d\n  }\x0d\n\x0d\n  resetBuffer(state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then process it.\x0d\nfunction clearBuffer(stream\x2C state) {\x0d\n  if (state.corked ||\x0d\n      state.bufferProcessing ||\x0d\n      state.destroyed ||\x0d\n      !state.constructed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const { buffered\x2C bufferedIndex\x2C objectMode } = state;\x0d\n  const bufferedLength = buffered.length - bufferedIndex;\x0d\n\x0d\n  if (!bufferedLength) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let i = bufferedIndex;\x0d\n\x0d\n  state.bufferProcessing = true;\x0d\n  if (bufferedLength > 1 && stream._writev) {\x0d\n    state.pendingcb -= bufferedLength - 1;\x0d\n\x0d\n    const callback = state.allNoop ? nop : (err) => {\x0d\n      for (let n = i; n < buffered.length; ++n) {\x0d\n        buffered[n].callback(err);\x0d\n      }\x0d\n    };\x0d\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\x0d\n    // since `doWrite` will mutate the array.\x0d\n    const chunks = state.allNoop && i === 0 ?\x0d\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\x0d\n    chunks.allBuffers = state.allBuffers;\x0d\n\x0d\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\x0d\n\x0d\n    resetBuffer(state);\x0d\n  } else {\x0d\n    do {\x0d\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\x0d\n      buffered[i++] = null;\x0d\n      const len = objectMode ? 1 : chunk.length;\x0d\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\x0d\n    } while (i < buffered.length && !state.writing);\x0d\n\x0d\n    if (i === buffered.length) {\x0d\n      resetBuffer(state);\x0d\n    } else if (i > 256) {\x0d\n      buffered.splice(0\x2C i);\x0d\n      state.bufferedIndex = 0;\x0d\n    } else {\x0d\n      state.bufferedIndex = i;\x0d\n    }\x0d\n  }\x0d\n  state.bufferProcessing = false;\x0d\n}\x0d\n\x0d\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (this._writev) {\x0d\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\x0d\n  } else {\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype._writev = null;\x0d\n\x0d\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (typeof chunk === 'function') {\x0d\n    cb = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (chunk !== null && chunk !== undefined) {\x0d\n    const ret = _write(this\x2C chunk\x2C encoding);\x0d\n    if (ret instanceof Error) {\x0d\n      err = ret;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // .end() fully uncorks.\x0d\n  if (state.corked) {\x0d\n    state.corked = 1;\x0d\n    this.uncork();\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    // Do nothing...\x0d\n  } else if (!state.errored && !state.ending) {\x0d\n    // This is forgiving in terms of unnecessary calls to end() and can hide\x0d\n    // logic errors. However\x2C usually such errors are harmless and causing a\x0d\n    // hard error can be disproportionately destructive. It is not always\x0d\n    // trivial for the user to determine whether end() needs to be called\x0d\n    // or not.\x0d\n\x0d\n    state.ending = true;\x0d\n    finishMaybe(this\x2C state\x2C true);\x0d\n    state.ended = true;\x0d\n  } else if (state.finished) {\x0d\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('end');\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    if (err || state.finished) {\x0d\n      process.nextTick(cb\x2C err);\x0d\n    } else {\x0d\n      state[kOnFinished].push(cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction needFinish(state) {\x0d\n  return (state.ending &&\x0d\n          state.constructed &&\x0d\n          state.length === 0 &&\x0d\n          !state.errored &&\x0d\n          state.buffered.length === 0 &&\x0d\n          !state.finished &&\x0d\n          !state.writing &&\x0d\n          !state.errorEmitted &&\x0d\n          !state.closeEmitted);\x0d\n}\x0d\n\x0d\nfunction callFinal(stream\x2C state) {\x0d\n  let called = false;\x0d\n\x0d\n  function onFinish(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    state.pendingcb--;\x0d\n    if (err) {\x0d\n      const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n        onfinishCallbacks[i](err);\x0d\n      }\x0d\n      errorOrDestroy(stream\x2C err\x2C state.sync);\x0d\n    } else if (needFinish(state)) {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n      // Backwards compat. Don't check state.sync here.\x0d\n      // Some streams assume 'finish' will be emitted\x0d\n      // asynchronously relative to _final callback.\x0d\n      state.pendingcb++;\x0d\n      process.nextTick(finish\x2C stream\x2C state);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.sync = true;\x0d\n  state.pendingcb++;\x0d\n\x0d\n  try {\x0d\n    const result = stream._final(onFinish);\x0d\n    if (result != null) {\x0d\n      const then = result.then;\x0d\n      if (typeof then === 'function') {\x0d\n        then.call(\x0d\n          result\x2C\x0d\n          function() {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C null);\x0d\n            }\x0d\n          }\x2C\x0d\n          function(err) {\x0d\n            if (!called) {\x0d\n              process.nextTick(onFinish\x2C err);\x0d\n            }\x0d\n          });\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    onFinish(err);\x0d\n  }\x0d\n\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction prefinish(stream\x2C state) {\x0d\n  if (!state.prefinished && !state.finalCalled) {\x0d\n    if (typeof stream._final === 'function' && !state.destroyed) {\x0d\n      state.finalCalled = true;\x0d\n      callFinal(stream\x2C state);\x0d\n    } else {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finishMaybe(stream\x2C state\x2C sync) {\x0d\n  if (needFinish(state)) {\x0d\n    prefinish(stream\x2C state);\x0d\n    if (state.pendingcb === 0 && needFinish(state)) {\x0d\n      state.pendingcb++;\x0d\n      if (sync) {\x0d\n        process.nextTick(finish\x2C stream\x2C state);\x0d\n      } else {\x0d\n        finish(stream\x2C state);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finish(stream\x2C state) {\x0d\n  state.pendingcb--;\x0d\n  state.finished = true;\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i]();\x0d\n  }\x0d\n\x0d\n  stream.emit('finish');\x0d\n\x0d\n  if (state.autoDestroy) {\x0d\n    // In case of duplex streams we need a way to detect\x0d\n    // if the readable side is ready for autoDestroy as well.\x0d\n    const rState = stream._readableState;\x0d\n    const autoDestroy = !rState || (\x0d\n      rState.autoDestroy &&\x0d\n      // We don't expect the readable to ever 'end'\x0d\n      // if readable is explicitly set to false.\x0d\n      (rState.endEmitted || rState.readable === false)\x0d\n    );\x0d\n    if (autoDestroy) {\x0d\n      stream.destroy();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Writable.prototype\x2C {\x0d\n\x0d\n  destroyed: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    get() {\x0d\n      const w = this._writableState;\x0d\n      // w.writable === false means that this is part of a Duplex stream\x0d\n      // where the writable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable writable side through\x0d\n      // deprecated setter.\x0d\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\x0d\n        !w.ending && !w.ended;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compatible.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.writable = !!val;\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableFinished: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.finished : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableObjectMode: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.objectMode : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableBuffer: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.getBuffer();\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableEnded: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.ending : false;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableNeedDrain: {\x0d\n    get() {\x0d\n      const wState = this._writableState;\x0d\n      if (!wState) return false;\x0d\n      return !wState.destroyed && !wState.ending && wState.needDrain;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableHighWaterMark: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.highWaterMark;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableCorked: {\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.corked : 0;\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  writableLength: {\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.length;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nconst destroy = destroyImpl.destroy;\x0d\nWritable.prototype.destroy = function(err\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  // Invoke pending callbacks.\x0d\n  if (!state.destroyed &&\x0d\n    (state.bufferedIndex < state.buffered.length ||\x0d\n      state[kOnFinished].length)) {\x0d\n    process.nextTick(errorBuffer\x2C state);\x0d\n  }\x0d\n\x0d\n  destroy.call(this\x2C err\x2C cb);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWritable.prototype._undestroy = destroyImpl.undestroy;\x0d\nWritable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n
code-source-info,0x1a2d22c62be,63,7627,9195,C0O7627C9O8212C16O8229C19O8236C23O8218C27O8250C33O8268C44O8268C51O8325C58O8332C63O8354C64O8360C83O8382C88O8380C92O8431C96O8470C104O8499C107O8521C111O8511C115O8554C123O8584C126O8607C130O8597C134O8641C142O8672C145O8696C149O8686C153O8731C161O8760C164O8782C168O8772C172O8815C180O8848C183O8874C187O8864C191O8902C197O8917C204O8950C212O8917C217O8975C224O8982C232O8982C238O9008C245O9020C258O9020C265O9194,,
code-creation,LazyCompile,10,287128,0x1a2d22c832e,341,WritableState node:internal/streams/writable:77:23,0x1722ff1ad68,~
code-source-info,0x1a2d22c832e
code-creation,LazyCompile,10,287269,0x1a2d22c873e,23,resetBuffer node:internal/streams/writable:202:21,0x1722ff1adb8,~
code-source-info,0x1a2d22c873e,63,7206,7323,C0O7219C2O7234C6O7243C7O7263C11O7271C12O7288C16O7299C17O7313C22O7322,,
code-creation,LazyCompile,10,287335,0x1a2d22c8846,21,set node:internal/streams/readable:1174:8,0x1722ff0d1d8,~
code-source-info,0x1a2d22c8846,56,36985,37117,C0O37037C6O37069C13O37097C15O37093C20O37116,,
code-creation,LazyCompile,10,287398,0x1a2d22c899e,131,createHandle node:net:137:22,0x144a20e94f8,~
code-source-info,0x1a2d22c899e,101,3745,4121,C0O3766C13O3766C18O3810C23O3810C28O3834C30O3843C35O3862C42O3886C46O3898C49O3912C57O3921C60O3935C67O3869C72O3949C73O3960C75O3969C80O3987C87O4010C91O4022C94O4035C102O4044C105O4057C112O3994C117O4071C118O4082C125O4088C130O4082,,
code-creation,LazyCompile,10,287469,0x1a2d22c8b3e,14,set node:net:1754:6,0x144a20eb538,~
code-source-info,0x1a2d22c8b3e,101,48768,48801,C0O48774C2O48786C7O48795C13O48799,,
code-creation,LazyCompile,10,287506,0x1a2d22c8c2e,8,get node:net:1753:6,0x144a20eb4e8,~
code-source-info,0x1a2d22c8c2e,101,48732,48760,C0O48737C2O48749C4O48748C7O48758,,
code-creation,LazyCompile,10,287613,0x1a2d22c8dde,196,Readable.on node:internal/streams/readable:874:33,0x1722ff0cb10,~
code-source-info,0x1a2d22c8dde,56,28621,29547,C0O28647C5O28654C10O28664C15O28667C29O28667C35O28709C40O28730C42O28737C47O28922C55O28922C62O28948C65O28915C69O29044C75O29052C80O29075C85O29075C91O29095C93O29102C98O29136C104O29157C110O29185C112O29230C118O29209C122O29245C123O29259C127O29275C128O29297C132O29313C140O29340C145O29354C150O29313C155O29381C161O29400C164O29400C170O29445C176O29465C179O29473C187O29473C193O29533C195O29544,,
code-creation,LazyCompile,10,287714,0x1a2d22c9056,135,initSocketHandle node:net:254:26,0x144a20e96d8,~
code-source-info,0x1a2d22c9056,101,6586,7186,C0O6603C5O6603C9O6620C10O6635C14O6724C20O6745C27O6753C32O6767C36O6785C43O6802C45O6800C49O6821C51O6826C57O6864C62O6845C66O6843C70O6895C72O6900C74O6899C78O6915C80O6952C82O6957C84O6956C88O6977C90O7019C94O7038C99O7043C105O7077C106O7084C107O7094C109O7099C114O7108C118O7140C123O7148C128O7148C134O7185,,
code-creation,LazyCompile,10,287795,0x1a2d22c9286,120,undestroy node:internal/streams/destroy:160:19,0x22ee8cf6bb0,~
code-source-info,0x1a2d22c9286,54,3223,3849,C0O3246C5O3280C10O3301C14O3315C15O3329C19O3342C20O3351C24O3365C25O3380C29O3394C30O3406C34O3420C35O3430C39O3443C40O3458C44O3472C45O3482C49O3496C50O3504C54O3518C55O3531C59O3550C63O3564C64O3578C68O3591C69O3603C73O3617C74O3626C78O3640C79O3655C83O3669C84O3679C88O3692C89O3707C93O3721C94O3729C98O3743C99O3752C103O3766C104O3780C108O3794C109O3808C113O3822C114O3833C119O3848,,
code-creation,LazyCompile,10,287891,0x1a2d22c9486,32,getNewAsyncId node:net:156:23,0x144a20e9548,~
code-source-info,0x1a2d22c9486,101,4149,4268,C0O4163C4O4196C14O4230C17O4230C22O4252C27O4252C31O4265,,
code-creation,LazyCompile,10,287948,0x1a2d22c9586,5,get node:internal/bootstrap/pre_execution:370:8,0x170e11d8478,~
code-source-info,0x1a2d22c9586,96,12136,12171,C0O12148C4O12164,,
code-creation,LazyCompile,10,287993,0x1a2d22c965e,5,get C:\\Users\\gaspa\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\redir-stdout.js:19:10,0x2ee7de38230,~
code-source-info,0x1a2d22c965e,140,392,404,C0O398C4O404,,
code-creation,Function,11,288659,0x1fd1490a5e0,1148,readPackageScope node:internal/modules/cjs/loader:321:26,0x170e11db228,^
code-source-info,0x1fd1490a5e0,111,9239,9772,,,
code-creation,Function,11,288694,0x1fd1490aac0,216, node:vm:313:27,0x2ee7de2e3c8,^
code-source-info,0x1fd1490aac0,88,10064,10115,,,
code-creation,Function,11,288712,0x1fd1490ac00,72,isUint32 node:internal/validators:40:18,0x1424f57ccc0,^
code-source-info,0x1fd1490ac00,15,835,882,,,
code-creation,Function,11,288730,0x1fd1490acc0,40,noop node:internal/util/debuglog:47:14,0x30f43b21ca0,^
code-source-info,0x1fd1490acc0,22,1465,1473,,,
code-creation,Function,11,288759,0x1fd1490ad60,1020,debuglog node:internal/util/debuglog:71:18,0x30f43b21d40,^
code-source-info,0x1fd1490ad60,22,2302,3328,,,
code-creation,Function,11,288779,0x1fd1490b1c0,252,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x1424f54fb20,^
code-source-info,0x1fd1490b1c0,9,7593,7692,,,
code-creation,Function,11,288797,0x1fd1490b320,72,isInt32 node:internal/validators:36:17,0x1424f57c7b0,^
code-source-info,0x1fd1490b320,15,769,814,,,
code-creation,Eval,10,288926,0x1a2d22c9e2e,5, C:\\Users\\gaspa\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x1a2d22c9ce8,~
script-source,144,C:\\Users\\gaspa\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js,'use strict'\n\nprocess.on('SIGINT'\x2C process.exit)\nprocess.on('SIGTERM'\x2C process.exit)\n
code-source-info,0x1a2d22c9e2e,144,0,85,C0O0C4O85,,
code-creation,Function,10,288966,0x1a2d22c9ece,56, C:\\Users\\gaspa\\AppData\\Roaming\\npm\\node_modules\\0x\\lib\\preload\\soft-exit.js:1:1,0x1a2d22c9da8,~
code-source-info,0x1a2d22c9ece,144,0,85,C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84,,
code-creation,LazyCompile,10,289129,0x1a2d22ca5ae,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:522:36,0x144a20c4770,~
code-source-info,0x1a2d22ca5ae,96,17219,17447,C0O17227C8O17231C14O17277C17O17285C28O17285C34O17399C40O17399C45O17436C49O17446,,
code-creation,LazyCompile,10,289204,0x1a2d22ca6d6,80,executeUserEntryPoint node:internal/modules/run_main:70:31,0x2ee7de13a78,~
code-source-info,0x1a2d22ca6d6,132,2231,2545,C7O2247C14O2251C22O2282C25O2282C30O2329C33O2329C38O2366C40O2391C45O2402C50O2391C56O2506C61O2513C73O2513C79O2544,,
code-creation,LazyCompile,10,289259,0x1a2d22cab06,68,resolveMainPath node:internal/modules/run_main:15:25,0x2ee7de13938,~
code-source-info,0x1a2d22cab06,132,412,839,C0O588C5O595C12O605C15O610C20O610C30O595C36O641C38O661C39O668C40O703C48O703C53O750C55O782C60O793C65O820C67O836,,
code-creation,Function,11,289794,0x1fd1490b3e0,7720,realpathSync node:fs:2425:22,0x25dd5bd93f0,^
code-source-info,0x1fd1490b3e0,80,66755,70785,,,
code-creation,Function,11,289827,0x1fd1490d280,160,checkListener node:events:258:23,0x30f43b2b2f8,^
code-source-info,0x1fd1490d280,23,7884,7942,,,
code-creation,Function,11,289859,0x1fd1490d380,128,addListener node:events:618:58,0x30f43b2ba38,^
code-source-info,0x1fd1490d380,23,18854,18928,,,
code-creation,LazyCompile,10,290380,0x1a2d22cb94e,109,shouldUseESMLoader node:internal/modules/run_main:30:28,0x2ee7de13988,~
code-source-info,0x1a2d22cb94e,132,870,1445,C0O905C8O905C13O949C15O970C16O982C17O1027C25O1027C30O1085C32O1117C37O1134C38O1146C39O1196C45O1212C51O1212C58O1260C59O1272C60O1276C66O1293C72O1293C79O1341C80O1354C81O1370C86O1370C91O1401C93O1419C98O1424C105O1429C108O1442,,
code-creation,Eval,10,291510,0x1a2d22cbe1e,5, C:\\Users\\gaspa\\OneDrive\\Escritorio\\Coder\\backend-class\\backend-class\\desafio-16\\src\\utils\\randomNum.js:1:1,0x1a2d22cbcb8,~
script-source,145,C:\\Users\\gaspa\\OneDrive\\Escritorio\\Coder\\backend-class\\backend-class\\desafio-16\\src\\utils\\randomNum.js,function generateRandomNumbers(n) {\x0d\n    const randomNumbers = [];\x0d\n    for (let i = 0; i < n; i++) {\x0d\n        randomNumbers.push(Math.floor(Math.random() * 1000))\x0d\n    };\x0d\n    return randomNumbers;\x0d\n};\x0d\nconst calcularRepeticiones = (quantity) => {\x0d\n    const arr = generateRandomNumbers(quantity)\x0d\n    const res = {}\x0d\n    for(let i of arr) {\x0d\n        res[i]? res[i]++: res[i] = 1\x0d\n    }\x0d\n    return res;\x0d\n};\x0d\n\x0d\nprocess.on('message'\x2C (message) => {\x0d\n    const res = calcularRepeticiones(message);\x0d\n    process.send(res);\x0d\n});
code-source-info,0x1a2d22cbe1e,145,0,525,C0O0C4O525,,
code-creation,Function,10,291599,0x1a2d22cbfbe,45, C:\\Users\\gaspa\\OneDrive\\Escritorio\\Coder\\backend-class\\backend-class\\desafio-16\\src\\utils\\randomNum.js:1:1,0x1a2d22cbd98,~
code-source-info,0x1a2d22cbfbe,145,0,525,C0O0C14O233C18O233C20O412C24O420C37O420C44O524,,
code-creation,LazyCompile,10,291766,0x1a2d22cc20e,44,refCounted node:internal/child_process:539:13,0x144a20e3f28,~
code-source-info,0x1a2d22cc20e,100,14732,14834,C0O14742C3O14752C9O14753C15O14759C22O14774C27O14802C29O14807C33O14816C38O14816C43O14833,,
code-creation,LazyCompile,10,291897,0x1a2d22cc3ce,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x5d8b39aa00,~
code-source-info,0x1a2d22cc3ce
code-creation,LazyCompile,10,291989,0x1a2d22cc6a6,43,shift node:internal/fixed_queue:108:8,0x5d8b39fd20,~
code-source-info,0x1a2d22cc6a6,34,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,292036,0x1a2d22cc7ee,54,shift node:internal/fixed_queue:80:8,0x5d8b39fb30,~
code-source-info,0x1a2d22cc7ee,34,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,292089,0x1a2d22cc926,42,emitBeforeScript node:internal/async_hooks:510:26,0x1424f578c78,~
code-source-info,0x1a2d22cc926,13,17372,17528,C0O17413C12O17413C17O17471C22O17484C25O17475C31O17499C36O17499C41O17527,,
code-creation,LazyCompile,10,292145,0x1a2d22cca76,180,pushAsyncContext node:internal/async_hooks:540:26,0x1424f578e20,~
code-source-info,0x1a2d22cca76,13,18046,18601,C0O18102C7O18120C9O18119C13O18138C20O18172C24O18187C26O18198C32O18205C35O18216C40O18232C44O18202C49O18245C54O18252C59O18295C60O18299C65O18310C72O18333C78O18340C83O18356C85O18355C88O18338C92O18379C97O18390C104O18413C107O18417C113O18424C118O18440C120O18439C123O18422C127O18461C134O18479C142O18492C146O18499C153O18515C158O18534C162O18548C169O18564C174O18581C179O18600,,
code-creation,LazyCompile,10,292244,0x1a2d22ccc8e,125, node:internal/child_process:708:22,0x170e11cee58,~
code-source-info,0x1a2d22ccc8e,100,20124,20501,C0O20139C3O20151C12O20170C20O20170C27O20205C28O20212C29O20239C32O20246C41O20254C43O20253C47O20288C52O20316C54O20329C55O20336C56O20359C58O20364C60O20364C65O20390C75O20410C85O20432C89O20390C94O20375C99O20346C102O20456C105O20463C114O20471C119O20489C124O20500,,
code-creation,LazyCompile,10,292312,0x1a2d22cce4e,31,listenerCount node:events:854:23,0x30f43b2bf80,~
code-source-info,0x1a2d22cce4e,23,25515,25797,C0O25547C5O25561C7O25613C9O25619C13O25634C17O25681C19O25690C20O25703C24O25760C28O25767C29O25785C30O25794,,
code-creation,LazyCompile,10,292359,0x1a2d22ccf56,13,destroyHooksExist node:internal/async_hooks:487:27,0x1424f578b88,~
code-source-info,0x1a2d22ccf56,13,16798,16835,C0O16806C5O16822C8O16813C12O16832,,
code-creation,LazyCompile,10,292398,0x1a2d22cd046,32,emitAfterScript node:internal/async_hooks:518:25,0x1424f578cc8,~
code-source-info,0x1a2d22cd046,13,17558,17659,C0O17573C5O17586C8O17577C14O17600C19O17600C23O17631C26O17631C31O17658,,
code-creation,LazyCompile,10,292454,0x1a2d22cd1ae,167,popAsyncContext node:internal/async_hooks:554:25,0x1424f578e70,~
code-source-info,0x1a2d22cd1ae,13,18694,19296,C0O18729C7O18747C9O18746C13O18765C14O18781C19O18788C20O18801C21O18807C24O18811C31O18834C36O18850C38O18849C44O18869C49O18953C54O18960C58O18986C59O19012C61O19024C65O19032C72O19048C77O19069C80O19080C87O19098C90O19095C93O19067C97O19112C104O19128C109O19147C112O19158C119O19176C122O19185C125O19173C128O19145C132O19194C137O19220C142O19220C146O19230C153O19248C158O19262C162O19275C163O19289C166O19293,,
code-creation,LazyCompile,10,292516,0x1a2d22cd38e,13,enabledHooksExist node:internal/async_hooks:475:27,0x1424f578a78,~
code-source-info,0x1a2d22cd38e,13,16609,16644,C0O16617C5O16633C8O16624C12O16641,,
code-creation,LazyCompile,10,292704,0x1a2d22cd6f6,627,processPromiseRejections node:internal/process/promises:211:34,0x5d8b39e438,~
script-source,33,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x0d\n  }\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = 1;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x1a2d22cd6f
tick,0x7ff651b40c10,293415,0,0x0,3,0x7ff652173fe0,0x1a2d22cc4eb
code-creation,LazyCompile,10,293452,0x1a2d22ce64e,25,setHasRejectionToWarn node:internal/process/promises:75:31,0x5d8b39d9a8,~
code-source-info,0x1a2d22ce64e,33,2169,2231,C0O2182C7O2191C12O2214C19O2212C24O2230,,
tick,0x7ffd55ac6f44,309054,0,0x0,8
tick,0x7ffd55ac6f44,324979,0,0x0,8
tick,0x7ffd55ac6f44,341066,0,0x0,8
tick,0x7ffd55ac6f44,356950,0,0x0,8
tick,0x7ffd55ac6f44,371980,0,0x0,8
tick,0x7ffd55ac6f44,387867,0,0x0,8
tick,0x7ffd55ac6f44,403760,0,0x0,8
tick,0x7ffd55ac6f44,419876,0,0x0,8
tick,0x7ffd55ac6f44,435816,0,0x0,8
tick,0x7ffd55ac6f44,451551,0,0x0,8
tick,0x7ffd55ac6f44,467512,0,0x0,8
tick,0x7ffd55ac6f44,483357,0,0x0,8
tick,0x7ffd55ac6f44,499541,0,0x0,8
tick,0x7ffd55ac6f44,514298,0,0x0,8
tick,0x7ffd55ac6f44,530317,0,0x0,8
tick,0x7ffd55ac6f44,546361,0,0x0,8
tick,0x7ffd55ac6f44,561535,0,0x0,8
tick,0x7ffd55ac6f44,576359,0,0x0,8
tick,0x7ffd55ac6f44,592271,0,0x0,8
tick,0x7ffd55ac6f44,607285,0,0x0,8
tick,0x7ffd55ac6f44,622335,0,0x0,8
tick,0x7ffd55ac6f44,637423,0,0x0,8
tick,0x7ffd55ac6f44,653255,0,0x0,8
tick,0x7ffd55ac6f44,669287,0,0x0,8
tick,0x7ffd55ac6f44,685301,0,0x0,8
tick,0x7ffd55ac6f44,700273,0,0x0,8
tick,0x7ffd55ac6f44,715288,0,0x0,8
tick,0x7ffd55ac6f44,730356,0,0x0,8
tick,0x7ffd55ac6f44,745308,0,0x0,8
tick,0x7ffd55ac6f44,760306,0,0x0,8
tick,0x7ffd55ac6f44,775319,0,0x0,8
tick,0x7ffd55ac6f44,790311,0,0x0,8
tick,0x7ffd55ac6f44,805411,0,0x0,8
tick,0x7ffd55ac6f44,821275,0,0x0,8
tick,0x7ffd55ac6f44,837299,0,0x0,8
tick,0x7ffd55ac6f44,852269,0,0x0,8
tick,0x7ffd55ac6f44,867272,0,0x0,8
tick,0x7ffd55ac6f44,882282,0,0x0,8
tick,0x7ffd55ac6f44,897297,0,0x0,8
tick,0x7ffd55ac6f44,912425,0,0x0,8
tick,0x7ffd55ac6f44,928575,0,0x0,8
tick,0x7ffd55ac6f44,944324,0,0x0,8
tick,0x7ffd55ac6f44,959466,0,0x0,8
tick,0x7ffd55ac6f44,975275,0,0x0,8
tick,0x7ffd55ac6f44,990349,0,0x0,8
tick,0x7ffd55ac6f44,1005331,0,0x0,8
tick,0x7ffd55ac6f44,1020559,0,0x0,8
tick,0x7ffd55ac6f44,1036293,0,0x0,8
tick,0x7ffd55ac6f44,1051521,0,0x0,8
tick,0x7ffd55ac6f44,1066302,0,0x0,8
tick,0x7ffd55ac6f44,1081262,0,0x0,8
tick,0x7ffd55ac6f44,1096450,0,0x0,8
tick,0x7ffd55ac6f44,1112226,0,0x0,8
tick,0x7ffd55ac6f44,1127415,0,0x0,8
tick,0x7ffd55ac6f44,1142282,0,0x0,8
tick,0x7ffd55ac6f44,1158416,0,0x0,8
tick,0x7ffd55ac6f44,1174303,0,0x0,8
tick,0x7ffd55ac6f44,1190233,0,0x0,8
tick,0x7ffd55ac6f44,1206253,0,0x0,8
tick,0x7ffd55ac6f44,1221218,0,0x0,8
tick,0x7ffd55ac6f44,1236274,0,0x0,8
tick,0x7ffd55ac6f44,1252408,0,0x0,8
tick,0x7ffd55ac6f44,1268199,0,0x0,8
tick,0x7ffd55ac6f44,1283216,0,0x0,8
tick,0x7ffd55ac6f44,1299211,0,0x0,8
tick,0x7ffd55ac6f44,1315237,0,0x0,8
tick,0x7ffd55ac6f44,1331233,0,0x0,8
tick,0x7ffd55ac6f44,1347218,0,0x0,8
tick,0x7ffd55ac6f44,1362328,0,0x0,8
tick,0x7ffd55ac6f44,1377244,0,0x0,8
tick,0x7ffd55ac6f44,1392231,0,0x0,8
tick,0x7ffd55ac6f44,1408253,0,0x0,8
tick,0x7ffd55ac6f44,1424237,0,0x0,8
tick,0x7ffd55ac6f44,1439220,0,0x0,8
tick,0x7ffd55ac6f44,1455317,0,0x0,8
tick,0x7ffd55ac6f44,1471215,0,0x0,8
tick,0x7ffd55ac6f44,1487232,0,0x0,8
tick,0x7ffd55ac6f44,1503265,0,0x0,8
tick,0x7ffd55ac6f44,1518387,0,0x0,8
tick,0x7ffd55ac6f44,1533393,0,0x0,8
tick,0x7ffd55ac6f44,1548433,0,0x0,8
tick,0x7ffd55ac6f44,1564366,0,0x0,8
tick,0x7ffd55ac6f44,1580433,0,0x0,8
tick,0x7ffd55ac6f44,1596350,0,0x0,8
tick,0x7ffd55ac6f44,1612398,0,0x0,8
tick,0x7ffd55ac6f44,1627415,0,0x0,8
tick,0x7ffd55ac6f44,1642359,0,0x0,8
tick,0x7ffd55ac6f44,1657337,0,0x0,8
tick,0x7ffd55ac6f44,1672357,0,0x0,8
tick,0x7ffd55ac6f44,1687407,0,0x0,8
tick,0x7ffd55ac6f44,1703339,0,0x0,8
tick,0x7ffd55ac6f44,1719541,0,0x0,8
tick,0x7ffd55ac6f44,1735448,0,0x0,8
tick,0x7ffd55ac6f44,1751370,0,0x0,8
tick,0x7ffd55ac6f44,1766382,0,0x0,8
tick,0x7ffd55ac6f44,1782382,0,0x0,8
tick,0x7ffd55ac6f44,1798370,0,0x0,8
tick,0x7ffd55ac6f44,1814361,0,0x0,8
tick,0x7ffd55ac6f44,1830387,0,0x0,8
tick,0x7ffd55ac6f44,1846362,0,0x0,8
tick,0x7ffd55ac6f44,1861341,0,0x0,8
tick,0x7ffd55ac6f44,1876831,0,0x0,8
tick,0x7ffd55ac6f44,1891379,0,0x0,8
tick,0x7ffd55ac6f44,1907402,0,0x0,8
tick,0x7ffd55ac6f44,1923368,0,0x0,8
tick,0x7ffd55ac6f44,1939427,0,0x0,8
tick,0x7ffd55ac6f44,1954383,0,0x0,8
tick,0x7ffd55ac6f44,1969343,0,0x0,8
tick,0x7ffd55ac6f44,1985389,0,0x0,8
tick,0x7ffd55ac6f44,2001351,0,0x0,8
tick,0x7ffd55ac6f44,2017390,0,0x0,8
tick,0x7ffd55ac6f44,2032352,0,0x0,8
tick,0x7ffd55ac6f44,2047420,0,0x0,8
tick,0x7ffd55ac6f44,2063450,0,0x0,8
tick,0x7ffd55ac6f44,2078617,0,0x0,8
tick,0x7ffd55ac6f44,2093448,0,0x0,8
tick,0x7ffd55ac6f44,2108405,0,0x0,8
tick,0x7ffd55ac6f44,2124786,0,0x0,8
tick,0x7ffd55ac6f44,2140062,0,0x0,8
tick,0x7ffd55ac6f44,2155895,0,0x0,8
tick,0x7ffd55ac6f44,2171890,0,0x0,8
tick,0x7ffd55ac6f44,2187816,0,0x0,8
tick,0x7ffd55ac6f44,2203851,0,0x0,8
tick,0x7ffd55ac6f44,2219996,0,0x0,8
tick,0x7ffd55ac6f44,2234984,0,0x0,8
tick,0x7ffd55ac6f44,2249998,0,0x0,8
tick,0x7ffd55ac6f44,2265955,0,0x0,8
tick,0x7ffd55ac6f44,2281985,0,0x0,8
tick,0x7ffd55ac6f44,2297879,0,0x0,8
tick,0x7ffd55ac6f44,2313867,0,0x0,8
tick,0x7ffd55ac6f44,2328923,0,0x0,8
tick,0x7ffd55ac6f44,2344958,0,0x0,8
tick,0x7ffd55ac6f44,2361142,0,0x0,8
tick,0x7ffd55ac6f44,2376915,0,0x0,8
tick,0x7ffd55ac6f44,2391933,0,0x0,8
tick,0x7ffd55ac6f44,2407995,0,0x0,8
tick,0x7ffd55ac6f44,2424094,0,0x0,8
tick,0x7ffd55ac6f44,2439107,0,0x0,8
tick,0x7ffd55ac6f44,2453954,0,0x0,8
tick,0x7ffd55ac6f44,2470029,0,0x0,8
tick,0x7ffd55ac6f44,2485989,0,0x0,8
tick,0x7ffd55ac6f44,2502005,0,0x0,8
tick,0x7ffd55ac6f44,2518158,0,0x0,8
tick,0x7ffd55ac6f44,2534147,0,0x0,8
tick,0x7ffd55ac6f44,2549032,0,0x0,8
tick,0x7ffd55ac6f44,2564976,0,0x0,8
tick,0x7ffd55ac6f44,2580073,0,0x0,8
tick,0x7ffd55ac6f44,2596011,0,0x0,8
tick,0x7ffd55ac6f44,2612095,0,0x0,8
tick,0x7ffd55ac6f44,2628270,0,0x0,8
tick,0x7ffd55ac6f44,2643002,0,0x0,8
tick,0x7ffd55ac6f44,2658199,0,0x0,8
tick,0x7ffd55ac6f44,2673979,0,0x0,8
tick,0x7ffd55ac6f44,2689022,0,0x0,8
tick,0x7ffd55ac6f44,2704255,0,0x0,8
tick,0x7ffd55ac6f44,2720046,0,0x0,8
tick,0x7ffd55ac6f44,2734975,0,0x0,8
tick,0x7ffd55ac6f44,2750642,0,0x0,8
tick,0x7ffd55ac6f44,2766667,0,0x0,8
tick,0x7ffd55ac6f44,2782715,0,0x0,8
tick,0x7ffd55ac6f44,2798658,0,0x0,8
tick,0x7ffd55ac6f44,2813769,0,0x0,8
tick,0x7ffd55ac6f44,2828664,0,0x0,8
tick,0x7ffd55ac6f44,2843612,0,0x0,8
tick,0x7ffd55ac6f44,2858657,0,0x0,8
tick,0x7ffd55ac6f44,2873629,0,0x0,8
tick,0x7ffd55ac6f44,2888620,0,0x0,8
tick,0x7ffd55ac6f44,2904647,0,0x0,8
tick,0x7ffd55ac6f44,2919679,0,0x0,8
tick,0x7ffd55ac6f44,2937593,0,0x0,8
tick,0x7ffd55ac6f44,2952168,0,0x0,8
tick,0x7ffd55ac6f44,2967620,0,0x0,8
tick,0x7ffd55ac6f44,2983801,0,0x0,8
tick,0x7ffd55ac6f44,2999650,0,0x0,8
tick,0x7ffd55ac6f44,3014598,0,0x0,8
tick,0x7ffd55ac6f44,3029676,0,0x0,8
tick,0x7ffd55ac6f44,3045255,0,0x0,8
tick,0x7ffd55ac6f44,3061237,0,0x0,8
tick,0x7ffd55ac6f44,3076192,0,0x0,8
tick,0x7ffd55ac6f44,3092173,0,0x0,8
tick,0x7ffd55ac6f44,3108253,0,0x0,8
tick,0x7ffd55ac6f44,3123145,0,0x0,8
tick,0x7ffd55ac6f44,3138128,0,0x0,8
tick,0x7ffd55ac6f44,3154140,0,0x0,8
tick,0x7ffd55ac6f44,3169136,0,0x0,8
tick,0x7ffd55ac6f44,3184151,0,0x0,8
tick,0x7ffd55ac6f44,3200156,0,0x0,8
tick,0x7ffd55ac6f44,3215172,0,0x0,8
tick,0x7ffd55ac6f44,3230168,0,0x0,8
tick,0x7ffd55ac6f44,3246241,0,0x0,8
tick,0x7ffd55ac6f44,3262140,0,0x0,8
tick,0x7ffd55ac6f44,3277213,0,0x0,8
tick,0x7ffd55ac6f44,3292155,0,0x0,8
tick,0x7ffd55ac6f44,3307127,0,0x0,8
tick,0x7ffd55ac6f44,3323151,0,0x0,8
tick,0x7ffd55ac6f44,3339168,0,0x0,8
tick,0x7ffd55ac6f44,3355264,0,0x0,8
tick,0x7ffd55ac6f44,3371184,0,0x0,8
tick,0x7ffd55ac6f44,3387175,0,0x0,8
tick,0x7ffd55ac6f44,3403221,0,0x0,8
tick,0x7ffd55ac6f44,3419226,0,0x0,8
tick,0x7ffd55ac6f44,3435144,0,0x0,8
tick,0x7ffd55ac6f44,3451167,0,0x0,8
tick,0x7ffd55ac6f44,3467172,0,0x0,8
tick,0x7ffd55ac6f44,3482254,0,0x0,8
tick,0x7ffd55ac6f44,3497170,0,0x0,8
tick,0x7ffd55ac6f44,3513182,0,0x0,8
tick,0x7ffd55ac6f44,3528125,0,0x0,8
tick,0x7ffd55ac6f44,3543205,0,0x0,8
tick,0x7ffd55ac6f44,3559206,0,0x0,8
tick,0x7ffd55ac6f44,3575125,0,0x0,8
tick,0x7ffd55ac6f44,3591188,0,0x0,8
tick,0x7ffd55ac6f44,3607134,0,0x0,8
tick,0x7ffd55ac6f44,3622122,0,0x0,8
tick,0x7ffd55ac6f44,3637127,0,0x0,8
tick,0x7ffd55ac6f44,3652152,0,0x0,8
tick,0x7ffd55ac6f44,3668144,0,0x0,8
tick,0x7ffd55ac6f44,3683166,0,0x0,8
tick,0x7ffd55ac6f44,3698720,0,0x0,8
tick,0x7ffd55ac6f44,3714179,0,0x0,8
tick,0x7ffd55ac6f44,3730146,0,0x0,8
tick,0x7ffd55ac6f44,3746147,0,0x0,8
tick,0x7ffd55ac6f44,3762168,0,0x0,8
tick,0x7ffd55ac6f44,3777140,0,0x0,8
tick,0x7ffd55ac6f44,3793135,0,0x0,8
tick,0x7ffd55ac6f44,3808240,0,0x0,8
tick,0x7ffd55ac6f44,3823457,0,0x0,8
tick,0x7ffd55ac6f44,3839519,0,0x0,8
tick,0x7ffd55ac6f44,3854500,0,0x0,8
tick,0x7ffd55ac6f44,3870464,0,0x0,8
tick,0x7ffd55ac6f44,3885487,0,0x0,8
tick,0x7ffd55ac6f44,3901487,0,0x0,8
tick,0x7ffd55ac6f44,3916484,0,0x0,8
tick,0x7ffd55ac6f44,3931545,0,0x0,8
tick,0x7ffd55ac6f44,3946483,0,0x0,8
tick,0x7ffd55ac6f44,3961471,0,0x0,8
tick,0x7ffd55ac6f44,3977504,0,0x0,8
tick,0x7ffd55ac6f44,3993467,0,0x0,8
tick,0x7ffd55ac6f44,4009531,0,0x0,8
tick,0x7ffd55ac6f44,4025546,0,0x0,8
tick,0x7ffd55ac6f44,4040492,0,0x0,8
tick,0x7ffd55ac6f44,4056493,0,0x0,8
tick,0x7ffd55ac6f44,4072497,0,0x0,8
tick,0x7ffd55ac6f44,4087441,0,0x0,8
tick,0x7ffd55ac6f44,4102468,0,0x0,8
tick,0x7ffd55ac6f44,4118530,0,0x0,8
tick,0x7ffd55ac6f44,4133535,0,0x0,8
tick,0x7ffd55ac6f44,4149578,0,0x0,8
tick,0x7ffd55ac6f44,4165543,0,0x0,8
tick,0x7ffd55ac6f44,4180548,0,0x0,8
tick,0x7ffd55ac6f44,4195597,0,0x0,8
tick,0x7ffd55ac6f44,4211725,0,0x0,8
tick,0x7ffd55ac6f44,4226512,0,0x0,8
tick,0x7ffd55ac6f44,4241463,0,0x0,8
tick,0x7ffd55ac6f44,4256518,0,0x0,8
tick,0x7ffd55ac6f44,4271624,0,0x0,8
tick,0x7ffd55ac6f44,4286496,0,0x0,8
tick,0x7ffd55ac6f44,4302959,0,0x0,8
tick,0x7ffd55ac6f44,4318721,0,0x0,8
tick,0x7ffd55ac6f44,4334484,0,0x0,8
tick,0x7ffd55ac6f44,4350675,0,0x0,8
tick,0x7ffd55ac6f44,4366666,0,0x0,8
tick,0x7ffd55ac6f44,4382527,0,0x0,8
tick,0x7ffd55ac6f44,4397656,0,0x0,8
tick,0x7ffd55ac6f44,4412504,0,0x0,8
tick,0x7ffd55ac6f44,4428715,0,0x0,8
tick,0x7ffd55ac6f44,4443539,0,0x0,8
tick,0x7ffd55ac6f44,4458584,0,0x0,8
tick,0x7ffd55ac6f44,4474509,0,0x0,8
tick,0x7ffd55ac6f44,4490651,0,0x0,8
tick,0x7ffd55ac6f44,4506515,0,0x0,8
tick,0x7ffd55ac6f44,4521850,0,0x0,8
tick,0x7ffd55ac6f44,4536638,0,0x0,8
tick,0x7ffd55ac6f44,4551631,0,0x0,8
tick,0x7ffd55ac6f44,4567936,0,0x0,8
tick,0x7ffd55ac6f44,4583677,0,0x0,8
tick,0x7ffd55ac6f44,4599952,0,0x0,8
tick,0x7ffd55ac6f44,4615705,0,0x0,8
tick,0x7ffd55ac6f44,4631674,0,0x0,8
tick,0x7ffd55ac6f44,4646660,0,0x0,8
tick,0x7ffd55ac6f44,4661745,0,0x0,8
tick,0x7ffd55ac6f44,4677842,0,0x0,8
tick,0x7ffd55ac6f44,4693676,0,0x0,8
tick,0x7ffd55ac6f44,4708868,0,0x0,8
tick,0x7ffd55ac6f44,4723702,0,0x0,8
tick,0x7ffd55ac6f44,4738678,0,0x0,8
tick,0x7ffd55ac6f44,4753623,0,0x0,8
tick,0x7ffd55ac6f44,4768660,0,0x0,8
tick,0x7ffd55ac6f44,4784716,0,0x0,8
tick,0x7ffd55ac6f44,4800715,0,0x0,8
tick,0x7ffd55ac6f44,4816695,0,0x0,8
tick,0x7ffd55ac6f44,4831729,0,0x0,8
tick,0x7ffd55ac6f44,4846927,0,0x0,8
tick,0x7ffd55ac6f44,4861689,0,0x0,8
tick,0x7ffd55ac6f44,4877625,0,0x0,8
tick,0x7ffd55ac6f44,4892681,0,0x0,8
tick,0x7ffd55ac6f44,4908665,0,0x0,8
tick,0x7ffd55ac6f44,4924813,0,0x0,8
tick,0x7ffd55ac6f44,4940692,0,0x0,8
tick,0x7ffd55ac6f44,4956673,0,0x0,8
tick,0x7ffd55ac6f44,4972623,0,0x0,8
tick,0x7ffd55ac6f44,4987665,0,0x0,8
tick,0x7ffd55ac6f44,5003633,0,0x0,8
tick,0x7ffd55ac6f44,5019688,0,0x0,8
tick,0x7ffd55ac6f44,5035681,0,0x0,8
tick,0x7ffd55ac6f44,5050788,0,0x0,8
tick,0x7ffd55ac6f44,5065597,0,0x0,8
tick,0x7ffd55ac6f44,5080674,0,0x0,8
tick,0x7ffd55ac6f44,5096663,0,0x0,8
tick,0x7ffd55ac6f44,5112621,0,0x0,8
tick,0x7ffd55ac6f44,5127662,0,0x0,8
tick,0x7ffd55ac6f44,5142621,0,0x0,8
tick,0x7ffd55ac6f44,5157897,0,0x0,8
tick,0x7ffd55ac6f44,5172790,0,0x0,8
tick,0x7ffd55ac6f44,5188088,0,0x0,8
tick,0x7ffd55ac6f44,5204028,0,0x0,8
tick,0x7ffd55ac6f44,5220144,0,0x0,8
tick,0x7ffd55ac6f44,5235342,0,0x0,8
tick,0x7ffd55ac6f44,5250797,0,0x0,8
tick,0x7ffd55ac6f44,5266839,0,0x0,8
tick,0x7ffd55ac6f44,5282883,0,0x0,8
tick,0x7ffd55ac6f44,5297980,0,0x0,8
tick,0x7ffd55ac6f44,5313882,0,0x0,8
tick,0x7ffd55ac6f44,5330106,0,0x0,8
tick,0x7ffd55ac6f44,5345789,0,0x0,8
tick,0x7ffd55ac6f44,5361789,0,0x0,8
tick,0x7ffd55ac6f44,5377869,0,0x0,8
tick,0x7ffd55ac6f44,5393866,0,0x0,8
tick,0x7ffd55ac6f44,5409819,0,0x0,8
tick,0x7ffd55ac6f44,5424874,0,0x0,8
tick,0x7ffd55ac6f44,5440022,0,0x0,8
tick,0x7ffd55ac6f44,5455802,0,0x0,8
tick,0x7ffd55ac6f44,5471876,0,0x0,8
tick,0x7ffd55ac6f44,5486835,0,0x0,8
tick,0x7ffd55ac6f44,5501872,0,0x0,8
tick,0x7ffd55ac6f44,5517925,0,0x0,8
tick,0x7ffd55ac6f44,5532893,0,0x0,8
tick,0x7ffd55ac6f44,5548873,0,0x0,8
tick,0x7ffd55ac6f44,5564795,0,0x0,8
tick,0x7ffd55ac6f44,5581021,0,0x0,8
tick,0x7ffd55ac6f44,5597119,0,0x0,8
tick,0x7ffd55ac6f44,5612948,0,0x0,8
tick,0x7ffd55ac6f44,5628334,0,0x0,8
tick,0x7ffd55ac6f44,5644176,0,0x0,8
tick,0x7ffd55ac6f44,5659390,0,0x0,8
tick,0x7ffd55ac6f44,5674264,0,0x0,8
tick,0x7ffd55ac6f44,5689044,0,0x0,8
tick,0x7ffd55ac6f44,5704279,0,0x0,8
tick,0x7ffd55ac6f44,5719563,0,0x0,8
tick,0x7ffd55ac6f44,5734883,0,0x0,8
tick,0x7ffd55ac6f44,5750349,0,0x0,8
tick,0x7ffd55ac6f44,5766186,0,0x0,8
tick,0x7ffd55ac6f44,5782195,0,0x0,8
tick,0x7ffd55ac6f44,5797676,0,0x0,8
tick,0x7ffd55ac6f44,5812529,0,0x0,8
tick,0x7ffd55ac6f44,5827505,0,0x0,8
tick,0x7ffd55ac6f44,5843538,0,0x0,8
tick,0x7ffd55ac6f44,5858613,0,0x0,8
tick,0x7ffd55ac6f44,5874449,0,0x0,8
tick,0x7ffd55ac6f44,5889533,0,0x0,8
tick,0x7ffd55ac6f44,5905236,0,0x0,8
tick,0x7ffd55ac6f44,5920301,0,0x0,8
tick,0x7ffd55ac6f44,5935901,0,0x0,8
tick,0x7ffd55ac6f44,5951355,0,0x0,8
tick,0x7ffd55ac6f44,5966952,0,0x0,8
tick,0x7ffd55ac6f44,5983140,0,0x0,8
tick,0x7ffd55ac6f44,5998375,0,0x0,8
tick,0x7ffd55ac6f44,6013969,0,0x0,8
tick,0x7ffd55ac6f44,6029959,0,0x0,8
tick,0x7ffd55ac6f44,6045524,0,0x0,8
tick,0x7ffd55ac6f44,6061032,0,0x0,8
tick,0x7ffd55ac6f44,6076183,0,0x0,8
tick,0x7ffd55ac6f44,6091836,0,0x0,8
tick,0x7ffd55ac6f44,6107697,0,0x0,8
tick,0x7ffd55ac6f44,6123043,0,0x0,8
tick,0x7ffd55ac6f44,6139343,0,0x0,8
tick,0x7ffd55ac6f44,6155168,0,0x0,8
tick,0x7ffd55ac6f44,6170360,0,0x0,8
tick,0x7ffd55ac6f44,6185786,0,0x0,8
tick,0x7ffd55ac6f44,6201294,0,0x0,8
tick,0x7ffd55ac6f44,6216594,0,0x0,8
tick,0x7ffd55ac6f44,6232342,0,0x0,8
tick,0x7ffd55ac6f44,6248551,0,0x0,8
tick,0x7ffd55ac6f44,6263901,0,0x0,8
tick,0x7ffd55ac6f44,6279064,0,0x0,8
tick,0x7ffd55ac6f44,6293939,0,0x0,8
tick,0x7ffd55ac6f44,6308894,0,0x0,8
tick,0x7ffd55ac6f44,6324115,0,0x0,8
tick,0x7ffd55ac6f44,6339568,0,0x0,8
tick,0x7ffd55ac6f44,6355221,0,0x0,8
tick,0x7ffd55ac6f44,6370343,0,0x0,8
tick,0x7ffd55ac6f44,6385477,0,0x0,8
tick,0x7ffd55ac6f44,6400770,0,0x0,8
tick,0x7ffd55ac6f44,6416124,0,0x0,8
tick,0x7ffd55ac6f44,6431322,0,0x0,8
tick,0x7ffd55ac6f44,6446197,0,0x0,8
tick,0x7ffd55ac6f44,6461206,0,0x0,8
tick,0x7ffd55ac6f44,6476737,0,0x0,8
tick,0x7ffd55ac6f44,6492464,0,0x0,8
tick,0x7ffd55ac6f44,6507108,0,0x0,8
tick,0x7ffd55ac6f44,6522183,0,0x0,8
tick,0x7ffd55ac6f44,6538389,0,0x0,8
tick,0x7ffd55ac6f44,6553077,0,0x0,8
tick,0x7ffd55ac6f44,6568350,0,0x0,8
tick,0x7ffd55ac6f44,6583397,0,0x0,8
tick,0x7ffd55ac6f44,6598244,0,0x0,8
tick,0x7ffd55ac6f44,6613586,0,0x0,8
tick,0x7ffd55ac6f44,6629741,0,0x0,8
tick,0x7ffd55ac6f44,6645077,0,0x0,8
tick,0x7ffd55ac6f44,6660260,0,0x0,8
tick,0x7ffd55ac6f44,6675169,0,0x0,8
tick,0x7ffd55ac6f44,6690757,0,0x0,8
tick,0x7ffd55ac6f44,6705967,0,0x0,8
tick,0x7ffd55ac6f44,6721418,0,0x0,8
tick,0x7ffd55ac6f44,6736511,0,0x0,8
tick,0x7ffd55ac6f44,6751393,0,0x0,8
tick,0x7ffd55ac6f44,6765929,0,0x0,8
tick,0x7ffd55ac6f44,6781145,0,0x0,8
tick,0x7ffd55ac6f44,6795966,0,0x0,8
tick,0x7ffd55ac6f44,6811146,0,0x0,8
tick,0x7ffd55ac6f44,6826751,0,0x0,8
tick,0x7ffd55ac6f44,6842260,0,0x0,8
tick,0x7ffd55ac6f44,6857559,0,0x0,8
tick,0x7ffd55ac6f44,6873177,0,0x0,8
tick,0x7ffd55ac6f44,6888136,0,0x0,8
tick,0x7ffd55ac6f44,6903321,0,0x0,8
tick,0x7ffd55ac6f44,6918726,0,0x0,8
tick,0x7ffd55ac6f44,6934618,0,0x0,8
tick,0x7ffd55ac6f44,6950283,0,0x0,8
tick,0x7ffd55ac6f44,6965605,0,0x0,8
tick,0x7ffd55ac6f44,6980999,0,0x0,8
tick,0x7ffd55ac6f44,6996016,0,0x0,8
tick,0x7ffd55ac6f44,7011290,0,0x0,8
tick,0x7ffd55ac6f44,7027032,0,0x0,8
tick,0x7ffd55ac6f44,7043196,0,0x0,8
tick,0x7ffd55ac6f44,7058801,0,0x0,8
tick,0x7ffd55ac6f44,7073916,0,0x0,8
tick,0x7ffd55ac6f44,7089562,0,0x0,8
tick,0x7ffd55ac6f44,7104811,0,0x0,8
tick,0x7ffd55ac6f44,7119992,0,0x0,8
tick,0x7ffd55ac6f44,7135218,0,0x0,8
tick,0x7ffd55ac6f44,7150875,0,0x0,8
tick,0x7ffd55ac6f44,7166134,0,0x0,8
tick,0x7ffd55ac6f44,7181946,0,0x0,8
tick,0x7ffd55ac6f44,7197439,0,0x0,8
tick,0x7ffd55ac6f44,7213279,0,0x0,8
tick,0x7ffd55ac6f44,7228555,0,0x0,8
tick,0x7ffd55ac6f44,7244331,0,0x0,8
tick,0x7ffd55ac6f44,7259104,0,0x0,8
tick,0x7ffd55ac6f44,7273983,0,0x0,8
tick,0x7ffd55ac6f44,7289432,0,0x0,8
tick,0x7ffd55ac6f44,7304171,0,0x0,8
tick,0x7ffd55ac6f44,7319162,0,0x0,8
tick,0x7ffd55ac6f44,7334577,0,0x0,8
tick,0x7ffd55ac6f44,7350245,0,0x0,8
tick,0x7ffd55ac6f44,7365075,0,0x0,8
tick,0x7ffd55ac6f44,7380441,0,0x0,8
tick,0x7ffd55ac6f44,7395602,0,0x0,8
tick,0x7ffd55ac6f44,7411032,0,0x0,8
tick,0x7ffd55ac6f44,7426131,0,0x0,8
tick,0x7ffd55ac6f44,7441530,0,0x0,8
tick,0x7ffd55ac6f44,7457134,0,0x0,8
tick,0x7ffd55ac6f44,7472721,0,0x0,8
tick,0x7ffd55ac6f44,7487934,0,0x0,8
tick,0x7ffd55ac6f44,7503116,0,0x0,8
tick,0x7ffd55ac6f44,7518320,0,0x0,8
tick,0x7ffd55ac6f44,7534254,0,0x0,8
tick,0x7ffd55ac6f44,7550255,0,0x0,8
tick,0x7ffd55ac6f44,7566316,0,0x0,8
tick,0x7ffd55ac6f44,7582156,0,0x0,8
tick,0x7ffd55ac6f44,7597240,0,0x0,8
tick,0x7ffd55ac6f44,7613144,0,0x0,8
tick,0x7ffd55ac6f44,7628801,0,0x0,8
tick,0x7ffd55ac6f44,7644207,0,0x0,8
tick,0x7ffd55ac6f44,7660117,0,0x0,8
tick,0x7ffd55ac6f44,7675426,0,0x0,8
tick,0x7ffd55ac6f44,7690752,0,0x0,8
tick,0x7ffd55ac6f44,7706852,0,0x0,8
tick,0x7ffd55ac6f44,7722241,0,0x0,8
tick,0x7ffd55ac6f44,7738325,0,0x0,8
tick,0x7ffd55ac6f44,7753381,0,0x0,8
tick,0x7ffd55ac6f44,7769305,0,0x0,8
tick,0x7ffd55ac6f44,7784356,0,0x0,8
tick,0x7ffd55ac6f44,7800060,0,0x0,8
tick,0x7ffd55ac6f44,7815725,0,0x0,8
tick,0x7ffd55ac6f44,7831182,0,0x0,8
tick,0x7ffd55ac6f44,7846899,0,0x0,8
tick,0x7ffd55ac6f44,7862997,0,0x0,8
tick,0x7ffd55ac6f44,7878491,0,0x0,8
tick,0x7ffd55ac6f44,7894384,0,0x0,8
tick,0x7ffd55ac6f44,7909718,0,0x0,8
tick,0x7ffd55ac6f44,7925543,0,0x0,8
tick,0x7ffd55ac6f44,7940607,0,0x0,8
tick,0x7ffd55ac6f44,7955985,0,0x0,8
tick,0x7ffd55ac6f44,7971244,0,0x0,8
tick,0x7ffd55ac6f44,7986834,0,0x0,8
tick,0x7ffd55ac6f44,8002036,0,0x0,8
tick,0x7ffd55ac6f44,8017805,0,0x0,8
tick,0x7ffd55ac6f44,8033527,0,0x0,8
tick,0x7ffd55ac6f44,8049084,0,0x0,8
tick,0x7ffd55ac6f44,8065019,0,0x0,8
tick,0x7ffd55ac6f44,8080812,0,0x0,8
tick,0x7ffd55ac6f44,8096222,0,0x0,8
tick,0x7ffd55ac6f44,8111373,0,0x0,8
tick,0x7ffd55ac6f44,8127143,0,0x0,8
tick,0x7ffd55ac6f44,8142735,0,0x0,8
tick,0x7ffd55ac6f44,8158816,0,0x0,8
tick,0x7ffd55ac6f44,8174877,0,0x0,8
tick,0x7ffd55ac6f44,8190423,0,0x0,8
tick,0x7ffd55ac6f44,8205555,0,0x0,8
tick,0x7ffd55ac6f44,8221667,0,0x0,8
tick,0x7ffd55ac6f44,8237374,0,0x0,8
tick,0x7ffd55ac6f44,8253944,0,0x0,8
tick,0x7ffd55ac6f44,8269759,0,0x0,8
tick,0x7ffd55ac6f44,8285704,0,0x0,8
tick,0x7ffd55ac6f44,8301195,0,0x0,8
tick,0x7ffd55ac6f44,8315988,0,0x0,8
tick,0x7ffd55ac6f44,8331411,0,0x0,8
tick,0x7ffd55ac6f44,8347222,0,0x0,8
tick,0x7ffd55ac6f44,8362298,0,0x0,8
tick,0x7ffd55ac6f44,8377551,0,0x0,8
tick,0x7ffd55ac6f44,8392258,0,0x0,8
tick,0x7ffd55ac6f44,8407922,0,0x0,8
tick,0x7ffd55ac6f44,8423037,0,0x0,8
tick,0x7ffd55ac6f44,8438700,0,0x0,8
tick,0x7ffd55ac6f44,8454276,0,0x0,8
tick,0x7ffd55ac6f44,8470263,0,0x0,8
tick,0x7ffd55ac6f44,8486201,0,0x0,8
tick,0x7ffd55ac6f44,8501337,0,0x0,8
tick,0x7ffd55ac6f44,8517193,0,0x0,8
tick,0x7ffd55ac6f44,8532903,0,0x0,8
tick,0x7ffd55ac6f44,8548159,0,0x0,8
tick,0x7ffd55ac6f44,8563414,0,0x0,8
tick,0x7ffd55ac6f44,8578559,0,0x0,8
tick,0x7ffd55ac6f44,8593739,0,0x0,8
tick,0x7ffd55ac6f44,8609050,0,0x0,8
tick,0x7ffd55ac6f44,8624176,0,0x0,8
tick,0x7ffd55ac6f44,8640308,0,0x0,8
tick,0x7ffd55ac6f44,8655396,0,0x0,8
tick,0x7ffd55ac6f44,8671360,0,0x0,8
tick,0x7ffd55ac6f44,8687329,0,0x0,8
tick,0x7ffd55ac6f44,8703227,0,0x0,8
tick,0x7ffd55ac6f44,8718529,0,0x0,8
tick,0x7ffd55ac6f44,8733911,0,0x0,8
tick,0x7ffd55ac6f44,8749074,0,0x0,8
tick,0x7ffd55ac6f44,8764424,0,0x0,8
tick,0x7ffd55ac6f44,8780601,0,0x0,8
tick,0x7ffd55ac6f44,8796061,0,0x0,8
tick,0x7ffd55ac6f44,8811156,0,0x0,8
tick,0x7ffd55ac6f44,8827163,0,0x0,8
tick,0x7ffd55ac6f44,8843074,0,0x0,8
tick,0x7ffd55ac6f44,8859068,0,0x0,8
tick,0x7ffd55ac6f44,8874747,0,0x0,8
tick,0x7ffd55ac6f44,8890638,0,0x0,8
tick,0x7ffd55ac6f44,8906684,0,0x0,8
tick,0x7ffd55ac6f44,8921665,0,0x0,8
tick,0x7ffd55ac6f44,8936886,0,0x0,8
tick,0x7ffd55ac6f44,8951903,0,0x0,8
tick,0x7ffd55ac6f44,8966878,0,0x0,8
tick,0x7ffd55ac6f44,8981882,0,0x0,8
tick,0x7ffd55ac6f44,8996923,0,0x0,8
tick,0x7ffd55ac6f44,9012950,0,0x0,8
tick,0x7ffd55ac6f44,9027910,0,0x0,8
tick,0x7ffd55ac6f44,9042946,0,0x0,8
tick,0x7ffd55ac6f44,9059134,0,0x0,8
tick,0x7ffd55ac6f44,9075056,0,0x0,8
tick,0x7ffd55ac6f44,9090887,0,0x0,8
tick,0x7ffd55ac6f44,9105909,0,0x0,8
tick,0x7ffd55ac6f44,9121945,0,0x0,8
tick,0x7ffd55ac6f44,9137345,0,0x0,8
tick,0x7ffd55ac6f44,9152276,0,0x0,8
tick,0x7ffd55ac6f44,9167286,0,0x0,8
tick,0x7ffd55ac6f44,9183234,0,0x0,8
tick,0x7ffd55ac6f44,9198556,0,0x0,8
tick,0x7ffd55ac6f44,9214170,0,0x0,8
tick,0x7ffd55ac6f44,9229305,0,0x0,8
tick,0x7ffd55ac6f44,9244902,0,0x0,8
tick,0x7ffd55ac6f44,9260474,0,0x0,8
tick,0x7ffd55ac6f44,9276096,0,0x0,8
tick,0x7ffd55ac6f44,9291681,0,0x0,8
tick,0x7ffd55ac6f44,9307687,0,0x0,8
tick,0x7ffd55ac6f44,9323194,0,0x0,8
tick,0x7ffd55ac6f44,9338524,0,0x0,8
tick,0x7ffd55ac6f44,9354432,0,0x0,8
tick,0x7ffd55ac6f44,9369911,0,0x0,8
tick,0x7ffd55ac6f44,9385677,0,0x0,8
tick,0x7ffd55ac6f44,9400535,0,0x0,8
tick,0x7ffd55ac6f44,9415666,0,0x0,8
tick,0x7ffd55ac6f44,9430747,0,0x0,8
tick,0x7ffd55ac6f44,9446040,0,0x0,8
tick,0x7ffd55ac6f44,9462126,0,0x0,8
tick,0x7ffd55ac6f44,9477430,0,0x0,8
tick,0x7ffd55ac6f44,9492943,0,0x0,8
tick,0x7ffd55ac6f44,9508368,0,0x0,8
tick,0x7ffd55ac6f44,9523774,0,0x0,8
tick,0x7ffd55ac6f44,9539224,0,0x0,8
tick,0x7ffd55ac6f44,9554621,0,0x0,8
tick,0x7ffd55ac6f44,9570503,0,0x0,8
tick,0x7ffd55ac6f44,9586234,0,0x0,8
tick,0x7ffd55ac6f44,9602293,0,0x0,8
tick,0x7ffd55ac6f44,9618262,0,0x0,8
tick,0x7ffd55ac6f44,9633228,0,0x0,8
tick,0x7ffd55ac6f44,9648271,0,0x0,8
tick,0x7ffd55ac6f44,9664229,0,0x0,8
tick,0x7ffd55ac6f44,9679246,0,0x0,8
tick,0x7ffd55ac6f44,9694228,0,0x0,8
tick,0x7ffd55ac6f44,9710269,0,0x0,8
tick,0x7ffd55ac6f44,9726221,0,0x0,8
tick,0x7ffd55ac6f44,9741857,0,0x0,8
tick,0x7ffd55ac6f44,9757383,0,0x0,8
tick,0x7ffd55ac6f44,9773824,0,0x0,8
tick,0x7ffd55ac6f44,9789488,0,0x0,8
tick,0x7ffd55ac6f44,9805421,0,0x0,8
tick,0x7ffd55ac6f44,9820485,0,0x0,8
tick,0x7ffd55ac6f44,9835118,0,0x0,8
tick,0x7ffd55ac6f44,9849690,0,0x0,8
tick,0x7ffd55ac6f44,9865152,0,0x0,8
tick,0x7ffd55ac6f44,9881280,0,0x0,8
tick,0x7ffd55ac6f44,9896463,0,0x0,8
tick,0x7ffd55ac6f44,9911732,0,0x0,8
tick,0x7ffd55ac6f44,9927453,0,0x0,8
tick,0x7ffd55ac6f44,9942606,0,0x0,8
tick,0x7ffd55ac6f44,9958165,0,0x0,8
tick,0x7ffd55ac6f44,9973326,0,0x0,8
tick,0x7ffd55ac6f44,9989279,0,0x0,8
tick,0x7ffd55ac6f44,10004716,0,0x0,8
tick,0x7ffd55ac6f44,10020730,0,0x0,8
tick,0x7ffd55ac6f44,10036292,0,0x0,8
tick,0x7ffd55ac6f44,10052333,0,0x0,8
tick,0x7ffd55ac6f44,10068270,0,0x0,8
tick,0x7ffd55ac6f44,10083643,0,0x0,8
tick,0x7ffd55ac6f44,10099859,0,0x0,8
tick,0x7ffd55ac6f44,10115580,0,0x0,8
tick,0x7ffd55ac6f44,10131855,0,0x0,8
tick,0x7ffd55ac6f44,10147143,0,0x0,8
tick,0x7ffd55ac6f44,10163713,0,0x0,8
tick,0x7ffd55ac6f44,10178797,0,0x0,8
tick,0x7ffd55ac6f44,10194203,0,0x0,8
tick,0x7ffd55ac6f44,10210075,0,0x0,8
tick,0x7ffd55ac6f44,10225121,0,0x0,8
tick,0x7ffd55ac6f44,10239927,0,0x0,8
tick,0x7ffd55ac6f44,10255650,0,0x0,8
tick,0x7ffd55ac6f44,10270844,0,0x0,8
tick,0x7ffd55ac6f44,10286150,0,0x0,8
tick,0x7ffd55ac6f44,10302152,0,0x0,8
tick,0x7ffd55ac6f44,10317819,0,0x0,8
tick,0x7ffd55ac6f44,10333389,0,0x0,8
tick,0x7ffd55ac6f44,10349393,0,0x0,8
tick,0x7ffd55ac6f44,10364419,0,0x0,8
tick,0x7ffd55ac6f44,10379321,0,0x0,8
tick,0x7ffd55ac6f44,10394241,0,0x0,8
tick,0x7ffd55ac6f44,10409917,0,0x0,8
tick,0x7ffd55ac6f44,10425391,0,0x0,8
tick,0x7ffd55ac6f44,10440546,0,0x0,8
tick,0x7ffd55ac6f44,10455581,0,0x0,8
tick,0x7ffd55ac6f44,10470831,0,0x0,8
tick,0x7ffd55ac6f44,10486025,0,0x0,8
tick,0x7ffd55ac6f44,10501221,0,0x0,8
tick,0x7ffd55ac6f44,10515763,0,0x0,8
tick,0x7ffd55ac6f44,10531559,0,0x0,8
tick,0x7ffd55ac6f44,10546797,0,0x0,8
tick,0x7ffd55ac6f44,10562195,0,0x0,8
tick,0x7ffd55ac6f44,10577638,0,0x0,8
tick,0x7ffd55ac6f44,10593476,0,0x0,8
tick,0x7ffd55ac6f44,10608500,0,0x0,8
tick,0x7ffd55ac6f44,10623102,0,0x0,8
tick,0x7ffd55ac6f44,10638570,0,0x0,8
tick,0x7ffd55ac6f44,10654666,0,0x0,8
tick,0x7ffd55ac6f44,10670701,0,0x0,8
tick,0x7ffd55ac6f44,10686194,0,0x0,8
tick,0x7ffd55ac6f44,10702368,0,0x0,8
tick,0x7ffd55ac6f44,10717791,0,0x0,8
tick,0x7ffd55ac6f44,10733744,0,0x0,8
tick,0x7ffd55ac6f44,10749063,0,0x0,8
tick,0x7ffd55ac6f44,10764183,0,0x0,8
tick,0x7ffd55ac6f44,10780272,0,0x0,8
tick,0x7ffd55ac6f44,10795705,0,0x0,8
tick,0x7ffd55ac6f44,10811249,0,0x0,8
tick,0x7ffd55ac6f44,10827210,0,0x0,8
tick,0x7ffd55ac6f44,10843415,0,0x0,8
tick,0x7ffd55ac6f44,10858859,0,0x0,8
tick,0x7ffd55ac6f44,10875007,0,0x0,8
tick,0x7ffd55ac6f44,10890783,0,0x0,8
tick,0x7ffd55ac6f44,10906052,0,0x0,8
tick,0x7ffd55ac6f44,10922093,0,0x0,8
tick,0x7ffd55ac6f44,10937438,0,0x0,8
tick,0x7ffd55ac6f44,10953370,0,0x0,8
tick,0x7ffd55ac6f44,10969281,0,0x0,8
tick,0x7ffd55ac6f44,10985693,0,0x0,8
tick,0x7ffd55ac6f44,11001337,0,0x0,8
tick,0x7ffd55ac6f44,11017431,0,0x0,8
tick,0x7ffd55ac6f44,11033259,0,0x0,8
tick,0x7ffd55ac6f44,11048645,0,0x0,8
tick,0x7ffd55ac6f44,11064016,0,0x0,8
tick,0x7ffd55ac6f44,11079591,0,0x0,8
tick,0x7ffd55ac6f44,11094438,0,0x0,8
tick,0x7ffd55ac6f44,11110162,0,0x0,8
tick,0x7ffd55ac6f44,11126540,0,0x0,8
tick,0x7ffd55ac6f44,11141446,0,0x0,8
tick,0x7ffd55ac6f44,11156815,0,0x0,8
tick,0x7ffd55ac6f44,11172826,0,0x0,8
tick,0x7ffd55ac6f44,11188573,0,0x0,8
tick,0x7ffd55ac6f44,11203312,0,0x0,8
tick,0x7ffd55ac6f44,11219092,0,0x0,8
tick,0x7ffd55ac6f44,11234389,0,0x0,8
tick,0x7ffd55ac6f44,11250157,0,0x0,8
tick,0x7ffd55ac6f44,11266272,0,0x0,8
tick,0x7ffd55ac6f44,11281314,0,0x0,8
tick,0x7ffd55ac6f44,11296760,0,0x0,8
tick,0x7ffd55ac6f44,11311895,0,0x0,8
tick,0x7ffd55ac6f44,11327614,0,0x0,8
tick,0x7ffd55ac6f44,11343394,0,0x0,8
tick,0x7ffd55ac6f44,11358496,0,0x0,8
tick,0x7ffd55ac6f44,11374081,0,0x0,8
tick,0x7ffd55ac6f44,11390013,0,0x0,8
tick,0x7ffd55ac6f44,11405227,0,0x0,8
tick,0x7ffd55ac6f44,11420679,0,0x0,8
tick,0x7ffd55ac6f44,11435629,0,0x0,8
tick,0x7ffd55ac6f44,11451994,0,0x0,8
tick,0x7ffd55ac6f44,11467339,0,0x0,8
tick,0x7ffd55ac6f44,11483406,0,0x0,8
tick,0x7ffd55ac6f44,11497995,0,0x0,8
tick,0x7ffd55ac6f44,11513082,0,0x0,8
tick,0x7ffd55ac6f44,11528001,0,0x0,8
tick,0x7ffd55ac6f44,11543352,0,0x0,8
tick,0x7ffd55ac6f44,11559038,0,0x0,8
tick,0x7ffd55ac6f44,11574913,0,0x0,8
tick,0x7ffd55ac6f44,11590851,0,0x0,8
tick,0x7ffd55ac6f44,11605194,0,0x0,8
tick,0x7ffd55ac6f44,11620801,0,0x0,8
tick,0x7ffd55ac6f44,11636101,0,0x0,8
tick,0x7ffd55ac6f44,11651522,0,0x0,8
tick,0x7ffd55ac6f44,11666873,0,0x0,8
tick,0x7ffd55ac6f44,11682315,0,0x0,8
tick,0x7ffd55ac6f44,11698107,0,0x0,8
tick,0x7ffd55ac6f44,11713331,0,0x0,8
tick,0x7ffd55ac6f44,11728348,0,0x0,8
tick,0x7ffd55ac6f44,11743848,0,0x0,8
tick,0x7ffd55ac6f44,11759496,0,0x0,8
tick,0x7ffd55ac6f44,11775215,0,0x0,8
tick,0x7ffd55ac6f44,11790234,0,0x0,8
tick,0x7ffd55ac6f44,11805660,0,0x0,8
tick,0x7ffd55ac6f44,11821225,0,0x0,8
tick,0x7ffd55ac6f44,11835844,0,0x0,8
tick,0x7ffd55ac6f44,11851569,0,0x0,8
tick,0x7ffd55ac6f44,11867401,0,0x0,8
tick,0x7ffd55ac6f44,11883651,0,0x0,8
tick,0x7ffd55ac6f44,11899484,0,0x0,8
tick,0x7ffd55ac6f44,11915482,0,0x0,8
tick,0x7ffd55ac6f44,11931688,0,0x0,8
tick,0x7ffd55ac6f44,11947746,0,0x0,8
tick,0x7ffd55ac6f44,11962834,0,0x0,8
tick,0x7ffd55ac6f44,11978424,0,0x0,8
tick,0x7ffd55ac6f44,11994034,0,0x0,8
tick,0x7ffd55ac6f44,12009590,0,0x0,8
tick,0x7ffd55ac6f44,12025004,0,0x0,8
tick,0x7ffd55ac6f44,12040539,0,0x0,8
tick,0x7ffd55ac6f44,12055942,0,0x0,8
tick,0x7ffd55ac6f44,12070801,0,0x0,8
tick,0x7ffd55ac6f44,12086431,0,0x0,8
tick,0x7ffd55ac6f44,12101941,0,0x0,8
tick,0x7ffd55ac6f44,12117955,0,0x0,8
tick,0x7ffd55ac6f44,12133945,0,0x0,8
tick,0x7ffd55ac6f44,12149041,0,0x0,8
tick,0x7ffd55ac6f44,12164764,0,0x0,8
tick,0x7ffd55ac6f44,12179772,0,0x0,8
tick,0x7ffd55ac6f44,12195293,0,0x0,8
tick,0x7ffd55ac6f44,12209727,0,0x0,8
tick,0x7ffd55ac6f44,12225656,0,0x0,8
tick,0x7ffd55ac6f44,12241785,0,0x0,8
tick,0x7ffd55ac6f44,12256687,0,0x0,8
tick,0x7ffd55ac6f44,12272660,0,0x0,8
tick,0x7ffd55ac6f44,12287749,0,0x0,8
tick,0x7ffd55ac6f44,12302732,0,0x0,8
tick,0x7ffd55ac6f44,12318893,0,0x0,8
tick,0x7ffd55ac6f44,12334776,0,0x0,8
tick,0x7ffd55ac6f44,12349963,0,0x0,8
tick,0x7ffd55ac6f44,12365799,0,0x0,8
tick,0x7ffd55ac6f44,12380724,0,0x0,8
tick,0x7ffd55ac6f44,12395856,0,0x0,8
tick,0x7ffd55ac6f44,12411927,0,0x0,8
tick,0x7ffd55ac6f44,12427193,0,0x0,8
tick,0x7ffd55ac6f44,12443106,0,0x0,8
tick,0x7ffd55ac6f44,12459094,0,0x0,8
tick,0x7ffd55ac6f44,12475167,0,0x0,8
tick,0x7ffd55ac6f44,12491139,0,0x0,8
tick,0x7ffd55ac6f44,12506091,0,0x0,8
tick,0x7ffd55ac6f44,12521097,0,0x0,8
tick,0x7ffd55ac6f44,12537159,0,0x0,8
tick,0x7ffd55ac6f44,12552108,0,0x0,8
tick,0x7ffd55ac6f44,12567323,0,0x0,8
tick,0x7ffd55ac6f44,12583117,0,0x0,8
tick,0x7ffd55ac6f44,12599158,0,0x0,8
tick,0x7ffd55ac6f44,12614107,0,0x0,8
tick,0x7ffd55ac6f44,12629133,0,0x0,8
tick,0x7ffd55ac6f44,12644756,0,0x0,8
tick,0x7ffd55ac6f44,12660345,0,0x0,8
tick,0x7ffd55ac6f44,12675926,0,0x0,8
tick,0x7ffd55ac6f44,12692059,0,0x0,8
tick,0x7ffd55ac6f44,12706717,0,0x0,8
tick,0x7ffd55ac6f44,12721959,0,0x0,8
tick,0x7ffd55ac6f44,12737888,0,0x0,8
tick,0x7ffd55ac6f44,12753292,0,0x0,8
tick,0x7ffd55ac6f44,12768843,0,0x0,8
tick,0x7ffd55ac6f44,12784136,0,0x0,8
tick,0x7ffd55ac6f44,12800029,0,0x0,8
tick,0x7ffd55ac6f44,12815314,0,0x0,8
tick,0x7ffd55ac6f44,12831257,0,0x0,8
tick,0x7ffd55ac6f44,12847005,0,0x0,8
tick,0x7ffd55ac6f44,12862716,0,0x0,8
tick,0x7ffd55ac6f44,12878098,0,0x0,8
tick,0x7ffd55ac6f44,12893232,0,0x0,8
tick,0x7ffd55ac6f44,12909070,0,0x0,8
tick,0x7ffd55ac6f44,12924447,0,0x0,8
tick,0x7ffd55ac6f44,12939955,0,0x0,8
tick,0x7ffd55ac6f44,12955233,0,0x0,8
tick,0x7ffd55ac6f44,12970672,0,0x0,8
tick,0x7ffd55ac6f44,12986238,0,0x0,8
tick,0x7ffd55ac6f44,13002242,0,0x0,8
tick,0x7ffd55ac6f44,13017532,0,0x0,8
tick,0x7ffd55ac6f44,13032851,0,0x0,8
tick,0x7ffd55ac6f44,13048175,0,0x0,8
tick,0x7ffd55ac6f44,13064094,0,0x0,8
tick,0x7ffd55ac6f44,13079241,0,0x0,8
tick,0x7ffd55ac6f44,13094475,0,0x0,8
tick,0x7ffd55ac6f44,13109608,0,0x0,8
tick,0x7ffd55ac6f44,13125008,0,0x0,8
tick,0x7ffd55ac6f44,13140321,0,0x0,8
tick,0x7ffd55ac6f44,13156174,0,0x0,8
tick,0x7ffd55ac6f44,13172207,0,0x0,8
tick,0x7ffd55ac6f44,13186876,0,0x0,8
tick,0x7ffd55ac6f44,13201973,0,0x0,8
tick,0x7ffd55ac6f44,13217664,0,0x0,8
tick,0x7ffd55ac6f44,13233512,0,0x0,8
tick,0x7ffd55ac6f44,13249443,0,0x0,8
tick,0x7ffd55ac6f44,13265143,0,0x0,8
tick,0x7ffd55ac6f44,13280500,0,0x0,8
tick,0x7ffd55ac6f44,13296555,0,0x0,8
tick,0x7ffd55ac6f44,13312527,0,0x0,8
tick,0x7ffd55ac6f44,13328472,0,0x0,8
tick,0x7ffd55ac6f44,13344147,0,0x0,8
tick,0x7ffd55ac6f44,13360096,0,0x0,8
tick,0x7ffd55ac6f44,13375731,0,0x0,8
tick,0x7ffd55ac6f44,13391079,0,0x0,8
tick,0x7ffd55ac6f44,13407660,0,0x0,8
tick,0x7ffd55ac6f44,13422503,0,0x0,8
tick,0x7ffd55ac6f44,13438191,0,0x0,8
tick,0x7ffd55ac6f44,13453660,0,0x0,8
tick,0x7ffd55ac6f44,13469349,0,0x0,8
tick,0x7ffd55ac6f44,13484594,0,0x0,8
tick,0x7ffd55ac6f44,13500232,0,0x0,8
tick,0x7ffd55ac6f44,13515312,0,0x0,8
tick,0x7ffd55ac6f44,13530851,0,0x0,8
tick,0x7ffd55ac6f44,13545523,0,0x0,8
tick,0x7ffd55ac6f44,13560741,0,0x0,8
tick,0x7ffd55ac6f44,13575681,0,0x0,8
tick,0x7ffd55ac6f44,13591394,0,0x0,8
tick,0x7ffd55ac6f44,13606562,0,0x0,8
tick,0x7ffd55ac6f44,13622228,0,0x0,8
tick,0x7ffd55ac6f44,13637483,0,0x0,8
tick,0x7ffd55ac6f44,13653720,0,0x0,8
tick,0x7ffd55ac6f44,13669392,0,0x0,8
tick,0x7ffd55ac6f44,13685051,0,0x0,8
tick,0x7ffd55ac6f44,13701192,0,0x0,8
tick,0x7ffd55ac6f44,13717374,0,0x0,8
tick,0x7ffd55ac6f44,13733069,0,0x0,8
tick,0x7ffd55ac6f44,13748461,0,0x0,8
tick,0x7ffd55ac6f44,13764040,0,0x0,8
tick,0x7ffd55ac6f44,13780232,0,0x0,8
tick,0x7ffd55ac6f44,13795209,0,0x0,8
tick,0x7ffd55ac6f44,13811343,0,0x0,8
tick,0x7ffd55ac6f44,13827183,0,0x0,8
tick,0x7ffd55ac6f44,13843199,0,0x0,8
tick,0x7ffd55ac6f44,13859269,0,0x0,8
tick,0x7ffd55ac6f44,13874330,0,0x0,8
tick,0x7ffd55ac6f44,13890387,0,0x0,8
tick,0x7ffd55ac6f44,13906150,0,0x0,8
tick,0x7ffd55ac6f44,13921937,0,0x0,8
tick,0x7ffd55ac6f44,13937478,0,0x0,8
tick,0x7ffd55ac6f44,13952309,0,0x0,8
tick,0x7ffd55ac6f44,13967381,0,0x0,8
tick,0x7ffd55ac6f44,13983416,0,0x0,8
tick,0x7ffd55ac6f44,13999411,0,0x0,8
tick,0x7ffd55ac6f44,14015116,0,0x0,8
tick,0x7ffd55ac6f44,14030745,0,0x0,8
tick,0x7ffd55ac6f44,14046782,0,0x0,8
tick,0x7ffd55ac6f44,14062339,0,0x0,8
tick,0x7ffd55ac6f44,14078134,0,0x0,8
tick,0x7ffd55ac6f44,14093400,0,0x0,8
tick,0x7ffd55ac6f44,14109365,0,0x0,8
tick,0x7ffd55ac6f44,14124628,0,0x0,8
tick,0x7ffd55ac6f44,14139544,0,0x0,8
tick,0x7ffd55ac6f44,14154771,0,0x0,8
tick,0x7ffd55ac6f44,14170879,0,0x0,8
tick,0x7ffd55ac6f44,14186091,0,0x0,8
tick,0x7ffd55ac6f44,14201974,0,0x0,8
tick,0x7ffd55ac6f44,14217664,0,0x0,8
tick,0x7ffd55ac6f44,14233293,0,0x0,8
tick,0x7ffd55ac6f44,14249459,0,0x0,8
tick,0x7ffd55ac6f44,14264718,0,0x0,8
tick,0x7ffd55ac6f44,14279927,0,0x0,8
tick,0x7ffd55ac6f44,14295133,0,0x0,8
tick,0x7ffd55ac6f44,14310013,0,0x0,8
tick,0x7ffd55ac6f44,14324976,0,0x0,8
tick,0x7ffd55ac6f44,14340476,0,0x0,8
tick,0x7ffd55ac6f44,14356800,0,0x0,8
tick,0x7ffd55ac6f44,14372225,0,0x0,8
tick,0x7ffd55ac6f44,14387523,0,0x0,8
tick,0x7ffd55ac6f44,14403036,0,0x0,8
tick,0x7ffd55ac6f44,14418281,0,0x0,8
tick,0x7ffd55ac6f44,14434370,0,0x0,8
tick,0x7ffd55ac6f44,14450347,0,0x0,8
tick,0x7ffd55ac6f44,14466342,0,0x0,8
tick,0x7ffd55ac6f44,14481886,0,0x0,8
tick,0x7ffd55ac6f44,14497606,0,0x0,8
tick,0x7ffd55ac6f44,14513194,0,0x0,8
tick,0x7ffd55ac6f44,14528247,0,0x0,8
tick,0x7ffd55ac6f44,14543529,0,0x0,8
tick,0x7ffd55ac6f44,14559309,0,0x0,8
tick,0x7ffd55ac6f44,14574398,0,0x0,8
tick,0x7ffd55ac6f44,14589302,0,0x0,8
tick,0x7ffd55ac6f44,14604677,0,0x0,8
tick,0x7ffd55ac6f44,14620179,0,0x0,8
tick,0x7ffd55ac6f44,14635248,0,0x0,8
tick,0x7ffd55ac6f44,14650351,0,0x0,8
tick,0x7ffd55ac6f44,14666600,0,0x0,8
tick,0x7ffd55ac6f44,14682443,0,0x0,8
tick,0x7ffd55ac6f44,14698409,0,0x0,8
tick,0x7ffd55ac6f44,14713999,0,0x0,8
tick,0x7ffd55ac6f44,14729438,0,0x0,8
tick,0x7ffd55ac6f44,14744648,0,0x0,8
tick,0x7ffd55ac6f44,14760011,0,0x0,8
tick,0x7ffd55ac6f44,14775227,0,0x0,8
tick,0x7ffd55ac6f44,14790780,0,0x0,8
tick,0x7ffd55ac6f44,14806325,0,0x0,8
tick,0x7ffd55ac6f44,14822200,0,0x0,8
tick,0x7ffd55ac6f44,14838217,0,0x0,8
tick,0x7ffd55ac6f44,14853244,0,0x0,8
tick,0x7ffd55ac6f44,14868430,0,0x0,8
tick,0x7ffd55ac6f44,14883842,0,0x0,8
tick,0x7ffd55ac6f44,14899006,0,0x0,8
tick,0x7ffd55ac6f44,14914117,0,0x0,8
tick,0x7ffd55ac6f44,14929296,0,0x0,8
tick,0x7ffd55ac6f44,14944362,0,0x0,8
tick,0x7ffd55ac6f44,14959652,0,0x0,8
tick,0x7ffd55ac6f44,14975138,0,0x0,8
tick,0x7ffd55ac6f44,14990407,0,0x0,8
tick,0x7ffd55ac6f44,15005828,0,0x0,8
tick,0x7ffd55ac6f44,15021377,0,0x0,8
tick,0x7ffd55ac6f44,15037473,0,0x0,8
tick,0x7ffd55ac6f44,15053355,0,0x0,8
tick,0x7ffd55ac6f44,15069341,0,0x0,8
tick,0x7ffd55ac6f44,15084552,0,0x0,8
tick,0x7ffd55ac6f44,15099851,0,0x0,8
tick,0x7ffd55ac6f44,15115344,0,0x0,8
tick,0x7ffd55ac6f44,15130459,0,0x0,8
tick,0x7ffd55ac6f44,15145694,0,0x0,8
tick,0x7ffd55ac6f44,15161609,0,0x0,8
tick,0x7ffd55ac6f44,15177597,0,0x0,8
tick,0x7ffd55ac6f44,15192990,0,0x0,8
tick,0x7ffd55ac6f44,15208668,0,0x0,8
tick,0x7ffd55ac6f44,15225393,0,0x0,8
tick,0x7ffd55ac6f44,15241256,0,0x0,8
tick,0x7ffd55ac6f44,15256248,0,0x0,8
tick,0x7ffd55ac6f44,15272434,0,0x0,8
tick,0x7ffd55ac6f44,15287284,0,0x0,8
tick,0x7ffd55ac6f44,15302367,0,0x0,8
tick,0x7ffd55ac6f44,15317764,0,0x0,8
tick,0x7ffd55ac6f44,15332648,0,0x0,8
tick,0x7ffd55ac6f44,15348431,0,0x0,8
tick,0x7ffd55ac6f44,15364233,0,0x0,8
tick,0x7ffd55ac6f44,15380082,0,0x0,8
tick,0x7ffd55ac6f44,15396063,0,0x0,8
tick,0x7ffd55ac6f44,15412109,0,0x0,8
tick,0x7ffd55ac6f44,15427610,0,0x0,8
tick,0x7ffd55ac6f44,15443845,0,0x0,8
tick,0x7ffd55ac6f44,15459435,0,0x0,8
tick,0x7ffd55ac6f44,15474627,0,0x0,8
tick,0x7ffd55ac6f44,15490009,0,0x0,8
tick,0x7ffd55ac6f44,15504924,0,0x0,8
tick,0x7ffd55ac6f44,15520536,0,0x0,8
tick,0x7ffd55ac6f44,15535792,0,0x0,8
tick,0x7ffd55ac6f44,15551111,0,0x0,8
tick,0x7ffd55ac6f44,15567106,0,0x0,8
tick,0x7ffd55ac6f44,15582275,0,0x0,8
tick,0x7ffd55ac6f44,15597601,0,0x0,8
tick,0x7ffd55ac6f44,15613545,0,0x0,8
tick,0x7ffd55ac6f44,15629402,0,0x0,8
tick,0x7ffd55ac6f44,15645254,0,0x0,8
tick,0x7ffd55ac6f44,15660673,0,0x0,8
tick,0x7ffd55ac6f44,15676560,0,0x0,8
tick,0x7ffd55ac6f44,15692515,0,0x0,8
tick,0x7ffd55ac6f44,15708749,0,0x0,8
tick,0x7ffd55ac6f44,15724164,0,0x0,8
tick,0x7ffd55ac6f44,15740125,0,0x0,8
tick,0x7ffd55ac6f44,15755276,0,0x0,8
tick,0x7ffd55ac6f44,15770402,0,0x0,8
tick,0x7ffd55ac6f44,15786220,0,0x0,8
tick,0x7ffd55ac6f44,15801240,0,0x0,8
tick,0x7ffd55ac6f44,15816764,0,0x0,8
tick,0x7ffd55ac6f44,15832024,0,0x0,8
tick,0x7ffd55ac6f44,15846900,0,0x0,8
tick,0x7ffd55ac6f44,15862147,0,0x0,8
tick,0x7ffd55ac6f44,15877687,0,0x0,8
tick,0x7ffd55ac6f44,15893461,0,0x0,8
tick,0x7ffd55ac6f44,15908463,0,0x0,8
tick,0x7ffd55ac6f44,15923917,0,0x0,8
tick,0x7ffd55ac6f44,15939639,0,0x0,8
tick,0x7ffd55ac6f44,15955195,0,0x0,8
tick,0x7ffd55ac6f44,15970458,0,0x0,8
tick,0x7ffd55ac6f44,15986277,0,0x0,8
tick,0x7ffd55ac6f44,16001881,0,0x0,8
tick,0x7ffd55ac6f44,16017577,0,0x0,8
tick,0x7ffd55ac6f44,16032782,0,0x0,8
tick,0x7ffd55ac6f44,16048514,0,0x0,8
tick,0x7ffd55ac6f44,16064403,0,0x0,8
tick,0x7ffd55ac6f44,16079975,0,0x0,8
tick,0x7ffd55ac6f44,16095571,0,0x0,8
tick,0x7ffd55ac6f44,16111281,0,0x0,8
tick,0x7ffd55ac6f44,16126976,0,0x0,8
tick,0x7ffd55ac6f44,16142837,0,0x0,8
tick,0x7ffd55ac6f44,16158713,0,0x0,8
tick,0x7ffd55ac6f44,16174158,0,0x0,8
tick,0x7ffd55ac6f44,16190027,0,0x0,8
tick,0x7ffd55ac6f44,16205930,0,0x0,8
tick,0x7ffd55ac6f44,16220903,0,0x0,8
tick,0x7ffd55ac6f44,16235978,0,0x0,8
tick,0x7ffd55ac6f44,16251407,0,0x0,8
tick,0x7ffd55ac6f44,16267174,0,0x0,8
tick,0x7ffd55ac6f44,16283131,0,0x0,8
tick,0x7ffd55ac6f44,16298576,0,0x0,8
tick,0x7ffd55ac6f44,16313982,0,0x0,8
tick,0x7ffd55ac6f44,16329868,0,0x0,8
tick,0x7ffd55ac6f44,16345866,0,0x0,8
tick,0x7ffd55ac6f44,16361666,0,0x0,8
tick,0x7ffd55ac6f44,16376758,0,0x0,8
tick,0x7ffd55ac6f44,16392502,0,0x0,8
tick,0x7ffd55ac6f44,16407754,0,0x0,8
tick,0x7ffd55ac6f44,16423806,0,0x0,8
tick,0x7ffd55ac6f44,16439810,0,0x0,8
tick,0x7ffd55ac6f44,16455779,0,0x0,8
tick,0x7ffd55ac6f44,16471690,0,0x0,8
tick,0x7ffd55ac6f44,16487059,0,0x0,8
tick,0x7ffd55ac6f44,16503127,0,0x0,8
tick,0x7ffd55ac6f44,16518231,0,0x0,8
tick,0x7ffd55ac6f44,16533322,0,0x0,8
tick,0x7ffd55ac6f44,16549160,0,0x0,8
tick,0x7ffd55ac6f44,16565171,0,0x0,8
tick,0x7ffd55ac6f44,16580855,0,0x0,8
tick,0x7ffd55ac6f44,16595817,0,0x0,8
tick,0x7ffd55ac6f44,16610829,0,0x0,8
tick,0x7ffd55ac6f44,16625905,0,0x0,8
tick,0x7ffd55ac6f44,16640671,0,0x0,8
tick,0x7ffd55ac6f44,16655889,0,0x0,8
tick,0x7ffd55ac6f44,16671815,0,0x0,8
tick,0x7ffd55ac6f44,16687949,0,0x0,8
tick,0x7ffd55ac6f44,16702636,0,0x0,8
tick,0x7ffd55ac6f44,16718371,0,0x0,8
tick,0x7ffd55ac6f44,16734388,0,0x0,8
tick,0x7ffd55ac6f44,16749731,0,0x0,8
tick,0x7ffd55ac6f44,16765668,0,0x0,8
tick,0x7ffd55ac6f44,16780940,0,0x0,8
tick,0x7ffd55ac6f44,16796821,0,0x0,8
tick,0x7ffd55ac6f44,16812632,0,0x0,8
tick,0x7ffd55ac6f44,16827882,0,0x0,8
tick,0x7ffd55ac6f44,16843128,0,0x0,8
tick,0x7ffd55ac6f44,16858278,0,0x0,8
tick,0x7ffd55ac6f44,16874230,0,0x0,8
tick,0x7ffd55ac6f44,16890004,0,0x0,8
tick,0x7ffd55ac6f44,16905987,0,0x0,8
tick,0x7ffd55ac6f44,16922040,0,0x0,8
tick,0x7ffd55ac6f44,16937780,0,0x0,8
tick,0x7ffd55ac6f44,16952979,0,0x0,8
tick,0x7ffd55ac6f44,16968331,0,0x0,8
tick,0x7ffd55ac6f44,16984048,0,0x0,8
tick,0x7ffd55ac6f44,16999191,0,0x0,8
tick,0x7ffd55ac6f44,17014885,0,0x0,8
tick,0x7ffd55ac6f44,17030933,0,0x0,8
tick,0x7ffd55ac6f44,17046105,0,0x0,8
tick,0x7ffd55ac6f44,17062393,0,0x0,8
tick,0x7ffd55ac6f44,17078324,0,0x0,8
tick,0x7ffd55ac6f44,17093722,0,0x0,8
tick,0x7ffd55ac6f44,17109536,0,0x0,8
tick,0x7ffd55ac6f44,17125442,0,0x0,8
tick,0x7ffd55ac6f44,17140443,0,0x0,8
tick,0x7ffd55ac6f44,17155669,0,0x0,8
tick,0x7ffd55ac6f44,17171435,0,0x0,8
tick,0x7ffd55ac6f44,17187404,0,0x0,8
tick,0x7ffd55ac6f44,17203554,0,0x0,8
tick,0x7ffd55ac6f44,17219509,0,0x0,8
tick,0x7ffd55ac6f44,17235574,0,0x0,8
tick,0x7ffd55ac6f44,17250582,0,0x0,8
tick,0x7ffd55ac6f44,17265471,0,0x0,8
tick,0x7ffd55ac6f44,17280487,0,0x0,8
tick,0x7ffd55ac6f44,17295446,0,0x0,8
tick,0x7ffd55ac6f44,17311418,0,0x0,8
tick,0x7ffd55ac6f44,17326416,0,0x0,8
tick,0x7ffd55ac6f44,17341412,0,0x0,8
tick,0x7ffd55ac6f44,17356409,0,0x0,8
tick,0x7ffd55ac6f44,17372427,0,0x0,8
tick,0x7ffd55ac6f44,17388433,0,0x0,8
tick,0x7ffd55ac6f44,17404403,0,0x0,8
tick,0x7ffd55ac6f44,17420453,0,0x0,8
tick,0x7ffd55ac6f44,17435977,0,0x0,8
tick,0x7ffd55ac6f44,17451984,0,0x0,8
tick,0x7ffd55ac6f44,17467950,0,0x0,8
tick,0x7ffd55ac6f44,17483037,0,0x0,8
tick,0x7ffd55ac6f44,17498008,0,0x0,8
tick,0x7ffd55ac6f44,17513990,0,0x0,8
tick,0x7ffd55ac6f44,17528975,0,0x0,8
tick,0x7ffd55ac6f44,17544014,0,0x0,8
tick,0x7ffd55ac6f44,17558983,0,0x0,8
tick,0x7ffd55ac6f44,17573957,0,0x0,8
tick,0x7ffd55ac6f44,17588994,0,0x0,8
tick,0x7ffd55ac6f44,17604986,0,0x0,8
tick,0x7ffd55ac6f44,17619752,0,0x0,8
tick,0x7ffd55ac6f44,17635248,0,0x0,8
tick,0x7ffd55ac6f44,17651374,0,0x0,8
tick,0x7ffd55ac6f44,17666232,0,0x0,8
tick,0x7ffd55ac6f44,17682167,0,0x0,8
tick,0x7ffd55ac6f44,17697317,0,0x0,8
tick,0x7ffd55ac6f44,17712790,0,0x0,8
tick,0x7ffd55ac6f44,17727981,0,0x0,8
tick,0x7ffd55ac6f44,17743499,0,0x0,8
tick,0x7ffd55ac6f44,17758699,0,0x0,8
tick,0x7ffd55ac6f44,17774075,0,0x0,8
tick,0x7ffd55ac6f44,17789624,0,0x0,8
tick,0x7ffd55ac6f44,17805141,0,0x0,8
tick,0x7ffd55ac6f44,17820455,0,0x0,8
tick,0x7ffd55ac6f44,17835912,0,0x0,8
tick,0x7ffd55ac6f44,17851667,0,0x0,8
tick,0x7ffd55ac6f44,17867675,0,0x0,8
tick,0x7ffd55ac6f44,17882263,0,0x0,8
tick,0x7ffd55ac6f44,17897220,0,0x0,8
tick,0x7ffd55ac6f44,17913237,0,0x0,8
tick,0x7ffd55ac6f44,17928623,0,0x0,8
tick,0x7ffd55ac6f44,17943332,0,0x0,8
tick,0x7ffd55ac6f44,17958353,0,0x0,8
tick,0x7ffd55ac6f44,17974454,0,0x0,8
tick,0x7ffd55ac6f44,17991019,0,0x0,8
tick,0x7ffd55ac6f44,18006377,0,0x0,8
tick,0x7ffd55ac6f44,18021369,0,0x0,8
tick,0x7ffd55ac6f44,18036352,0,0x0,8
tick,0x7ffd55ac6f44,18051346,0,0x0,8
tick,0x7ffd55ac6f44,18066369,0,0x0,8
tick,0x7ffd55ac6f44,18082355,0,0x0,8
tick,0x7ffd55ac6f44,18097299,0,0x0,8
tick,0x7ffd55ac6f44,18112566,0,0x0,8
tick,0x7ffd55ac6f44,18127357,0,0x0,8
tick,0x7ffd55ac6f44,18142863,0,0x0,8
tick,0x7ffd55ac6f44,18158820,0,0x0,8
tick,0x7ffd55ac6f44,18173782,0,0x0,8
tick,0x7ffd55ac6f44,18189292,0,0x0,8
tick,0x7ffd55ac6f44,18204735,0,0x0,8
tick,0x7ffd55ac6f44,18219500,0,0x0,8
tick,0x7ffd55ac6f44,18234657,0,0x0,8
tick,0x7ffd55ac6f44,18249821,0,0x0,8
tick,0x7ffd55ac6f44,18265781,0,0x0,8
tick,0x7ffd55ac6f44,18280864,0,0x0,8
tick,0x7ffd55ac6f44,18296806,0,0x0,8
tick,0x7ffd55ac6f44,18312851,0,0x0,8
tick,0x7ffd55ac6f44,18327738,0,0x0,8
tick,0x7ffd55ac6f44,18342783,0,0x0,8
tick,0x7ffd55ac6f44,18357767,0,0x0,8
tick,0x7ffd55ac6f44,18372863,0,0x0,8
tick,0x7ffd55ac6f44,18388156,0,0x0,8
tick,0x7ffd55ac6f44,18403971,0,0x0,8
tick,0x7ffd55ac6f44,18419132,0,0x0,8
tick,0x7ffd55ac6f44,18434114,0,0x0,8
tick,0x7ffd55ac6f44,18449258,0,0x0,8
tick,0x7ffd55ac6f44,18465244,0,0x0,8
tick,0x7ffd55ac6f44,18481205,0,0x0,8
tick,0x7ffd55ac6f44,18496766,0,0x0,8
tick,0x7ffd55ac6f44,18511721,0,0x0,8
tick,0x7ffd55ac6f44,18526714,0,0x0,8
tick,0x7ffd55ac6f44,18542703,0,0x0,8
tick,0x7ffd55ac6f44,18558830,0,0x0,8
tick,0x7ffd55ac6f44,18573777,0,0x0,8
tick,0x7ffd55ac6f44,18589287,0,0x0,8
tick,0x7ffd55ac6f44,18604896,0,0x0,8
tick,0x7ffd55ac6f44,18619994,0,0x0,8
tick,0x7ffd55ac6f44,18634915,0,0x0,8
tick,0x7ffd55ac6f44,18650796,0,0x0,8
tick,0x7ffd55ac6f44,18666413,0,0x0,8
tick,0x7ffd55ac6f44,18682198,0,0x0,8
tick,0x7ffd55ac6f44,18697836,0,0x0,8
tick,0x7ffd55ac6f44,18713869,0,0x0,8
tick,0x7ffd55ac6f44,18728776,0,0x0,8
tick,0x7ffd55ac6f44,18744223,0,0x0,8
tick,0x7ffd55ac6f44,18759796,0,0x0,8
tick,0x7ffd55ac6f44,18775875,0,0x0,8
tick,0x7ffd55ac6f44,18791812,0,0x0,8
tick,0x7ffd55ac6f44,18807457,0,0x0,8
tick,0x7ffd55ac6f44,18822467,0,0x0,8
tick,0x7ffd55ac6f44,18837789,0,0x0,8
tick,0x7ffd55ac6f44,18853501,0,0x0,8
tick,0x7ffd55ac6f44,18870021,0,0x0,8
tick,0x7ffd55ac6f44,18884924,0,0x0,8
tick,0x7ffd55ac6f44,18900657,0,0x0,8
tick,0x7ffd55ac6f44,18915770,0,0x0,8
tick,0x7ffd55ac6f44,18931739,0,0x0,8
tick,0x7ffd55ac6f44,18946900,0,0x0,8
tick,0x7ffd55ac6f44,18961969,0,0x0,8
tick,0x7ffd55ac6f44,18977749,0,0x0,8
tick,0x7ffd55ac6f44,18993634,0,0x0,8
tick,0x7ffd55ac6f44,19009308,0,0x0,8
tick,0x7ffd55ac6f44,19024958,0,0x0,8
tick,0x7ffd55ac6f44,19040850,0,0x0,8
tick,0x7ffd55ac6f44,19056113,0,0x0,8
tick,0x7ffd55ac6f44,19071787,0,0x0,8
tick,0x7ffd55ac6f44,19087244,0,0x0,8
tick,0x7ffd55ac6f44,19101889,0,0x0,8
tick,0x7ffd55ac6f44,19117769,0,0x0,8
tick,0x7ffd55ac6f44,19133761,0,0x0,8
tick,0x7ffd55ac6f44,19149797,0,0x0,8
tick,0x7ffd55ac6f44,19164790,0,0x0,8
tick,0x7ffd55ac6f44,19179815,0,0x0,8
tick,0x7ffd55ac6f44,19195798,0,0x0,8
tick,0x7ffd55ac6f44,19211756,0,0x0,8
tick,0x7ffd55ac6f44,19227614,0,0x0,8
tick,0x7ffd55ac6f44,19243501,0,0x0,8
tick,0x7ffd55ac6f44,19259461,0,0x0,8
tick,0x7ffd55ac6f44,19275685,0,0x0,8
tick,0x7ffd55ac6f44,19291391,0,0x0,8
tick,0x7ffd55ac6f44,19307613,0,0x0,8
tick,0x7ffd55ac6f44,19322972,0,0x0,8
tick,0x7ffd55ac6f44,19338556,0,0x0,8
tick,0x7ffd55ac6f44,19353131,0,0x0,8
tick,0x7ffd55ac6f44,19368581,0,0x0,8
tick,0x7ffd55ac6f44,19383827,0,0x0,8
tick,0x7ffd55ac6f44,19399660,0,0x0,8
tick,0x7ffd55ac6f44,19415978,0,0x0,8
tick,0x7ffd55ac6f44,19432016,0,0x0,8
tick,0x7ffd55ac6f44,19447432,0,0x0,8
tick,0x7ffd55ac6f44,19462768,0,0x0,8
tick,0x7ffd55ac6f44,19478977,0,0x0,8
tick,0x7ffd55ac6f44,19494845,0,0x0,8
tick,0x7ffd55ac6f44,19510806,0,0x0,8
tick,0x7ffd55ac6f44,19526783,0,0x0,8
tick,0x7ffd55ac6f44,19542564,0,0x0,8
tick,0x7ffd55ac6f44,19558561,0,0x0,8
tick,0x7ffd55ac6f44,19574258,0,0x0,8
tick,0x7ffd55ac6f44,19589429,0,0x0,8
tick,0x7ffd55ac6f44,19605197,0,0x0,8
tick,0x7ffd55ac6f44,19620407,0,0x0,8
tick,0x7ffd55ac6f44,19635182,0,0x0,8
tick,0x7ffd55ac6f44,19650170,0,0x0,8
tick,0x7ffd55ac6f44,19666185,0,0x0,8
tick,0x7ffd55ac6f44,19682082,0,0x0,8
tick,0x7ffd55ac6f44,19697103,0,0x0,8
tick,0x7ffd55ac6f44,19712164,0,0x0,8
tick,0x7ffd55ac6f44,19727525,0,0x0,8
tick,0x7ffd55ac6f44,19744085,0,0x0,8
tick,0x7ffd55ac6f44,19759589,0,0x0,8
tick,0x7ffd55ac6f44,19775328,0,0x0,8
tick,0x7ffd55ac6f44,19790120,0,0x0,8
tick,0x7ffd55ac6f44,19805211,0,0x0,8
tick,0x7ffd55ac6f44,19821215,0,0x0,8
tick,0x7ffd55ac6f44,19837230,0,0x0,8
tick,0x7ffd55ac6f44,19852045,0,0x0,8
tick,0x7ffd55ac6f44,19866996,0,0x0,8
tick,0x7ffd55ac6f44,19883139,0,0x0,8
tick,0x7ffd55ac6f44,19898342,0,0x0,8
tick,0x7ffd55ac6f44,19913931,0,0x0,8
tick,0x7ffd55ac6f44,19929056,0,0x0,8
tick,0x7ffd55ac6f44,19945152,0,0x0,8
tick,0x7ffd55ac6f44,19961086,0,0x0,8
tick,0x7ffd55ac6f44,19977119,0,0x0,8
tick,0x7ffd55ac6f44,19993108,0,0x0,8
tick,0x7ffd55ac6f44,20009025,0,0x0,8
tick,0x7ffd55ac6f44,20025022,0,0x0,8
tick,0x7ffd55ac6f44,20040220,0,0x0,8
tick,0x7ffd55ac6f44,20056261,0,0x0,8
tick,0x7ffd55ac6f44,20072031,0,0x0,8
tick,0x7ffd55ac6f44,20088024,0,0x0,8
tick,0x7ffd55ac6f44,20103456,0,0x0,8
tick,0x7ffd55ac6f44,20119124,0,0x0,8
tick,0x7ffd55ac6f44,20134495,0,0x0,8
tick,0x7ffd55ac6f44,20150181,0,0x0,8
tick,0x7ffd55ac6f44,20165796,0,0x0,8
tick,0x7ffd55ac6f44,20181086,0,0x0,8
tick,0x7ffd55ac6f44,20196087,0,0x0,8
tick,0x7ffd55ac6f44,20212079,0,0x0,8
tick,0x7ffd55ac6f44,20227926,0,0x0,8
tick,0x7ffd55ac6f44,20243894,0,0x0,8
tick,0x7ffd55ac6f44,20259147,0,0x0,8
tick,0x7ffd55ac6f44,20274478,0,0x0,8
tick,0x7ffd55ac6f44,20290401,0,0x0,8
tick,0x7ffd55ac6f44,20306566,0,0x0,8
tick,0x7ffd55ac6f44,20322307,0,0x0,8
tick,0x7ffd55ac6f44,20337198,0,0x0,8
tick,0x7ffd55ac6f44,20352404,0,0x0,8
tick,0x7ffd55ac6f44,20367459,0,0x0,8
tick,0x7ffd55ac6f44,20383336,0,0x0,8
tick,0x7ffd55ac6f44,20399530,0,0x0,8
tick,0x7ffd55ac6f44,20414550,0,0x0,8
tick,0x7ffd55ac6f44,20430002,0,0x0,8
tick,0x7ffd55ac6f44,20444814,0,0x0,8
tick,0x7ffd55ac6f44,20460077,0,0x0,8
tick,0x7ffd55ac6f44,20475052,0,0x0,8
tick,0x7ffd55ac6f44,20490476,0,0x0,8
tick,0x7ffd55ac6f44,20506127,0,0x0,8
tick,0x7ffd55ac6f44,20521987,0,0x0,8
tick,0x7ffd55ac6f44,20537071,0,0x0,8
tick,0x7ffd55ac6f44,20552136,0,0x0,8
tick,0x7ffd55ac6f44,20567158,0,0x0,8
tick,0x7ffd55ac6f44,20583320,0,0x0,8
tick,0x7ffd55ac6f44,20598448,0,0x0,8
tick,0x7ffd55ac6f44,20613715,0,0x0,8
tick,0x7ffd55ac6f44,20629026,0,0x0,8
tick,0x7ffd55ac6f44,20644708,0,0x0,8
tick,0x7ffd55ac6f44,20660146,0,0x0,8
tick,0x7ffd55ac6f44,20675337,0,0x0,8
tick,0x7ffd55ac6f44,20691809,0,0x0,8
tick,0x7ffd55ac6f44,20707331,0,0x0,8
tick,0x7ffd55ac6f44,20723312,0,0x0,8
tick,0x7ffd55ac6f44,20738740,0,0x0,8
tick,0x7ffd55ac6f44,20754324,0,0x0,8
tick,0x7ffd55ac6f44,20769604,0,0x0,8
tick,0x7ffd55ac6f44,20785447,0,0x0,8
tick,0x7ffd55ac6f44,20800280,0,0x0,8
tick,0x7ffd55ac6f44,20815302,0,0x0,8
tick,0x7ffd55ac6f44,20830658,0,0x0,8
tick,0x7ffd55ac6f44,20846632,0,0x0,8
tick,0x7ffd55ac6f44,20862851,0,0x0,8
tick,0x7ffd55ac6f44,20878301,0,0x0,8
tick,0x7ffd55ac6f44,20893946,0,0x0,8
tick,0x7ffd55ac6f44,20909575,0,0x0,8
tick,0x7ffd55ac6f44,20925532,0,0x0,8
tick,0x7ffd55ac6f44,20940478,0,0x0,8
tick,0x7ffd55ac6f44,20955785,0,0x0,8
tick,0x7ffd55ac6f44,20971571,0,0x0,8
tick,0x7ffd55ac6f44,20986823,0,0x0,8
tick,0x7ffd55ac6f44,21002863,0,0x0,8
tick,0x7ffd55ac6f44,21018759,0,0x0,8
tick,0x7ffd55ac6f44,21034580,0,0x0,8
tick,0x7ffd55ac6f44,21050230,0,0x0,8
tick,0x7ffd55ac6f44,21065823,0,0x0,8
tick,0x7ffd55ac6f44,21081508,0,0x0,8
tick,0x7ffd55ac6f44,21097076,0,0x0,8
tick,0x7ffd55ac6f44,21112301,0,0x0,8
tick,0x7ffd55ac6f44,21128512,0,0x0,8
tick,0x7ffd55ac6f44,21144221,0,0x0,8
tick,0x7ffd55ac6f44,21159535,0,0x0,8
tick,0x7ffd55ac6f44,21174827,0,0x0,8
tick,0x7ffd55ac6f44,21189546,0,0x0,8
tick,0x7ffd55ac6f44,21205046,0,0x0,8
tick,0x7ffd55ac6f44,21219661,0,0x0,8
tick,0x7ffd55ac6f44,21234585,0,0x0,8
tick,0x7ffd55ac6f44,21250784,0,0x0,8
tick,0x7ffd55ac6f44,21266679,0,0x0,8
tick,0x7ffd55ac6f44,21282217,0,0x0,8
tick,0x7ffd55ac6f44,21297869,0,0x0,8
tick,0x7ffd55ac6f44,21313448,0,0x0,8
tick,0x7ffd55ac6f44,21329305,0,0x0,8
tick,0x7ffd55ac6f44,21344464,0,0x0,8
tick,0x7ffd55ac6f44,21360134,0,0x0,8
tick,0x7ffd55ac6f44,21375552,0,0x0,8
tick,0x7ffd55ac6f44,21390785,0,0x0,8
tick,0x7ffd55ac6f44,21406097,0,0x0,8
tick,0x7ffd55ac6f44,21421202,0,0x0,8
tick,0x7ffd55ac6f44,21437517,0,0x0,8
tick,0x7ffd55ac6f44,21453293,0,0x0,8
tick,0x7ffd55ac6f44,21468477,0,0x0,8
tick,0x7ffd55ac6f44,21484386,0,0x0,8
tick,0x7ffd55ac6f44,21500670,0,0x0,8
tick,0x7ffd55ac6f44,21516116,0,0x0,8
tick,0x7ffd55ac6f44,21532131,0,0x0,8
tick,0x7ffd55ac6f44,21547557,0,0x0,8
tick,0x7ffd55ac6f44,21563228,0,0x0,8
tick,0x7ffd55ac6f44,21579439,0,0x0,8
tick,0x7ffd55ac6f44,21594340,0,0x0,8
tick,0x7ffd55ac6f44,21609135,0,0x0,8
tick,0x7ffd55ac6f44,21625009,0,0x0,8
tick,0x7ffd55ac6f44,21640635,0,0x0,8
tick,0x7ffd55ac6f44,21656155,0,0x0,8
tick,0x7ffd55ac6f44,21671728,0,0x0,8
tick,0x7ffd55ac6f44,21687270,0,0x0,8
tick,0x7ffd55ac6f44,21703115,0,0x0,8
tick,0x7ffd55ac6f44,21719250,0,0x0,8
tick,0x7ffd55ac6f44,21735238,0,0x0,8
tick,0x7ffd55ac6f44,21751185,0,0x0,8
tick,0x7ffd55ac6f44,21766170,0,0x0,8
tick,0x7ffd55ac6f44,21782001,0,0x0,8
tick,0x7ffd55ac6f44,21797629,0,0x0,8
tick,0x7ffd55ac6f44,21813675,0,0x0,8
tick,0x7ffd55ac6f44,21829999,0,0x0,8
tick,0x7ffd55ac6f44,21845754,0,0x0,8
tick,0x7ffd55ac6f44,21861426,0,0x0,8
tick,0x7ffd55ac6f44,21876146,0,0x0,8
tick,0x7ffd55ac6f44,21891829,0,0x0,8
tick,0x7ffd55ac6f44,21907438,0,0x0,8
tick,0x7ffd55ac6f44,21923620,0,0x0,8
tick,0x7ffd55ac6f44,21939219,0,0x0,8
tick,0x7ffd55ac6f44,21953817,0,0x0,8
tick,0x7ffd55ac6f44,21969485,0,0x0,8
tick,0x7ffd55ac6f44,21984829,0,0x0,8
tick,0x7ffd55ac6f44,21999623,0,0x0,8
tick,0x7ffd55ac6f44,22014501,0,0x0,8
tick,0x7ffd55ac6f44,22030124,0,0x0,8
tick,0x7ffd55ac6f44,22045428,0,0x0,8
tick,0x7ffd55ac6f44,22060074,0,0x0,8
tick,0x7ffd55ac6f44,22075448,0,0x0,8
tick,0x7ffd55ac6f44,22091090,0,0x0,8
tick,0x7ffd55ac6f44,22107244,0,0x0,8
tick,0x7ffd55ac6f44,22123594,0,0x0,8
tick,0x7ffd55ac6f44,22139283,0,0x0,8
tick,0x7ffd55ac6f44,22155164,0,0x0,8
tick,0x7ffd55ac6f44,22170662,0,0x0,8
tick,0x7ffd55ac6f44,22186095,0,0x0,8
tick,0x7ffd55ac6f44,22202055,0,0x0,8
tick,0x7ffd55ac6f44,22217945,0,0x0,8
tick,0x7ffd55ac6f44,22233632,0,0x0,8
tick,0x7ffd55ac6f44,22249761,0,0x0,8
tick,0x7ffd55ac6f44,22265314,0,0x0,8
tick,0x7ffd55ac6f44,22281193,0,0x0,8
tick,0x7ffd55ac6f44,22297279,0,0x0,8
tick,0x7ffd55ac6f44,22312210,0,0x0,8
tick,0x7ffd55ac6f44,22327446,0,0x0,8
tick,0x7ffd55ac6f44,22343219,0,0x0,8
tick,0x7ffd55ac6f44,22358764,0,0x0,8
tick,0x7ffd55ac6f44,22373443,0,0x0,8
tick,0x7ffd55ac6f44,22388849,0,0x0,8
tick,0x7ffd55ac6f44,22403779,0,0x0,8
tick,0x7ffd55ac6f44,22419107,0,0x0,8
tick,0x7ffd55ac6f44,22435157,0,0x0,8
tick,0x7ffd55ac6f44,22450197,0,0x0,8
tick,0x7ffd55ac6f44,22465277,0,0x0,8
tick,0x7ffd55ac6f44,22480473,0,0x0,8
tick,0x7ffd55ac6f44,22496215,0,0x0,8
tick,0x7ffd55ac6f44,22512492,0,0x0,8
tick,0x7ffd55ac6f44,22528090,0,0x0,8
tick,0x7ffd55ac6f44,22543604,0,0x0,8
tick,0x7ffd55ac6f44,22558942,0,0x0,8
tick,0x7ffd55ac6f44,22574421,0,0x0,8
tick,0x7ffd55ac6f44,22590491,0,0x0,8
tick,0x7ffd55ac6f44,22606082,0,0x0,8
tick,0x7ffd55ac6f44,22621516,0,0x0,8
tick,0x7ffd55ac6f44,22636733,0,0x0,8
tick,0x7ffd55ac6f44,22652192,0,0x0,8
tick,0x7ffd55ac6f44,22667985,0,0x0,8
tick,0x7ffd55ac6f44,22683939,0,0x0,8
tick,0x7ffd55ac6f44,22699137,0,0x0,8
tick,0x7ffd55ac6f44,22714364,0,0x0,8
tick,0x7ffd55ac6f44,22730354,0,0x0,8
tick,0x7ffd55ac6f44,22746337,0,0x0,8
tick,0x7ffd55ac6f44,22762377,0,0x0,8
tick,0x7ffd55ac6f44,22778391,0,0x0,8
tick,0x7ffd55ac6f44,22794337,0,0x0,8
tick,0x7ffd55ac6f44,22809876,0,0x0,8
tick,0x7ffd55ac6f44,22825924,0,0x0,8
tick,0x7ffd55ac6f44,22840851,0,0x0,8
tick,0x7ffd55ac6f44,22855919,0,0x0,8
tick,0x7ffd55ac6f44,22870880,0,0x0,8
tick,0x7ffd55ac6f44,22885871,0,0x0,8
tick,0x7ffd55ac6f44,22900946,0,0x0,8
tick,0x7ffd55ac6f44,22916382,0,0x0,8
tick,0x7ffd55ac6f44,22932099,0,0x0,8
tick,0x7ffd55ac6f44,22946645,0,0x0,8
tick,0x7ffd55ac6f44,22961679,0,0x0,8
tick,0x7ffd55ac6f44,22977581,0,0x0,8
tick,0x7ffd55ac6f44,22993608,0,0x0,8
tick,0x7ffd55ac6f44,23009622,0,0x0,8
tick,0x7ffd55ac6f44,23025611,0,0x0,8
tick,0x7ffd55ac6f44,23041814,0,0x0,8
tick,0x7ffd55ac6f44,23057758,0,0x0,8
tick,0x7ffd55ac6f44,23073637,0,0x0,8
tick,0x7ffd55ac6f44,23089586,0,0x0,8
tick,0x7ffd55ac6f44,23105671,0,0x0,8
tick,0x7ffd55ac6f44,23120605,0,0x0,8
tick,0x7ffd55ac6f44,23135671,0,0x0,8
tick,0x7ffd55ac6f44,23150979,0,0x0,8
tick,0x7ffd55ac6f44,23166772,0,0x0,8
tick,0x7ffd55ac6f44,23182062,0,0x0,8
tick,0x7ffd55ac6f44,23198143,0,0x0,8
tick,0x7ffd55ac6f44,23213817,0,0x0,8
tick,0x7ffd55ac6f44,23229265,0,0x0,8
tick,0x7ffd55ac6f44,23245253,0,0x0,8
tick,0x7ffd55ac6f44,23261191,0,0x0,8
tick,0x7ffd55ac6f44,23276619,0,0x0,8
tick,0x7ffd55ac6f44,23292582,0,0x0,8
tick,0x7ffd55ac6f44,23308248,0,0x0,8
tick,0x7ffd55ac6f44,23323974,0,0x0,8
tick,0x7ffd55ac6f44,23339695,0,0x0,8
tick,0x7ffd55ac6f44,23355282,0,0x0,8
tick,0x7ffd55ac6f44,23370722,0,0x0,8
tick,0x7ffd55ac6f44,23386783,0,0x0,8
tick,0x7ffd55ac6f44,23402138,0,0x0,8
tick,0x7ffd55ac6f44,23417763,0,0x0,8
tick,0x7ffd55ac6f44,23432807,0,0x0,8
tick,0x7ffd55ac6f44,23448541,0,0x0,8
tick,0x7ffd55ac6f44,23464197,0,0x0,8
tick,0x7ffd55ac6f44,23479743,0,0x0,8
tick,0x7ffd55ac6f44,23495719,0,0x0,8
tick,0x7ffd55ac6f44,23510570,0,0x0,8
tick,0x7ffd55ac6f44,23525864,0,0x0,8
tick,0x7ffd55ac6f44,23541976,0,0x0,8
tick,0x7ffd55ac6f44,23557421,0,0x0,8
tick,0x7ffd55ac6f44,23572710,0,0x0,8
tick,0x7ffd55ac6f44,23587840,0,0x0,8
tick,0x7ffd55ac6f44,23603428,0,0x0,8
tick,0x7ffd55ac6f44,23619318,0,0x0,8
tick,0x7ffd55ac6f44,23635005,0,0x0,8
tick,0x7ffd55ac6f44,23650194,0,0x0,8
tick,0x7ffd55ac6f44,23664919,0,0x0,8
tick,0x7ffd55ac6f44,23680301,0,0x0,8
tick,0x7ffd55ac6f44,23695678,0,0x0,8
tick,0x7ffd55ac6f44,23711927,0,0x0,8
tick,0x7ffd55ac6f44,23728290,0,0x0,8
tick,0x7ffd55ac6f44,23743745,0,0x0,8
tick,0x7ffd55ac6f44,23759240,0,0x0,8
tick,0x7ffd55ac6f44,23775183,0,0x0,8
tick,0x7ffd55ac6f44,23791240,0,0x0,8
tick,0x7ffd55ac6f44,23806418,0,0x0,8
tick,0x7ffd55ac6f44,23821923,0,0x0,8
tick,0x7ffd55ac6f44,23837487,0,0x0,8
tick,0x7ffd55ac6f44,23853261,0,0x0,8
tick,0x7ffd55ac6f44,23869236,0,0x0,8
tick,0x7ffd55ac6f44,23884162,0,0x0,8
tick,0x7ffd55ac6f44,23899858,0,0x0,8
tick,0x7ffd55ac6f44,23915240,0,0x0,8
tick,0x7ffd55ac6f44,23931130,0,0x0,8
tick,0x7ffd55ac6f44,23945809,0,0x0,8
tick,0x7ffd55ac6f44,23960698,0,0x0,8
tick,0x7ffd55ac6f44,23975843,0,0x0,8
tick,0x7ffd55ac6f44,23991609,0,0x0,8
tick,0x7ffd55ac6f44,24007446,0,0x0,8
tick,0x7ffd55ac6f44,24023328,0,0x0,8
tick,0x7ffd55ac6f44,24039255,0,0x0,8
tick,0x7ffd55ac6f44,24055098,0,0x0,8
tick,0x7ffd55ac6f44,24070033,0,0x0,8
tick,0x7ffd55ac6f44,24085701,0,0x0,8
tick,0x7ffd55ac6f44,24101159,0,0x0,8
tick,0x7ffd55ac6f44,24117461,0,0x0,8
tick,0x7ffd55ac6f44,24133428,0,0x0,8
tick,0x7ffd55ac6f44,24148798,0,0x0,8
tick,0x7ffd55ac6f44,24164506,0,0x0,8
tick,0x7ffd55ac6f44,24179754,0,0x0,8
tick,0x7ffd55ac6f44,24194527,0,0x0,8
tick,0x7ffd55ac6f44,24209977,0,0x0,8
tick,0x7ffd55ac6f44,24225212,0,0x0,8
tick,0x7ffd55ac6f44,24241668,0,0x0,8
tick,0x7ffd55ac6f44,24255986,0,0x0,8
tick,0x7ffd55ac6f44,24271181,0,0x0,8
tick,0x7ffd55ac6f44,24286531,0,0x0,8
tick,0x7ffd55ac6f44,24301490,0,0x0,8
tick,0x7ffd55ac6f44,24317352,0,0x0,8
tick,0x7ffd55ac6f44,24332618,0,0x0,8
tick,0x7ffd55ac6f44,24346986,0,0x0,8
tick,0x7ffd55ac6f44,24362489,0,0x0,8
tick,0x7ffd55ac6f44,24378178,0,0x0,8
tick,0x7ffd55ac6f44,24393581,0,0x0,8
tick,0x7ffd55ac6f44,24409728,0,0x0,8
tick,0x7ffd55ac6f44,24424517,0,0x0,8
tick,0x7ffd55ac6f44,24439542,0,0x0,8
tick,0x7ffd55ac6f44,24454599,0,0x0,8
tick,0x7ffd55ac6f44,24470750,0,0x0,8
tick,0x7ffd55ac6f44,24486263,0,0x0,8
tick,0x7ffd55ac6f44,24501525,0,0x0,8
tick,0x7ffd55ac6f44,24517041,0,0x0,8
tick,0x7ffd55ac6f44,24532935,0,0x0,8
tick,0x7ffd55ac6f44,24548904,0,0x0,8
tick,0x7ffd55ac6f44,24565048,0,0x0,8
tick,0x7ffd55ac6f44,24580880,0,0x0,8
tick,0x7ffd55ac6f44,24595924,0,0x0,8
tick,0x7ffd55ac6f44,24610960,0,0x0,8
tick,0x7ffd55ac6f44,24625802,0,0x0,8
tick,0x7ffd55ac6f44,24641757,0,0x0,8
tick,0x7ffd55ac6f44,24657538,0,0x0,8
tick,0x7ffd55ac6f44,24673445,0,0x0,8
tick,0x7ffd55ac6f44,24689472,0,0x0,8
tick,0x7ffd55ac6f44,24705043,0,0x0,8
tick,0x7ffd55ac6f44,24720516,0,0x0,8
tick,0x7ffd55ac6f44,24735915,0,0x0,8
tick,0x7ffd55ac6f44,24751369,0,0x0,8
tick,0x7ffd55ac6f44,24767202,0,0x0,8
tick,0x7ffd55ac6f44,24782425,0,0x0,8
tick,0x7ffd55ac6f44,24797567,0,0x0,8
tick,0x7ffd55ac6f44,24813538,0,0x0,8
tick,0x7ffd55ac6f44,24828754,0,0x0,8
tick,0x7ffd55ac6f44,24844409,0,0x0,8
tick,0x7ffd55ac6f44,24859571,0,0x0,8
tick,0x7ffd55ac6f44,24875101,0,0x0,8
tick,0x7ffd55ac6f44,24890610,0,0x0,8
tick,0x7ffd55ac6f44,24905424,0,0x0,8
tick,0x7ffd55ac6f44,24920438,0,0x0,8
tick,0x7ffd55ac6f44,24935441,0,0x0,8
tick,0x7ffd55ac6f44,24950375,0,0x0,8
tick,0x7ffd55ac6f44,24965893,0,0x0,8
tick,0x7ffd55ac6f44,24981521,0,0x0,8
tick,0x7ffd55ac6f44,24997168,0,0x0,8
tick,0x7ffd55ac6f44,25013277,0,0x0,8
tick,0x7ffd55ac6f44,25028668,0,0x0,8
tick,0x7ffd55ac6f44,25043350,0,0x0,8
tick,0x7ffd55ac6f44,25058421,0,0x0,8
tick,0x7ffd55ac6f44,25074398,0,0x0,8
tick,0x7ffd55ac6f44,25089104,0,0x0,8
tick,0x7ffd55ac6f44,25104079,0,0x0,8
tick,0x7ffd55ac6f44,25119300,0,0x0,8
tick,0x7ffd55ac6f44,25135124,0,0x0,8
tick,0x7ffd55ac6f44,25150132,0,0x0,8
tick,0x7ffd55ac6f44,25165121,0,0x0,8
tick,0x7ffd55ac6f44,25180534,0,0x0,8
tick,0x7ffd55ac6f44,25195957,0,0x0,8
tick,0x7ffd55ac6f44,25211456,0,0x0,8
tick,0x7ffd55ac6f44,25226710,0,0x0,8
tick,0x7ffd55ac6f44,25241918,0,0x0,8
tick,0x7ffd55ac6f44,25257776,0,0x0,8
tick,0x7ffd55ac6f44,25273668,0,0x0,8
tick,0x7ffd55ac6f44,25289359,0,0x0,8
tick,0x7ffd55ac6f44,25304530,0,0x0,8
tick,0x7ffd55ac6f44,25319901,0,0x0,8
tick,0x7ffd55ac6f44,25335168,0,0x0,8
tick,0x7ffd55ac6f44,25351014,0,0x0,8
tick,0x7ffd55ac6f44,25366567,0,0x0,8
tick,0x7ffd55ac6f44,25381947,0,0x0,8
tick,0x7ffd55ac6f44,25397305,0,0x0,8
tick,0x7ffd55ac6f44,25412780,0,0x0,8
tick,0x7ffd55ac6f44,25428144,0,0x0,8
tick,0x7ffd55ac6f44,25443112,0,0x0,8
tick,0x7ffd55ac6f44,25459106,0,0x0,8
tick,0x7ffd55ac6f44,25474270,0,0x0,8
tick,0x7ffd55ac6f44,25489601,0,0x0,8
tick,0x7ffd55ac6f44,25505431,0,0x0,8
tick,0x7ffd55ac6f44,25521246,0,0x0,8
tick,0x7ffd55ac6f44,25537460,0,0x0,8
tick,0x7ffd55ac6f44,25553307,0,0x0,8
tick,0x7ffd55ac6f44,25568952,0,0x0,8
tick,0x7ffd55ac6f44,25584411,0,0x0,8
tick,0x7ffd55ac6f44,25600193,0,0x0,8
tick,0x7ffd55ac6f44,25615389,0,0x0,8
tick,0x7ffd55ac6f44,25630642,0,0x0,8
tick,0x7ffd55ac6f44,25646189,0,0x0,8
tick,0x7ffd55ac6f44,25662259,0,0x0,8
tick,0x7ffd55ac6f44,25677400,0,0x0,8
tick,0x7ffd55ac6f44,25693333,0,0x0,8
tick,0x7ffd55ac6f44,25709238,0,0x0,8
tick,0x7ffd55ac6f44,25724925,0,0x0,8
tick,0x7ffd55ac6f44,25740816,0,0x0,8
tick,0x7ffd55ac6f44,25755576,0,0x0,8
tick,0x7ffd55ac6f44,25771123,0,0x0,8
tick,0x7ffd55ac6f44,25786331,0,0x0,8
tick,0x7ffd55ac6f44,25802140,0,0x0,8
tick,0x7ffd55ac6f44,25817256,0,0x0,8
tick,0x7ffd55ac6f44,25833299,0,0x0,8
tick,0x7ffd55ac6f44,25849459,0,0x0,8
tick,0x7ffd55ac6f44,25865101,0,0x0,8
tick,0x7ffd55ac6f44,25881030,0,0x0,8
tick,0x7ffd55ac6f44,25896323,0,0x0,8
tick,0x7ffd55ac6f44,25911603,0,0x0,8
tick,0x7ffd55ac6f44,25927145,0,0x0,8
tick,0x7ffd55ac6f44,25943089,0,0x0,8
tick,0x7ffd55ac6f44,25958700,0,0x0,8
tick,0x7ffd55ac6f44,25973612,0,0x0,8
tick,0x7ffd55ac6f44,25988601,0,0x0,8
tick,0x7ffd55ac6f44,26003858,0,0x0,8
tick,0x7ffd55ac6f44,26019617,0,0x0,8
tick,0x7ffd55ac6f44,26035119,0,0x0,8
tick,0x7ffd55ac6f44,26051261,0,0x0,8
tick,0x7ffd55ac6f44,26066691,0,0x0,8
tick,0x7ffd55ac6f44,26082329,0,0x0,8
tick,0x7ffd55ac6f44,26098307,0,0x0,8
tick,0x7ffd55ac6f44,26113379,0,0x0,8
tick,0x7ffd55ac6f44,26129527,0,0x0,8
tick,0x7ffd55ac6f44,26145062,0,0x0,8
tick,0x7ffd55ac6f44,26160659,0,0x0,8
tick,0x7ffd55ac6f44,26175730,0,0x0,8
tick,0x7ffd55ac6f44,26190964,0,0x0,8
tick,0x7ffd55ac6f44,26206862,0,0x0,8
tick,0x7ffd55ac6f44,26222232,0,0x0,8
tick,0x7ffd55ac6f44,26237586,0,0x0,8
tick,0x7ffd55ac6f44,26253492,0,0x0,8
tick,0x7ffd55ac6f44,26269365,0,0x0,8
tick,0x7ffd55ac6f44,26285126,0,0x0,8
tick,0x7ffd55ac6f44,26300360,0,0x0,8
tick,0x7ffd55ac6f44,26315450,0,0x0,8
tick,0x7ffd55ac6f44,26331222,0,0x0,8
tick,0x7ffd55ac6f44,26346184,0,0x0,8
tick,0x7ffd55ac6f44,26361716,0,0x0,8
tick,0x7ffd55ac6f44,26377341,0,0x0,8
tick,0x7ffd55ac6f44,26393293,0,0x0,8
tick,0x7ffd55ac6f44,26409242,0,0x0,8
tick,0x7ffd55ac6f44,26424432,0,0x0,8
tick,0x7ffd55ac6f44,26440582,0,0x0,8
tick,0x7ffd55ac6f44,26456130,0,0x0,8
tick,0x7ffd55ac6f44,26471604,0,0x0,8
tick,0x7ffd55ac6f44,26487668,0,0x0,8
tick,0x7ffd55ac6f44,26503290,0,0x0,8
tick,0x7ffd55ac6f44,26518662,0,0x0,8
tick,0x7ffd55ac6f44,26534118,0,0x0,8
tick,0x7ffd55ac6f44,26549440,0,0x0,8
tick,0x7ffd55ac6f44,26564485,0,0x0,8
tick,0x7ffd55ac6f44,26580351,0,0x0,8
tick,0x7ffd55ac6f44,26596021,0,0x0,8
tick,0x7ffd55ac6f44,26611397,0,0x0,8
tick,0x7ffd55ac6f44,26627374,0,0x0,8
tick,0x7ffd55ac6f44,26642710,0,0x0,8
tick,0x7ffd55ac6f44,26657623,0,0x0,8
tick,0x7ffd55ac6f44,26673329,0,0x0,8
tick,0x7ffd55ac6f44,26689384,0,0x0,8
tick,0x7ffd55ac6f44,26704986,0,0x0,8
tick,0x7ffd55ac6f44,26720628,0,0x0,8
tick,0x7ffd55ac6f44,26735815,0,0x0,8
tick,0x7ffd55ac6f44,26751445,0,0x0,8
tick,0x7ffd55ac6f44,26767581,0,0x0,8
tick,0x7ffd55ac6f44,26783350,0,0x0,8
tick,0x7ffd55ac6f44,26799118,0,0x0,8
tick,0x7ffd55ac6f44,26814850,0,0x0,8
tick,0x7ffd55ac6f44,26830277,0,0x0,8
tick,0x7ffd55ac6f44,26846203,0,0x0,8
tick,0x7ffd55ac6f44,26861223,0,0x0,8
tick,0x7ffd55ac6f44,26877767,0,0x0,8
tick,0x7ffd55ac6f44,26893644,0,0x0,8
tick,0x7ffd55ac6f44,26909642,0,0x0,8
tick,0x7ffd55ac6f44,26925057,0,0x0,8
tick,0x7ffd55ac6f44,26940256,0,0x0,8
tick,0x7ffd55ac6f44,26955701,0,0x0,8
tick,0x7ffd55ac6f44,26970963,0,0x0,8
tick,0x7ffd55ac6f44,26986344,0,0x0,8
tick,0x7ffd55ac6f44,27002233,0,0x0,8
tick,0x7ffd55ac6f44,27017139,0,0x0,8
tick,0x7ffd55ac6f44,27032134,0,0x0,8
tick,0x7ffd55ac6f44,27048136,0,0x0,8
tick,0x7ffd55ac6f44,27063489,0,0x0,8
tick,0x7ffd55ac6f44,27078803,0,0x0,8
tick,0x7ffd55ac6f44,27094583,0,0x0,8
tick,0x7ffd55ac6f44,27110250,0,0x0,8
tick,0x7ffd55ac6f44,27126205,0,0x0,8
tick,0x7ffd55ac6f44,27141858,0,0x0,8
tick,0x7ffd55ac6f44,27157448,0,0x0,8
tick,0x7ffd55ac6f44,27172545,0,0x0,8
tick,0x7ffd55ac6f44,27187856,0,0x0,8
tick,0x7ffd55ac6f44,27203617,0,0x0,8
tick,0x7ffd55ac6f44,27219250,0,0x0,8
tick,0x7ffd55ac6f44,27234579,0,0x0,8
tick,0x7ffd55ac6f44,27250082,0,0x0,8
tick,0x7ffd55ac6f44,27266140,0,0x0,8
tick,0x7ffd55ac6f44,27281564,0,0x0,8
tick,0x7ffd55ac6f44,27297589,0,0x0,8
tick,0x7ffd55ac6f44,27313338,0,0x0,8
tick,0x7ffd55ac6f44,27329051,0,0x0,8
tick,0x7ffd55ac6f44,27344347,0,0x0,8
tick,0x7ffd55ac6f44,27360170,0,0x0,8
tick,0x7ffd55ac6f44,27376226,0,0x0,8
tick,0x7ffd55ac6f44,27392056,0,0x0,8
tick,0x7ffd55ac6f44,27408097,0,0x0,8
tick,0x7ffd55ac6f44,27423385,0,0x0,8
tick,0x7ffd55ac6f44,27438422,0,0x0,8
tick,0x7ffd55ac6f44,27454346,0,0x0,8
tick,0x7ffd55ac6f44,27470593,0,0x0,8
tick,0x7ffd55ac6f44,27485581,0,0x0,8
tick,0x7ffd55ac6f44,27501753,0,0x0,8
tick,0x7ffd55ac6f44,27517519,0,0x0,8
tick,0x7ffd55ac6f44,27532994,0,0x0,8
tick,0x7ffd55ac6f44,27548405,0,0x0,8
tick,0x7ffd55ac6f44,27563938,0,0x0,8
tick,0x7ffd55ac6f44,27579872,0,0x0,8
tick,0x7ffd55ac6f44,27594861,0,0x0,8
tick,0x7ffd55ac6f44,27609873,0,0x0,8
tick,0x7ffd55ac6f44,27625475,0,0x0,8
tick,0x7ffd55ac6f44,27640719,0,0x0,8
tick,0x7ffd55ac6f44,27655533,0,0x0,8
tick,0x7ffd55ac6f44,27670965,0,0x0,8
tick,0x7ffd55ac6f44,27686130,0,0x0,8
tick,0x7ffd55ac6f44,27701414,0,0x0,8
tick,0x7ffd55ac6f44,27717469,0,0x0,8
tick,0x7ffd55ac6f44,27733569,0,0x0,8
tick,0x7ffd55ac6f44,27749603,0,0x0,8
tick,0x7ffd55ac6f44,27765179,0,0x0,8
tick,0x7ffd55ac6f44,27779939,0,0x0,8
tick,0x7ffd55ac6f44,27795690,0,0x0,8
tick,0x7ffd55ac6f44,27811156,0,0x0,8
tick,0x7ffd55ac6f44,27825965,0,0x0,8
tick,0x7ffd55ac6f44,27841055,0,0x0,8
tick,0x7ffd55ac6f44,27857176,0,0x0,8
tick,0x7ffd55ac6f44,27873045,0,0x0,8
tick,0x7ffd55ac6f44,27889088,0,0x0,8
tick,0x7ffd55ac6f44,27905129,0,0x0,8
tick,0x7ffd55ac6f44,27920972,0,0x0,8
tick,0x7ffd55ac6f44,27935978,0,0x0,8
tick,0x7ffd55ac6f44,27952316,0,0x0,8
tick,0x7ffd55ac6f44,27968179,0,0x0,8
tick,0x7ffd55ac6f44,27984335,0,0x0,8
tick,0x7ffd55ac6f44,27999456,0,0x0,8
tick,0x7ffd55ac6f44,28015207,0,0x0,8
tick,0x7ffd55ac6f44,28030152,0,0x0,8
tick,0x7ffd55ac6f44,28045419,0,0x0,8
tick,0x7ffd55ac6f44,28060451,0,0x0,8
tick,0x7ffd55ac6f44,28076573,0,0x0,8
tick,0x7ffd55ac6f44,28092100,0,0x0,8
tick,0x7ffd55ac6f44,28107556,0,0x0,8
tick,0x7ffd55ac6f44,28123412,0,0x0,8
tick,0x7ffd55ac6f44,28138596,0,0x0,8
tick,0x7ffd55ac6f44,28153813,0,0x0,8
tick,0x7ffd55ac6f44,28169195,0,0x0,8
tick,0x7ffd55ac6f44,28184873,0,0x0,8
tick,0x7ffd55ac6f44,28200378,0,0x0,8
tick,0x7ffd55ac6f44,28215650,0,0x0,8
tick,0x7ffd55ac6f44,28231209,0,0x0,8
tick,0x7ffd55ac6f44,28247495,0,0x0,8
tick,0x7ffd55ac6f44,28263085,0,0x0,8
tick,0x7ffd55ac6f44,28279148,0,0x0,8
tick,0x7ffd55ac6f44,28294361,0,0x0,8
tick,0x7ffd55ac6f44,28310397,0,0x0,8
tick,0x7ffd55ac6f44,28325612,0,0x0,8
tick,0x7ffd55ac6f44,28340471,0,0x0,8
tick,0x7ffd55ac6f44,28356154,0,0x0,8
tick,0x7ffd55ac6f44,28371531,0,0x0,8
tick,0x7ffd55ac6f44,28387241,0,0x0,8
tick,0x7ffd55ac6f44,28403721,0,0x0,8
tick,0x7ffd55ac6f44,28419174,0,0x0,8
tick,0x7ffd55ac6f44,28434637,0,0x0,8
tick,0x7ffd55ac6f44,28450581,0,0x0,8
tick,0x7ffd55ac6f44,28465825,0,0x0,8
tick,0x7ffd55ac6f44,28480947,0,0x0,8
tick,0x7ffd55ac6f44,28495634,0,0x0,8
tick,0x7ffd55ac6f44,28511526,0,0x0,8
tick,0x7ffd55ac6f44,28526425,0,0x0,8
tick,0x7ffd55ac6f44,28541818,0,0x0,8
tick,0x7ffd55ac6f44,28557249,0,0x0,8
tick,0x7ffd55ac6f44,28573908,0,0x0,8
tick,0x7ffd55ac6f44,28589221,0,0x0,8
tick,0x7ffd55ac6f44,28605114,0,0x0,8
tick,0x7ffd55ac6f44,28620598,0,0x0,8
tick,0x7ffd55ac6f44,28636122,0,0x0,8
tick,0x7ffd55ac6f44,28652143,0,0x0,8
tick,0x7ffd55ac6f44,28668180,0,0x0,8
tick,0x7ffd55ac6f44,28683336,0,0x0,8
tick,0x7ffd55ac6f44,28699411,0,0x0,8
tick,0x7ffd55ac6f44,28714849,0,0x0,8
tick,0x7ffd55ac6f44,28730894,0,0x0,8
tick,0x7ffd55ac6f44,28746265,0,0x0,8
tick,0x7ffd55ac6f44,28762288,0,0x0,8
tick,0x7ffd55ac6f44,28777986,0,0x0,8
tick,0x7ffd55ac6f44,28793666,0,0x0,8
tick,0x7ffd55ac6f44,28809482,0,0x0,8
tick,0x7ffd55ac6f44,28824993,0,0x0,8
tick,0x7ffd55ac6f44,28840434,0,0x0,8
tick,0x7ffd55ac6f44,28855684,0,0x0,8
tick,0x7ffd55ac6f44,28870678,0,0x0,8
tick,0x7ffd55ac6f44,28885526,0,0x0,8
tick,0x7ffd55ac6f44,28901213,0,0x0,8
tick,0x7ffd55ac6f44,28916017,0,0x0,8
tick,0x7ffd55ac6f44,28931026,0,0x0,8
tick,0x7ffd55ac6f44,28946235,0,0x0,8
tick,0x7ffd55ac6f44,28962123,0,0x0,8
tick,0x7ffd55ac6f44,28977160,0,0x0,8
tick,0x7ffd55ac6f44,28993261,0,0x0,8
tick,0x7ffd55ac6f44,29008090,0,0x0,8
tick,0x7ffd55ac6f44,29023190,0,0x0,8
tick,0x7ffd55ac6f44,29037979,0,0x0,8
tick,0x7ffd55ac6f44,29053200,0,0x0,8
tick,0x7ffd55ac6f44,29068646,0,0x0,8
tick,0x7ffd55ac6f44,29084002,0,0x0,8
tick,0x7ffd55ac6f44,29099297,0,0x0,8
tick,0x7ffd55ac6f44,29113937,0,0x0,8
tick,0x7ffd55ac6f44,29129472,0,0x0,8
tick,0x7ffd55ac6f44,29145203,0,0x0,8
tick,0x7ffd55ac6f44,29160737,0,0x0,8
tick,0x7ffd55ac6f44,29176206,0,0x0,8
tick,0x7ffd55ac6f44,29190716,0,0x0,8
tick,0x7ffd55ac6f44,29205810,0,0x0,8
tick,0x7ffd55ac6f44,29221926,0,0x0,8
tick,0x7ffd55ac6f44,29237905,0,0x0,8
tick,0x7ffd55ac6f44,29253031,0,0x0,8
tick,0x7ffd55ac6f44,29268292,0,0x0,8
tick,0x7ffd55ac6f44,29284121,0,0x0,8
tick,0x7ffd55ac6f44,29299829,0,0x0,8
tick,0x7ffd55ac6f44,29314945,0,0x0,8
tick,0x7ffd55ac6f44,29330339,0,0x0,8
tick,0x7ffd55ac6f44,29346505,0,0x0,8
tick,0x7ffd55ac6f44,29362196,0,0x0,8
tick,0x7ffd55ac6f44,29377506,0,0x0,8
tick,0x7ffd55ac6f44,29393741,0,0x0,8
tick,0x7ffd55ac6f44,29409315,0,0x0,8
tick,0x7ffd55ac6f44,29424574,0,0x0,8
tick,0x7ffd55ac6f44,29439838,0,0x0,8
tick,0x7ffd55ac6f44,29455187,0,0x0,8
tick,0x7ffd55ac6f44,29470650,0,0x0,8
tick,0x7ffd55ac6f44,29485776,0,0x0,8
tick,0x7ffd55ac6f44,29501808,0,0x0,8
tick,0x7ffd55ac6f44,29517473,0,0x0,8
tick,0x7ffd55ac6f44,29533336,0,0x0,8
tick,0x7ffd55ac6f44,29548889,0,0x0,8
tick,0x7ffd55ac6f44,29564251,0,0x0,8
tick,0x7ffd55ac6f44,29579477,0,0x0,8
tick,0x7ffd55ac6f44,29594742,0,0x0,8
tick,0x7ffd55ac6f44,29609402,0,0x0,8
tick,0x7ffd55ac6f44,29624997,0,0x0,8
tick,0x7ffd55ac6f44,29640369,0,0x0,8
tick,0x7ffd55ac6f44,29655324,0,0x0,8
tick,0x7ffd55ac6f44,29670433,0,0x0,8
tick,0x7ffd55ac6f44,29686051,0,0x0,8
tick,0x7ffd55ac6f44,29702178,0,0x0,8
tick,0x7ffd55ac6f44,29718110,0,0x0,8
tick,0x7ffd55ac6f44,29734292,0,0x0,8
tick,0x7ffd55ac6f44,29749799,0,0x0,8
tick,0x7ffd55ac6f44,29765470,0,0x0,8
tick,0x7ffd55ac6f44,29780471,0,0x0,8
tick,0x7ffd55ac6f44,29795796,0,0x0,8
tick,0x7ffd55ac6f44,29810695,0,0x0,8
tick,0x7ffd55ac6f44,29826751,0,0x0,8
tick,0x7ffd55ac6f44,29842347,0,0x0,8
tick,0x7ffd55ac6f44,29857467,0,0x0,8
tick,0x7ffd55ac6f44,29873152,0,0x0,8
tick,0x7ffd55ac6f44,29889117,0,0x0,8
tick,0x7ffd55ac6f44,29904460,0,0x0,8
tick,0x7ffd55ac6f44,29919504,0,0x0,8
tick,0x7ffd55ac6f44,29935171,0,0x0,8
tick,0x7ffd55ac6f44,29950738,0,0x0,8
tick,0x7ffd55ac6f44,29966088,0,0x0,8
tick,0x7ffd55ac6f44,29981325,0,0x0,8
tick,0x7ffd55ac6f44,29997289,0,0x0,8
tick,0x7ffd55ac6f44,30012004,0,0x0,8
tick,0x7ffd55ac6f44,30027410,0,0x0,8
tick,0x7ffd55ac6f44,30043053,0,0x0,8
tick,0x7ffd55ac6f44,30058549,0,0x0,8
tick,0x7ffd55ac6f44,30073784,0,0x0,8
tick,0x7ffd55ac6f44,30088936,0,0x0,8
tick,0x7ffd55ac6f44,30104438,0,0x0,8
tick,0x7ffd55ac6f44,30119346,0,0x0,8
tick,0x7ffd55ac6f44,30134036,0,0x0,8
tick,0x7ffd55ac6f44,30150099,0,0x0,8
tick,0x7ffd55ac6f44,30166187,0,0x0,8
tick,0x7ffd55ac6f44,30181285,0,0x0,8
tick,0x7ffd55ac6f44,30196678,0,0x0,8
tick,0x7ffd55ac6f44,30212038,0,0x0,8
tick,0x7ffd55ac6f44,30227802,0,0x0,8
tick,0x7ffd55ac6f44,30242751,0,0x0,8
tick,0x7ffd55ac6f44,30257715,0,0x0,8
tick,0x7ffd55ac6f44,30273354,0,0x0,8
tick,0x7ffd55ac6f44,30288721,0,0x0,8
tick,0x7ffd55ac6f44,30304342,0,0x0,8
tick,0x7ffd55ac6f44,30319501,0,0x0,8
tick,0x7ffd55ac6f44,30334690,0,0x0,8
tick,0x7ffd55ac6f44,30350577,0,0x0,8
tick,0x7ffd55ac6f44,30365668,0,0x0,8
tick,0x7ffd55ac6f44,30381073,0,0x0,8
tick,0x7ffd55ac6f44,30397010,0,0x0,8
tick,0x7ffd55ac6f44,30412999,0,0x0,8
tick,0x7ffd55ac6f44,30428212,0,0x0,8
tick,0x7ffd55ac6f44,30444327,0,0x0,8
tick,0x7ffd55ac6f44,30459839,0,0x0,8
tick,0x7ffd55ac6f44,30475165,0,0x0,8
tick,0x7ffd55ac6f44,30490935,0,0x0,8
tick,0x7ffd55ac6f44,30506092,0,0x0,8
tick,0x7ffd55ac6f44,30521551,0,0x0,8
tick,0x7ffd55ac6f44,30537375,0,0x0,8
tick,0x7ffd55ac6f44,30552707,0,0x0,8
tick,0x7ffd55ac6f44,30567850,0,0x0,8
tick,0x7ffd55ac6f44,30583178,0,0x0,8
tick,0x7ffd55ac6f44,30598002,0,0x0,8
tick,0x7ffd55ac6f44,30612960,0,0x0,8
tick,0x7ffd55ac6f44,30627843,0,0x0,8
tick,0x7ffd55ac6f44,30643367,0,0x0,8
tick,0x7ffd55ac6f44,30658615,0,0x0,8
tick,0x7ffd55ac6f44,30673261,0,0x0,8
tick,0x7ffd55ac6f44,30688359,0,0x0,8
tick,0x7ffd55ac6f44,30704236,0,0x0,8
tick,0x7ffd55ac6f44,30719714,0,0x0,8
tick,0x7ffd55ac6f44,30734593,0,0x0,8
tick,0x7ffd55ac6f44,30750134,0,0x0,8
tick,0x7ffd55ac6f44,30765765,0,0x0,8
tick,0x7ffd55ac6f44,30780919,0,0x0,8
tick,0x7ffd55ac6f44,30796040,0,0x0,8
tick,0x7ffd55ac6f44,30811569,0,0x0,8
tick,0x7ffd55ac6f44,30826843,0,0x0,8
tick,0x7ffd55ac6f44,30842879,0,0x0,8
tick,0x7ffd55ac6f44,30858999,0,0x0,8
tick,0x7ffd55ac6f44,30875012,0,0x0,8
tick,0x7ffd55ac6f44,30889634,0,0x0,8
tick,0x7ffd55ac6f44,30905172,0,0x0,8
tick,0x7ffd55ac6f44,30920341,0,0x0,8
tick,0x7ffd55ac6f44,30935888,0,0x0,8
tick,0x7ffd55ac6f44,30950734,0,0x0,8
tick,0x7ffd55ac6f44,30965985,0,0x0,8
tick,0x7ffd55ac6f44,30981506,0,0x0,8
tick,0x7ffd55ac6f44,30997212,0,0x0,8
tick,0x7ffd55ac6f44,31012797,0,0x0,8
tick,0x7ffd55ac6f44,31028007,0,0x0,8
tick,0x7ffd55ac6f44,31043749,0,0x0,8
tick,0x7ffd55ac6f44,31059624,0,0x0,8
tick,0x7ffd55ac6f44,31074868,0,0x0,8
tick,0x7ffd55ac6f44,31090368,0,0x0,8
tick,0x7ffd55ac6f44,31106553,0,0x0,8
tick,0x7ffd55ac6f44,31121828,0,0x0,8
tick,0x7ffd55ac6f44,31137352,0,0x0,8
tick,0x7ffd55ac6f44,31153197,0,0x0,8
tick,0x7ffd55ac6f44,31168752,0,0x0,8
tick,0x7ffd55ac6f44,31184375,0,0x0,8
tick,0x7ffd55ac6f44,31200143,0,0x0,8
tick,0x7ffd55ac6f44,31215164,0,0x0,8
tick,0x7ffd55ac6f44,31230568,0,0x0,8
tick,0x7ffd55ac6f44,31246363,0,0x0,8
tick,0x7ffd55ac6f44,31261960,0,0x0,8
tick,0x7ffd55ac6f44,31277566,0,0x0,8
tick,0x7ffd55ac6f44,31293261,0,0x0,8
tick,0x7ffd55ac6f44,31308698,0,0x0,8
tick,0x7ffd55ac6f44,31324445,0,0x0,8
tick,0x7ffd55ac6f44,31340331,0,0x0,8
tick,0x7ffd55ac6f44,31355549,0,0x0,8
tick,0x7ffd55ac6f44,31371117,0,0x0,8
tick,0x7ffd55ac6f44,31387484,0,0x0,8
tick,0x7ffd55ac6f44,31402726,0,0x0,8
tick,0x7ffd55ac6f44,31418421,0,0x0,8
tick,0x7ffd55ac6f44,31434409,0,0x0,8
tick,0x7ffd55ac6f44,31449557,0,0x0,8
tick,0x7ffd55ac6f44,31464589,0,0x0,8
tick,0x7ffd55ac6f44,31480619,0,0x0,8
tick,0x7ffd55ac6f44,31496180,0,0x0,8
tick,0x7ffd55ac6f44,31511566,0,0x0,8
tick,0x7ffd55ac6f44,31527586,0,0x0,8
tick,0x7ffd55ac6f44,31542144,0,0x0,8
tick,0x7ffd55ac6f44,31557120,0,0x0,8
tick,0x7ffd55ac6f44,31572911,0,0x0,8
tick,0x7ffd55ac6f44,31588397,0,0x0,8
tick,0x7ffd55ac6f44,31604419,0,0x0,8
tick,0x7ffd55ac6f44,31620597,0,0x0,8
tick,0x7ffd55ac6f44,31635591,0,0x0,8
tick,0x7ffd55ac6f44,31651066,0,0x0,8
tick,0x7ffd55ac6f44,31666107,0,0x0,8
tick,0x7ffd55ac6f44,31682296,0,0x0,8
tick,0x7ffd55ac6f44,31697623,0,0x0,8
tick,0x7ffd55ac6f44,31712932,0,0x0,8
tick,0x7ffd55ac6f44,31727803,0,0x0,8
tick,0x7ffd55ac6f44,31743261,0,0x0,8
tick,0x7ffd55ac6f44,31757808,0,0x0,8
tick,0x7ffd55ac6f44,31772862,0,0x0,8
tick,0x7ffd55ac6f44,31788792,0,0x0,8
tick,0x7ffd55ac6f44,31803804,0,0x0,8
tick,0x7ffd55ac6f44,31819135,0,0x0,8
tick,0x7ffd55ac6f44,31834643,0,0x0,8
tick,0x7ffd55ac6f44,31849922,0,0x0,8
tick,0x7ffd55ac6f44,31865177,0,0x0,8
tick,0x7ffd55ac6f44,31881033,0,0x0,8
tick,0x7ffd55ac6f44,31897494,0,0x0,8
tick,0x7ffd55ac6f44,31913394,0,0x0,8
tick,0x7ffd55ac6f44,31928472,0,0x0,8
tick,0x7ffd55ac6f44,31943691,0,0x0,8
tick,0x7ffd55ac6f44,31959467,0,0x0,8
tick,0x7ffd55ac6f44,31974217,0,0x0,8
tick,0x7ffd55ac6f44,31989197,0,0x0,8
tick,0x7ffd55ac6f44,32005293,0,0x0,8
tick,0x7ffd55ac6f44,32020202,0,0x0,8
tick,0x7ffd55ac6f44,32035196,0,0x0,8
tick,0x7ffd55ac6f44,32051191,0,0x0,8
tick,0x7ffd55ac6f44,32066856,0,0x0,8
tick,0x7ffd55ac6f44,32082721,0,0x0,8
tick,0x7ffd55ac6f44,32097935,0,0x0,8
tick,0x7ffd55ac6f44,32113818,0,0x0,8
tick,0x7ffd55ac6f44,32129936,0,0x0,8
tick,0x7ffd55ac6f44,32145878,0,0x0,8
tick,0x7ffd55ac6f44,32161908,0,0x0,8
tick,0x7ffd55ac6f44,32177839,0,0x0,8
tick,0x7ffd55ac6f44,32193796,0,0x0,8
tick,0x7ffd55ac6f44,32208879,0,0x0,8
tick,0x7ffd55ac6f44,32224075,0,0x0,8
tick,0x7ffd55ac6f44,32239382,0,0x0,8
tick,0x7ffd55ac6f44,32254742,0,0x0,8
tick,0x7ffd55ac6f44,32269644,0,0x0,8
tick,0x7ffd55ac6f44,32285408,0,0x0,8
tick,0x7ffd55ac6f44,32300593,0,0x0,8
tick,0x7ffd55ac6f44,32316202,0,0x0,8
tick,0x7ffd55ac6f44,32330917,0,0x0,8
tick,0x7ffd55ac6f44,32346511,0,0x0,8
tick,0x7ffd55ac6f44,32362483,0,0x0,8
tick,0x7ffd55ac6f44,32378458,0,0x0,8
tick,0x7ffd55ac6f44,32394438,0,0x0,8
tick,0x7ffd55ac6f44,32409980,0,0x0,8
tick,0x7ffd55ac6f44,32425957,0,0x0,8
tick,0x7ffd55ac6f44,32441248,0,0x0,8
tick,0x7ffd55ac6f44,32456046,0,0x0,8
tick,0x7ffd55ac6f44,32471831,0,0x0,8
tick,0x7ffd55ac6f44,32487188,0,0x0,8
tick,0x7ffd55ac6f44,32502021,0,0x0,8
tick,0x7ffd55ac6f44,32516723,0,0x0,8
tick,0x7ffd55ac6f44,32532414,0,0x0,8
tick,0x7ffd55ac6f44,32548486,0,0x0,8
tick,0x7ffd55ac6f44,32563571,0,0x0,8
tick,0x7ffd55ac6f44,32579105,0,0x0,8
tick,0x7ffd55ac6f44,32594674,0,0x0,8
tick,0x7ffd55ac6f44,32610878,0,0x0,8
tick,0x7ffd55ac6f44,32626157,0,0x0,8
tick,0x7ffd55ac6f44,32642100,0,0x0,8
tick,0x7ffd55ac6f44,32657396,0,0x0,8
tick,0x7ffd55ac6f44,32672959,0,0x0,8
tick,0x7ffd55ac6f44,32688362,0,0x0,8
tick,0x7ffd55ac6f44,32704258,0,0x0,8
tick,0x7ffd55ac6f44,32719529,0,0x0,8
tick,0x7ffd55ac6f44,32735216,0,0x0,8
tick,0x7ffd55ac6f44,32750519,0,0x0,8
tick,0x7ffd55ac6f44,32766677,0,0x0,8
tick,0x7ffd55ac6f44,32782157,0,0x0,8
tick,0x7ffd55ac6f44,32797642,0,0x0,8
tick,0x7ffd55ac6f44,32812970,0,0x0,8
tick,0x7ffd55ac6f44,32828661,0,0x0,8
tick,0x7ffd55ac6f44,32844162,0,0x0,8
tick,0x7ffd55ac6f44,32859612,0,0x0,8
tick,0x7ffd55ac6f44,32875432,0,0x0,8
tick,0x7ffd55ac6f44,32891318,0,0x0,8
tick,0x7ffd55ac6f44,32906911,0,0x0,8
tick,0x7ffd55ac6f44,32922820,0,0x0,8
tick,0x7ffd55ac6f44,32938677,0,0x0,8
tick,0x7ffd55ac6f44,32953626,0,0x0,8
tick,0x7ffd55ac6f44,32968712,0,0x0,8
tick,0x7ffd55ac6f44,32984289,0,0x0,8
tick,0x7ffd55ac6f44,32999629,0,0x0,8
tick,0x7ffd55ac6f44,33015249,0,0x0,8
tick,0x7ffd55ac6f44,33030472,0,0x0,8
tick,0x7ffd55ac6f44,33046058,0,0x0,8
tick,0x7ffd55ac6f44,33062056,0,0x0,8
tick,0x7ffd55ac6f44,33077658,0,0x0,8
tick,0x7ffd55ac6f44,33093340,0,0x0,8
tick,0x7ffd55ac6f44,33108665,0,0x0,8
tick,0x7ffd55ac6f44,33124135,0,0x0,8
tick,0x7ffd55ac6f44,33139450,0,0x0,8
tick,0x7ffd55ac6f44,33154884,0,0x0,8
tick,0x7ffd55ac6f44,33170110,0,0x0,8
tick,0x7ffd55ac6f44,33185820,0,0x0,8
tick,0x7ffd55ac6f44,33201102,0,0x0,8
tick,0x7ffd55ac6f44,33216574,0,0x0,8
tick,0x7ffd55ac6f44,33232418,0,0x0,8
tick,0x7ffd55ac6f44,33248333,0,0x0,8
tick,0x7ffd55ac6f44,33263726,0,0x0,8
tick,0x7ffd55ac6f44,33279337,0,0x0,8
tick,0x7ffd55ac6f44,33294384,0,0x0,8
tick,0x7ffd55ac6f44,33309732,0,0x0,8
tick,0x7ffd55ac6f44,33325504,0,0x0,8
tick,0x7ffd55ac6f44,33340470,0,0x0,8
tick,0x7ffd55ac6f44,33355455,0,0x0,8
tick,0x7ffd55ac6f44,33371621,0,0x0,8
tick,0x7ffd55ac6f44,33387526,0,0x0,8
tick,0x7ffd55ac6f44,33404474,0,0x0,8
tick,0x7ffd55ac6f44,33418830,0,0x0,8
tick,0x7ffd55ac6f44,33433500,0,0x0,8
tick,0x7ffd55ac6f44,33449588,0,0x0,8
tick,0x7ffd55ac6f44,33466119,0,0x0,8
tick,0x7ffd55ac6f44,33480456,0,0x0,8
tick,0x7ffd55ac6f44,33495519,0,0x0,8
tick,0x7ffd55ac6f44,33511497,0,0x0,8
tick,0x7ffd55ac6f44,33526510,0,0x0,8
tick,0x7ffd55ac6f44,33541477,0,0x0,8
tick,0x7ffd55ac6f44,33557496,0,0x0,8
tick,0x7ffd55ac6f44,33573512,0,0x0,8
tick,0x7ffd55ac6f44,33588484,0,0x0,8
tick,0x7ffd55ac6f44,33604486,0,0x0,8
tick,0x7ffd55ac6f44,33620504,0,0x0,8
tick,0x7ffd55ac6f44,33635660,0,0x0,8
tick,0x7ffd55ac6f44,33650526,0,0x0,8
tick,0x7ffd55ac6f44,33665536,0,0x0,8
tick,0x7ffd55ac6f44,33680472,0,0x0,8
tick,0x7ffd55ac6f44,33695478,0,0x0,8
tick,0x7ffd55ac6f44,33710482,0,0x0,8
tick,0x7ffd55ac6f44,33726516,0,0x0,8
tick,0x7ffd55ac6f44,33741512,0,0x0,8
tick,0x7ffd55ac6f44,33756450,0,0x0,8
tick,0x7ffd55ac6f44,33772490,0,0x0,8
tick,0x7ffd55ac6f44,33788475,0,0x0,8
tick,0x7ffd55ac6f44,33804465,0,0x0,8
tick,0x7ffd55ac6f44,33820495,0,0x0,8
tick,0x7ffd55ac6f44,33835529,0,0x0,8
tick,0x7ffd55ac6f44,33851483,0,0x0,8
tick,0x7ffd55ac6f44,33867503,0,0x0,8
tick,0x7ffd55ac6f44,33883509,0,0x0,8
tick,0x7ffd55ac6f44,33900150,0,0x0,8
tick,0x7ffd55ac6f44,33915604,0,0x0,8
tick,0x7ffd55ac6f44,33931734,0,0x0,8
tick,0x7ffd55ac6f44,33946469,0,0x0,8
tick,0x7ffd55ac6f44,33961539,0,0x0,8
tick,0x7ffd55ac6f44,33977450,0,0x0,8
tick,0x7ffd55ac6f44,33993547,0,0x0,8
tick,0x7ffd55ac6f44,34008688,0,0x0,8
tick,0x7ffd55ac6f44,34023900,0,0x0,8
tick,0x7ffd55ac6f44,34039820,0,0x0,8
tick,0x7ffd55ac6f44,34054816,0,0x0,8
tick,0x7ffd55ac6f44,34069882,0,0x0,8
tick,0x7ffd55ac6f44,34085638,0,0x0,8
tick,0x7ffd55ac6f44,34101186,0,0x0,8
tick,0x7ffd55ac6f44,34117234,0,0x0,8
tick,0x7ffd55ac6f44,34133179,0,0x0,8
tick,0x7ffd55ac6f44,34149093,0,0x0,8
tick,0x7ffd55ac6f44,34164948,0,0x0,8
tick,0x7ffd55ac6f44,34180524,0,0x0,8
tick,0x7ffd55ac6f44,34195857,0,0x0,8
tick,0x7ffd55ac6f44,34211043,0,0x0,8
tick,0x7ffd55ac6f44,34225838,0,0x0,8
tick,0x7ffd55ac6f44,34240798,0,0x0,8
tick,0x7ffd55ac6f44,34256822,0,0x0,8
tick,0x7ffd55ac6f44,34272680,0,0x0,8
tick,0x7ffd55ac6f44,34287877,0,0x0,8
tick,0x7ffd55ac6f44,34302959,0,0x0,8
tick,0x7ffd55ac6f44,34319015,0,0x0,8
tick,0x7ffd55ac6f44,34334463,0,0x0,8
tick,0x7ffd55ac6f44,34350458,0,0x0,8
tick,0x7ffd55ac6f44,34366423,0,0x0,8
tick,0x7ffd55ac6f44,34382095,0,0x0,8
tick,0x7ffd55ac6f44,34398113,0,0x0,8
tick,0x7ffd55ac6f44,34413090,0,0x0,8
tick,0x7ffd55ac6f44,34428457,0,0x0,8
tick,0x7ffd55ac6f44,34443595,0,0x0,8
tick,0x7ffd55ac6f44,34458389,0,0x0,8
tick,0x7ffd55ac6f44,34473329,0,0x0,8
tick,0x7ffd55ac6f44,34488410,0,0x0,8
tick,0x7ffd55ac6f44,34504042,0,0x0,8
tick,0x7ffd55ac6f44,34520144,0,0x0,8
tick,0x7ffd55ac6f44,34535606,0,0x0,8
tick,0x7ffd55ac6f44,34551499,0,0x0,8
tick,0x7ffd55ac6f44,34566660,0,0x0,8
tick,0x7ffd55ac6f44,34582163,0,0x0,8
tick,0x7ffd55ac6f44,34597056,0,0x0,8
tick,0x7ffd55ac6f44,34611911,0,0x0,8
tick,0x7ffd55ac6f44,34627630,0,0x0,8
tick,0x7ffd55ac6f44,34643301,0,0x0,8
tick,0x7ffd55ac6f44,34659069,0,0x0,8
tick,0x7ffd55ac6f44,34674820,0,0x0,8
tick,0x7ffd55ac6f44,34690092,0,0x0,8
tick,0x7ffd55ac6f44,34706048,0,0x0,8
tick,0x7ffd55ac6f44,34720691,0,0x0,8
tick,0x7ffd55ac6f44,34735909,0,0x0,8
tick,0x7ffd55ac6f44,34751984,0,0x0,8
tick,0x7ffd55ac6f44,34767512,0,0x0,8
tick,0x7ffd55ac6f44,34782732,0,0x0,8
tick,0x7ffd55ac6f44,34798442,0,0x0,8
tick,0x7ffd55ac6f44,34814195,0,0x0,8
tick,0x7ffd55ac6f44,34829797,0,0x0,8
tick,0x7ffd55ac6f44,34845008,0,0x0,8
tick,0x7ffd55ac6f44,34861171,0,0x0,8
tick,0x7ffd55ac6f44,34877070,0,0x0,8
tick,0x7ffd55ac6f44,34891906,0,0x0,8
tick,0x7ffd55ac6f44,34907726,0,0x0,8
tick,0x7ffd55ac6f44,34923402,0,0x0,8
tick,0x7ffd55ac6f44,34938557,0,0x0,8
tick,0x7ffd55ac6f44,34953882,0,0x0,8
tick,0x7ffd55ac6f44,34969983,0,0x0,8
tick,0x7ffd55ac6f44,34985491,0,0x0,8
tick,0x7ffd55ac6f44,35001046,0,0x0,8
tick,0x7ffd55ac6f44,35017385,0,0x0,8
tick,0x7ffd55ac6f44,35033291,0,0x0,8
tick,0x7ffd55ac6f44,35049026,0,0x0,8
tick,0x7ffd55ac6f44,35064330,0,0x0,8
tick,0x7ffd55ac6f44,35079771,0,0x0,8
tick,0x7ffd55ac6f44,35095033,0,0x0,8
tick,0x7ffd55ac6f44,35110833,0,0x0,8
tick,0x7ffd55ac6f44,35126102,0,0x0,8
tick,0x7ffd55ac6f44,35141522,0,0x0,8
tick,0x7ffd55ac6f44,35157247,0,0x0,8
tick,0x7ffd55ac6f44,35172829,0,0x0,8
tick,0x7ffd55ac6f44,35188395,0,0x0,8
tick,0x7ffd55ac6f44,35204589,0,0x0,8
tick,0x7ffd55ac6f44,35219426,0,0x0,8
tick,0x7ffd55ac6f44,35234470,0,0x0,8
tick,0x7ffd55ac6f44,35250207,0,0x0,8
tick,0x7ffd55ac6f44,35266125,0,0x0,8
tick,0x7ffd55ac6f44,35282027,0,0x0,8
tick,0x7ffd55ac6f44,35297452,0,0x0,8
tick,0x7ffd55ac6f44,35313243,0,0x0,8
tick,0x7ffd55ac6f44,35328512,0,0x0,8
tick,0x7ffd55ac6f44,35344341,0,0x0,8
tick,0x7ffd55ac6f44,35360114,0,0x0,8
tick,0x7ffd55ac6f44,35375586,0,0x0,8
tick,0x7ffd55ac6f44,35390494,0,0x0,8
tick,0x7ffd55ac6f44,35406397,0,0x0,8
tick,0x7ffd55ac6f44,35421207,0,0x0,8
tick,0x7ffd55ac6f44,35436167,0,0x0,8
tick,0x7ffd55ac6f44,35452152,0,0x0,8
tick,0x7ffd55ac6f44,35467507,0,0x0,8
tick,0x7ffd55ac6f44,35483643,0,0x0,8
tick,0x7ffd55ac6f44,35499606,0,0x0,8
tick,0x7ffd55ac6f44,35515650,0,0x0,8
tick,0x7ffd55ac6f44,35530790,0,0x0,8
tick,0x7ffd55ac6f44,35546085,0,0x0,8
tick,0x7ffd55ac6f44,35562057,0,0x0,8
tick,0x7ffd55ac6f44,35577003,0,0x0,8
tick,0x7ffd55ac6f44,35592457,0,0x0,8
tick,0x7ffd55ac6f44,35608415,0,0x0,8
tick,0x7ffd55ac6f44,35624580,0,0x0,8
tick,0x7ffd55ac6f44,35640002,0,0x0,8
tick,0x7ffd55ac6f44,35655258,0,0x0,8
tick,0x7ffd55ac6f44,35670530,0,0x0,8
tick,0x7ffd55ac6f44,35686187,0,0x0,8
tick,0x7ffd55ac6f44,35701453,0,0x0,8
tick,0x7ffd55ac6f44,35716899,0,0x0,8
tick,0x7ffd55ac6f44,35732078,0,0x0,8
tick,0x7ffd55ac6f44,35746760,0,0x0,8
tick,0x7ffd55ac6f44,35762448,0,0x0,8
tick,0x7ffd55ac6f44,35777223,0,0x0,8
tick,0x7ffd55ac6f44,35792463,0,0x0,8
tick,0x7ffd55ac6f44,35807463,0,0x0,8
tick,0x7ffd55ac6f44,35822957,0,0x0,8
tick,0x7ffd55ac6f44,35837634,0,0x0,8
tick,0x7ffd55ac6f44,35852779,0,0x0,8
tick,0x7ffd55ac6f44,35867820,0,0x0,8
tick,0x7ffd55ac6f44,35882816,0,0x0,8
tick,0x7ffd55ac6f44,35897876,0,0x0,8
tick,0x7ffd55ac6f44,35913874,0,0x0,8
tick,0x7ffd55ac6f44,35929896,0,0x0,8
tick,0x7ffd55ac6f44,35945503,0,0x0,8
tick,0x7ffd55ac6f44,35961321,0,0x0,8
tick,0x7ffd55ac6f44,35977226,0,0x0,8
tick,0x7ffd55ac6f44,35992324,0,0x0,8
tick,0x7ffd55ac6f44,36007525,0,0x0,8
tick,0x7ffd55ac6f44,36022838,0,0x0,8
tick,0x7ffd55ac6f44,36038178,0,0x0,8
tick,0x7ffd55ac6f44,36053985,0,0x0,8
tick,0x7ffd55ac6f44,36069825,0,0x0,8
tick,0x7ffd55ac6f44,36084814,0,0x0,8
tick,0x7ffd55ac6f44,36099921,0,0x0,8
tick,0x7ffd55ac6f44,36115160,0,0x0,8
tick,0x7ffd55ac6f44,36131614,0,0x0,8
tick,0x7ffd55ac6f44,36147635,0,0x0,8
tick,0x7ffd55ac6f44,36163524,0,0x0,8
tick,0x7ffd55ac6f44,36178465,0,0x0,8
tick,0x7ffd55ac6f44,36193356,0,0x0,8
tick,0x7ffd55ac6f44,36209056,0,0x0,8
tick,0x7ffd55ac6f44,36224380,0,0x0,8
tick,0x7ffd55ac6f44,36240030,0,0x0,8
tick,0x7ffd55ac6f44,36256198,0,0x0,8
tick,0x7ffd55ac6f44,36271224,0,0x0,8
tick,0x7ffd55ac6f44,36286296,0,0x0,8
tick,0x7ffd55ac6f44,36301752,0,0x0,8
tick,0x7ffd55ac6f44,36317874,0,0x0,8
tick,0x7ffd55ac6f44,36333433,0,0x0,8
tick,0x7ffd55ac6f44,36349586,0,0x0,8
tick,0x7ffd55ac6f44,36364123,0,0x0,8
tick,0x7ffd55ac6f44,36379404,0,0x0,8
tick,0x7ffd55ac6f44,36395039,0,0x0,8
tick,0x7ffd55ac6f44,36410539,0,0x0,8
tick,0x7ffd55ac6f44,36425974,0,0x0,8
tick,0x7ffd55ac6f44,36442370,0,0x0,8
tick,0x7ffd55ac6f44,36457128,0,0x0,8
tick,0x7ffd55ac6f44,36472070,0,0x0,8
tick,0x7ffd55ac6f44,36487860,0,0x0,8
tick,0x7ffd55ac6f44,36503382,0,0x0,8
tick,0x7ffd55ac6f44,36518543,0,0x0,8
tick,0x7ffd55ac6f44,36533755,0,0x0,8
tick,0x7ffd55ac6f44,36548875,0,0x0,8
tick,0x7ffd55ac6f44,36563744,0,0x0,8
tick,0x7ffd55ac6f44,36578896,0,0x0,8
tick,0x7ffd55ac6f44,36593686,0,0x0,8
tick,0x7ffd55ac6f44,36608870,0,0x0,8
tick,0x7ffd55ac6f44,36623860,0,0x0,8
tick,0x7ffd55ac6f44,36638846,0,0x0,8
tick,0x7ffd55ac6f44,36653971,0,0x0,8
tick,0x7ffd55ac6f44,36669985,0,0x0,8
tick,0x7ffd55ac6f44,36684964,0,0x0,8
tick,0x7ffd55ac6f44,36700238,0,0x0,8
tick,0x7ffd55ac6f44,36715256,0,0x0,8
tick,0x7ffd55ac6f44,36730646,0,0x0,8
tick,0x7ffd55ac6f44,36745832,0,0x0,8
tick,0x7ffd55ac6f44,36760832,0,0x0,8
tick,0x7ffd55ac6f44,36775841,0,0x0,8
tick,0x7ffd55ac6f44,36790836,0,0x0,8
tick,0x7ffd55ac6f44,36805862,0,0x0,8
tick,0x7ffd55ac6f44,36820460,0,0x0,8
tick,0x7ffd55ac6f44,36835469,0,0x0,8
tick,0x7ffd55ac6f44,36850653,0,0x0,8
tick,0x7ffd55ac6f44,36865856,0,0x0,8
tick,0x7ffd55ac6f44,36880857,0,0x0,8
tick,0x7ffd55ac6f44,36896861,0,0x0,8
tick,0x7ffd55ac6f44,36911913,0,0x0,8
tick,0x7ffd55ac6f44,36926848,0,0x0,8
tick,0x7ffd55ac6f44,36942665,0,0x0,8
tick,0x7ffd55ac6f44,36958148,0,0x0,8
tick,0x7ffd55ac6f44,36973734,0,0x0,8
tick,0x7ffd55ac6f44,36988781,0,0x0,8
tick,0x7ffd55ac6f44,37004495,0,0x0,8
tick,0x7ffd55ac6f44,37019530,0,0x0,8
tick,0x7ffd55ac6f44,37035319,0,0x0,8
tick,0x7ffd55ac6f44,37049730,0,0x0,8
tick,0x7ffd55ac6f44,37064718,0,0x0,8
tick,0x7ffd55ac6f44,37080750,0,0x0,8
tick,0x7ffd55ac6f44,37096774,0,0x0,8
tick,0x7ffd55ac6f44,37111909,0,0x0,8
tick,0x7ffd55ac6f44,37126621,0,0x0,8
tick,0x7ffd55ac6f44,37141545,0,0x0,8
tick,0x7ffd55ac6f44,37156551,0,0x0,8
tick,0x7ffd55ac6f44,37172772,0,0x0,8
tick,0x7ffd55ac6f44,37187487,0,0x0,8
tick,0x7ffd55ac6f44,37202352,0,0x0,8
tick,0x7ffd55ac6f44,37217915,0,0x0,8
tick,0x7ffd55ac6f44,37233025,0,0x0,8
tick,0x7ffd55ac6f44,37248942,0,0x0,8
tick,0x7ffd55ac6f44,37264052,0,0x0,8
tick,0x7ffd55ac6f44,37279530,0,0x0,8
tick,0x7ffd55ac6f44,37295533,0,0x0,8
tick,0x7ffd55ac6f44,37311013,0,0x0,8
tick,0x7ffd55ac6f44,37326986,0,0x0,8
tick,0x7ffd55ac6f44,37343070,0,0x0,8
tick,0x7ffd55ac6f44,37358450,0,0x0,8
tick,0x7ffd55ac6f44,37374512,0,0x0,8
tick,0x7ffd55ac6f44,37389985,0,0x0,8
tick,0x7ffd55ac6f44,37405410,0,0x0,8
tick,0x7ffd55ac6f44,37421102,0,0x0,8
tick,0x7ffd55ac6f44,37436094,0,0x0,8
tick,0x7ffd55ac6f44,37450965,0,0x0,8
tick,0x7ffd55ac6f44,37465800,0,0x0,8
tick,0x7ffd55ac6f44,37481276,0,0x0,8
tick,0x7ffd55ac6f44,37497267,0,0x0,8
tick,0x7ffd55ac6f44,37512427,0,0x0,8
tick,0x7ffd55ac6f44,37527987,0,0x0,8
tick,0x7ffd55ac6f44,37543195,0,0x0,8
tick,0x7ffd55ac6f44,37558689,0,0x0,8
tick,0x7ffd55ac6f44,37574361,0,0x0,8
tick,0x7ffd55ac6f44,37590276,0,0x0,8
tick,0x7ffd55ac6f44,37605032,0,0x0,8
tick,0x7ffd55ac6f44,37619935,0,0x0,8
tick,0x7ffd55ac6f44,37635314,0,0x0,8
tick,0x7ffd55ac6f44,37650422,0,0x0,8
tick,0x7ffd55ac6f44,37666204,0,0x0,8
tick,0x7ffd55ac6f44,37682213,0,0x0,8
tick,0x7ffd55ac6f44,37697238,0,0x0,8
tick,0x7ffd55ac6f44,37712510,0,0x0,8
tick,0x7ffd55ac6f44,37728559,0,0x0,8
tick,0x7ffd55ac6f44,37743564,0,0x0,8
tick,0x7ffd55ac6f44,37759824,0,0x0,8
tick,0x7ffd55ac6f44,37775283,0,0x0,8
tick,0x7ffd55ac6f44,37791339,0,0x0,8
tick,0x7ffd55ac6f44,37807327,0,0x0,8
tick,0x7ffd55ac6f44,37822933,0,0x0,8
tick,0x7ffd55ac6f44,37839264,0,0x0,8
tick,0x7ffd55ac6f44,37854417,0,0x0,8
tick,0x7ffd55ac6f44,37870569,0,0x0,8
tick,0x7ffd55ac6f44,37886067,0,0x0,8
tick,0x7ffd55ac6f44,37901900,0,0x0,8
tick,0x7ffd55ac6f44,37917322,0,0x0,8
tick,0x7ffd55ac6f44,37932923,0,0x0,8
tick,0x7ffd55ac6f44,37948394,0,0x0,8
tick,0x7ffd55ac6f44,37963987,0,0x0,8
tick,0x7ffd55ac6f44,37980227,0,0x0,8
tick,0x7ffd55ac6f44,37995712,0,0x0,8
tick,0x7ffd55ac6f44,38012042,0,0x0,8
tick,0x7ffd55ac6f44,38027171,0,0x0,8
tick,0x7ffd55ac6f44,38042999,0,0x0,8
tick,0x7ffd55ac6f44,38058231,0,0x0,8
tick,0x7ffd55ac6f44,38073948,0,0x0,8
tick,0x7ffd55ac6f44,38090279,0,0x0,8
tick,0x7ffd55ac6f44,38105247,0,0x0,8
tick,0x7ffd55ac6f44,38121076,0,0x0,8
tick,0x7ffd55ac6f44,38136950,0,0x0,8
tick,0x7ffd55ac6f44,38153041,0,0x0,8
tick,0x7ffd55ac6f44,38168335,0,0x0,8
tick,0x7ffd55ac6f44,38183540,0,0x0,8
tick,0x7ffd55ac6f44,38199651,0,0x0,8
tick,0x7ffd55ac6f44,38214682,0,0x0,8
tick,0x7ffd55ac6f44,38229766,0,0x0,8
tick,0x7ffd55ac6f44,38245365,0,0x0,8
tick,0x7ffd55ac6f44,38261578,0,0x0,8
tick,0x7ffd55ac6f44,38276784,0,0x0,8
tick,0x7ffd55ac6f44,38292321,0,0x0,8
tick,0x7ffd55ac6f44,38308123,0,0x0,8
tick,0x7ffd55ac6f44,38324021,0,0x0,8
tick,0x7ffd55ac6f44,38339407,0,0x0,8
tick,0x7ffd55ac6f44,38354907,0,0x0,8
tick,0x7ffd55ac6f44,38370656,0,0x0,8
tick,0x7ffd55ac6f44,38385643,0,0x0,8
tick,0x7ffd55ac6f44,38400878,0,0x0,8
tick,0x7ffd55ac6f44,38417155,0,0x0,8
tick,0x7ffd55ac6f44,38433380,0,0x0,8
tick,0x7ffd55ac6f44,38449043,0,0x0,8
tick,0x7ffd55ac6f44,38465092,0,0x0,8
tick,0x7ffd55ac6f44,38480279,0,0x0,8
tick,0x7ffd55ac6f44,38496236,0,0x0,8
tick,0x7ffd55ac6f44,38512123,0,0x0,8
tick,0x7ffd55ac6f44,38527401,0,0x0,8
tick,0x7ffd55ac6f44,38543389,0,0x0,8
tick,0x7ffd55ac6f44,38558779,0,0x0,8
tick,0x7ffd55ac6f44,38574561,0,0x0,8
tick,0x7ffd55ac6f44,38590365,0,0x0,8
tick,0x7ffd55ac6f44,38605727,0,0x0,8
tick,0x7ffd55ac6f44,38622202,0,0x0,8
tick,0x7ffd55ac6f44,38638416,0,0x0,8
tick,0x7ffd55ac6f44,38653530,0,0x0,8
tick,0x7ffd55ac6f44,38669424,0,0x0,8
tick,0x7ffd55ac6f44,38685249,0,0x0,8
tick,0x7ffd55ac6f44,38701112,0,0x0,8
tick,0x7ffd55ac6f44,38716159,0,0x0,8
tick,0x7ffd55ac6f44,38731975,0,0x0,8
tick,0x7ffd55ac6f44,38746686,0,0x0,8
tick,0x7ffd55ac6f44,38761622,0,0x0,8
tick,0x7ffd55ac6f44,38777141,0,0x0,8
tick,0x7ffd55ac6f44,38793353,0,0x0,8
tick,0x7ffd55ac6f44,38809519,0,0x0,8
tick,0x7ffd55ac6f44,38824989,0,0x0,8
tick,0x7ffd55ac6f44,38840610,0,0x0,8
tick,0x7ffd55ac6f44,38855912,0,0x0,8
tick,0x7ffd55ac6f44,38871410,0,0x0,8
tick,0x7ffd55ac6f44,38887448,0,0x0,8
tick,0x7ffd55ac6f44,38902911,0,0x0,8
tick,0x7ffd55ac6f44,38918454,0,0x0,8
tick,0x7ffd55ac6f44,38933210,0,0x0,8
tick,0x7ffd55ac6f44,38948391,0,0x0,8
tick,0x7ffd55ac6f44,38963115,0,0x0,8
tick,0x7ffd55ac6f44,38979159,0,0x0,8
tick,0x7ffd55ac6f44,38994303,0,0x0,8
tick,0x7ffd55ac6f44,39009922,0,0x0,8
tick,0x7ffd55ac6f44,39025157,0,0x0,8
tick,0x7ffd55ac6f44,39040807,0,0x0,8
tick,0x7ffd55ac6f44,39056193,0,0x0,8
tick,0x7ffd55ac6f44,39072326,0,0x0,8
tick,0x7ffd55ac6f44,39087201,0,0x0,8
tick,0x7ffd55ac6f44,39102127,0,0x0,8
tick,0x7ffd55ac6f44,39117530,0,0x0,8
tick,0x7ffd55ac6f44,39133475,0,0x0,8
tick,0x7ffd55ac6f44,39149356,0,0x0,8
tick,0x7ffd55ac6f44,39164651,0,0x0,8
tick,0x7ffd55ac6f44,39180461,0,0x0,8
tick,0x7ffd55ac6f44,39196343,0,0x0,8
tick,0x7ffd55ac6f44,39211275,0,0x0,8
tick,0x7ffd55ac6f44,39226204,0,0x0,8
tick,0x7ffd55ac6f44,39242010,0,0x0,8
tick,0x7ffd55ac6f44,39257595,0,0x0,8
tick,0x7ffd55ac6f44,39272864,0,0x0,8
tick,0x7ffd55ac6f44,39288302,0,0x0,8
tick,0x7ffd55ac6f44,39303408,0,0x0,8
tick,0x7ffd55ac6f44,39319777,0,0x0,8
tick,0x7ffd55ac6f44,39334905,0,0x0,8
tick,0x7ffd55ac6f44,39350842,0,0x0,8
tick,0x7ffd55ac6f44,39366044,0,0x0,8
tick,0x7ffd55ac6f44,39381558,0,0x0,8
tick,0x7ffd55ac6f44,39397387,0,0x0,8
tick,0x7ffd55ac6f44,39412596,0,0x0,8
tick,0x7ffd55ac6f44,39427387,0,0x0,8
tick,0x7ffd55ac6f44,39443227,0,0x0,8
tick,0x7ffd55ac6f44,39458633,0,0x0,8
tick,0x7ffd55ac6f44,39474088,0,0x0,8
tick,0x7ffd55ac6f44,39489236,0,0x0,8
tick,0x7ffd55ac6f44,39504979,0,0x0,8
tick,0x7ffd55ac6f44,39520680,0,0x0,8
tick,0x7ffd55ac6f44,39536244,0,0x0,8
tick,0x7ffd55ac6f44,39551779,0,0x0,8
tick,0x7ffd55ac6f44,39567334,0,0x0,8
tick,0x7ffd55ac6f44,39582650,0,0x0,8
tick,0x7ffd55ac6f44,39598049,0,0x0,8
tick,0x7ffd55ac6f44,39613485,0,0x0,8
tick,0x7ffd55ac6f44,39629617,0,0x0,8
tick,0x7ffd55ac6f44,39645016,0,0x0,8
tick,0x7ffd55ac6f44,39660150,0,0x0,8
tick,0x7ffd55ac6f44,39675625,0,0x0,8
tick,0x7ffd55ac6f44,39691613,0,0x0,8
tick,0x7ffd55ac6f44,39707485,0,0x0,8
tick,0x7ffd55ac6f44,39723320,0,0x0,8
tick,0x7ffd55ac6f44,39739310,0,0x0,8
tick,0x7ffd55ac6f44,39754367,0,0x0,8
tick,0x7ffd55ac6f44,39770668,0,0x0,8
tick,0x7ffd55ac6f44,39785841,0,0x0,8
tick,0x7ffd55ac6f44,39801191,0,0x0,8
tick,0x7ffd55ac6f44,39816181,0,0x0,8
tick,0x7ffd55ac6f44,39832160,0,0x0,8
tick,0x7ffd55ac6f44,39847906,0,0x0,8
tick,0x7ffd55ac6f44,39862743,0,0x0,8
tick,0x7ffd55ac6f44,39877874,0,0x0,8
tick,0x7ffd55ac6f44,39893680,0,0x0,8
tick,0x7ffd55ac6f44,39909934,0,0x0,8
tick,0x7ffd55ac6f44,39925208,0,0x0,8
tick,0x7ffd55ac6f44,39940231,0,0x0,8
tick,0x7ffd55ac6f44,39956319,0,0x0,8
tick,0x7ffd55ac6f44,39971238,0,0x0,8
tick,0x7ffd55ac6f44,39986054,0,0x0,8
tick,0x7ffd55ac6f44,40002192,0,0x0,8
tick,0x7ffd55ac6f44,40016999,0,0x0,8
tick,0x7ffd55ac6f44,40032182,0,0x0,8
tick,0x7ffd55ac6f44,40047889,0,0x0,8
tick,0x7ffd55ac6f44,40063535,0,0x0,8
tick,0x7ffd55ac6f44,40079520,0,0x0,8
tick,0x7ffd55ac6f44,40095372,0,0x0,8
tick,0x7ffd55ac6f44,40110287,0,0x0,8
tick,0x7ffd55ac6f44,40125121,0,0x0,8
tick,0x7ffd55ac6f44,40140546,0,0x0,8
tick,0x7ffd55ac6f44,40156700,0,0x0,8
tick,0x7ffd55ac6f44,40172286,0,0x0,8
tick,0x7ffd55ac6f44,40188298,0,0x0,8
tick,0x7ffd55ac6f44,40204152,0,0x0,8
tick,0x7ffd55ac6f44,40220086,0,0x0,8
tick,0x7ffd55ac6f44,40235565,0,0x0,8
tick,0x7ffd55ac6f44,40250907,0,0x0,8
tick,0x7ffd55ac6f44,40266059,0,0x0,8
tick,0x7ffd55ac6f44,40282121,0,0x0,8
tick,0x7ffd55ac6f44,40297481,0,0x0,8
tick,0x7ffd55ac6f44,40313129,0,0x0,8
tick,0x7ffd55ac6f44,40328384,0,0x0,8
tick,0x7ffd55ac6f44,40344485,0,0x0,8
tick,0x7ffd55ac6f44,40359885,0,0x0,8
tick,0x7ffd55ac6f44,40375404,0,0x0,8
tick,0x7ffd55ac6f44,40390603,0,0x0,8
tick,0x7ffd55ac6f44,40406375,0,0x0,8
tick,0x7ffd55ac6f44,40421844,0,0x0,8
tick,0x7ffd55ac6f44,40437575,0,0x0,8
tick,0x7ffd55ac6f44,40453239,0,0x0,8
tick,0x7ffd55ac6f44,40468430,0,0x0,8
tick,0x7ffd55ac6f44,40484247,0,0x0,8
tick,0x7ffd55ac6f44,40499967,0,0x0,8
tick,0x7ffd55ac6f44,40515050,0,0x0,8
tick,0x7ffd55ac6f44,40530801,0,0x0,8
tick,0x7ffd55ac6f44,40546099,0,0x0,8
tick,0x7ffd55ac6f44,40562086,0,0x0,8
tick,0x7ffd55ac6f44,40578263,0,0x0,8
tick,0x7ffd55ac6f44,40593614,0,0x0,8
tick,0x7ffd55ac6f44,40609079,0,0x0,8
tick,0x7ffd55ac6f44,40623815,0,0x0,8
tick,0x7ffd55ac6f44,40639215,0,0x0,8
tick,0x7ffd55ac6f44,40654860,0,0x0,8
tick,0x7ffd55ac6f44,40671333,0,0x0,8
tick,0x7ffd55ac6f44,40686875,0,0x0,8
tick,0x7ffd55ac6f44,40702705,0,0x0,8
tick,0x7ffd55ac6f44,40718680,0,0x0,8
tick,0x7ffd55ac6f44,40734232,0,0x0,8
tick,0x7ffd55ac6f44,40750126,0,0x0,8
tick,0x7ffd55ac6f44,40765584,0,0x0,8
tick,0x7ffd55ac6f44,40781349,0,0x0,8
tick,0x7ffd55ac6f44,40796861,0,0x0,8
tick,0x7ffd55ac6f44,40812198,0,0x0,8
tick,0x7ffd55ac6f44,40827638,0,0x0,8
tick,0x7ffd55ac6f44,40843256,0,0x0,8
tick,0x7ffd55ac6f44,40857903,0,0x0,8
tick,0x7ffd55ac6f44,40873612,0,0x0,8
tick,0x7ffd55ac6f44,40888664,0,0x0,8
tick,0x7ffd55ac6f44,40903624,0,0x0,8
tick,0x7ffd55ac6f44,40919188,0,0x0,8
tick,0x7ffd55ac6f44,40934462,0,0x0,8
tick,0x7ffd55ac6f44,40950608,0,0x0,8
tick,0x7ffd55ac6f44,40965684,0,0x0,8
tick,0x7ffd55ac6f44,40981073,0,0x0,8
tick,0x7ffd55ac6f44,40996047,0,0x0,8
tick,0x7ffd55ac6f44,41011128,0,0x0,8
tick,0x7ffd55ac6f44,41027293,0,0x0,8
tick,0x7ffd55ac6f44,41043657,0,0x0,8
tick,0x7ffd55ac6f44,41059911,0,0x0,8
tick,0x7ffd55ac6f44,41075227,0,0x0,8
tick,0x7ffd55ac6f44,41090666,0,0x0,8
tick,0x7ffd55ac6f44,41106366,0,0x0,8
tick,0x7ffd55ac6f44,41122315,0,0x0,8
tick,0x7ffd55ac6f44,41137654,0,0x0,8
tick,0x7ffd55ac6f44,41153227,0,0x0,8
tick,0x7ffd55ac6f44,41168919,0,0x0,8
tick,0x7ffd55ac6f44,41184180,0,0x0,8
tick,0x7ffd55ac6f44,41199518,0,0x0,8
tick,0x7ffd55ac6f44,41215275,0,0x0,8
tick,0x7ffd55ac6f44,41230851,0,0x0,8
tick,0x7ffd55ac6f44,41246634,0,0x0,8
tick,0x7ffd55ac6f44,41262092,0,0x0,8
tick,0x7ffd55ac6f44,41277381,0,0x0,8
tick,0x7ffd55ac6f44,41293392,0,0x0,8
tick,0x7ffd55ac6f44,41309436,0,0x0,8
tick,0x7ffd55ac6f44,41325286,0,0x0,8
tick,0x7ffd55ac6f44,41341024,0,0x0,8
tick,0x7ffd55ac6f44,41357622,0,0x0,8
tick,0x7ffd55ac6f44,41373449,0,0x0,8
tick,0x7ffd55ac6f44,41388794,0,0x0,8
tick,0x7ffd55ac6f44,41404754,0,0x0,8
tick,0x7ffd55ac6f44,41420374,0,0x0,8
tick,0x7ffd55ac6f44,41436242,0,0x0,8
tick,0x7ffd55ac6f44,41451903,0,0x0,8
tick,0x7ffd55ac6f44,41467702,0,0x0,8
tick,0x7ffd55ac6f44,41483207,0,0x0,8
tick,0x7ffd55ac6f44,41498382,0,0x0,8
tick,0x7ffd55ac6f44,41513657,0,0x0,8
tick,0x7ffd55ac6f44,41529168,0,0x0,8
tick,0x7ffd55ac6f44,41544415,0,0x0,8
tick,0x7ffd55ac6f44,41560498,0,0x0,8
tick,0x7ffd55ac6f44,41575280,0,0x0,8
tick,0x7ffd55ac6f44,41590726,0,0x0,8
tick,0x7ffd55ac6f44,41606344,0,0x0,8
tick,0x7ffd55ac6f44,41622129,0,0x0,8
tick,0x7ffd55ac6f44,41637665,0,0x0,8
tick,0x7ffd55ac6f44,41653477,0,0x0,8
tick,0x7ffd55ac6f44,41669121,0,0x0,8
tick,0x7ffd55ac6f44,41684628,0,0x0,8
tick,0x7ffd55ac6f44,41699748,0,0x0,8
tick,0x7ffd55ac6f44,41715125,0,0x0,8
tick,0x7ffd55ac6f44,41730878,0,0x0,8
tick,0x7ffd55ac6f44,41746739,0,0x0,8
tick,0x7ffd55ac6f44,41762468,0,0x0,8
tick,0x7ffd55ac6f44,41777705,0,0x0,8
tick,0x7ffd55ac6f44,41793056,0,0x0,8
tick,0x7ffd55ac6f44,41808774,0,0x0,8
tick,0x7ffd55ac6f44,41824335,0,0x0,8
tick,0x7ffd55ac6f44,41840451,0,0x0,8
tick,0x7ffd55ac6f44,41856526,0,0x0,8
tick,0x7ffd55ac6f44,41872124,0,0x0,8
tick,0x7ffd55ac6f44,41888220,0,0x0,8
tick,0x7ffd55ac6f44,41903872,0,0x0,8
tick,0x7ffd55ac6f44,41919257,0,0x0,8
tick,0x7ffd55ac6f44,41935209,0,0x0,8
tick,0x7ffd55ac6f44,41951123,0,0x0,8
tick,0x7ffd55ac6f44,41966678,0,0x0,8
tick,0x7ffd55ac6f44,41982191,0,0x0,8
tick,0x7ffd55ac6f44,41997268,0,0x0,8
tick,0x7ffd55ac6f44,42013127,0,0x0,8
tick,0x7ffd55ac6f44,42028405,0,0x0,8
tick,0x7ffd55ac6f44,42044379,0,0x0,8
tick,0x7ffd55ac6f44,42060322,0,0x0,8
tick,0x7ffd55ac6f44,42076083,0,0x0,8
tick,0x7ffd55ac6f44,42091901,0,0x0,8
tick,0x7ffd55ac6f44,42107411,0,0x0,8
tick,0x7ffd55ac6f44,42123129,0,0x0,8
tick,0x7ffd55ac6f44,42138712,0,0x0,8
tick,0x7ffd55ac6f44,42154546,0,0x0,8
tick,0x7ffd55ac6f44,42170377,0,0x0,8
tick,0x7ffd55ac6f44,42185668,0,0x0,8
tick,0x7ffd55ac6f44,42200561,0,0x0,8
tick,0x7ffd55ac6f44,42215979,0,0x0,8
tick,0x7ffd55ac6f44,42232123,0,0x0,8
tick,0x7ffd55ac6f44,42247233,0,0x0,8
tick,0x7ffd55ac6f44,42263318,0,0x0,8
tick,0x7ffd55ac6f44,42278915,0,0x0,8
tick,0x7ffd55ac6f44,42294504,0,0x0,8
tick,0x7ffd55ac6f44,42309586,0,0x0,8
tick,0x7ffd55ac6f44,42324422,0,0x0,8
tick,0x7ffd55ac6f44,42339809,0,0x0,8
tick,0x7ffd55ac6f44,42355136,0,0x0,8
tick,0x7ffd55ac6f44,42370610,0,0x0,8
tick,0x7ffd55ac6f44,42386095,0,0x0,8
tick,0x7ffd55ac6f44,42401403,0,0x0,8
tick,0x7ffd55ac6f44,42417559,0,0x0,8
tick,0x7ffd55ac6f44,42433309,0,0x0,8
tick,0x7ffd55ac6f44,42448486,0,0x0,8
tick,0x7ffd55ac6f44,42464121,0,0x0,8
tick,0x7ffd55ac6f44,42479524,0,0x0,8
tick,0x7ffd55ac6f44,42495377,0,0x0,8
tick,0x7ffd55ac6f44,42510043,0,0x0,8
tick,0x7ffd55ac6f44,42525558,0,0x0,8
tick,0x7ffd55ac6f44,42541221,0,0x0,8
tick,0x7ffd55ac6f44,42557328,0,0x0,8
tick,0x7ffd55ac6f44,42572969,0,0x0,8
tick,0x7ffd55ac6f44,42589315,0,0x0,8
tick,0x7ffd55ac6f44,42605013,0,0x0,8
tick,0x7ffd55ac6f44,42620219,0,0x0,8
tick,0x7ffd55ac6f44,42635306,0,0x0,8
tick,0x7ffd55ac6f44,42650017,0,0x0,8
tick,0x7ffd55ac6f44,42665361,0,0x0,8
tick,0x7ffd55ac6f44,42681258,0,0x0,8
tick,0x7ffd55ac6f44,42696505,0,0x0,8
tick,0x7ffd55ac6f44,42712771,0,0x0,8
tick,0x7ffd55ac6f44,42728631,0,0x0,8
tick,0x7ffd55ac6f44,42743449,0,0x0,8
tick,0x7ffd55ac6f44,42759473,0,0x0,8
tick,0x7ffd55ac6f44,42774727,0,0x0,8
tick,0x7ffd55ac6f44,42790839,0,0x0,8
tick,0x7ffd55ac6f44,42806033,0,0x0,8
tick,0x7ffd55ac6f44,42821322,0,0x0,8
tick,0x7ffd55ac6f44,42836956,0,0x0,8
tick,0x7ffd55ac6f44,42852421,0,0x0,8
tick,0x7ffd55ac6f44,42867851,0,0x0,8
tick,0x7ffd55ac6f44,42883346,0,0x0,8
tick,0x7ffd55ac6f44,42899229,0,0x0,8
tick,0x7ffd55ac6f44,42913988,0,0x0,8
tick,0x7ffd55ac6f44,42929433,0,0x0,8
tick,0x7ffd55ac6f44,42944628,0,0x0,8
tick,0x7ffd55ac6f44,42960022,0,0x0,8
tick,0x7ffd55ac6f44,42975165,0,0x0,8
tick,0x7ffd55ac6f44,42990792,0,0x0,8
tick,0x7ffd55ac6f44,43005968,0,0x0,8
tick,0x7ffd55ac6f44,43021251,0,0x0,8
tick,0x7ffd55ac6f44,43037261,0,0x0,8
tick,0x7ffd55ac6f44,43053402,0,0x0,8
tick,0x7ffd55ac6f44,43069582,0,0x0,8
tick,0x7ffd55ac6f44,43084566,0,0x0,8
tick,0x7ffd55ac6f44,43099783,0,0x0,8
tick,0x7ffd55ac6f44,43115382,0,0x0,8
tick,0x7ffd55ac6f44,43130820,0,0x0,8
tick,0x7ffd55ac6f44,43146680,0,0x0,8
tick,0x7ffd55ac6f44,43162631,0,0x0,8
tick,0x7ffd55ac6f44,43178918,0,0x0,8
tick,0x7ffd55ac6f44,43194053,0,0x0,8
tick,0x7ffd55ac6f44,43209925,0,0x0,8
tick,0x7ffd55ac6f44,43225148,0,0x0,8
tick,0x7ffd55ac6f44,43240542,0,0x0,8
tick,0x7ffd55ac6f44,43256051,0,0x0,8
tick,0x7ffd55ac6f44,43272291,0,0x0,8
tick,0x7ffd55ac6f44,43288455,0,0x0,8
tick,0x7ffd55ac6f44,43304322,0,0x0,8
tick,0x7ffd55ac6f44,43319832,0,0x0,8
tick,0x7ffd55ac6f44,43335463,0,0x0,8
tick,0x7ffd55ac6f44,43350793,0,0x0,8
tick,0x7ffd55ac6f44,43366056,0,0x0,8
tick,0x7ffd55ac6f44,43382252,0,0x0,8
tick,0x7ffd55ac6f44,43397739,0,0x0,8
tick,0x7ffd55ac6f44,43413429,0,0x0,8
tick,0x7ffd55ac6f44,43429378,0,0x0,8
tick,0x7ffd55ac6f44,43444122,0,0x0,8
tick,0x7ffd55ac6f44,43459609,0,0x0,8
tick,0x7ffd55ac6f44,43475057,0,0x0,8
tick,0x7ffd55ac6f44,43490934,0,0x0,8
tick,0x7ffd55ac6f44,43506157,0,0x0,8
tick,0x7ffd55ac6f44,43521433,0,0x0,8
tick,0x7ffd55ac6f44,43537029,0,0x0,8
tick,0x7ffd55ac6f44,43553614,0,0x0,8
tick,0x7ffd55ac6f44,43569618,0,0x0,8
tick,0x7ffd55ac6f44,43585196,0,0x0,8
tick,0x7ffd55ac6f44,43600308,0,0x0,8
tick,0x7ffd55ac6f44,43615212,0,0x0,8
tick,0x7ffd55ac6f44,43629991,0,0x0,8
tick,0x7ffd55ac6f44,43645365,0,0x0,8
tick,0x7ffd55ac6f44,43660845,0,0x0,8
tick,0x7ffd55ac6f44,43676444,0,0x0,8
tick,0x7ffd55ac6f44,43692212,0,0x0,8
tick,0x7ffd55ac6f44,43707478,0,0x0,8
tick,0x7ffd55ac6f44,43723607,0,0x0,8
tick,0x7ffd55ac6f44,43739156,0,0x0,8
tick,0x7ffd55ac6f44,43754241,0,0x0,8
tick,0x7ffd55ac6f44,43769845,0,0x0,8
tick,0x7ffd55ac6f44,43785294,0,0x0,8
tick,0x7ffd55ac6f44,43800088,0,0x0,8
tick,0x7ffd55ac6f44,43815169,0,0x0,8
tick,0x7ffd55ac6f44,43830297,0,0x0,8
tick,0x7ffd55ac6f44,43845717,0,0x0,8
tick,0x7ffd55ac6f44,43861222,0,0x0,8
tick,0x7ffd55ac6f44,43877313,0,0x0,8
tick,0x7ffd55ac6f44,43892600,0,0x0,8
tick,0x7ffd55ac6f44,43908703,0,0x0,8
tick,0x7ffd55ac6f44,43923981,0,0x0,8
tick,0x7ffd55ac6f44,43939497,0,0x0,8
tick,0x7ffd55ac6f44,43955114,0,0x0,8
tick,0x7ffd55ac6f44,43970433,0,0x0,8
tick,0x7ffd55ac6f44,43985944,0,0x0,8
tick,0x7ffd55ac6f44,44001900,0,0x0,8
tick,0x7ffd55ac6f44,44017109,0,0x0,8
tick,0x7ffd55ac6f44,44033066,0,0x0,8
tick,0x7ffd55ac6f44,44049061,0,0x0,8
tick,0x7ffd55ac6f44,44064131,0,0x0,8
tick,0x7ffd55ac6f44,44079654,0,0x0,8
tick,0x7ffd55ac6f44,44094943,0,0x0,8
tick,0x7ffd55ac6f44,44111050,0,0x0,8
tick,0x7ffd55ac6f44,44125843,0,0x0,8
tick,0x7ffd55ac6f44,44141859,0,0x0,8
tick,0x7ffd55ac6f44,44156896,0,0x0,8
tick,0x7ffd55ac6f44,44172819,0,0x0,8
tick,0x7ffd55ac6f44,44188843,0,0x0,8
tick,0x7ffd55ac6f44,44204926,0,0x0,8
tick,0x7ffd55ac6f44,44220601,0,0x0,8
tick,0x7ffd55ac6f44,44235875,0,0x0,8
tick,0x7ffd55ac6f44,44251884,0,0x0,8
tick,0x7ffd55ac6f44,44267888,0,0x0,8
tick,0x7ffd55ac6f44,44284015,0,0x0,8
tick,0x7ffd55ac6f44,44300011,0,0x0,8
tick,0x7ffd55ac6f44,44315524,0,0x0,8
tick,0x7ffd55ac6f44,44330037,0,0x0,8
tick,0x7ffd55ac6f44,44345020,0,0x0,8
tick,0x7ffd55ac6f44,44360148,0,0x0,8
tick,0x7ffd55ac6f44,44375822,0,0x0,8
tick,0x7ffd55ac6f44,44391863,0,0x0,8
tick,0x7ffd55ac6f44,44407100,0,0x0,8
tick,0x7ffd55ac6f44,44423051,0,0x0,8
tick,0x7ffd55ac6f44,44439083,0,0x0,8
tick,0x7ffd55ac6f44,44455059,0,0x0,8
tick,0x7ffd55ac6f44,44471022,0,0x0,8
tick,0x7ffd55ac6f44,44486149,0,0x0,8
tick,0x7ffd55ac6f44,44502129,0,0x0,8
tick,0x7ffd55ac6f44,44517641,0,0x0,8
tick,0x7ffd55ac6f44,44533342,0,0x0,8
tick,0x7ffd55ac6f44,44548972,0,0x0,8
tick,0x7ffd55ac6f44,44564364,0,0x0,8
tick,0x7ffd55ac6f44,44580185,0,0x0,8
tick,0x7ffd55ac6f44,44595168,0,0x0,8
tick,0x7ffd55ac6f44,44611166,0,0x0,8
tick,0x7ffd55ac6f44,44627149,0,0x0,8
tick,0x7ffd55ac6f44,44642094,0,0x0,8
tick,0x7ffd55ac6f44,44657440,0,0x0,8
tick,0x7ffd55ac6f44,44673245,0,0x0,8
tick,0x7ffd55ac6f44,44688689,0,0x0,8
tick,0x7ffd55ac6f44,44704665,0,0x0,8
tick,0x7ffd55ac6f44,44719658,0,0x0,8
tick,0x7ffd55ac6f44,44734619,0,0x0,8
tick,0x7ffd55ac6f44,44750220,0,0x0,8
tick,0x7ffd55ac6f44,44765597,0,0x0,8
tick,0x7ffd55ac6f44,44780534,0,0x0,8
tick,0x7ffd55ac6f44,44795969,0,0x0,8
tick,0x7ffd55ac6f44,44811339,0,0x0,8
tick,0x7ffd55ac6f44,44826437,0,0x0,8
tick,0x7ffd55ac6f44,44841763,0,0x0,8
tick,0x7ffd55ac6f44,44857393,0,0x0,8
tick,0x7ffd55ac6f44,44872128,0,0x0,8
tick,0x7ffd55ac6f44,44887716,0,0x0,8
tick,0x7ffd55ac6f44,44903380,0,0x0,8
tick,0x7ffd55ac6f44,44919394,0,0x0,8
tick,0x7ffd55ac6f44,44934399,0,0x0,8
tick,0x7ffd55ac6f44,44949518,0,0x0,8
tick,0x7ffd55ac6f44,44965056,0,0x0,8
tick,0x7ffd55ac6f44,44980077,0,0x0,8
tick,0x7ffd55ac6f44,44995192,0,0x0,8
tick,0x7ffd55ac6f44,45010428,0,0x0,8
tick,0x7ffd55ac6f44,45025144,0,0x0,8
tick,0x7ffd55ac6f44,45040416,0,0x0,8
tick,0x7ffd55ac6f44,45055796,0,0x0,8
tick,0x7ffd55ac6f44,45071843,0,0x0,8
tick,0x7ffd55ac6f44,45087128,0,0x0,8
tick,0x7ffd55ac6f44,45103094,0,0x0,8
tick,0x7ffd55ac6f44,45118948,0,0x0,8
tick,0x7ffd55ac6f44,45134237,0,0x0,8
tick,0x7ffd55ac6f44,45149782,0,0x0,8
tick,0x7ffd55ac6f44,45165290,0,0x0,8
tick,0x7ffd55ac6f44,45180357,0,0x0,8
tick,0x7ffd55ac6f44,45196399,0,0x0,8
tick,0x7ffd55ac6f44,45212135,0,0x0,8
tick,0x7ffd55ac6f44,45227990,0,0x0,8
tick,0x7ffd55ac6f44,45243966,0,0x0,8
tick,0x7ffd55ac6f44,45258734,0,0x0,8
tick,0x7ffd55ac6f44,45274055,0,0x0,8
tick,0x7ffd55ac6f44,45289837,0,0x0,8
tick,0x7ffd55ac6f44,45305368,0,0x0,8
tick,0x7ffd55ac6f44,45321018,0,0x0,8
tick,0x7ffd55ac6f44,45337418,0,0x0,8
tick,0x7ffd55ac6f44,45353229,0,0x0,8
tick,0x7ffd55ac6f44,45369350,0,0x0,8
tick,0x7ffd55ac6f44,45384470,0,0x0,8
tick,0x7ffd55ac6f44,45400189,0,0x0,8
tick,0x7ffd55ac6f44,45415536,0,0x0,8
tick,0x7ffd55ac6f44,45431757,0,0x0,8
tick,0x7ffd55ac6f44,45447538,0,0x0,8
tick,0x7ffd55ac6f44,45463413,0,0x0,8
tick,0x7ffd55ac6f44,45478473,0,0x0,8
tick,0x7ffd55ac6f44,45494284,0,0x0,8
tick,0x7ffd55ac6f44,45510645,0,0x0,8
tick,0x7ffd55ac6f44,45526135,0,0x0,8
tick,0x7ffd55ac6f44,45542107,0,0x0,8
tick,0x7ffd55ac6f44,45557575,0,0x0,8
tick,0x7ffd55ac6f44,45573534,0,0x0,8
tick,0x7ffd55ac6f44,45588485,0,0x0,8
tick,0x7ffd55ac6f44,45604378,0,0x0,8
tick,0x7ffd55ac6f44,45619357,0,0x0,8
tick,0x7ffd55ac6f44,45634575,0,0x0,8
tick,0x7ffd55ac6f44,45650855,0,0x0,8
tick,0x7ffd55ac6f44,45666962,0,0x0,8
tick,0x7ffd55ac6f44,45681711,0,0x0,8
tick,0x7ffd55ac6f44,45696349,0,0x0,8
tick,0x7ffd55ac6f44,45711530,0,0x0,8
tick,0x7ffd55ac6f44,45727124,0,0x0,8
tick,0x7ffd55ac6f44,45742417,0,0x0,8
tick,0x7ffd55ac6f44,45758236,0,0x0,8
tick,0x7ffd55ac6f44,45774378,0,0x0,8
tick,0x7ffd55ac6f44,45789058,0,0x0,8
tick,0x7ffd55ac6f44,45804315,0,0x0,8
tick,0x7ffd55ac6f44,45820499,0,0x0,8
tick,0x7ffd55ac6f44,45836316,0,0x0,8
tick,0x7ffd55ac6f44,45851094,0,0x0,8
tick,0x7ffd55ac6f44,45866743,0,0x0,8
tick,0x7ffd55ac6f44,45882332,0,0x0,8
tick,0x7ffd55ac6f44,45897359,0,0x0,8
tick,0x7ffd55ac6f44,45913260,0,0x0,8
tick,0x7ffd55ac6f44,45928579,0,0x0,8
tick,0x7ffd55ac6f44,45944454,0,0x0,8
tick,0x7ffd55ac6f44,45960294,0,0x0,8
tick,0x7ffd55ac6f44,45975466,0,0x0,8
tick,0x7ffd55ac6f44,45990930,0,0x0,8
tick,0x7ffd55ac6f44,46007289,0,0x0,8
tick,0x7ffd55ac6f44,46022256,0,0x0,8
tick,0x7ffd55ac6f44,46037741,0,0x0,8
tick,0x7ffd55ac6f44,46053470,0,0x0,8
tick,0x7ffd55ac6f44,46069545,0,0x0,8
tick,0x7ffd55ac6f44,46084650,0,0x0,8
tick,0x7ffd55ac6f44,46100465,0,0x0,8
tick,0x7ffd55ac6f44,46115255,0,0x0,8
tick,0x7ffd55ac6f44,46130265,0,0x0,8
tick,0x7ffd55ac6f44,46145990,0,0x0,8
tick,0x7ffd55ac6f44,46161604,0,0x0,8
tick,0x7ffd55ac6f44,46177280,0,0x0,8
tick,0x7ffd55ac6f44,46193236,0,0x0,8
tick,0x7ffd55ac6f44,46208682,0,0x0,8
tick,0x7ffd55ac6f44,46224142,0,0x0,8
tick,0x7ffd55ac6f44,46239443,0,0x0,8
tick,0x7ffd55ac6f44,46255291,0,0x0,8
tick,0x7ffd55ac6f44,46270022,0,0x0,8
tick,0x7ffd55ac6f44,46285350,0,0x0,8
tick,0x7ffd55ac6f44,46301230,0,0x0,8
tick,0x7ffd55ac6f44,46316115,0,0x0,8
tick,0x7ffd55ac6f44,46332279,0,0x0,8
tick,0x7ffd55ac6f44,46347561,0,0x0,8
tick,0x7ffd55ac6f44,46363104,0,0x0,8
tick,0x7ffd55ac6f44,46379061,0,0x0,8
tick,0x7ffd55ac6f44,46394290,0,0x0,8
tick,0x7ffd55ac6f44,46410491,0,0x0,8
tick,0x7ffd55ac6f44,46425723,0,0x0,8
tick,0x7ffd55ac6f44,46441444,0,0x0,8
tick,0x7ffd55ac6f44,46457420,0,0x0,8
tick,0x7ffd55ac6f44,46473094,0,0x0,8
tick,0x7ffd55ac6f44,46488768,0,0x0,8
tick,0x7ffd55ac6f44,46504059,0,0x0,8
tick,0x7ffd55ac6f44,46519639,0,0x0,8
tick,0x7ffd55ac6f44,46535246,0,0x0,8
tick,0x7ffd55ac6f44,46550937,0,0x0,8
tick,0x7ffd55ac6f44,46565938,0,0x0,8
tick,0x7ffd55ac6f44,46581713,0,0x0,8
tick,0x7ffd55ac6f44,46597712,0,0x0,8
tick,0x7ffd55ac6f44,46612749,0,0x0,8
tick,0x7ffd55ac6f44,46627651,0,0x0,8
tick,0x7ffd55ac6f44,46643339,0,0x0,8
tick,0x7ffd55ac6f44,46659408,0,0x0,8
tick,0x7ffd55ac6f44,46674333,0,0x0,8
tick,0x7ffd55ac6f44,46689627,0,0x0,8
tick,0x7ffd55ac6f44,46705149,0,0x0,8
tick,0x7ffd55ac6f44,46721457,0,0x0,8
tick,0x7ffd55ac6f44,46737371,0,0x0,8
tick,0x7ffd55ac6f44,46753400,0,0x0,8
tick,0x7ffd55ac6f44,46769418,0,0x0,8
tick,0x7ffd55ac6f44,46784644,0,0x0,8
tick,0x7ffd55ac6f44,46800455,0,0x0,8
tick,0x7ffd55ac6f44,46815274,0,0x0,8
tick,0x7ffd55ac6f44,46830396,0,0x0,8
tick,0x7ffd55ac6f44,46846083,0,0x0,8
tick,0x7ffd55ac6f44,46862334,0,0x0,8
tick,0x7ffd55ac6f44,46877777,0,0x0,8
tick,0x7ffd55ac6f44,46892690,0,0x0,8
tick,0x7ffd55ac6f44,46908297,0,0x0,8
tick,0x7ffd55ac6f44,46924464,0,0x0,8
tick,0x7ffd55ac6f44,46940065,0,0x0,8
tick,0x7ffd55ac6f44,46955286,0,0x0,8
tick,0x7ffd55ac6f44,46970791,0,0x0,8
tick,0x7ffd55ac6f44,46985923,0,0x0,8
tick,0x7ffd55ac6f44,47001265,0,0x0,8
tick,0x7ffd55ac6f44,47016560,0,0x0,8
tick,0x7ffd55ac6f44,47032110,0,0x0,8
tick,0x7ffd55ac6f44,47047396,0,0x0,8
tick,0x7ffd55ac6f44,47063817,0,0x0,8
tick,0x7ffd55ac6f44,47079533,0,0x0,8
tick,0x7ffd55ac6f44,47094209,0,0x0,8
tick,0x7ffd55ac6f44,47110107,0,0x0,8
tick,0x7ffd55ac6f44,47125496,0,0x0,8
tick,0x7ffd55ac6f44,47140492,0,0x0,8
tick,0x7ffd55ac6f44,47155353,0,0x0,8
tick,0x7ffd55ac6f44,47171107,0,0x0,8
tick,0x7ffd55ac6f44,47187254,0,0x0,8
tick,0x7ffd55ac6f44,47202852,0,0x0,8
tick,0x7ffd55ac6f44,47218500,0,0x0,8
tick,0x7ffd55ac6f44,47234643,0,0x0,8
tick,0x7ffd55ac6f44,47250187,0,0x0,8
tick,0x7ffd55ac6f44,47265378,0,0x0,8
tick,0x7ffd55ac6f44,47281396,0,0x0,8
tick,0x7ffd55ac6f44,47297173,0,0x0,8
tick,0x7ffd55ac6f44,47312203,0,0x0,8
tick,0x7ffd55ac6f44,47328172,0,0x0,8
tick,0x7ffd55ac6f44,47343305,0,0x0,8
tick,0x7ffd55ac6f44,47359234,0,0x0,8
tick,0x7ffd55ac6f44,47374883,0,0x0,8
tick,0x7ffd55ac6f44,47390624,0,0x0,8
tick,0x7ffd55ac6f44,47406473,0,0x0,8
tick,0x7ffd55ac6f44,47422499,0,0x0,8
tick,0x7ffd55ac6f44,47437408,0,0x0,8
tick,0x7ffd55ac6f44,47452276,0,0x0,8
tick,0x7ffd55ac6f44,47467197,0,0x0,8
tick,0x7ffd55ac6f44,47482173,0,0x0,8
tick,0x7ffd55ac6f44,47497439,0,0x0,8
tick,0x7ffd55ac6f44,47512941,0,0x0,8
tick,0x7ffd55ac6f44,47528019,0,0x0,8
tick,0x7ffd55ac6f44,47543878,0,0x0,8
tick,0x7ffd55ac6f44,47559200,0,0x0,8
tick,0x7ffd55ac6f44,47574416,0,0x0,8
tick,0x7ffd55ac6f44,47589554,0,0x0,8
tick,0x7ffd55ac6f44,47605184,0,0x0,8
tick,0x7ffd55ac6f44,47621021,0,0x0,8
tick,0x7ffd55ac6f44,47636937,0,0x0,8
tick,0x7ffd55ac6f44,47652126,0,0x0,8
tick,0x7ffd55ac6f44,47667247,0,0x0,8
tick,0x7ffd55ac6f44,47683641,0,0x0,8
tick,0x7ffd55ac6f44,47699397,0,0x0,8
tick,0x7ffd55ac6f44,47715119,0,0x0,8
tick,0x7ffd55ac6f44,47730855,0,0x0,8
tick,0x7ffd55ac6f44,47746284,0,0x0,8
tick,0x7ffd55ac6f44,47762395,0,0x0,8
tick,0x7ffd55ac6f44,47777484,0,0x0,8
tick,0x7ffd55ac6f44,47792843,0,0x0,8
tick,0x7ffd55ac6f44,47808823,0,0x0,8
tick,0x7ffd55ac6f44,47824123,0,0x0,8
tick,0x7ffd55ac6f44,47839248,0,0x0,8
tick,0x7ffd55ac6f44,47854790,0,0x0,8
tick,0x7ffd55ac6f44,47870262,0,0x0,8
tick,0x7ffd55ac6f44,47885615,0,0x0,8
tick,0x7ffd55ac6f44,47901317,0,0x0,8
tick,0x7ffd55ac6f44,47916467,0,0x0,8
tick,0x7ffd55ac6f44,47931726,0,0x0,8
tick,0x7ffd55ac6f44,47946974,0,0x0,8
tick,0x7ffd55ac6f44,47963284,0,0x0,8
tick,0x7ffd55ac6f44,47978847,0,0x0,8
tick,0x7ffd55ac6f44,47994530,0,0x0,8
tick,0x7ffd55ac6f44,48009672,0,0x0,8
tick,0x7ffd55ac6f44,48024932,0,0x0,8
tick,0x7ffd55ac6f44,48040223,0,0x0,8
tick,0x7ffd55ac6f44,48056006,0,0x0,8
tick,0x7ffd55ac6f44,48071640,0,0x0,8
tick,0x7ffd55ac6f44,48086790,0,0x0,8
tick,0x7ffd55ac6f44,48102942,0,0x0,8
tick,0x7ffd55ac6f44,48118335,0,0x0,8
tick,0x7ffd55ac6f44,48133918,0,0x0,8
tick,0x7ffd55ac6f44,48149264,0,0x0,8
tick,0x7ffd55ac6f44,48164470,0,0x0,8
tick,0x7ffd55ac6f44,48180273,0,0x0,8
tick,0x7ffd55ac6f44,48196341,0,0x0,8
tick,0x7ffd55ac6f44,48212293,0,0x0,8
tick,0x7ffd55ac6f44,48227711,0,0x0,8
tick,0x7ffd55ac6f44,48243219,0,0x0,8
tick,0x7ffd55ac6f44,48259500,0,0x0,8
tick,0x7ffd55ac6f44,48275274,0,0x0,8
tick,0x7ffd55ac6f44,48291302,0,0x0,8
tick,0x7ffd55ac6f44,48306252,0,0x0,8
tick,0x7ffd55ac6f44,48320892,0,0x0,8
tick,0x7ffd55ac6f44,48335937,0,0x0,8
tick,0x7ffd55ac6f44,48351296,0,0x0,8
tick,0x7ffd55ac6f44,48367437,0,0x0,8
tick,0x7ffd55ac6f44,48382103,0,0x0,8
tick,0x7ffd55ac6f44,48397644,0,0x0,8
tick,0x7ffd55ac6f44,48413284,0,0x0,8
tick,0x7ffd55ac6f44,48428541,0,0x0,8
tick,0x7ffd55ac6f44,48444685,0,0x0,8
tick,0x7ffd55ac6f44,48460026,0,0x0,8
tick,0x7ffd55ac6f44,48475791,0,0x0,8
tick,0x7ffd55ac6f44,48491584,0,0x0,8
tick,0x7ffd55ac6f44,48507366,0,0x0,8
tick,0x7ffd55ac6f44,48523508,0,0x0,8
tick,0x7ffd55ac6f44,48539110,0,0x0,8
tick,0x7ffd55ac6f44,48554437,0,0x0,8
tick,0x7ffd55ac6f44,48569631,0,0x0,8
tick,0x7ffd55ac6f44,48585033,0,0x0,8
tick,0x7ffd55ac6f44,48600545,0,0x0,8
tick,0x7ffd55ac6f44,48615801,0,0x0,8
tick,0x7ffd55ac6f44,48631430,0,0x0,8
tick,0x7ffd55ac6f44,48647014,0,0x0,8
tick,0x7ffd55ac6f44,48662349,0,0x0,8
tick,0x7ffd55ac6f44,48677595,0,0x0,8
tick,0x7ffd55ac6f44,48692769,0,0x0,8
tick,0x7ffd55ac6f44,48708507,0,0x0,8
tick,0x7ffd55ac6f44,48723345,0,0x0,8
tick,0x7ffd55ac6f44,48738647,0,0x0,8
tick,0x7ffd55ac6f44,48753684,0,0x0,8
tick,0x7ffd55ac6f44,48769084,0,0x0,8
tick,0x7ffd55ac6f44,48784269,0,0x0,8
tick,0x7ffd55ac6f44,48799992,0,0x0,8
tick,0x7ffd55ac6f44,48816191,0,0x0,8
tick,0x7ffd55ac6f44,48831997,0,0x0,8
tick,0x7ffd55ac6f44,48847336,0,0x0,8
tick,0x7ffd55ac6f44,48863540,0,0x0,8
tick,0x7ffd55ac6f44,48878987,0,0x0,8
tick,0x7ffd55ac6f44,48894442,0,0x0,8
tick,0x7ffd55ac6f44,48910499,0,0x0,8
tick,0x7ffd55ac6f44,48926047,0,0x0,8
tick,0x7ffd55ac6f44,48941055,0,0x0,8
tick,0x7ffd55ac6f44,48955796,0,0x0,8
tick,0x7ffd55ac6f44,48971696,0,0x0,8
tick,0x7ffd55ac6f44,48986226,0,0x0,8
tick,0x7ffd55ac6f44,49001729,0,0x0,8
tick,0x7ffd55ac6f44,49016356,0,0x0,8
tick,0x7ffd55ac6f44,49031529,0,0x0,8
tick,0x7ffd55ac6f44,49047511,0,0x0,8
tick,0x7ffd55ac6f44,49063382,0,0x0,8
tick,0x7ffd55ac6f44,49078875,0,0x0,8
tick,0x7ffd55ac6f44,49093689,0,0x0,8
tick,0x7ffd55ac6f44,49108908,0,0x0,8
tick,0x7ffd55ac6f44,49124498,0,0x0,8
tick,0x7ffd55ac6f44,49139916,0,0x0,8
tick,0x7ffd55ac6f44,49155233,0,0x0,8
tick,0x7ffd55ac6f44,49170814,0,0x0,8
tick,0x7ffd55ac6f44,49185954,0,0x0,8
tick,0x7ffd55ac6f44,49201270,0,0x0,8
tick,0x7ffd55ac6f44,49216894,0,0x0,8
tick,0x7ffd55ac6f44,49233072,0,0x0,8
tick,0x7ffd55ac6f44,49248329,0,0x0,8
tick,0x7ffd55ac6f44,49263101,0,0x0,8
tick,0x7ffd55ac6f44,49278849,0,0x0,8
tick,0x7ffd55ac6f44,49294646,0,0x0,8
tick,0x7ffd55ac6f44,49310311,0,0x0,8
tick,0x7ffd55ac6f44,49325884,0,0x0,8
tick,0x7ffd55ac6f44,49340916,0,0x0,8
tick,0x7ffd55ac6f44,49355832,0,0x0,8
tick,0x7ffd55ac6f44,49370848,0,0x0,8
tick,0x7ffd55ac6f44,49386154,0,0x0,8
tick,0x7ffd55ac6f44,49402205,0,0x0,8
tick,0x7ffd55ac6f44,49418403,0,0x0,8
tick,0x7ffd55ac6f44,49434419,0,0x0,8
tick,0x7ffd55ac6f44,49450159,0,0x0,8
tick,0x7ffd55ac6f44,49465196,0,0x0,8
tick,0x7ffd55ac6f44,49481371,0,0x0,8
tick,0x7ffd55ac6f44,49497267,0,0x0,8
tick,0x7ffd55ac6f44,49513186,0,0x0,8
tick,0x7ffd55ac6f44,49528721,0,0x0,8
tick,0x7ffd55ac6f44,49544624,0,0x0,8
tick,0x7ffd55ac6f44,49559885,0,0x0,8
tick,0x7ffd55ac6f44,49575374,0,0x0,8
tick,0x7ffd55ac6f44,49591433,0,0x0,8
tick,0x7ffd55ac6f44,49606957,0,0x0,8
tick,0x7ffd55ac6f44,49622399,0,0x0,8
tick,0x7ffd55ac6f44,49637594,0,0x0,8
tick,0x7ffd55ac6f44,49653349,0,0x0,8
tick,0x7ffd55ac6f44,49669345,0,0x0,8
tick,0x7ffd55ac6f44,49685174,0,0x0,8
tick,0x7ffd55ac6f44,49700772,0,0x0,8
tick,0x7ffd55ac6f44,49716268,0,0x0,8
tick,0x7ffd55ac6f44,49732253,0,0x0,8
tick,0x7ffd55ac6f44,49747873,0,0x0,8
tick,0x7ffd55ac6f44,49763383,0,0x0,8
tick,0x7ffd55ac6f44,49778384,0,0x0,8
tick,0x7ffd55ac6f44,49793578,0,0x0,8
tick,0x7ffd55ac6f44,49808898,0,0x0,8
tick,0x7ffd55ac6f44,49824070,0,0x0,8
tick,0x7ffd55ac6f44,49839251,0,0x0,8
tick,0x7ffd55ac6f44,49854515,0,0x0,8
tick,0x7ffd55ac6f44,49870297,0,0x0,8
tick,0x7ffd55ac6f44,49885422,0,0x0,8
tick,0x7ffd55ac6f44,49901199,0,0x0,8
tick,0x7ffd55ac6f44,49917695,0,0x0,8
tick,0x7ffd55ac6f44,49933374,0,0x0,8
tick,0x7ffd55ac6f44,49948407,0,0x0,8
tick,0x7ffd55ac6f44,49964607,0,0x0,8
tick,0x7ffd55ac6f44,49979385,0,0x0,8
tick,0x7ffd55ac6f44,49994459,0,0x0,8
tick,0x7ffd55ac6f44,50010011,0,0x0,8
tick,0x7ffd55ac6f44,50026064,0,0x0,8
tick,0x7ffd55ac6f44,50041756,0,0x0,8
tick,0x7ffd55ac6f44,50057244,0,0x0,8
tick,0x7ffd55ac6f44,50072551,0,0x0,8
tick,0x7ffd55ac6f44,50088126,0,0x0,8
tick,0x7ffd55ac6f44,50103439,0,0x0,8
tick,0x7ffd55ac6f44,50118946,0,0x0,8
tick,0x7ffd55ac6f44,50134608,0,0x0,8
tick,0x7ffd55ac6f44,50149978,0,0x0,8
tick,0x7ffd55ac6f44,50165568,0,0x0,8
tick,0x7ffd55ac6f44,50180753,0,0x0,8
tick,0x7ffd55ac6f44,50196613,0,0x0,8
tick,0x7ffd55ac6f44,50212532,0,0x0,8
tick,0x7ffd55ac6f44,50227550,0,0x0,8
tick,0x7ffd55ac6f44,50242332,0,0x0,8
tick,0x7ffd55ac6f44,50257850,0,0x0,8
tick,0x7ffd55ac6f44,50273144,0,0x0,8
tick,0x7ffd55ac6f44,50288657,0,0x0,8
tick,0x7ffd55ac6f44,50304548,0,0x0,8
tick,0x7ffd55ac6f44,50320146,0,0x0,8
tick,0x7ffd55ac6f44,50335589,0,0x0,8
tick,0x7ffd55ac6f44,50350787,0,0x0,8
tick,0x7ffd55ac6f44,50366097,0,0x0,8
tick,0x7ffd55ac6f44,50381900,0,0x0,8
tick,0x7ffd55ac6f44,50397396,0,0x0,8
tick,0x7ffd55ac6f44,50412244,0,0x0,8
tick,0x7ffd55ac6f44,50427424,0,0x0,8
tick,0x7ffd55ac6f44,50442312,0,0x0,8
tick,0x7ffd55ac6f44,50458474,0,0x0,8
tick,0x7ffd55ac6f44,50473784,0,0x0,8
tick,0x7ffd55ac6f44,50489923,0,0x0,8
tick,0x7ffd55ac6f44,50505293,0,0x0,8
tick,0x7ffd55ac6f44,50520431,0,0x0,8
tick,0x7ffd55ac6f44,50535272,0,0x0,8
tick,0x7ffd55ac6f44,50550724,0,0x0,8
tick,0x7ffd55ac6f44,50567283,0,0x0,8
tick,0x7ffd55ac6f44,50583365,0,0x0,8
tick,0x7ffd55ac6f44,50598551,0,0x0,8
tick,0x7ffd55ac6f44,50614189,0,0x0,8
tick,0x7ffd55ac6f44,50629924,0,0x0,8
tick,0x7ffd55ac6f44,50645624,0,0x0,8
tick,0x7ffd55ac6f44,50661547,0,0x0,8
tick,0x7ffd55ac6f44,50676846,0,0x0,8
tick,0x7ffd55ac6f44,50692181,0,0x0,8
tick,0x7ffd55ac6f44,50708065,0,0x0,8
tick,0x7ffd55ac6f44,50724503,0,0x0,8
tick,0x7ffd55ac6f44,50739038,0,0x0,8
tick,0x7ffd55ac6f44,50754091,0,0x0,8
tick,0x7ffd55ac6f44,50770041,0,0x0,8
tick,0x7ffd55ac6f44,50785535,0,0x0,8
tick,0x7ffd55ac6f44,50801096,0,0x0,8
tick,0x7ffd55ac6f44,50816862,0,0x0,8
tick,0x7ffd55ac6f44,50832126,0,0x0,8
tick,0x7ffd55ac6f44,50848240,0,0x0,8
tick,0x7ffd55ac6f44,50864281,0,0x0,8
tick,0x7ffd55ac6f44,50880171,0,0x0,8
tick,0x7ffd55ac6f44,50896169,0,0x0,8
tick,0x7ffd55ac6f44,50912175,0,0x0,8
tick,0x7ffd55ac6f44,50928154,0,0x0,8
tick,0x7ffd55ac6f44,50943221,0,0x0,8
tick,0x7ffd55ac6f44,50959141,0,0x0,8
tick,0x7ffd55ac6f44,50975153,0,0x0,8
tick,0x7ffd55ac6f44,50991217,0,0x0,8
tick,0x7ffd55ac6f44,51007117,0,0x0,8
tick,0x7ffd55ac6f44,51023127,0,0x0,8
tick,0x7ffd55ac6f44,51039012,0,0x0,8
tick,0x7ffd55ac6f44,51054297,0,0x0,8
tick,0x7ffd55ac6f44,51070149,0,0x0,8
tick,0x7ffd55ac6f44,51085299,0,0x0,8
tick,0x7ffd55ac6f44,51100644,0,0x0,8
tick,0x7ffd55ac6f44,51116568,0,0x0,8
tick,0x7ffd55ac6f44,51132379,0,0x0,8
tick,0x7ffd55ac6f44,51148391,0,0x0,8
tick,0x7ffd55ac6f44,51164177,0,0x0,8
tick,0x7ffd55ac6f44,51180262,0,0x0,8
tick,0x7ffd55ac6f44,51196223,0,0x0,8
tick,0x7ffd55ac6f44,51212232,0,0x0,8
tick,0x7ffd55ac6f44,51228349,0,0x0,8
tick,0x7ffd55ac6f44,51244300,0,0x0,8
tick,0x7ffd55ac6f44,51259438,0,0x0,8
tick,0x7ffd55ac6f44,51274814,0,0x0,8
tick,0x7ffd55ac6f44,51290763,0,0x0,8
tick,0x7ffd55ac6f44,51306066,0,0x0,8
tick,0x7ffd55ac6f44,51322085,0,0x0,8
tick,0x7ffd55ac6f44,51337754,0,0x0,8
tick,0x7ffd55ac6f44,51353176,0,0x0,8
tick,0x7ffd55ac6f44,51368444,0,0x0,8
tick,0x7ffd55ac6f44,51384116,0,0x0,8
tick,0x7ffd55ac6f44,51399470,0,0x0,8
tick,0x7ffd55ac6f44,51415169,0,0x0,8
tick,0x7ffd55ac6f44,51430557,0,0x0,8
tick,0x7ffd55ac6f44,51446666,0,0x0,8
tick,0x7ffd55ac6f44,51462457,0,0x0,8
tick,0x7ffd55ac6f44,51478413,0,0x0,8
tick,0x7ffd55ac6f44,51494370,0,0x0,8
tick,0x7ffd55ac6f44,51510145,0,0x0,8
tick,0x7ffd55ac6f44,51526115,0,0x0,8
tick,0x7ffd55ac6f44,51541164,0,0x0,8
tick,0x7ffd55ac6f44,51557595,0,0x0,8
tick,0x7ffd55ac6f44,51573103,0,0x0,8
tick,0x7ffd55ac6f44,51588224,0,0x0,8
tick,0x7ffd55ac6f44,51604187,0,0x0,8
tick,0x7ffd55ac6f44,51620138,0,0x0,8
tick,0x7ffd55ac6f44,51635138,0,0x0,8
tick,0x7ffd55ac6f44,51651160,0,0x0,8
tick,0x7ffd55ac6f44,51667167,0,0x0,8
tick,0x7ffd55ac6f44,51683271,0,0x0,8
tick,0x7ffd55ac6f44,51698371,0,0x0,8
tick,0x7ffd55ac6f44,51713588,0,0x0,8
tick,0x7ffd55ac6f44,51728823,0,0x0,8
tick,0x7ffd55ac6f44,51744616,0,0x0,8
tick,0x7ffd55ac6f44,51759627,0,0x0,8
tick,0x7ffd55ac6f44,51775237,0,0x0,8
tick,0x7ffd55ac6f44,51791234,0,0x0,8
tick,0x7ffd55ac6f44,51806307,0,0x0,8
tick,0x7ffd55ac6f44,51821696,0,0x0,8
tick,0x7ffd55ac6f44,51837586,0,0x0,8
tick,0x7ffd55ac6f44,51853777,0,0x0,8
tick,0x7ffd55ac6f44,51869495,0,0x0,8
tick,0x7ffd55ac6f44,51884918,0,0x0,8
tick,0x7ffd55ac6f44,51900319,0,0x0,8
tick,0x7ffd55ac6f44,51916074,0,0x0,8
tick,0x7ffd55ac6f44,51932108,0,0x0,8
tick,0x7ffd55ac6f44,51947266,0,0x0,8
tick,0x7ffd55ac6f44,51963434,0,0x0,8
tick,0x7ffd55ac6f44,51979211,0,0x0,8
tick,0x7ffd55ac6f44,51994448,0,0x0,8
tick,0x7ffd55ac6f44,52009483,0,0x0,8
tick,0x7ffd55ac6f44,52024516,0,0x0,8
tick,0x7ffd55ac6f44,52040340,0,0x0,8
tick,0x7ffd55ac6f44,52055280,0,0x0,8
tick,0x7ffd55ac6f44,52070058,0,0x0,8
tick,0x7ffd55ac6f44,52085424,0,0x0,8
tick,0x7ffd55ac6f44,52100465,0,0x0,8
tick,0x7ffd55ac6f44,52115741,0,0x0,8
tick,0x7ffd55ac6f44,52131877,0,0x0,8
tick,0x7ffd55ac6f44,52147719,0,0x0,8
tick,0x7ffd55ac6f44,52163638,0,0x0,8
tick,0x7ffd55ac6f44,52178999,0,0x0,8
tick,0x7ffd55ac6f44,52194639,0,0x0,8
tick,0x7ffd55ac6f44,52210594,0,0x0,8
tick,0x7ffd55ac6f44,52226817,0,0x0,8
tick,0x7ffd55ac6f44,52242960,0,0x0,8
tick,0x7ffd55ac6f44,52258492,0,0x0,8
tick,0x7ffd55ac6f44,52274305,0,0x0,8
tick,0x7ffd55ac6f44,52289343,0,0x0,8
tick,0x7ffd55ac6f44,52305203,0,0x0,8
tick,0x7ffd55ac6f44,52320679,0,0x0,8
tick,0x7ffd55ac6f44,52335528,0,0x0,8
tick,0x7ffd55ac6f44,52351111,0,0x0,8
tick,0x7ffd55ac6f44,52366305,0,0x0,8
tick,0x7ffd55ac6f44,52381325,0,0x0,8
tick,0x7ffd55ac6f44,52396264,0,0x0,8
tick,0x7ffd55ac6f44,52412008,0,0x0,8
tick,0x7ffd55ac6f44,52427215,0,0x0,8
tick,0x7ffd55ac6f44,52443351,0,0x0,8
tick,0x7ffd55ac6f44,52458831,0,0x0,8
tick,0x7ffd55ac6f44,52474397,0,0x0,8
tick,0x7ffd55ac6f44,52489758,0,0x0,8
tick,0x7ffd55ac6f44,52505369,0,0x0,8
tick,0x7ffd55ac6f44,52521102,0,0x0,8
tick,0x7ffd55ac6f44,52537112,0,0x0,8
tick,0x7ffd55ac6f44,52553008,0,0x0,8
tick,0x7ffd55ac6f44,52568964,0,0x0,8
tick,0x7ffd55ac6f44,52585058,0,0x0,8
tick,0x7ffd55ac6f44,52600010,0,0x0,8
tick,0x7ffd55ac6f44,52615973,0,0x0,8
tick,0x7ffd55ac6f44,52632052,0,0x0,8
tick,0x7ffd55ac6f44,52646971,0,0x0,8
tick,0x7ffd55ac6f44,52662040,0,0x0,8
tick,0x7ffd55ac6f44,52678239,0,0x0,8
tick,0x7ffd55ac6f44,52694187,0,0x0,8
tick,0x7ffd55ac6f44,52709553,0,0x0,8
tick,0x7ffd55ac6f44,52725007,0,0x0,8
tick,0x7ffd55ac6f44,52740408,0,0x0,8
tick,0x7ffd55ac6f44,52756027,0,0x0,8
tick,0x7ffd55ac6f44,52772234,0,0x0,8
tick,0x7ffd55ac6f44,52787854,0,0x0,8
tick,0x7ffd55ac6f44,52803523,0,0x0,8
tick,0x7ffd55ac6f44,52819420,0,0x0,8
tick,0x7ffd55ac6f44,52834363,0,0x0,8
tick,0x7ffd55ac6f44,52849424,0,0x0,8
tick,0x7ffd55ac6f44,52865219,0,0x0,8
tick,0x7ffd55ac6f44,52881539,0,0x0,8
tick,0x7ffd55ac6f44,52896672,0,0x0,8
tick,0x7ffd55ac6f44,52911446,0,0x0,8
tick,0x7ffd55ac6f44,52927268,0,0x0,8
tick,0x7ffd55ac6f44,52942208,0,0x0,8
tick,0x7ffd55ac6f44,52957201,0,0x0,8
tick,0x7ffd55ac6f44,52973263,0,0x0,8
tick,0x7ffd55ac6f44,52988291,0,0x0,8
tick,0x7ffd55ac6f44,53004285,0,0x0,8
tick,0x7ffd55ac6f44,53020298,0,0x0,8
tick,0x7ffd55ac6f44,53036394,0,0x0,8
tick,0x7ffd55ac6f44,53051296,0,0x0,8
tick,0x7ffd55ac6f44,53066214,0,0x0,8
tick,0x7ffd55ac6f44,53082331,0,0x0,8
tick,0x7ffd55ac6f44,53097227,0,0x0,8
tick,0x7ffd55ac6f44,53112266,0,0x0,8
tick,0x7ffd55ac6f44,53128419,0,0x0,8
tick,0x7ffd55ac6f44,53144234,0,0x0,8
tick,0x7ffd55ac6f44,53159304,0,0x0,8
tick,0x7ffd55ac6f44,53174170,0,0x0,8
tick,0x7ffd55ac6f44,53189458,0,0x0,8
tick,0x7ffd55ac6f44,53204651,0,0x0,8
tick,0x7ffd55ac6f44,53220211,0,0x0,8
tick,0x7ffd55ac6f44,53234924,0,0x0,8
tick,0x7ffd55ac6f44,53250173,0,0x0,8
tick,0x7ffd55ac6f44,53265242,0,0x0,8
tick,0x7ffd55ac6f44,53280501,0,0x0,8
tick,0x7ffd55ac6f44,53296107,0,0x0,8
tick,0x7ffd55ac6f44,53312245,0,0x0,8
tick,0x7ffd55ac6f44,53327681,0,0x0,8
tick,0x7ffd55ac6f44,53343523,0,0x0,8
tick,0x7ffd55ac6f44,53359882,0,0x0,8
tick,0x7ffd55ac6f44,53375018,0,0x0,8
tick,0x7ffd55ac6f44,53390565,0,0x0,8
tick,0x7ffd55ac6f44,53405251,0,0x0,8
tick,0x7ffd55ac6f44,53420533,0,0x0,8
tick,0x7ffd55ac6f44,53436242,0,0x0,8
tick,0x7ffd55ac6f44,53452238,0,0x0,8
tick,0x7ffd55ac6f44,53467273,0,0x0,8
tick,0x7ffd55ac6f44,53483112,0,0x0,8
tick,0x7ffd55ac6f44,53498722,0,0x0,8
tick,0x7ffd55ac6f44,53514644,0,0x0,8
tick,0x7ffd55ac6f44,53530537,0,0x0,8
tick,0x7ffd55ac6f44,53546224,0,0x0,8
tick,0x7ffd55ac6f44,53562413,0,0x0,8
tick,0x7ffd55ac6f44,53577440,0,0x0,8
tick,0x7ffd55ac6f44,53593059,0,0x0,8
tick,0x7ffd55ac6f44,53608837,0,0x0,8
tick,0x7ffd55ac6f44,53624887,0,0x0,8
tick,0x7ffd55ac6f44,53640150,0,0x0,8
tick,0x7ffd55ac6f44,53655932,0,0x0,8
tick,0x7ffd55ac6f44,53672111,0,0x0,8
tick,0x7ffd55ac6f44,53687701,0,0x0,8
tick,0x7ffd55ac6f44,53703276,0,0x0,8
tick,0x7ffd55ac6f44,53718396,0,0x0,8
tick,0x7ffd55ac6f44,53734148,0,0x0,8
tick,0x7ffd55ac6f44,53749573,0,0x0,8
tick,0x7ffd55ac6f44,53765233,0,0x0,8
tick,0x7ffd55ac6f44,53780202,0,0x0,8
tick,0x7ffd55ac6f44,53795729,0,0x0,8
tick,0x7ffd55ac6f44,53810724,0,0x0,8
tick,0x7ffd55ac6f44,53826079,0,0x0,8
tick,0x7ffd55ac6f44,53842267,0,0x0,8
tick,0x7ffd55ac6f44,53857466,0,0x0,8
tick,0x7ffd55ac6f44,53873531,0,0x0,8
tick,0x7ffd55ac6f44,53889071,0,0x0,8
tick,0x7ffd55ac6f44,53904807,0,0x0,8
tick,0x7ffd55ac6f44,53919895,0,0x0,8
tick,0x7ffd55ac6f44,53935203,0,0x0,8
tick,0x7ffd55ac6f44,53951079,0,0x0,8
tick,0x7ffd55ac6f44,53966286,0,0x0,8
tick,0x7ffd55ac6f44,53981807,0,0x0,8
tick,0x7ffd55ac6f44,53997697,0,0x0,8
tick,0x7ffd55ac6f44,54013347,0,0x0,8
tick,0x7ffd55ac6f44,54029001,0,0x0,8
tick,0x7ffd55ac6f44,54044370,0,0x0,8
tick,0x7ffd55ac6f44,54060239,0,0x0,8
tick,0x7ffd55ac6f44,54075108,0,0x0,8
tick,0x7ffd55ac6f44,54090392,0,0x0,8
tick,0x7ffd55ac6f44,54105722,0,0x0,8
tick,0x7ffd55ac6f44,54121969,0,0x0,8
tick,0x7ffd55ac6f44,54137495,0,0x0,8
tick,0x7ffd55ac6f44,54152891,0,0x0,8
tick,0x7ffd55ac6f44,54168525,0,0x0,8
tick,0x7ffd55ac6f44,54183292,0,0x0,8
tick,0x7ffd55ac6f44,54198762,0,0x0,8
tick,0x7ffd55ac6f44,54214095,0,0x0,8
tick,0x7ffd55ac6f44,54229900,0,0x0,8
tick,0x7ffd55ac6f44,54245474,0,0x0,8
tick,0x7ffd55ac6f44,54260721,0,0x0,8
tick,0x7ffd55ac6f44,54276764,0,0x0,8
tick,0x7ffd55ac6f44,54292251,0,0x0,8
tick,0x7ffd55ac6f44,54307909,0,0x0,8
tick,0x7ffd55ac6f44,54323826,0,0x0,8
tick,0x7ffd55ac6f44,54339530,0,0x0,8
tick,0x7ffd55ac6f44,54354924,0,0x0,8
tick,0x7ffd55ac6f44,54370814,0,0x0,8
tick,0x7ffd55ac6f44,54387468,0,0x0,8
tick,0x7ffd55ac6f44,54403211,0,0x0,8
tick,0x7ffd55ac6f44,54418365,0,0x0,8
tick,0x7ffd55ac6f44,54434020,0,0x0,8
tick,0x7ffd55ac6f44,54449327,0,0x0,8
tick,0x7ffd55ac6f44,54464775,0,0x0,8
tick,0x7ffd55ac6f44,54480694,0,0x0,8
tick,0x7ffd55ac6f44,54496298,0,0x0,8
tick,0x7ffd55ac6f44,54512260,0,0x0,8
tick,0x7ffd55ac6f44,54528300,0,0x0,8
tick,0x7ffd55ac6f44,54544320,0,0x0,8
tick,0x7ffd55ac6f44,54560209,0,0x0,8
tick,0x7ffd55ac6f44,54575386,0,0x0,8
tick,0x7ffd55ac6f44,54591289,0,0x0,8
tick,0x7ffd55ac6f44,54606280,0,0x0,8
tick,0x7ffd55ac6f44,54622263,0,0x0,8
tick,0x7ffd55ac6f44,54638264,0,0x0,8
tick,0x7ffd55ac6f44,54653273,0,0x0,8
tick,0x7ffd55ac6f44,54669261,0,0x0,8
tick,0x7ffd55ac6f44,54685287,0,0x0,8
tick,0x7ffd55ac6f44,54700339,0,0x0,8
tick,0x7ffd55ac6f44,54715373,0,0x0,8
tick,0x7ffd55ac6f44,54730314,0,0x0,8
tick,0x7ffd55ac6f44,54746275,0,0x0,8
tick,0x7ffd55ac6f44,54761157,0,0x0,8
tick,0x7ffd55ac6f44,54776097,0,0x0,8
tick,0x7ffd55ac6f44,54792202,0,0x0,8
tick,0x7ffd55ac6f44,54808151,0,0x0,8
tick,0x7ffd55ac6f44,54824093,0,0x0,8
tick,0x7ffd55ac6f44,54840153,0,0x0,8
tick,0x7ffd55ac6f44,54855484,0,0x0,8
tick,0x7ffd55ac6f44,54871473,0,0x0,8
tick,0x7ffd55ac6f44,54886650,0,0x0,8
tick,0x7ffd55ac6f44,54902641,0,0x0,8
tick,0x7ffd55ac6f44,54918854,0,0x0,8
tick,0x7ffd55ac6f44,54934386,0,0x0,8
tick,0x7ffd55ac6f44,54949778,0,0x0,8
tick,0x7ffd55ac6f44,54965280,0,0x0,8
tick,0x7ffd55ac6f44,54980059,0,0x0,8
tick,0x7ffd55ac6f44,54995343,0,0x0,8
tick,0x7ffd55ac6f44,55010261,0,0x0,8
tick,0x7ffd55ac6f44,55025675,0,0x0,8
tick,0x7ffd55ac6f44,55041385,0,0x0,8
tick,0x7ffd55ac6f44,55056278,0,0x0,8
tick,0x7ffd55ac6f44,55071683,0,0x0,8
tick,0x7ffd55ac6f44,55087389,0,0x0,8
tick,0x7ffd55ac6f44,55103826,0,0x0,8
tick,0x7ffd55ac6f44,55119286,0,0x0,8
tick,0x7ffd55ac6f44,55134471,0,0x0,8
tick,0x7ffd55ac6f44,55149861,0,0x0,8
tick,0x7ffd55ac6f44,55165660,0,0x0,8
tick,0x7ffd55ac6f44,55180584,0,0x0,8
tick,0x7ffd55ac6f44,55195453,0,0x0,8
tick,0x7ffd55ac6f44,55210721,0,0x0,8
tick,0x7ffd55ac6f44,55225824,0,0x0,8
tick,0x7ffd55ac6f44,55241317,0,0x0,8
tick,0x7ffd55ac6f44,55255880,0,0x0,8
tick,0x7ffd55ac6f44,55271260,0,0x0,8
tick,0x7ffd55ac6f44,55286177,0,0x0,8
tick,0x7ffd55ac6f44,55302221,0,0x0,8
tick,0x7ffd55ac6f44,55318302,0,0x0,8
tick,0x7ffd55ac6f44,55333372,0,0x0,8
tick,0x7ffd55ac6f44,55349472,0,0x0,8
tick,0x7ffd55ac6f44,55365231,0,0x0,8
tick,0x7ffd55ac6f44,55380704,0,0x0,8
tick,0x7ffd55ac6f44,55396035,0,0x0,8
tick,0x7ffd55ac6f44,55412187,0,0x0,8
tick,0x7ffd55ac6f44,55427504,0,0x0,8
tick,0x7ffd55ac6f44,55443396,0,0x0,8
tick,0x7ffd55ac6f44,55458950,0,0x0,8
tick,0x7ffd55ac6f44,55474368,0,0x0,8
tick,0x7ffd55ac6f44,55489738,0,0x0,8
tick,0x7ffd55ac6f44,55505333,0,0x0,8
tick,0x7ffd55ac6f44,55521193,0,0x0,8
tick,0x7ffd55ac6f44,55535807,0,0x0,8
tick,0x7ffd55ac6f44,55551302,0,0x0,8
tick,0x7ffd55ac6f44,55567224,0,0x0,8
tick,0x7ffd55ac6f44,55582261,0,0x0,8
tick,0x7ffd55ac6f44,55597383,0,0x0,8
tick,0x7ffd55ac6f44,55611962,0,0x0,8
tick,0x7ffd55ac6f44,55627223,0,0x0,8
tick,0x7ffd55ac6f44,55643419,0,0x0,8
tick,0x7ffd55ac6f44,55659559,0,0x0,8
tick,0x7ffd55ac6f44,55675325,0,0x0,8
tick,0x7ffd55ac6f44,55690705,0,0x0,8
tick,0x7ffd55ac6f44,55706098,0,0x0,8
tick,0x7ffd55ac6f44,55722210,0,0x0,8
tick,0x7ffd55ac6f44,55737065,0,0x0,8
tick,0x7ffd55ac6f44,55752467,0,0x0,8
tick,0x7ffd55ac6f44,55768554,0,0x0,8
tick,0x7ffd55ac6f44,55784525,0,0x0,8
tick,0x7ffd55ac6f44,55799375,0,0x0,8
tick,0x7ffd55ac6f44,55814344,0,0x0,8
tick,0x7ffd55ac6f44,55830369,0,0x0,8
tick,0x7ffd55ac6f44,55845498,0,0x0,8
tick,0x7ffd55ac6f44,55861001,0,0x0,8
tick,0x7ffd55ac6f44,55876407,0,0x0,8
tick,0x7ffd55ac6f44,55891832,0,0x0,8
tick,0x7ffd55ac6f44,55907731,0,0x0,8
tick,0x7ffd55ac6f44,55922560,0,0x0,8
tick,0x7ffd55ac6f44,55937959,0,0x0,8
tick,0x7ffd55ac6f44,55953476,0,0x0,8
tick,0x7ffd55ac6f44,55968620,0,0x0,8
tick,0x7ffd55ac6f44,55984425,0,0x0,8
tick,0x7ffd55ac6f44,56000432,0,0x0,8
tick,0x7ffd55ac6f44,56015665,0,0x0,8
tick,0x7ffd55ac6f44,56031375,0,0x0,8
tick,0x7ffd55ac6f44,56047644,0,0x0,8
tick,0x7ffd55ac6f44,56063555,0,0x0,8
tick,0x7ffd55ac6f44,56079146,0,0x0,8
tick,0x7ffd55ac6f44,56095036,0,0x0,8
tick,0x7ffd55ac6f44,56110662,0,0x0,8
tick,0x7ffd55ac6f44,56126232,0,0x0,8
tick,0x7ffd55ac6f44,56141481,0,0x0,8
tick,0x7ffd55ac6f44,56157173,0,0x0,8
tick,0x7ffd55ac6f44,56172869,0,0x0,8
tick,0x7ffd55ac6f44,56188577,0,0x0,8
tick,0x7ffd55ac6f44,56204867,0,0x0,8
tick,0x7ffd55ac6f44,56220023,0,0x0,8
tick,0x7ffd55ac6f44,56235658,0,0x0,8
tick,0x7ffd55ac6f44,56251308,0,0x0,8
tick,0x7ffd55ac6f44,56266402,0,0x0,8
tick,0x7ffd55ac6f44,56282262,0,0x0,8
tick,0x7ffd55ac6f44,56297622,0,0x0,8
tick,0x7ffd55ac6f44,56313294,0,0x0,8
tick,0x7ffd55ac6f44,56329073,0,0x0,8
tick,0x7ffd55ac6f44,56344937,0,0x0,8
tick,0x7ffd55ac6f44,56360183,0,0x0,8
tick,0x7ffd55ac6f44,56375984,0,0x0,8
tick,0x7ffd55ac6f44,56391533,0,0x0,8
tick,0x7ffd55ac6f44,56407470,0,0x0,8
tick,0x7ffd55ac6f44,56423593,0,0x0,8
tick,0x7ffd55ac6f44,56438838,0,0x0,8
tick,0x7ffd55ac6f44,56454348,0,0x0,8
tick,0x7ffd55ac6f44,56469442,0,0x0,8
tick,0x7ffd55ac6f44,56485223,0,0x0,8
tick,0x7ffd55ac6f44,56500649,0,0x0,8
tick,0x7ffd55ac6f44,56515235,0,0x0,8
tick,0x7ffd55ac6f44,56530619,0,0x0,8
tick,0x7ffd55ac6f44,56546172,0,0x0,8
tick,0x7ffd55ac6f44,56561297,0,0x0,8
tick,0x7ffd55ac6f44,56576341,0,0x0,8
tick,0x7ffd55ac6f44,56592151,0,0x0,8
tick,0x7ffd55ac6f44,56607132,0,0x0,8
tick,0x7ffd55ac6f44,56623436,0,0x0,8
tick,0x7ffd55ac6f44,56638599,0,0x0,8
tick,0x7ffd55ac6f44,56654432,0,0x0,8
tick,0x7ffd55ac6f44,56670236,0,0x0,8
tick,0x7ffd55ac6f44,56685625,0,0x0,8
tick,0x7ffd55ac6f44,56701685,0,0x0,8
tick,0x7ffd55ac6f44,56717002,0,0x0,8
tick,0x7ffd55ac6f44,56733110,0,0x0,8
tick,0x7ffd55ac6f44,56749098,0,0x0,8
tick,0x7ffd55ac6f44,56764159,0,0x0,8
tick,0x7ffd55ac6f44,56779822,0,0x0,8
tick,0x7ffd55ac6f44,56794794,0,0x0,8
tick,0x7ffd55ac6f44,56810461,0,0x0,8
tick,0x7ffd55ac6f44,56825857,0,0x0,8
tick,0x7ffd55ac6f44,56841153,0,0x0,8
tick,0x7ffd55ac6f44,56857160,0,0x0,8
tick,0x7ffd55ac6f44,56873481,0,0x0,8
tick,0x7ffd55ac6f44,56889172,0,0x0,8
tick,0x7ffd55ac6f44,56904933,0,0x0,8
tick,0x7ffd55ac6f44,56920246,0,0x0,8
tick,0x7ffd55ac6f44,56935441,0,0x0,8
tick,0x7ffd55ac6f44,56951533,0,0x0,8
tick,0x7ffd55ac6f44,56966192,0,0x0,8
tick,0x7ffd55ac6f44,56981795,0,0x0,8
tick,0x7ffd55ac6f44,56998020,0,0x0,8
tick,0x7ffd55ac6f44,57013870,0,0x0,8
tick,0x7ffd55ac6f44,57029686,0,0x0,8
tick,0x7ffd55ac6f44,57045270,0,0x0,8
tick,0x7ffd55ac6f44,57060251,0,0x0,8
tick,0x7ffd55ac6f44,57075163,0,0x0,8
tick,0x7ffd55ac6f44,57090842,0,0x0,8
tick,0x7ffd55ac6f44,57106098,0,0x0,8
tick,0x7ffd55ac6f44,57122287,0,0x0,8
tick,0x7ffd55ac6f44,57138563,0,0x0,8
tick,0x7ffd55ac6f44,57154415,0,0x0,8
tick,0x7ffd55ac6f44,57170192,0,0x0,8
tick,0x7ffd55ac6f44,57186179,0,0x0,8
tick,0x7ffd55ac6f44,57201470,0,0x0,8
tick,0x7ffd55ac6f44,57216543,0,0x0,8
tick,0x7ffd55ac6f44,57232163,0,0x0,8
tick,0x7ffd55ac6f44,57247036,0,0x0,8
tick,0x7ffd55ac6f44,57262206,0,0x0,8
tick,0x7ffd55ac6f44,57277707,0,0x0,8
tick,0x7ffd55ac6f44,57293818,0,0x0,8
tick,0x7ffd55ac6f44,57309026,0,0x0,8
tick,0x7ffd55ac6f44,57324730,0,0x0,8
tick,0x7ffd55ac6f44,57341039,0,0x0,8
tick,0x7ffd55ac6f44,57356210,0,0x0,8
tick,0x7ffd55ac6f44,57371551,0,0x0,8
tick,0x7ffd55ac6f44,57386825,0,0x0,8
tick,0x7ffd55ac6f44,57402452,0,0x0,8
tick,0x7ffd55ac6f44,57418497,0,0x0,8
tick,0x7ffd55ac6f44,57434107,0,0x0,8
tick,0x7ffd55ac6f44,57449691,0,0x0,8
tick,0x7ffd55ac6f44,57465414,0,0x0,8
tick,0x7ffd55ac6f44,57480644,0,0x0,8
tick,0x7ffd55ac6f44,57495854,0,0x0,8
tick,0x7ffd55ac6f44,57511188,0,0x0,8
tick,0x7ffd55ac6f44,57526112,0,0x0,8
tick,0x7ffd55ac6f44,57541205,0,0x0,8
tick,0x7ffd55ac6f44,57556276,0,0x0,8
tick,0x7ffd55ac6f44,57572251,0,0x0,8
tick,0x7ffd55ac6f44,57588147,0,0x0,8
tick,0x7ffd55ac6f44,57604002,0,0x0,8
tick,0x7ffd55ac6f44,57619345,0,0x0,8
tick,0x7ffd55ac6f44,57634973,0,0x0,8
tick,0x7ffd55ac6f44,57650433,0,0x0,8
tick,0x7ffd55ac6f44,57666196,0,0x0,8
tick,0x7ffd55ac6f44,57681577,0,0x0,8
tick,0x7ffd55ac6f44,57697483,0,0x0,8
tick,0x7ffd55ac6f44,57713486,0,0x0,8
tick,0x7ffd55ac6f44,57729368,0,0x0,8
tick,0x7ffd55ac6f44,57745024,0,0x0,8
tick,0x7ffd55ac6f44,57760349,0,0x0,8
tick,0x7ffd55ac6f44,57776199,0,0x0,8
tick,0x7ffd55ac6f44,57791817,0,0x0,8
tick,0x7ffd55ac6f44,57807160,0,0x0,8
tick,0x7ffd55ac6f44,57821942,0,0x0,8
tick,0x7ffd55ac6f44,57837498,0,0x0,8
tick,0x7ffd55ac6f44,57853537,0,0x0,8
tick,0x7ffd55ac6f44,57868598,0,0x0,8
tick,0x7ffd55ac6f44,57884164,0,0x0,8
tick,0x7ffd55ac6f44,57899373,0,0x0,8
tick,0x7ffd55ac6f44,57915144,0,0x0,8
tick,0x7ffd55ac6f44,57931386,0,0x0,8
tick,0x7ffd55ac6f44,57946318,0,0x0,8
tick,0x7ffd55ac6f44,57961870,0,0x0,8
tick,0x7ffd55ac6f44,57977438,0,0x0,8
tick,0x7ffd55ac6f44,57993551,0,0x0,8
tick,0x7ffd55ac6f44,58009062,0,0x0,8
tick,0x7ffd55ac6f44,58024555,0,0x0,8
tick,0x7ffd55ac6f44,58040369,0,0x0,8
tick,0x7ffd55ac6f44,58055542,0,0x0,8
tick,0x7ffd55ac6f44,58070728,0,0x0,8
tick,0x7ffd55ac6f44,58086441,0,0x0,8
tick,0x7ffd55ac6f44,58102005,0,0x0,8
tick,0x7ffd55ac6f44,58116787,0,0x0,8
tick,0x7ffd55ac6f44,58131741,0,0x0,8
tick,0x7ffd55ac6f44,58147758,0,0x0,8
tick,0x7ffd55ac6f44,58163929,0,0x0,8
tick,0x7ffd55ac6f44,58179328,0,0x0,8
tick,0x7ffd55ac6f44,58194680,0,0x0,8
tick,0x7ffd55ac6f44,58210714,0,0x0,8
tick,0x7ffd55ac6f44,58226542,0,0x0,8
tick,0x7ffd55ac6f44,58242185,0,0x0,8
tick,0x7ffd55ac6f44,58257797,0,0x0,8
tick,0x7ffd55ac6f44,58274057,0,0x0,8
tick,0x7ffd55ac6f44,58288995,0,0x0,8
tick,0x7ffd55ac6f44,58304709,0,0x0,8
tick,0x7ffd55ac6f44,58319637,0,0x0,8
tick,0x7ffd55ac6f44,58334851,0,0x0,8
tick,0x7ffd55ac6f44,58351270,0,0x0,8
tick,0x7ffd55ac6f44,58367427,0,0x0,8
tick,0x7ffd55ac6f44,58382728,0,0x0,8
tick,0x7ffd55ac6f44,58398078,0,0x0,8
tick,0x7ffd55ac6f44,58414267,0,0x0,8
tick,0x7ffd55ac6f44,58430493,0,0x0,8
tick,0x7ffd55ac6f44,58446422,0,0x0,8
tick,0x7ffd55ac6f44,58462406,0,0x0,8
tick,0x7ffd55ac6f44,58477587,0,0x0,8
tick,0x7ffd55ac6f44,58493190,0,0x0,8
tick,0x7ffd55ac6f44,58508918,0,0x0,8
tick,0x7ffd55ac6f44,58523858,0,0x0,8
tick,0x7ffd55ac6f44,58539609,0,0x0,8
tick,0x7ffd55ac6f44,58555223,0,0x0,8
tick,0x7ffd55ac6f44,58571274,0,0x0,8
tick,0x7ffd55ac6f44,58586978,0,0x0,8
tick,0x7ffd55ac6f44,58603457,0,0x0,8
tick,0x7ffd55ac6f44,58619501,0,0x0,8
tick,0x7ffd55ac6f44,58635360,0,0x0,8
tick,0x7ffd55ac6f44,58651166,0,0x0,8
tick,0x7ffd55ac6f44,58667129,0,0x0,8
tick,0x7ffd55ac6f44,58683716,0,0x0,8
tick,0x7ffd55ac6f44,58699933,0,0x0,8
tick,0x7ffd55ac6f44,58715264,0,0x0,8
tick,0x7ffd55ac6f44,58730989,0,0x0,8
tick,0x7ffd55ac6f44,58746275,0,0x0,8
tick,0x7ffd55ac6f44,58762215,0,0x0,8
tick,0x7ffd55ac6f44,58777396,0,0x0,8
tick,0x7ffd55ac6f44,58792519,0,0x0,8
tick,0x7ffd55ac6f44,58808574,0,0x0,8
tick,0x7ffd55ac6f44,58824426,0,0x0,8
tick,0x7ffd55ac6f44,58839194,0,0x0,8
tick,0x7ffd55ac6f44,58854459,0,0x0,8
tick,0x7ffd55ac6f44,58870083,0,0x0,8
tick,0x7ffd55ac6f44,58885622,0,0x0,8
tick,0x7ffd55ac6f44,58901926,0,0x0,8
tick,0x7ffd55ac6f44,58917433,0,0x0,8
tick,0x7ffd55ac6f44,58933456,0,0x0,8
tick,0x7ffd55ac6f44,58949367,0,0x0,8
tick,0x7ffd55ac6f44,58964512,0,0x0,8
tick,0x7ffd55ac6f44,58979366,0,0x0,8
tick,0x7ffd55ac6f44,58994423,0,0x0,8
tick,0x7ffd55ac6f44,59010246,0,0x0,8
tick,0x7ffd55ac6f44,59025962,0,0x0,8
tick,0x7ffd55ac6f44,59042121,0,0x0,8
tick,0x7ffd55ac6f44,59057578,0,0x0,8
tick,0x7ffd55ac6f44,59073385,0,0x0,8
tick,0x7ffd55ac6f44,59088749,0,0x0,8
tick,0x7ffd55ac6f44,59104223,0,0x0,8
tick,0x7ffd55ac6f44,59120282,0,0x0,8
tick,0x7ffd55ac6f44,59135771,0,0x0,8
tick,0x7ffd55ac6f44,59151949,0,0x0,8
tick,0x7ffd55ac6f44,59167662,0,0x0,8
tick,0x7ffd55ac6f44,59183734,0,0x0,8
tick,0x7ffd55ac6f44,59199460,0,0x0,8
tick,0x7ffd55ac6f44,59214607,0,0x0,8
tick,0x7ffd55ac6f44,59230988,0,0x0,8
tick,0x7ffd55ac6f44,59246260,0,0x0,8
tick,0x7ffd55ac6f44,59261191,0,0x0,8
tick,0x7ffd55ac6f44,59276140,0,0x0,8
tick,0x7ffd55ac6f44,59291807,0,0x0,8
tick,0x7ffd55ac6f44,59307358,0,0x0,8
tick,0x7ffd55ac6f44,59323371,0,0x0,8
tick,0x7ffd55ac6f44,59339421,0,0x0,8
tick,0x7ffd55ac6f44,59355722,0,0x0,8
tick,0x7ffd55ac6f44,59371034,0,0x0,8
tick,0x7ffd55ac6f44,59387558,0,0x0,8
tick,0x7ffd55ac6f44,59403587,0,0x0,8
tick,0x7ffd55ac6f44,59419599,0,0x0,8
tick,0x7ffd55ac6f44,59435215,0,0x0,8
tick,0x7ffd55ac6f44,59451029,0,0x0,8
tick,0x7ffd55ac6f44,59466579,0,0x0,8
tick,0x7ffd55ac6f44,59482484,0,0x0,8
tick,0x7ffd55ac6f44,59497864,0,0x0,8
tick,0x7ffd55ac6f44,59513902,0,0x0,8
tick,0x7ffd55ac6f44,59529945,0,0x0,8
tick,0x7ffd55ac6f44,59545320,0,0x0,8
tick,0x7ffd55ac6f44,59560626,0,0x0,8
tick,0x7ffd55ac6f44,59575478,0,0x0,8
tick,0x7ffd55ac6f44,59591466,0,0x0,8
tick,0x7ffd55ac6f44,59606035,0,0x0,8
tick,0x7ffd55ac6f44,59622207,0,0x0,8
tick,0x7ffd55ac6f44,59637505,0,0x0,8
tick,0x7ffd55ac6f44,59652823,0,0x0,8
tick,0x7ffd55ac6f44,59668456,0,0x0,8
tick,0x7ffd55ac6f44,59683559,0,0x0,8
tick,0x7ffd55ac6f44,59699014,0,0x0,8
tick,0x7ffd55ac6f44,59714322,0,0x0,8
tick,0x7ffd55ac6f44,59729901,0,0x0,8
tick,0x7ffd55ac6f44,59745319,0,0x0,8
tick,0x7ffd55ac6f44,59759956,0,0x0,8
tick,0x7ffd55ac6f44,59775335,0,0x0,8
tick,0x7ffd55ac6f44,59790319,0,0x0,8
tick,0x7ffd55ac6f44,59805143,0,0x0,8
tick,0x7ffd55ac6f44,59820717,0,0x0,8
tick,0x7ffd55ac6f44,59836075,0,0x0,8
tick,0x7ffd55ac6f44,59852256,0,0x0,8
tick,0x7ffd55ac6f44,59867570,0,0x0,8
tick,0x7ffd55ac6f44,59883281,0,0x0,8
tick,0x7ffd55ac6f44,59898661,0,0x0,8
tick,0x7ffd55ac6f44,59914275,0,0x0,8
tick,0x7ffd55ac6f44,59929352,0,0x0,8
tick,0x7ffd55ac6f44,59945353,0,0x0,8
tick,0x7ffd55ac6f44,59961351,0,0x0,8
tick,0x7ffd55ac6f44,59976799,0,0x0,8
tick,0x7ffd55ac6f44,59992835,0,0x0,8
tick,0x7ffd55ac6f44,60009140,0,0x0,8
tick,0x7ffd55ac6f44,60025168,0,0x0,8
tick,0x7ffd55ac6f44,60041188,0,0x0,8
tick,0x7ffd55ac6f44,60056255,0,0x0,8
tick,0x7ffd55ac6f44,60071768,0,0x0,8
tick,0x7ffd55ac6f44,60088054,0,0x0,8
tick,0x7ffd55ac6f44,60103483,0,0x0,8
tick,0x7ffd55ac6f44,60118899,0,0x0,8
tick,0x7ffd55ac6f44,60134508,0,0x0,8
tick,0x7ffd55ac6f44,60150773,0,0x0,8
tick,0x7ffd55ac6f44,60165452,0,0x0,8
tick,0x7ffd55ac6f44,60180898,0,0x0,8
tick,0x7ffd55ac6f44,60197076,0,0x0,8
tick,0x7ffd55ac6f44,60212242,0,0x0,8
tick,0x7ffd55ac6f44,60227697,0,0x0,8
tick,0x7ffd55ac6f44,60243540,0,0x0,8
tick,0x7ffd55ac6f44,60259262,0,0x0,8
tick,0x7ffd55ac6f44,60274434,0,0x0,8
tick,0x7ffd55ac6f44,60290253,0,0x0,8
tick,0x7ffd55ac6f44,60306112,0,0x0,8
tick,0x7ffd55ac6f44,60321585,0,0x0,8
tick,0x7ffd55ac6f44,60337386,0,0x0,8
tick,0x7ffd55ac6f44,60352644,0,0x0,8
tick,0x7ffd55ac6f44,60367913,0,0x0,8
tick,0x7ffd55ac6f44,60383480,0,0x0,8
tick,0x7ffd55ac6f44,60398771,0,0x0,8
tick,0x7ffd55ac6f44,60413858,0,0x0,8
tick,0x7ffd55ac6f44,60429629,0,0x0,8
tick,0x7ffd55ac6f44,60444759,0,0x0,8
tick,0x7ffd55ac6f44,60460658,0,0x0,8
tick,0x7ffd55ac6f44,60476185,0,0x0,8
tick,0x7ffd55ac6f44,60492572,0,0x0,8
tick,0x7ffd55ac6f44,60507832,0,0x0,8
tick,0x7ffd55ac6f44,60523333,0,0x0,8
tick,0x7ffd55ac6f44,60538628,0,0x0,8
tick,0x7ffd55ac6f44,60553867,0,0x0,8
tick,0x7ffd55ac6f44,60569499,0,0x0,8
tick,0x7ffd55ac6f44,60584470,0,0x0,8
tick,0x7ffd55ac6f44,60600106,0,0x0,8
tick,0x7ffd55ac6f44,60615875,0,0x0,8
tick,0x7ffd55ac6f44,60631572,0,0x0,8
tick,0x7ffd55ac6f44,60647724,0,0x0,8
tick,0x7ffd55ac6f44,60663295,0,0x0,8
tick,0x7ffd55ac6f44,60678417,0,0x0,8
tick,0x7ffd55ac6f44,60693668,0,0x0,8
tick,0x7ffd55ac6f44,60708724,0,0x0,8
tick,0x7ffd55ac6f44,60724162,0,0x0,8
tick,0x7ffd55ac6f44,60740266,0,0x0,8
tick,0x7ffd55ac6f44,60756262,0,0x0,8
tick,0x7ffd55ac6f44,60772076,0,0x0,8
tick,0x7ffd55ac6f44,60787723,0,0x0,8
tick,0x7ffd55ac6f44,60803081,0,0x0,8
tick,0x7ffd55ac6f44,60818697,0,0x0,8
tick,0x7ffd55ac6f44,60833847,0,0x0,8
tick,0x7ffd55ac6f44,60849166,0,0x0,8
tick,0x7ffd55ac6f44,60864493,0,0x0,8
tick,0x7ffd55ac6f44,60880512,0,0x0,8
tick,0x7ffd55ac6f44,60895562,0,0x0,8
tick,0x7ffd55ac6f44,60911333,0,0x0,8
tick,0x7ffd55ac6f44,60927285,0,0x0,8
tick,0x7ffd55ac6f44,60943342,0,0x0,8
tick,0x7ffd55ac6f44,60959323,0,0x0,8
tick,0x7ffd55ac6f44,60974708,0,0x0,8
tick,0x7ffd55ac6f44,60990038,0,0x0,8
tick,0x7ffd55ac6f44,61005310,0,0x0,8
tick,0x7ffd55ac6f44,61021343,0,0x0,8
tick,0x7ffd55ac6f44,61036299,0,0x0,8
tick,0x7ffd55ac6f44,61051737,0,0x0,8
tick,0x7ffd55ac6f44,61067653,0,0x0,8
tick,0x7ffd55ac6f44,61083006,0,0x0,8
tick,0x7ffd55ac6f44,61099379,0,0x0,8
tick,0x7ffd55ac6f44,61114492,0,0x0,8
tick,0x7ffd55ac6f44,61129727,0,0x0,8
tick,0x7ffd55ac6f44,61144964,0,0x0,8
tick,0x7ffd55ac6f44,61160392,0,0x0,8
tick,0x7ffd55ac6f44,61175601,0,0x0,8
tick,0x7ffd55ac6f44,61192002,0,0x0,8
tick,0x7ffd55ac6f44,61208184,0,0x0,8
tick,0x7ffd55ac6f44,61223424,0,0x0,8
tick,0x7ffd55ac6f44,61239268,0,0x0,8
tick,0x7ffd55ac6f44,61254834,0,0x0,8
tick,0x7ffd55ac6f44,61270141,0,0x0,8
tick,0x7ffd55ac6f44,61285377,0,0x0,8
tick,0x7ffd55ac6f44,61301413,0,0x0,8
tick,0x7ffd55ac6f44,61317267,0,0x0,8
tick,0x7ffd55ac6f44,61333330,0,0x0,8
tick,0x7ffd55ac6f44,61348039,0,0x0,8
tick,0x7ffd55ac6f44,61362741,0,0x0,8
tick,0x7ffd55ac6f44,61378846,0,0x0,8
tick,0x7ffd55ac6f44,61395065,0,0x0,8
tick,0x7ffd55ac6f44,61410214,0,0x0,8
tick,0x7ffd55ac6f44,61426103,0,0x0,8
tick,0x7ffd55ac6f44,61441736,0,0x0,8
tick,0x7ffd55ac6f44,61457020,0,0x0,8
tick,0x7ffd55ac6f44,61472157,0,0x0,8
tick,0x7ffd55ac6f44,61487671,0,0x0,8
tick,0x7ffd55ac6f44,61503377,0,0x0,8
tick,0x7ffd55ac6f44,61519197,0,0x0,8
tick,0x7ffd55ac6f44,61535124,0,0x0,8
tick,0x7ffd55ac6f44,61550601,0,0x0,8
tick,0x7ffd55ac6f44,61565913,0,0x0,8
tick,0x7ffd55ac6f44,61581436,0,0x0,8
tick,0x7ffd55ac6f44,61596075,0,0x0,8
tick,0x7ffd55ac6f44,61611769,0,0x0,8
tick,0x7ffd55ac6f44,61626838,0,0x0,8
tick,0x7ffd55ac6f44,61642770,0,0x0,8
tick,0x7ffd55ac6f44,61658165,0,0x0,8
tick,0x7ffd55ac6f44,61673033,0,0x0,8
tick,0x7ffd55ac6f44,61688247,0,0x0,8
tick,0x7ffd55ac6f44,61703456,0,0x0,8
tick,0x7ffd55ac6f44,61718151,0,0x0,8
tick,0x7ffd55ac6f44,61733041,0,0x0,8
tick,0x7ffd55ac6f44,61748611,0,0x0,8
tick,0x7ffd55ac6f44,61764367,0,0x0,8
tick,0x7ffd55ac6f44,61780245,0,0x0,8
tick,0x7ffd55ac6f44,61796211,0,0x0,8
tick,0x7ffd55ac6f44,61812129,0,0x0,8
tick,0x7ffd55ac6f44,61827237,0,0x0,8
tick,0x7ffd55ac6f44,61843802,0,0x0,8
tick,0x7ffd55ac6f44,61859432,0,0x0,8
tick,0x7ffd55ac6f44,61874873,0,0x0,8
tick,0x7ffd55ac6f44,61890712,0,0x0,8
tick,0x7ffd55ac6f44,61906129,0,0x0,8
tick,0x7ffd55ac6f44,61922271,0,0x0,8
tick,0x7ffd55ac6f44,61937992,0,0x0,8
tick,0x7ffd55ac6f44,61952841,0,0x0,8
tick,0x7ffd55ac6f44,61968098,0,0x0,8
tick,0x7ffd55ac6f44,61983294,0,0x0,8
tick,0x7ffd55ac6f44,61997950,0,0x0,8
tick,0x7ffd55ac6f44,62013353,0,0x0,8
tick,0x7ffd55ac6f44,62029453,0,0x0,8
tick,0x7ffd55ac6f44,62044670,0,0x0,8
tick,0x7ffd55ac6f44,62060231,0,0x0,8
tick,0x7ffd55ac6f44,62075066,0,0x0,8
tick,0x7ffd55ac6f44,62090652,0,0x0,8
tick,0x7ffd55ac6f44,62105796,0,0x0,8
tick,0x7ffd55ac6f44,62121602,0,0x0,8
tick,0x7ffd55ac6f44,62136597,0,0x0,8
tick,0x7ffd55ac6f44,62151789,0,0x0,8
tick,0x7ffd55ac6f44,62166691,0,0x0,8
tick,0x7ffd55ac6f44,62182117,0,0x0,8
tick,0x7ffd55ac6f44,62197480,0,0x0,8
tick,0x7ffd55ac6f44,62212086,0,0x0,8
tick,0x7ffd55ac6f44,62227507,0,0x0,8
tick,0x7ffd55ac6f44,62243148,0,0x0,8
tick,0x7ffd55ac6f44,62258464,0,0x0,8
tick,0x7ffd55ac6f44,62273196,0,0x0,8
tick,0x7ffd55ac6f44,62288254,0,0x0,8
tick,0x7ffd55ac6f44,62303709,0,0x0,8
tick,0x7ffd55ac6f44,62319210,0,0x0,8
tick,0x7ffd55ac6f44,62334394,0,0x0,8
tick,0x7ffd55ac6f44,62349243,0,0x0,8
tick,0x7ffd55ac6f44,62364576,0,0x0,8
tick,0x7ffd55ac6f44,62380062,0,0x0,8
tick,0x7ffd55ac6f44,62395840,0,0x0,8
tick,0x7ffd55ac6f44,62411602,0,0x0,8
tick,0x7ffd55ac6f44,62427492,0,0x0,8
tick,0x7ffd55ac6f44,62443501,0,0x0,8
tick,0x7ffd55ac6f44,62459350,0,0x0,8
tick,0x7ffd55ac6f44,62474449,0,0x0,8
tick,0x7ffd55ac6f44,62490772,0,0x0,8
tick,0x7ffd55ac6f44,62506185,0,0x0,8
tick,0x7ffd55ac6f44,62522371,0,0x0,8
tick,0x7ffd55ac6f44,62537675,0,0x0,8
tick,0x7ffd55ac6f44,62553398,0,0x0,8
tick,0x7ffd55ac6f44,62569059,0,0x0,8
tick,0x7ffd55ac6f44,62584664,0,0x0,8
tick,0x7ffd55ac6f44,62600652,0,0x0,8
tick,0x7ffd55ac6f44,62615787,0,0x0,8
tick,0x7ffd55ac6f44,62631844,0,0x0,8
tick,0x7ffd55ac6f44,62647634,0,0x0,8
tick,0x7ffd55ac6f44,62663734,0,0x0,8
tick,0x7ffd55ac6f44,62679801,0,0x0,8
tick,0x7ffd55ac6f44,62694610,0,0x0,8
tick,0x7ffd55ac6f44,62710074,0,0x0,8
tick,0x7ffd55ac6f44,62725425,0,0x0,8
tick,0x7ffd55ac6f44,62740570,0,0x0,8
tick,0x7ffd55ac6f44,62755951,0,0x0,8
tick,0x7ffd55ac6f44,62772007,0,0x0,8
tick,0x7ffd55ac6f44,62787141,0,0x0,8
tick,0x7ffd55ac6f44,62803021,0,0x0,8
tick,0x7ffd55ac6f44,62818192,0,0x0,8
tick,0x7ffd55ac6f44,62833578,0,0x0,8
tick,0x7ffd55ac6f44,62849305,0,0x0,8
tick,0x7ffd55ac6f44,62864600,0,0x0,8
tick,0x7ffd55ac6f44,62880077,0,0x0,8
tick,0x7ffd55ac6f44,62896078,0,0x0,8
tick,0x7ffd55ac6f44,62911512,0,0x0,8
tick,0x7ffd55ac6f44,62927242,0,0x0,8
tick,0x7ffd55ac6f44,62943128,0,0x0,8
tick,0x7ffd55ac6f44,62957944,0,0x0,8
tick,0x7ffd55ac6f44,62973721,0,0x0,8
tick,0x7ffd55ac6f44,62990223,0,0x0,8
tick,0x7ffd55ac6f44,63005320,0,0x0,8
tick,0x7ffd55ac6f44,63020062,0,0x0,8
tick,0x7ffd55ac6f44,63034986,0,0x0,8
tick,0x7ffd55ac6f44,63050674,0,0x0,8
tick,0x7ffd55ac6f44,63066398,0,0x0,8
tick,0x7ffd55ac6f44,63082250,0,0x0,8
tick,0x7ffd55ac6f44,63097705,0,0x0,8
tick,0x7ffd55ac6f44,63113280,0,0x0,8
tick,0x7ffd55ac6f44,63127516,0,0x0,8
tick,0x7ffd55ac6f44,63142313,0,0x0,8
tick,0x7ffd55ac6f44,63158170,0,0x0,8
tick,0x7ffd55ac6f44,63173427,0,0x0,8
tick,0x7ffd55ac6f44,63188773,0,0x0,8
tick,0x7ffd55ac6f44,63204764,0,0x0,8
tick,0x7ffd55ac6f44,63220321,0,0x0,8
tick,0x7ffd55ac6f44,63236047,0,0x0,8
tick,0x7ffd55ac6f44,63252294,0,0x0,8
tick,0x7ffd55ac6f44,63267497,0,0x0,8
tick,0x7ffd55ac6f44,63282628,0,0x0,8
tick,0x7ffd55ac6f44,63298588,0,0x0,8
tick,0x7ffd55ac6f44,63313663,0,0x0,8
tick,0x7ffd55ac6f44,63329568,0,0x0,8
tick,0x7ffd55ac6f44,63344318,0,0x0,8
tick,0x7ffd55ac6f44,63359339,0,0x0,8
tick,0x7ffd55ac6f44,63374664,0,0x0,8
tick,0x7ffd55ac6f44,63390428,0,0x0,8
tick,0x7ffd55ac6f44,63405752,0,0x0,8
tick,0x7ffd55ac6f44,63421316,0,0x0,8
tick,0x7ffd55ac6f44,63436389,0,0x0,8
tick,0x7ffd55ac6f44,63451537,0,0x0,8
tick,0x7ffd55ac6f44,63467214,0,0x0,8
tick,0x7ffd55ac6f44,63482721,0,0x0,8
tick,0x7ffd55ac6f44,63498395,0,0x0,8
tick,0x7ffd55ac6f44,63514181,0,0x0,8
tick,0x7ffd55ac6f44,63529633,0,0x0,8
tick,0x7ffd55ac6f44,63544715,0,0x0,8
tick,0x7ffd55ac6f44,63559757,0,0x0,8
tick,0x7ffd55ac6f44,63575202,0,0x0,8
tick,0x7ffd55ac6f44,63590871,0,0x0,8
tick,0x7ffd55ac6f44,63606533,0,0x0,8
tick,0x7ffd55ac6f44,63622156,0,0x0,8
tick,0x7ffd55ac6f44,63637743,0,0x0,8
tick,0x7ffd55ac6f44,63653883,0,0x0,8
tick,0x7ffd55ac6f44,63669582,0,0x0,8
tick,0x7ffd55ac6f44,63685758,0,0x0,8
tick,0x7ffd55ac6f44,63701210,0,0x0,8
tick,0x7ffd55ac6f44,63715828,0,0x0,8
tick,0x7ffd55ac6f44,63731154,0,0x0,8
tick,0x7ffd55ac6f44,63747523,0,0x0,8
tick,0x7ffd55ac6f44,63763141,0,0x0,8
tick,0x7ffd55ac6f44,63778495,0,0x0,8
tick,0x7ffd55ac6f44,63794426,0,0x0,8
tick,0x7ffd55ac6f44,63810609,0,0x0,8
tick,0x7ffd55ac6f44,63826250,0,0x0,8
tick,0x7ffd55ac6f44,63841486,0,0x0,8
tick,0x7ffd55ac6f44,63857122,0,0x0,8
tick,0x7ffd55ac6f44,63872999,0,0x0,8
tick,0x7ffd55ac6f44,63888001,0,0x0,8
tick,0x7ffd55ac6f44,63903214,0,0x0,8
tick,0x7ffd55ac6f44,63918580,0,0x0,8
tick,0x7ffd55ac6f44,63934310,0,0x0,8
tick,0x7ffd55ac6f44,63949491,0,0x0,8
tick,0x7ffd55ac6f44,63965540,0,0x0,8
tick,0x7ffd55ac6f44,63980549,0,0x0,8
tick,0x7ffd55ac6f44,63996111,0,0x0,8
tick,0x7ffd55ac6f44,64011821,0,0x0,8
tick,0x7ffd55ac6f44,64027210,0,0x0,8
tick,0x7ffd55ac6f44,64043163,0,0x0,8
tick,0x7ffd55ac6f44,64058723,0,0x0,8
tick,0x7ffd55ac6f44,64074564,0,0x0,8
tick,0x7ffd55ac6f44,64090428,0,0x0,8
tick,0x7ffd55ac6f44,64105381,0,0x0,8
tick,0x7ffd55ac6f44,64120703,0,0x0,8
tick,0x7ffd55ac6f44,64136589,0,0x0,8
tick,0x7ffd55ac6f44,64152491,0,0x0,8
tick,0x7ffd55ac6f44,64167864,0,0x0,8
tick,0x7ffd55ac6f44,64184211,0,0x0,8
tick,0x7ffd55ac6f44,64199915,0,0x0,8
tick,0x7ffd55ac6f44,64214359,0,0x0,8
tick,0x7ffd55ac6f44,64229422,0,0x0,8
tick,0x7ffd55ac6f44,64245502,0,0x0,8
tick,0x7ffd55ac6f44,64261647,0,0x0,8
tick,0x7ffd55ac6f44,64276626,0,0x0,8
tick,0x7ffd55ac6f44,64292102,0,0x0,8
tick,0x7ffd55ac6f44,64307718,0,0x0,8
tick,0x7ffd55ac6f44,64323942,0,0x0,8
tick,0x7ffd55ac6f44,64338658,0,0x0,8
tick,0x7ffd55ac6f44,64354336,0,0x0,8
tick,0x7ffd55ac6f44,64370320,0,0x0,8
tick,0x7ffd55ac6f44,64386004,0,0x0,8
tick,0x7ffd55ac6f44,64401783,0,0x0,8
tick,0x7ffd55ac6f44,64417749,0,0x0,8
tick,0x7ffd55ac6f44,64433183,0,0x0,8
tick,0x7ffd55ac6f44,64448668,0,0x0,8
tick,0x7ffd55ac6f44,64464936,0,0x0,8
tick,0x7ffd55ac6f44,64480013,0,0x0,8
tick,0x7ffd55ac6f44,64495301,0,0x0,8
tick,0x7ffd55ac6f44,64510319,0,0x0,8
tick,0x7ffd55ac6f44,64525199,0,0x0,8
tick,0x7ffd55ac6f44,64540595,0,0x0,8
tick,0x7ffd55ac6f44,64555991,0,0x0,8
tick,0x7ffd55ac6f44,64571566,0,0x0,8
tick,0x7ffd55ac6f44,64587342,0,0x0,8
tick,0x7ffd55ac6f44,64602981,0,0x0,8
tick,0x7ffd55ac6f44,64618625,0,0x0,8
tick,0x7ffd55ac6f44,64634486,0,0x0,8
tick,0x7ffd55ac6f44,64650863,0,0x0,8
tick,0x7ffd55ac6f44,64666675,0,0x0,8
tick,0x7ffd55ac6f44,64682317,0,0x0,8
tick,0x7ffd55ac6f44,64698426,0,0x0,8
tick,0x7ffd55ac6f44,64713639,0,0x0,8
tick,0x7ffd55ac6f44,64729895,0,0x0,8
tick,0x7ffd55ac6f44,64745261,0,0x0,8
tick,0x7ffd55ac6f44,64760588,0,0x0,8
tick,0x7ffd55ac6f44,64775577,0,0x0,8
tick,0x7ffd55ac6f44,64791142,0,0x0,8
tick,0x7ffd55ac6f44,64806561,0,0x0,8
tick,0x7ffd55ac6f44,64822267,0,0x0,8
tick,0x7ffd55ac6f44,64838284,0,0x0,8
tick,0x7ffd55ac6f44,64853543,0,0x0,8
tick,0x7ffd55ac6f44,64868669,0,0x0,8
tick,0x7ffd55ac6f44,64883885,0,0x0,8
tick,0x7ffd55ac6f44,64898713,0,0x0,8
tick,0x7ffd55ac6f44,64913858,0,0x0,8
tick,0x7ffd55ac6f44,64929698,0,0x0,8
tick,0x7ffd55ac6f44,64945771,0,0x0,8
tick,0x7ffd55ac6f44,64961558,0,0x0,8
tick,0x7ffd55ac6f44,64977559,0,0x0,8
tick,0x7ffd55ac6f44,64993582,0,0x0,8
tick,0x7ffd55ac6f44,65009550,0,0x0,8
tick,0x7ffd55ac6f44,65025447,0,0x0,8
tick,0x7ffd55ac6f44,65040323,0,0x0,8
tick,0x7ffd55ac6f44,65055599,0,0x0,8
tick,0x7ffd55ac6f44,65071689,0,0x0,8
tick,0x7ffd55ac6f44,65087901,0,0x0,8
tick,0x7ffd55ac6f44,65103661,0,0x0,8
tick,0x7ffd55ac6f44,65119213,0,0x0,8
tick,0x7ffd55ac6f44,65135173,0,0x0,8
tick,0x7ffd55ac6f44,65151300,0,0x0,8
tick,0x7ffd55ac6f44,65167257,0,0x0,8
tick,0x7ffd55ac6f44,65183202,0,0x0,8
tick,0x7ffd55ac6f44,65199241,0,0x0,8
tick,0x7ffd55ac6f44,65215342,0,0x0,8
tick,0x7ffd55ac6f44,65231307,0,0x0,8
tick,0x7ffd55ac6f44,65247298,0,0x0,8
tick,0x7ffd55ac6f44,65262338,0,0x0,8
tick,0x7ffd55ac6f44,65278223,0,0x0,8
tick,0x7ffd55ac6f44,65293272,0,0x0,8
tick,0x7ffd55ac6f44,65309243,0,0x0,8
tick,0x7ffd55ac6f44,65324783,0,0x0,8
tick,0x7ffd55ac6f44,65340794,0,0x0,8
tick,0x7ffd55ac6f44,65356822,0,0x0,8
tick,0x7ffd55ac6f44,65372301,0,0x0,8
tick,0x7ffd55ac6f44,65386984,0,0x0,8
tick,0x7ffd55ac6f44,65402555,0,0x0,8
tick,0x7ffd55ac6f44,65418003,0,0x0,8
tick,0x7ffd55ac6f44,65433472,0,0x0,8
tick,0x7ffd55ac6f44,65449229,0,0x0,8
tick,0x7ffd55ac6f44,65464596,0,0x0,8
tick,0x7ffd55ac6f44,65480401,0,0x0,8
tick,0x7ffd55ac6f44,65495817,0,0x0,8
tick,0x7ffd55ac6f44,65511399,0,0x0,8
tick,0x7ffd55ac6f44,65527290,0,0x0,8
tick,0x7ffd55ac6f44,65543579,0,0x0,8
tick,0x7ffd55ac6f44,65558553,0,0x0,8
tick,0x7ffd55ac6f44,65573982,0,0x0,8
tick,0x7ffd55ac6f44,65589432,0,0x0,8
tick,0x7ffd55ac6f44,65605128,0,0x0,8
tick,0x7ffd55ac6f44,65620686,0,0x0,8
tick,0x7ffd55ac6f44,65636092,0,0x0,8
tick,0x7ffd55ac6f44,65651456,0,0x0,8
tick,0x7ffd55ac6f44,65667353,0,0x0,8
tick,0x7ffd55ac6f44,65683232,0,0x0,8
tick,0x7ffd55ac6f44,65698774,0,0x0,8
tick,0x7ffd55ac6f44,65714776,0,0x0,8
tick,0x7ffd55ac6f44,65730878,0,0x0,8
tick,0x7ffd55ac6f44,65746464,0,0x0,8
tick,0x7ffd55ac6f44,65762226,0,0x0,8
tick,0x7ffd55ac6f44,65777698,0,0x0,8
tick,0x7ffd55ac6f44,65793394,0,0x0,8
tick,0x7ffd55ac6f44,65808285,0,0x0,8
tick,0x7ffd55ac6f44,65823607,0,0x0,8
tick,0x7ffd55ac6f44,65839662,0,0x0,8
tick,0x7ffd55ac6f44,65854984,0,0x0,8
tick,0x7ffd55ac6f44,65871232,0,0x0,8
tick,0x7ffd55ac6f44,65886154,0,0x0,8
tick,0x7ffd55ac6f44,65901398,0,0x0,8
tick,0x7ffd55ac6f44,65917100,0,0x0,8
tick,0x7ffd55ac6f44,65933288,0,0x0,8
tick,0x7ffd55ac6f44,65948716,0,0x0,8
tick,0x7ffd55ac6f44,65964582,0,0x0,8
tick,0x7ffd55ac6f44,65980377,0,0x0,8
tick,0x7ffd55ac6f44,65996147,0,0x0,8
tick,0x7ffd55ac6f44,66012070,0,0x0,8
tick,0x7ffd55ac6f44,66027623,0,0x0,8
tick,0x7ffd55ac6f44,66043494,0,0x0,8
tick,0x7ffd55ac6f44,66059549,0,0x0,8
tick,0x7ffd55ac6f44,66074753,0,0x0,8
tick,0x7ffd55ac6f44,66090823,0,0x0,8
tick,0x7ffd55ac6f44,66106051,0,0x0,8
tick,0x7ffd55ac6f44,66122202,0,0x0,8
tick,0x7ffd55ac6f44,66137339,0,0x0,8
tick,0x7ffd55ac6f44,66153955,0,0x0,8
tick,0x7ffd55ac6f44,66168961,0,0x0,8
tick,0x7ffd55ac6f44,66184840,0,0x0,8
tick,0x7ffd55ac6f44,66200301,0,0x0,8
tick,0x7ffd55ac6f44,66215283,0,0x0,8
tick,0x7ffd55ac6f44,66230644,0,0x0,8
tick,0x7ffd55ac6f44,66246865,0,0x0,8
tick,0x7ffd55ac6f44,66262078,0,0x0,8
tick,0x7ffd55ac6f44,66277875,0,0x0,8
tick,0x7ffd55ac6f44,66293283,0,0x0,8
tick,0x7ffd55ac6f44,66307987,0,0x0,8
tick,0x7ffd55ac6f44,66322830,0,0x0,8
tick,0x7ffd55ac6f44,66337803,0,0x0,8
tick,0x7ffd55ac6f44,66352495,0,0x0,8
tick,0x7ffd55ac6f44,66367463,0,0x0,8
tick,0x7ffd55ac6f44,66382288,0,0x0,8
tick,0x7ffd55ac6f44,66397651,0,0x0,8
tick,0x7ffd55ac6f44,66413544,0,0x0,8
tick,0x7ffd55ac6f44,66429120,0,0x0,8
tick,0x7ffd55ac6f44,66444311,0,0x0,8
tick,0x7ffd55ac6f44,66459526,0,0x0,8
tick,0x7ffd55ac6f44,66475117,0,0x0,8
tick,0x7ffd55ac6f44,66490869,0,0x0,8
tick,0x7ffd55ac6f44,66506239,0,0x0,8
tick,0x7ffd55ac6f44,66522303,0,0x0,8
tick,0x7ffd55ac6f44,66537730,0,0x0,8
tick,0x7ffd55ac6f44,66553056,0,0x0,8
tick,0x7ffd55ac6f44,66568164,0,0x0,8
tick,0x7ffd55ac6f44,66584473,0,0x0,8
tick,0x7ffd55ac6f44,66600210,0,0x0,8
tick,0x7ffd55ac6f44,66615161,0,0x0,8
tick,0x7ffd55ac6f44,66631137,0,0x0,8
tick,0x7ffd55ac6f44,66646332,0,0x0,8
tick,0x7ffd55ac6f44,66662208,0,0x0,8
tick,0x7ffd55ac6f44,66677395,0,0x0,8
tick,0x7ffd55ac6f44,66693572,0,0x0,8
tick,0x7ffd55ac6f44,66709715,0,0x0,8
tick,0x7ffd55ac6f44,66725165,0,0x0,8
tick,0x7ffd55ac6f44,66740831,0,0x0,8
tick,0x7ffd55ac6f44,66757206,0,0x0,8
tick,0x7ffd55ac6f44,66773150,0,0x0,8
tick,0x7ffd55ac6f44,66789156,0,0x0,8
tick,0x7ffd55ac6f44,66804922,0,0x0,8
tick,0x7ffd55ac6f44,66820479,0,0x0,8
tick,0x7ffd55ac6f44,66835304,0,0x0,8
tick,0x7ffd55ac6f44,66850653,0,0x0,8
tick,0x7ffd55ac6f44,66866107,0,0x0,8
tick,0x7ffd55ac6f44,66881173,0,0x0,8
tick,0x7ffd55ac6f44,66896190,0,0x0,8
tick,0x7ffd55ac6f44,66912165,0,0x0,8
tick,0x7ffd55ac6f44,66928247,0,0x0,8
tick,0x7ffd55ac6f44,66942876,0,0x0,8
tick,0x7ffd55ac6f44,66958875,0,0x0,8
tick,0x7ffd55ac6f44,66974519,0,0x0,8
tick,0x7ffd55ac6f44,66990199,0,0x0,8
tick,0x7ffd55ac6f44,67005985,0,0x0,8
tick,0x7ffd55ac6f44,67022132,0,0x0,8
tick,0x7ffd55ac6f44,67037951,0,0x0,8
tick,0x7ffd55ac6f44,67053377,0,0x0,8
tick,0x7ffd55ac6f44,67069324,0,0x0,8
tick,0x7ffd55ac6f44,67084502,0,0x0,8
tick,0x7ffd55ac6f44,67099381,0,0x0,8
tick,0x7ffd55ac6f44,67114890,0,0x0,8
tick,0x7ffd55ac6f44,67130666,0,0x0,8
tick,0x7ffd55ac6f44,67146397,0,0x0,8
tick,0x7ffd55ac6f44,67162200,0,0x0,8
tick,0x7ffd55ac6f44,67177433,0,0x0,8
tick,0x7ffd55ac6f44,67192224,0,0x0,8
tick,0x7ffd55ac6f44,67207500,0,0x0,8
tick,0x7ffd55ac6f44,67222140,0,0x0,8
tick,0x7ffd55ac6f44,67237249,0,0x0,8
tick,0x7ffd55ac6f44,67252246,0,0x0,8
tick,0x7ffd55ac6f44,67268261,0,0x0,8
tick,0x7ffd55ac6f44,67283489,0,0x0,8
tick,0x7ffd55ac6f44,67299086,0,0x0,8
tick,0x7ffd55ac6f44,67314536,0,0x0,8
tick,0x7ffd55ac6f44,67329579,0,0x0,8
tick,0x7ffd55ac6f44,67344616,0,0x0,8
tick,0x7ffd55ac6f44,67360720,0,0x0,8
tick,0x7ffd55ac6f44,67376002,0,0x0,8
tick,0x7ffd55ac6f44,67391466,0,0x0,8
tick,0x7ffd55ac6f44,67407440,0,0x0,8
tick,0x7ffd55ac6f44,67422401,0,0x0,8
tick,0x7ffd55ac6f44,67437402,0,0x0,8
tick,0x7ffd55ac6f44,67453501,0,0x0,8
tick,0x7ffd55ac6f44,67468425,0,0x0,8
tick,0x7ffd55ac6f44,67483480,0,0x0,8
tick,0x7ffd55ac6f44,67499553,0,0x0,8
tick,0x7ffd55ac6f44,67514465,0,0x0,8
tick,0x7ffd55ac6f44,67529495,0,0x0,8
tick,0x7ffd55ac6f44,67545496,0,0x0,8
tick,0x7ffd55ac6f44,67561492,0,0x0,8
tick,0x7ffd55ac6f44,67576432,0,0x0,8
tick,0x7ffd55ac6f44,67591484,0,0x0,8
tick,0x7ffd55ac6f44,67607737,0,0x0,8
tick,0x7ffd55ac6f44,67623441,0,0x0,8
tick,0x7ffd55ac6f44,67639436,0,0x0,8
tick,0x7ffd55ac6f44,67655499,0,0x0,8
tick,0x7ffd55ac6f44,67671505,0,0x0,8
tick,0x7ffd55ac6f44,67687504,0,0x0,8
tick,0x7ffd55ac6f44,67703472,0,0x0,8
tick,0x7ffd55ac6f44,67718598,0,0x0,8
tick,0x7ffd55ac6f44,67733523,0,0x0,8
tick,0x7ffd55ac6f44,67749463,0,0x0,8
tick,0x7ffd55ac6f44,67765456,0,0x0,8
tick,0x7ffd55ac6f44,67781450,0,0x0,8
tick,0x7ffd55ac6f44,67796450,0,0x0,8
tick,0x7ffd55ac6f44,67811474,0,0x0,8
tick,0x7ffd55ac6f44,67826428,0,0x0,8
tick,0x7ffd55ac6f44,67841632,0,0x0,8
tick,0x7ffd55ac6f44,67857478,0,0x0,8
tick,0x7ffd55ac6f44,67873508,0,0x0,8
tick,0x7ffd55ac6f44,67889510,0,0x0,8
tick,0x7ffd55ac6f44,67905530,0,0x0,8
tick,0x7ffd55ac6f44,67921432,0,0x0,8
tick,0x7ffd55ac6f44,67937505,0,0x0,8
tick,0x7ffd55ac6f44,67952943,0,0x0,8
tick,0x7ffd55ac6f44,67967981,0,0x0,8
tick,0x7ffd55ac6f44,67982934,0,0x0,8
tick,0x7ffd55ac6f44,67998983,0,0x0,8
tick,0x7ffd55ac6f44,68014999,0,0x0,8
tick,0x7ffd55ac6f44,68030001,0,0x0,8
tick,0x7ffd55ac6f44,68045365,0,0x0,8
tick,0x7ffd55ac6f44,68060682,0,0x0,8
tick,0x7ffd55ac6f44,68075646,0,0x0,8
tick,0x7ffd55ac6f44,68091848,0,0x0,8
tick,0x7ffd55ac6f44,68107626,0,0x0,8
tick,0x7ffd55ac6f44,68123818,0,0x0,8
tick,0x7ffd55ac6f44,68139852,0,0x0,8
tick,0x7ffd55ac6f44,68154625,0,0x0,8
tick,0x7ffd55ac6f44,68169638,0,0x0,8
tick,0x7ffd55ac6f44,68184808,0,0x0,8
tick,0x7ffd55ac6f44,68199630,0,0x0,8
tick,0x7ffd55ac6f44,68215765,0,0x0,8
tick,0x7ffd55ac6f44,68230903,0,0x0,8
tick,0x7ffd55ac6f44,68245653,0,0x0,8
tick,0x7ffd55ac6f44,68261686,0,0x0,8
tick,0x7ffd55ac6f44,68277918,0,0x0,8
tick,0x7ffd55ac6f44,68292599,0,0x0,8
tick,0x7ffd55ac6f44,68309052,0,0x0,8
tick,0x7ffd55ac6f44,68324664,0,0x0,8
tick,0x7ffd55ac6f44,68340830,0,0x0,8
tick,0x7ffd55ac6f44,68355674,0,0x0,8
tick,0x7ffd55ac6f44,68370640,0,0x0,8
tick,0x7ffd55ac6f44,68386632,0,0x0,8
tick,0x7ffd55ac6f44,68401703,0,0x0,8
tick,0x7ffd55ac6f44,68416712,0,0x0,8
tick,0x7ffd55ac6f44,68432639,0,0x0,8
tick,0x7ffd55ac6f44,68447693,0,0x0,8
tick,0x7ffd55ac6f44,68463110,0,0x0,8
tick,0x7ffd55ac6f44,68479215,0,0x0,8
tick,0x7ffd55ac6f44,68495148,0,0x0,8
tick,0x7ffd55ac6f44,68511144,0,0x0,8
tick,0x7ffd55ac6f44,68527429,0,0x0,8
tick,0x7ffd55ac6f44,68543198,0,0x0,8
tick,0x7ffd55ac6f44,68559228,0,0x0,8
tick,0x7ffd55ac6f44,68575145,0,0x0,8
tick,0x7ffd55ac6f44,68590201,0,0x0,8
tick,0x7ffd55ac6f44,68606160,0,0x0,8
tick,0x7ffd55ac6f44,68622204,0,0x0,8
tick,0x7ffd55ac6f44,68638160,0,0x0,8
tick,0x7ffd55ac6f44,68654223,0,0x0,8
tick,0x7ffd55ac6f44,68670326,0,0x0,8
tick,0x7ffd55ac6f44,68685447,0,0x0,8
tick,0x7ffd55ac6f44,68700583,0,0x0,8
tick,0x7ffd55ac6f44,68715634,0,0x0,8
tick,0x7ffd55ac6f44,68730457,0,0x0,8
tick,0x7ffd55ac6f44,68745325,0,0x0,8
tick,0x7ffd55ac6f44,68760250,0,0x0,8
tick,0x7ffd55ac6f44,68775250,0,0x0,8
tick,0x7ffd55ac6f44,68791251,0,0x0,8
tick,0x7ffd55ac6f44,68807169,0,0x0,8
tick,0x7ffd55ac6f44,68822172,0,0x0,8
tick,0x7ffd55ac6f44,68837170,0,0x0,8
tick,0x7ffd55ac6f44,68853455,0,0x0,8
tick,0x7ffd55ac6f44,68869597,0,0x0,8
tick,0x7ffd55ac6f44,68885236,0,0x0,8
tick,0x7ffd55ac6f44,68900749,0,0x0,8
tick,0x7ffd55ac6f44,68915898,0,0x0,8
tick,0x7ffd55ac6f44,68931394,0,0x0,8
tick,0x7ffd55ac6f44,68946110,0,0x0,8
tick,0x7ffd55ac6f44,68961111,0,0x0,8
tick,0x7ffd55ac6f44,68977057,0,0x0,8
tick,0x7ffd55ac6f44,68992362,0,0x0,8
tick,0x7ffd55ac6f44,69007773,0,0x0,8
tick,0x7ffd55ac6f44,69023459,0,0x0,8
tick,0x7ffd55ac6f44,69039522,0,0x0,8
tick,0x7ffd55ac6f44,69055209,0,0x0,8
tick,0x7ffd55ac6f44,69070942,0,0x0,8
tick,0x7ffd55ac6f44,69086175,0,0x0,8
tick,0x7ffd55ac6f44,69101911,0,0x0,8
tick,0x7ffd55ac6f44,69117033,0,0x0,8
tick,0x7ffd55ac6f44,69133138,0,0x0,8
tick,0x7ffd55ac6f44,69148547,0,0x0,8
tick,0x7ffd55ac6f44,69164102,0,0x0,8
tick,0x7ffd55ac6f44,69179578,0,0x0,8
tick,0x7ffd55ac6f44,69194915,0,0x0,8
tick,0x7ffd55ac6f44,69210239,0,0x0,8
tick,0x7ffd55ac6f44,69225423,0,0x0,8
tick,0x7ffd55ac6f44,69241157,0,0x0,8
tick,0x7ffd55ac6f44,69256625,0,0x0,8
tick,0x7ffd55ac6f44,69272485,0,0x0,8
tick,0x7ffd55ac6f44,69288481,0,0x0,8
tick,0x7ffd55ac6f44,69304307,0,0x0,8
tick,0x7ffd55ac6f44,69319646,0,0x0,8
tick,0x7ffd55ac6f44,69335386,0,0x0,8
tick,0x7ffd55ac6f44,69350888,0,0x0,8
tick,0x7ffd55ac6f44,69366010,0,0x0,8
tick,0x7ffd55ac6f44,69381767,0,0x0,8
tick,0x7ffd55ac6f44,69397785,0,0x0,8
tick,0x7ffd55ac6f44,69413284,0,0x0,8
tick,0x7ffd55ac6f44,69429071,0,0x0,8
tick,0x7ffd55ac6f44,69444546,0,0x0,8
tick,0x7ffd55ac6f44,69460258,0,0x0,8
tick,0x7ffd55ac6f44,69475870,0,0x0,8
tick,0x7ffd55ac6f44,69491911,0,0x0,8
tick,0x7ffd55ac6f44,69507562,0,0x0,8
tick,0x7ffd55ac6f44,69523591,0,0x0,8
tick,0x7ffd55ac6f44,69539379,0,0x0,8
tick,0x7ffd55ac6f44,69554990,0,0x0,8
tick,0x7ffd55ac6f44,69570153,0,0x0,8
tick,0x7ffd55ac6f44,69585168,0,0x0,8
tick,0x7ffd55ac6f44,69599771,0,0x0,8
tick,0x7ffd55ac6f44,69614490,0,0x0,8
tick,0x7ffd55ac6f44,69629478,0,0x0,8
tick,0x7ffd55ac6f44,69644665,0,0x0,8
tick,0x7ffd55ac6f44,69660232,0,0x0,8
tick,0x7ffd55ac6f44,69675418,0,0x0,8
tick,0x7ffd55ac6f44,69691018,0,0x0,8
tick,0x7ffd55ac6f44,69706918,0,0x0,8
tick,0x7ffd55ac6f44,69722450,0,0x0,8
tick,0x7ffd55ac6f44,69738699,0,0x0,8
tick,0x7ffd55ac6f44,69753313,0,0x0,8
tick,0x7ffd55ac6f44,69768049,0,0x0,8
tick,0x7ffd55ac6f44,69783081,0,0x0,8
tick,0x7ffd55ac6f44,69799364,0,0x0,8
tick,0x7ffd55ac6f44,69815360,0,0x0,8
tick,0x7ffd55ac6f44,69830738,0,0x0,8
tick,0x7ffd55ac6f44,69846703,0,0x0,8
tick,0x7ffd55ac6f44,69862001,0,0x0,8
tick,0x7ffd55ac6f44,69877754,0,0x0,8
tick,0x7ffd55ac6f44,69893435,0,0x0,8
tick,0x7ffd55ac6f44,69909333,0,0x0,8
tick,0x7ffd55ac6f44,69925052,0,0x0,8
tick,0x7ffd55ac6f44,69940214,0,0x0,8
tick,0x7ffd55ac6f44,69955359,0,0x0,8
tick,0x7ffd55ac6f44,69970935,0,0x0,8
tick,0x7ffd55ac6f44,69986338,0,0x0,8
tick,0x7ffd55ac6f44,70001295,0,0x0,8
tick,0x7ffd55ac6f44,70016937,0,0x0,8
tick,0x7ffd55ac6f44,70032607,0,0x0,8
tick,0x7ffd55ac6f44,70047962,0,0x0,8
tick,0x7ffd55ac6f44,70063830,0,0x0,8
tick,0x7ffd55ac6f44,70079932,0,0x0,8
tick,0x7ffd55ac6f44,70095874,0,0x0,8
tick,0x7ffd55ac6f44,70111948,0,0x0,8
tick,0x7ffd55ac6f44,70126847,0,0x0,8
tick,0x7ffd55ac6f44,70141780,0,0x0,8
tick,0x7ffd55ac6f44,70157687,0,0x0,8
tick,0x7ffd55ac6f44,70173349,0,0x0,8
tick,0x7ffd55ac6f44,70188956,0,0x0,8
tick,0x7ffd55ac6f44,70204928,0,0x0,8
tick,0x7ffd55ac6f44,70220104,0,0x0,8
tick,0x7ffd55ac6f44,70235365,0,0x0,8
tick,0x7ffd55ac6f44,70250532,0,0x0,8
tick,0x7ffd55ac6f44,70265837,0,0x0,8
tick,0x7ffd55ac6f44,70281568,0,0x0,8
tick,0x7ffd55ac6f44,70297203,0,0x0,8
tick,0x7ffd55ac6f44,70313402,0,0x0,8
tick,0x7ffd55ac6f44,70328475,0,0x0,8
tick,0x7ffd55ac6f44,70344676,0,0x0,8
tick,0x7ffd55ac6f44,70360309,0,0x0,8
tick,0x7ffd55ac6f44,70375422,0,0x0,8
tick,0x7ffd55ac6f44,70391082,0,0x0,8
tick,0x7ffd55ac6f44,70407289,0,0x0,8
tick,0x7ffd55ac6f44,70422704,0,0x0,8
tick,0x7ffd55ac6f44,70438728,0,0x0,8
tick,0x7ffd55ac6f44,70453436,0,0x0,8
tick,0x7ffd55ac6f44,70468205,0,0x0,8
tick,0x7ffd55ac6f44,70482892,0,0x0,8
tick,0x7ffd55ac6f44,70498295,0,0x0,8
tick,0x7ffd55ac6f44,70514415,0,0x0,8
tick,0x7ffd55ac6f44,70530803,0,0x0,8
tick,0x7ffd55ac6f44,70546541,0,0x0,8
tick,0x7ffd55ac6f44,70562427,0,0x0,8
tick,0x7ffd55ac6f44,70577540,0,0x0,8
tick,0x7ffd55ac6f44,70593116,0,0x0,8
tick,0x7ffd55ac6f44,70608662,0,0x0,8
tick,0x7ffd55ac6f44,70623933,0,0x0,8
tick,0x7ffd55ac6f44,70639359,0,0x0,8
tick,0x7ffd55ac6f44,70654660,0,0x0,8
tick,0x7ffd55ac6f44,70670630,0,0x0,8
tick,0x7ffd55ac6f44,70685458,0,0x0,8
tick,0x7ffd55ac6f44,70700683,0,0x0,8
tick,0x7ffd55ac6f44,70716077,0,0x0,8
tick,0x7ffd55ac6f44,70731317,0,0x0,8
tick,0x7ffd55ac6f44,70747032,0,0x0,8
tick,0x7ffd55ac6f44,70762154,0,0x0,8
tick,0x7ffd55ac6f44,70778186,0,0x0,8
tick,0x7ffd55ac6f44,70793422,0,0x0,8
tick,0x7ffd55ac6f44,70809208,0,0x0,8
tick,0x7ffd55ac6f44,70825163,0,0x0,8
tick,0x7ffd55ac6f44,70840760,0,0x0,8
tick,0x7ffd55ac6f44,70856094,0,0x0,8
tick,0x7ffd55ac6f44,70871959,0,0x0,8
tick,0x7ffd55ac6f44,70887471,0,0x0,8
tick,0x7ffd55ac6f44,70903499,0,0x0,8
tick,0x7ffd55ac6f44,70919141,0,0x0,8
tick,0x7ffd55ac6f44,70934906,0,0x0,8
tick,0x7ffd55ac6f44,70950166,0,0x0,8
tick,0x7ffd55ac6f44,70965030,0,0x0,8
tick,0x7ffd55ac6f44,70980888,0,0x0,8
tick,0x7ffd55ac6f44,70996208,0,0x0,8
tick,0x7ffd55ac6f44,71012099,0,0x0,8
tick,0x7ffd55ac6f44,71027888,0,0x0,8
tick,0x7ffd55ac6f44,71043377,0,0x0,8
tick,0x7ffd55ac6f44,71058515,0,0x0,8
tick,0x7ffd55ac6f44,71074143,0,0x0,8
tick,0x7ffd55ac6f44,71089448,0,0x0,8
tick,0x7ffd55ac6f44,71105338,0,0x0,8
tick,0x7ffd55ac6f44,71120212,0,0x0,8
tick,0x7ffd55ac6f44,71135087,0,0x0,8
tick,0x7ffd55ac6f44,71151244,0,0x0,8
tick,0x7ffd55ac6f44,71167199,0,0x0,8
tick,0x7ffd55ac6f44,71182941,0,0x0,8
tick,0x7ffd55ac6f44,71198749,0,0x0,8
tick,0x7ffd55ac6f44,71214686,0,0x0,8
tick,0x7ffd55ac6f44,71230089,0,0x0,8
tick,0x7ffd55ac6f44,71245598,0,0x0,8
tick,0x7ffd55ac6f44,71261423,0,0x0,8
tick,0x7ffd55ac6f44,71276855,0,0x0,8
tick,0x7ffd55ac6f44,71292095,0,0x0,8
tick,0x7ffd55ac6f44,71307800,0,0x0,8
tick,0x7ffd55ac6f44,71323751,0,0x0,8
tick,0x7ffd55ac6f44,71339308,0,0x0,8
tick,0x7ffd55ac6f44,71354275,0,0x0,8
tick,0x7ffd55ac6f44,71369633,0,0x0,8
tick,0x7ffd55ac6f44,71385317,0,0x0,8
tick,0x7ffd55ac6f44,71401538,0,0x0,8
tick,0x7ffd55ac6f44,71416120,0,0x0,8
tick,0x7ffd55ac6f44,71431352,0,0x0,8
tick,0x7ffd55ac6f44,71446740,0,0x0,8
tick,0x7ffd55ac6f44,71462351,0,0x0,8
tick,0x7ffd55ac6f44,71477263,0,0x0,8
tick,0x7ffd55ac6f44,71492386,0,0x0,8
tick,0x7ffd55ac6f44,71507482,0,0x0,8
tick,0x7ffd55ac6f44,71522602,0,0x0,8
tick,0x7ffd55ac6f44,71537728,0,0x0,8
tick,0x7ffd55ac6f44,71552174,0,0x0,8
tick,0x7ffd55ac6f44,71567719,0,0x0,8
tick,0x7ffd55ac6f44,71583505,0,0x0,8
tick,0x7ffd55ac6f44,71599289,0,0x0,8
tick,0x7ffd55ac6f44,71615249,0,0x0,8
tick,0x7ffd55ac6f44,71630893,0,0x0,8
tick,0x7ffd55ac6f44,71646964,0,0x0,8
tick,0x7ffd55ac6f44,71662371,0,0x0,8
tick,0x7ffd55ac6f44,71677608,0,0x0,8
tick,0x7ffd55ac6f44,71693371,0,0x0,8
tick,0x7ffd55ac6f44,71709369,0,0x0,8
tick,0x7ffd55ac6f44,71724720,0,0x0,8
tick,0x7ffd55ac6f44,71739930,0,0x0,8
tick,0x7ffd55ac6f44,71755191,0,0x0,8
tick,0x7ffd55ac6f44,71770541,0,0x0,8
tick,0x7ffd55ac6f44,71785591,0,0x0,8
tick,0x7ffd55ac6f44,71801284,0,0x0,8
tick,0x7ffd55ac6f44,71816044,0,0x0,8
tick,0x7ffd55ac6f44,71831234,0,0x0,8
tick,0x7ffd55ac6f44,71847311,0,0x0,8
tick,0x7ffd55ac6f44,71862229,0,0x0,8
tick,0x7ffd55ac6f44,71877635,0,0x0,8
tick,0x7ffd55ac6f44,71893102,0,0x0,8
tick,0x7ffd55ac6f44,71908536,0,0x0,8
tick,0x7ffd55ac6f44,71924094,0,0x0,8
tick,0x7ffd55ac6f44,71939138,0,0x0,8
tick,0x7ffd55ac6f44,71954068,0,0x0,8
tick,0x7ffd55ac6f44,71969262,0,0x0,8
tick,0x7ffd55ac6f44,71984566,0,0x0,8
tick,0x7ffd55ac6f44,71999833,0,0x0,8
tick,0x7ffd55ac6f44,72015510,0,0x0,8
tick,0x7ffd55ac6f44,72030680,0,0x0,8
tick,0x7ffd55ac6f44,72046485,0,0x0,8
tick,0x7ffd55ac6f44,72062567,0,0x0,8
tick,0x7ffd55ac6f44,72077847,0,0x0,8
tick,0x7ffd55ac6f44,72092726,0,0x0,8
tick,0x7ffd55ac6f44,72108239,0,0x0,8
tick,0x7ffd55ac6f44,72123427,0,0x0,8
tick,0x7ffd55ac6f44,72138839,0,0x0,8
tick,0x7ffd55ac6f44,72154470,0,0x0,8
tick,0x7ffd55ac6f44,72169986,0,0x0,8
tick,0x7ffd55ac6f44,72185101,0,0x0,8
tick,0x7ffd55ac6f44,72201012,0,0x0,8
tick,0x7ffd55ac6f44,72215858,0,0x0,8
tick,0x7ffd55ac6f44,72231353,0,0x0,8
tick,0x7ffd55ac6f44,72246171,0,0x0,8
tick,0x7ffd55ac6f44,72261436,0,0x0,8
tick,0x7ffd55ac6f44,72277140,0,0x0,8
tick,0x7ffd55ac6f44,72293195,0,0x0,8
tick,0x7ffd55ac6f44,72308858,0,0x0,8
tick,0x7ffd55ac6f44,72324450,0,0x0,8
tick,0x7ffd55ac6f44,72339337,0,0x0,8
tick,0x7ffd55ac6f44,72354242,0,0x0,8
tick,0x7ffd55ac6f44,72369324,0,0x0,8
tick,0x7ffd55ac6f44,72384425,0,0x0,8
tick,0x7ffd55ac6f44,72400499,0,0x0,8
tick,0x7ffd55ac6f44,72415310,0,0x0,8
tick,0x7ffd55ac6f44,72430537,0,0x0,8
tick,0x7ffd55ac6f44,72446018,0,0x0,8
tick,0x7ffd55ac6f44,72462214,0,0x0,8
tick,0x7ffd55ac6f44,72477920,0,0x0,8
tick,0x7ffd55ac6f44,72493441,0,0x0,8
tick,0x7ffd55ac6f44,72508623,0,0x0,8
tick,0x7ffd55ac6f44,72524360,0,0x0,8
tick,0x7ffd55ac6f44,72540598,0,0x0,8
tick,0x7ffd55ac6f44,72555683,0,0x0,8
tick,0x7ffd55ac6f44,72571900,0,0x0,8
tick,0x7ffd55ac6f44,72587767,0,0x0,8
tick,0x7ffd55ac6f44,72603253,0,0x0,8
tick,0x7ffd55ac6f44,72618488,0,0x0,8
tick,0x7ffd55ac6f44,72634249,0,0x0,8
tick,0x7ffd55ac6f44,72649471,0,0x0,8
tick,0x7ffd55ac6f44,72665244,0,0x0,8
tick,0x7ffd55ac6f44,72680614,0,0x0,8
tick,0x7ffd55ac6f44,72696108,0,0x0,8
tick,0x7ffd55ac6f44,72711791,0,0x0,8
tick,0x7ffd55ac6f44,72727804,0,0x0,8
tick,0x7ffd55ac6f44,72742667,0,0x0,8
tick,0x7ffd55ac6f44,72758619,0,0x0,8
tick,0x7ffd55ac6f44,72774526,0,0x0,8
tick,0x7ffd55ac6f44,72789951,0,0x0,8
tick,0x7ffd55ac6f44,72805423,0,0x0,8
tick,0x7ffd55ac6f44,72821157,0,0x0,8
tick,0x7ffd55ac6f44,72837030,0,0x0,8
tick,0x7ffd55ac6f44,72852351,0,0x0,8
tick,0x7ffd55ac6f44,72867726,0,0x0,8
tick,0x7ffd55ac6f44,72883020,0,0x0,8
tick,0x7ffd55ac6f44,72898139,0,0x0,8
tick,0x7ffd55ac6f44,72913008,0,0x0,8
tick,0x7ffd55ac6f44,72928133,0,0x0,8
tick,0x7ffd55ac6f44,72943260,0,0x0,8
tick,0x7ffd55ac6f44,72959300,0,0x0,8
tick,0x7ffd55ac6f44,72975179,0,0x0,8
tick,0x7ffd55ac6f44,72991227,0,0x0,8
tick,0x7ffd55ac6f44,73006112,0,0x0,8
tick,0x7ffd55ac6f44,73021389,0,0x0,8
tick,0x7ffd55ac6f44,73036518,0,0x0,8
tick,0x7ffd55ac6f44,73052369,0,0x0,8
tick,0x7ffd55ac6f44,73067674,0,0x0,8
tick,0x7ffd55ac6f44,73083427,0,0x0,8
tick,0x7ffd55ac6f44,73098971,0,0x0,8
tick,0x7ffd55ac6f44,73114719,0,0x0,8
tick,0x7ffd55ac6f44,73130302,0,0x0,8
tick,0x7ffd55ac6f44,73144998,0,0x0,8
tick,0x7ffd55ac6f44,73161050,0,0x0,8
tick,0x7ffd55ac6f44,73176143,0,0x0,8
tick,0x7ffd55ac6f44,73191237,0,0x0,8
tick,0x7ffd55ac6f44,73205882,0,0x0,8
tick,0x7ffd55ac6f44,73221360,0,0x0,8
tick,0x7ffd55ac6f44,73236857,0,0x0,8
tick,0x7ffd55ac6f44,73252484,0,0x0,8
tick,0x7ffd55ac6f44,73267655,0,0x0,8
tick,0x7ffd55ac6f44,73283166,0,0x0,8
tick,0x7ffd55ac6f44,73298485,0,0x0,8
tick,0x7ffd55ac6f44,73313775,0,0x0,8
tick,0x7ffd55ac6f44,73329294,0,0x0,8
tick,0x7ffd55ac6f44,73344769,0,0x0,8
tick,0x7ffd55ac6f44,73360114,0,0x0,8
tick,0x7ffd55ac6f44,73375435,0,0x0,8
tick,0x7ffd55ac6f44,73390184,0,0x0,8
tick,0x7ffd55ac6f44,73405216,0,0x0,8
tick,0x7ffd55ac6f44,73420853,0,0x0,8
tick,0x7ffd55ac6f44,73435557,0,0x0,8
tick,0x7ffd55ac6f44,73450803,0,0x0,8
tick,0x7ffd55ac6f44,73465838,0,0x0,8
tick,0x7ffd55ac6f44,73481295,0,0x0,8
tick,0x7ffd55ac6f44,73496246,0,0x0,8
tick,0x7ffd55ac6f44,73512292,0,0x0,8
tick,0x7ffd55ac6f44,73527581,0,0x0,8
tick,0x7ffd55ac6f44,73543334,0,0x0,8
tick,0x7ffd55ac6f44,73558590,0,0x0,8
tick,0x7ffd55ac6f44,73574529,0,0x0,8
tick,0x7ffd55ac6f44,73589570,0,0x0,8
tick,0x7ffd55ac6f44,73605543,0,0x0,8
tick,0x7ffd55ac6f44,73621154,0,0x0,8
tick,0x7ffd55ac6f44,73637441,0,0x0,8
tick,0x7ffd55ac6f44,73652833,0,0x0,8
tick,0x7ffd55ac6f44,73668583,0,0x0,8
tick,0x7ffd55ac6f44,73683625,0,0x0,8
tick,0x7ffd55ac6f44,73699519,0,0x0,8
tick,0x7ffd55ac6f44,73715559,0,0x0,8
tick,0x7ffd55ac6f44,73731420,0,0x0,8
tick,0x7ffd55ac6f44,73747116,0,0x0,8
tick,0x7ffd55ac6f44,73762219,0,0x0,8
tick,0x7ffd55ac6f44,73777992,0,0x0,8
tick,0x7ffd55ac6f44,73793331,0,0x0,8
tick,0x7ffd55ac6f44,73808985,0,0x0,8
tick,0x7ffd55ac6f44,73824730,0,0x0,8
tick,0x7ffd55ac6f44,73840938,0,0x0,8
tick,0x7ffd55ac6f44,73855837,0,0x0,8
tick,0x7ffd55ac6f44,73870706,0,0x0,8
tick,0x7ffd55ac6f44,73886497,0,0x0,8
tick,0x7ffd55ac6f44,73902258,0,0x0,8
tick,0x7ffd55ac6f44,73917255,0,0x0,8
tick,0x7ffd55ac6f44,73933354,0,0x0,8
tick,0x7ffd55ac6f44,73948889,0,0x0,8
tick,0x7ffd55ac6f44,73963868,0,0x0,8
tick,0x7ffd55ac6f44,73979229,0,0x0,8
tick,0x7ffd55ac6f44,73995215,0,0x0,8
tick,0x7ffd55ac6f44,74010620,0,0x0,8
tick,0x7ffd55ac6f44,74026096,0,0x0,8
tick,0x7ffd55ac6f44,74041965,0,0x0,8
tick,0x7ffd55ac6f44,74057964,0,0x0,8
tick,0x7ffd55ac6f44,74073822,0,0x0,8
tick,0x7ffd55ac6f44,74088966,0,0x0,8
tick,0x7ffd55ac6f44,74105068,0,0x0,8
tick,0x7ffd55ac6f44,74120328,0,0x0,8
tick,0x7ffd55ac6f44,74135520,0,0x0,8
tick,0x7ffd55ac6f44,74151473,0,0x0,8
tick,0x7ffd55ac6f44,74166440,0,0x0,8
tick,0x7ffd55ac6f44,74181871,0,0x0,8
tick,0x7ffd55ac6f44,74197848,0,0x0,8
tick,0x7ffd55ac6f44,74213825,0,0x0,8
tick,0x7ffd55ac6f44,74229655,0,0x0,8
tick,0x7ffd55ac6f44,74245510,0,0x0,8
tick,0x7ffd55ac6f44,74261194,0,0x0,8
tick,0x7ffd55ac6f44,74276275,0,0x0,8
tick,0x7ffd55ac6f44,74291338,0,0x0,8
tick,0x7ffd55ac6f44,74306245,0,0x0,8
tick,0x7ffd55ac6f44,74321836,0,0x0,8
tick,0x7ffd55ac6f44,74337671,0,0x0,8
tick,0x7ffd55ac6f44,74353389,0,0x0,8
tick,0x7ffd55ac6f44,74369283,0,0x0,8
tick,0x7ffd55ac6f44,74385109,0,0x0,8
tick,0x7ffd55ac6f44,74400030,0,0x0,8
tick,0x7ffd55ac6f44,74416079,0,0x0,8
tick,0x7ffd55ac6f44,74431403,0,0x0,8
tick,0x7ffd55ac6f44,74447458,0,0x0,8
tick,0x7ffd55ac6f44,74462603,0,0x0,8
tick,0x7ffd55ac6f44,74478093,0,0x0,8
tick,0x7ffd55ac6f44,74494354,0,0x0,8
tick,0x7ffd55ac6f44,74509426,0,0x0,8
tick,0x7ffd55ac6f44,74524595,0,0x0,8
tick,0x7ffd55ac6f44,74539822,0,0x0,8
tick,0x7ffd55ac6f44,74554847,0,0x0,8
tick,0x7ffd55ac6f44,74569561,0,0x0,8
tick,0x7ffd55ac6f44,74584647,0,0x0,8
tick,0x7ffd55ac6f44,74600311,0,0x0,8
tick,0x7ffd55ac6f44,74615367,0,0x0,8
tick,0x7ffd55ac6f44,74630319,0,0x0,8
tick,0x7ffd55ac6f44,74645267,0,0x0,8
tick,0x7ffd55ac6f44,74660454,0,0x0,8
tick,0x7ffd55ac6f44,74676115,0,0x0,8
tick,0x7ffd55ac6f44,74691117,0,0x0,8
tick,0x7ffd55ac6f44,74705909,0,0x0,8
tick,0x7ffd55ac6f44,74720902,0,0x0,8
tick,0x7ffd55ac6f44,74735662,0,0x0,8
tick,0x7ffd55ac6f44,74751305,0,0x0,8
tick,0x7ffd55ac6f44,74767451,0,0x0,8
tick,0x7ffd55ac6f44,74782393,0,0x0,8
tick,0x7ffd55ac6f44,74797727,0,0x0,8
tick,0x7ffd55ac6f44,74812799,0,0x0,8
tick,0x7ffd55ac6f44,74827986,0,0x0,8
tick,0x7ffd55ac6f44,74842822,0,0x0,8
tick,0x7ffd55ac6f44,74858857,0,0x0,8
tick,0x7ffd55ac6f44,74874030,0,0x0,8
tick,0x7ffd55ac6f44,74889187,0,0x0,8
tick,0x7ffd55ac6f44,74905027,0,0x0,8
tick,0x7ffd55ac6f44,74920647,0,0x0,8
tick,0x7ffd55ac6f44,74936139,0,0x0,8
tick,0x7ffd55ac6f44,74952013,0,0x0,8
tick,0x7ffd55ac6f44,74967061,0,0x0,8
tick,0x7ffd55ac6f44,74982705,0,0x0,8
tick,0x7ffd55ac6f44,74998533,0,0x0,8
tick,0x7ffd55ac6f44,75014436,0,0x0,8
tick,0x7ffd55ac6f44,75031199,0,0x0,8
tick,0x7ffd55ac6f44,75046344,0,0x0,8
tick,0x7ffd55ac6f44,75061513,0,0x0,8
tick,0x7ffd55ac6f44,75077434,0,0x0,8
tick,0x7ffd55ac6f44,75093345,0,0x0,8
tick,0x7ffd55ac6f44,75109015,0,0x0,8
tick,0x7ffd55ac6f44,75124059,0,0x0,8
tick,0x7ffd55ac6f44,75139624,0,0x0,8
tick,0x7ffd55ac6f44,75154323,0,0x0,8
tick,0x7ffd55ac6f44,75170132,0,0x0,8
tick,0x7ffd55ac6f44,75185498,0,0x0,8
tick,0x7ffd55ac6f44,75201301,0,0x0,8
tick,0x7ffd55ac6f44,75216069,0,0x0,8
tick,0x7ffd55ac6f44,75230921,0,0x0,8
tick,0x7ffd55ac6f44,75246147,0,0x0,8
tick,0x7ffd55ac6f44,75261792,0,0x0,8
tick,0x7ffd55ac6f44,75277498,0,0x0,8
tick,0x7ffd55ac6f44,75293351,0,0x0,8
tick,0x7ffd55ac6f44,75308880,0,0x0,8
tick,0x7ffd55ac6f44,75323842,0,0x0,8
tick,0x7ffd55ac6f44,75339457,0,0x0,8
tick,0x7ffd55ac6f44,75355354,0,0x0,8
tick,0x7ffd55ac6f44,75370819,0,0x0,8
tick,0x7ffd55ac6f44,75386470,0,0x0,8
tick,0x7ffd55ac6f44,75401776,0,0x0,8
tick,0x7ffd55ac6f44,75417083,0,0x0,8
tick,0x7ffd55ac6f44,75432067,0,0x0,8
tick,0x7ffd55ac6f44,75447117,0,0x0,8
tick,0x7ffd55ac6f44,75462102,0,0x0,8
tick,0x7ffd55ac6f44,75477100,0,0x0,8
tick,0x7ffd55ac6f44,75492071,0,0x0,8
tick,0x7ffd55ac6f44,75507056,0,0x0,8
tick,0x7ffd55ac6f44,75523074,0,0x0,8
tick,0x7ffd55ac6f44,75539062,0,0x0,8
tick,0x7ffd55ac6f44,75555063,0,0x0,8
tick,0x7ffd55ac6f44,75570045,0,0x0,8
tick,0x7ffd55ac6f44,75584991,0,0x0,8
tick,0x7ffd55ac6f44,75600978,0,0x0,8
tick,0x7ffd55ac6f44,75616988,0,0x0,8
tick,0x7ffd55ac6f44,75633007,0,0x0,8
tick,0x7ffd55ac6f44,75648982,0,0x0,8
tick,0x7ffd55ac6f44,75664970,0,0x0,8
tick,0x7ffd55ac6f44,75679989,0,0x0,8
tick,0x7ffd55ac6f44,75694966,0,0x0,8
tick,0x7ffd55ac6f44,75710588,0,0x0,8
tick,0x7ffd55ac6f44,75726597,0,0x0,8
tick,0x7ffd55ac6f44,75741848,0,0x0,8
tick,0x7ffd55ac6f44,75757992,0,0x0,8
tick,0x7ffd55ac6f44,75772807,0,0x0,8
tick,0x7ffd55ac6f44,75788767,0,0x0,8
tick,0x7ffd55ac6f44,75804770,0,0x0,8
tick,0x7ffd55ac6f44,75820481,0,0x0,8
tick,0x7ffd55ac6f44,75836030,0,0x0,8
tick,0x7ffd55ac6f44,75852030,0,0x0,8
tick,0x7ffd55ac6f44,75867233,0,0x0,8
tick,0x7ffd55ac6f44,75882123,0,0x0,8
tick,0x7ffd55ac6f44,75897155,0,0x0,8
tick,0x7ffd55ac6f44,75913612,0,0x0,8
tick,0x7ffd55ac6f44,75929755,0,0x0,8
tick,0x7ffd55ac6f44,75944997,0,0x0,8
tick,0x7ffd55ac6f44,75960608,0,0x0,8
tick,0x7ffd55ac6f44,75975845,0,0x0,8
tick,0x7ffd55ac6f44,75991832,0,0x0,8
tick,0x7ffd55ac6f44,76007381,0,0x0,8
tick,0x7ffd55ac6f44,76023520,0,0x0,8
tick,0x7ffd55ac6f44,76039255,0,0x0,8
tick,0x7ffd55ac6f44,76054603,0,0x0,8
tick,0x7ffd55ac6f44,76070967,0,0x0,8
tick,0x7ffd55ac6f44,76086155,0,0x0,8
tick,0x7ffd55ac6f44,76101698,0,0x0,8
tick,0x7ffd55ac6f44,76117210,0,0x0,8
tick,0x7ffd55ac6f44,76133230,0,0x0,8
tick,0x7ffd55ac6f44,76148354,0,0x0,8
tick,0x7ffd55ac6f44,76163994,0,0x0,8
tick,0x7ffd55ac6f44,76179223,0,0x0,8
tick,0x7ffd55ac6f44,76195198,0,0x0,8
tick,0x7ffd55ac6f44,76210701,0,0x0,8
tick,0x7ffd55ac6f44,76225928,0,0x0,8
tick,0x7ffd55ac6f44,76241954,0,0x0,8
tick,0x7ffd55ac6f44,76257206,0,0x0,8
tick,0x7ffd55ac6f44,76273051,0,0x0,8
tick,0x7ffd55ac6f44,76288444,0,0x0,8
tick,0x7ffd55ac6f44,76304110,0,0x0,8
tick,0x7ffd55ac6f44,76319543,0,0x0,8
tick,0x7ffd55ac6f44,76335246,0,0x0,8
tick,0x7ffd55ac6f44,76350439,0,0x0,8
tick,0x7ffd55ac6f44,76366263,0,0x0,8
tick,0x7ffd55ac6f44,76382247,0,0x0,8
tick,0x7ffd55ac6f44,76397148,0,0x0,8
tick,0x7ffd55ac6f44,76412100,0,0x0,8
tick,0x7ffd55ac6f44,76427866,0,0x0,8
tick,0x7ffd55ac6f44,76442930,0,0x0,8
tick,0x7ffd55ac6f44,76459007,0,0x0,8
tick,0x7ffd55ac6f44,76474415,0,0x0,8
tick,0x7ffd55ac6f44,76489908,0,0x0,8
tick,0x7ffd55ac6f44,76505320,0,0x0,8
tick,0x7ffd55ac6f44,76521248,0,0x0,8
tick,0x7ffd55ac6f44,76536106,0,0x0,8
tick,0x7ffd55ac6f44,76552246,0,0x0,8
tick,0x7ffd55ac6f44,76568519,0,0x0,8
tick,0x7ffd55ac6f44,76584147,0,0x0,8
tick,0x7ffd55ac6f44,76599718,0,0x0,8
tick,0x7ffd55ac6f44,76614874,0,0x0,8
tick,0x7ffd55ac6f44,76630366,0,0x0,8
tick,0x7ffd55ac6f44,76645203,0,0x0,8
tick,0x7ffd55ac6f44,76660672,0,0x0,8
tick,0x7ffd55ac6f44,76675252,0,0x0,8
tick,0x7ffd55ac6f44,76690733,0,0x0,8
tick,0x7ffd55ac6f44,76706093,0,0x0,8
tick,0x7ffd55ac6f44,76721124,0,0x0,8
tick,0x7ffd55ac6f44,76736410,0,0x0,8
tick,0x7ffd55ac6f44,76752138,0,0x0,8
tick,0x7ffd55ac6f44,76767845,0,0x0,8
tick,0x7ffd55ac6f44,76783407,0,0x0,8
tick,0x7ffd55ac6f44,76799015,0,0x0,8
tick,0x7ffd55ac6f44,76814508,0,0x0,8
tick,0x7ffd55ac6f44,76829823,0,0x0,8
tick,0x7ffd55ac6f44,76845011,0,0x0,8
tick,0x7ffd55ac6f44,76861145,0,0x0,8
tick,0x7ffd55ac6f44,76876296,0,0x0,8
tick,0x7ffd55ac6f44,76892322,0,0x0,8
tick,0x7ffd55ac6f44,76908052,0,0x0,8
tick,0x7ffd55ac6f44,76923973,0,0x0,8
tick,0x7ffd55ac6f44,76940537,0,0x0,8
tick,0x7ffd55ac6f44,76955866,0,0x0,8
tick,0x7ffd55ac6f44,76971849,0,0x0,8
tick,0x7ffd55ac6f44,76987108,0,0x0,8
tick,0x7ffd55ac6f44,77003187,0,0x0,8
tick,0x7ffd55ac6f44,77018782,0,0x0,8
tick,0x7ffd55ac6f44,77034038,0,0x0,8
tick,0x7ffd55ac6f44,77049405,0,0x0,8
tick,0x7ffd55ac6f44,77065075,0,0x0,8
tick,0x7ffd55ac6f44,77080479,0,0x0,8
tick,0x7ffd55ac6f44,77096584,0,0x0,8
tick,0x7ffd55ac6f44,77112243,0,0x0,8
tick,0x7ffd55ac6f44,77128554,0,0x0,8
tick,0x7ffd55ac6f44,77144598,0,0x0,8
tick,0x7ffd55ac6f44,77159341,0,0x0,8
tick,0x7ffd55ac6f44,77175001,0,0x0,8
tick,0x7ffd55ac6f44,77191068,0,0x0,8
tick,0x7ffd55ac6f44,77205863,0,0x0,8
tick,0x7ffd55ac6f44,77220805,0,0x0,8
tick,0x7ffd55ac6f44,77235978,0,0x0,8
tick,0x7ffd55ac6f44,77252253,0,0x0,8
tick,0x7ffd55ac6f44,77267564,0,0x0,8
tick,0x7ffd55ac6f44,77283335,0,0x0,8
tick,0x7ffd55ac6f44,77298444,0,0x0,8
tick,0x7ffd55ac6f44,77314050,0,0x0,8
tick,0x7ffd55ac6f44,77329351,0,0x0,8
tick,0x7ffd55ac6f44,77344156,0,0x0,8
tick,0x7ffd55ac6f44,77359628,0,0x0,8
tick,0x7ffd55ac6f44,77375390,0,0x0,8
tick,0x7ffd55ac6f44,77390731,0,0x0,8
tick,0x7ffd55ac6f44,77406250,0,0x0,8
tick,0x7ffd55ac6f44,77421620,0,0x0,8
tick,0x7ffd55ac6f44,77437718,0,0x0,8
tick,0x7ffd55ac6f44,77453219,0,0x0,8
tick,0x7ffd55ac6f44,77468290,0,0x0,8
tick,0x7ffd55ac6f44,77483100,0,0x0,8
tick,0x7ffd55ac6f44,77498360,0,0x0,8
tick,0x7ffd55ac6f44,77513095,0,0x0,8
tick,0x7ffd55ac6f44,77528685,0,0x0,8
tick,0x7ffd55ac6f44,77543901,0,0x0,8
tick,0x7ffd55ac6f44,77559325,0,0x0,8
tick,0x7ffd55ac6f44,77575097,0,0x0,8
tick,0x7ffd55ac6f44,77590346,0,0x0,8
tick,0x7ffd55ac6f44,77605625,0,0x0,8
tick,0x7ffd55ac6f44,77620948,0,0x0,8
tick,0x7ffd55ac6f44,77636099,0,0x0,8
tick,0x7ffd55ac6f44,77652612,0,0x0,8
tick,0x7ffd55ac6f44,77667328,0,0x0,8
tick,0x7ffd55ac6f44,77682327,0,0x0,8
tick,0x7ffd55ac6f44,77697300,0,0x0,8
tick,0x7ffd55ac6f44,77713290,0,0x0,8
tick,0x7ffd55ac6f44,77728877,0,0x0,8
tick,0x7ffd55ac6f44,77743900,0,0x0,8
tick,0x7ffd55ac6f44,77758592,0,0x0,8
tick,0x7ffd55ac6f44,77773619,0,0x0,8
tick,0x7ffd55ac6f44,77788738,0,0x0,8
tick,0x7ffd55ac6f44,77804244,0,0x0,8
tick,0x7ffd55ac6f44,77819032,0,0x0,8
tick,0x7ffd55ac6f44,77834738,0,0x0,8
tick,0x7ffd55ac6f44,77850064,0,0x0,8
tick,0x7ffd55ac6f44,77865956,0,0x0,8
tick,0x7ffd55ac6f44,77881881,0,0x0,8
tick,0x7ffd55ac6f44,77897855,0,0x0,8
tick,0x7ffd55ac6f44,77913881,0,0x0,8
tick,0x7ffd55ac6f44,77929122,0,0x0,8
tick,0x7ffd55ac6f44,77945112,0,0x0,8
tick,0x7ffd55ac6f44,77960542,0,0x0,8
tick,0x7ffd55ac6f44,77976539,0,0x0,8
tick,0x7ffd55ac6f44,77992068,0,0x0,8
tick,0x7ffd55ac6f44,78008338,0,0x0,8
tick,0x7ffd55ac6f44,78024322,0,0x0,8
tick,0x7ffd55ac6f44,78039739,0,0x0,8
tick,0x7ffd55ac6f44,78055510,0,0x0,8
tick,0x7ffd55ac6f44,78071572,0,0x0,8
tick,0x7ffd55ac6f44,78087175,0,0x0,8
tick,0x7ffd55ac6f44,78103517,0,0x0,8
tick,0x7ffd55ac6f44,78119278,0,0x0,8
tick,0x7ffd55ac6f44,78134960,0,0x0,8
tick,0x7ffd55ac6f44,78149894,0,0x0,8
tick,0x7ffd55ac6f44,78165087,0,0x0,8
tick,0x7ffd55ac6f44,78179810,0,0x0,8
tick,0x7ffd55ac6f44,78195352,0,0x0,8
tick,0x7ffd55ac6f44,78210393,0,0x0,8
tick,0x7ffd55ac6f44,78225343,0,0x0,8
tick,0x7ffd55ac6f44,78240439,0,0x0,8
tick,0x7ffd55ac6f44,78256210,0,0x0,8
tick,0x7ffd55ac6f44,78271246,0,0x0,8
tick,0x7ffd55ac6f44,78286597,0,0x0,8
tick,0x7ffd55ac6f44,78302251,0,0x0,8
tick,0x7ffd55ac6f44,78317615,0,0x0,8
tick,0x7ffd55ac6f44,78332812,0,0x0,8
tick,0x7ffd55ac6f44,78348762,0,0x0,8
tick,0x7ffd55ac6f44,78364252,0,0x0,8
tick,0x7ffd55ac6f44,78379560,0,0x0,8
tick,0x7ffd55ac6f44,78395217,0,0x0,8
tick,0x7ffd55ac6f44,78410829,0,0x0,8
tick,0x7ffd55ac6f44,78426278,0,0x0,8
tick,0x7ffd55ac6f44,78442219,0,0x0,8
tick,0x7ffd55ac6f44,78457657,0,0x0,8
tick,0x7ffd55ac6f44,78474048,0,0x0,8
tick,0x7ffd55ac6f44,78489801,0,0x0,8
tick,0x7ffd55ac6f44,78505248,0,0x0,8
tick,0x7ffd55ac6f44,78520977,0,0x0,8
tick,0x7ffd55ac6f44,78536168,0,0x0,8
tick,0x7ffd55ac6f44,78552286,0,0x0,8
tick,0x7ffd55ac6f44,78567860,0,0x0,8
tick,0x7ffd55ac6f44,78583429,0,0x0,8
tick,0x7ffd55ac6f44,78599013,0,0x0,8
tick,0x7ffd55ac6f44,78614392,0,0x0,8
tick,0x7ffd55ac6f44,78630564,0,0x0,8
tick,0x7ffd55ac6f44,78646294,0,0x0,8
tick,0x7ffd55ac6f44,78661688,0,0x0,8
tick,0x7ffd55ac6f44,78677464,0,0x0,8
tick,0x7ffd55ac6f44,78693610,0,0x0,8
tick,0x7ffd55ac6f44,78709737,0,0x0,8
tick,0x7ffd55ac6f44,78725200,0,0x0,8
tick,0x7ffd55ac6f44,78741185,0,0x0,8
tick,0x7ffd55ac6f44,78756208,0,0x0,8
tick,0x7ffd55ac6f44,78772170,0,0x0,8
tick,0x7ffd55ac6f44,78787657,0,0x0,8
tick,0x7ffd55ac6f44,78802352,0,0x0,8
tick,0x7ffd55ac6f44,78818249,0,0x0,8
tick,0x7ffd55ac6f44,78833451,0,0x0,8
tick,0x7ffd55ac6f44,78849490,0,0x0,8
tick,0x7ffd55ac6f44,78865660,0,0x0,8
tick,0x7ffd55ac6f44,78880955,0,0x0,8
tick,0x7ffd55ac6f44,78895868,0,0x0,8
tick,0x7ffd55ac6f44,78911354,0,0x0,8
tick,0x7ffd55ac6f44,78927501,0,0x0,8
tick,0x7ffd55ac6f44,78943302,0,0x0,8
tick,0x7ffd55ac6f44,78959082,0,0x0,8
tick,0x7ffd55ac6f44,78974543,0,0x0,8
tick,0x7ffd55ac6f44,78989539,0,0x0,8
tick,0x7ffd55ac6f44,79004532,0,0x0,8
tick,0x7ffd55ac6f44,79019895,0,0x0,8
tick,0x7ffd55ac6f44,79035005,0,0x0,8
tick,0x7ffd55ac6f44,79050081,0,0x0,8
tick,0x7ffd55ac6f44,79065427,0,0x0,8
tick,0x7ffd55ac6f44,79081169,0,0x0,8
tick,0x7ffd55ac6f44,79096313,0,0x0,8
tick,0x7ffd55ac6f44,79111783,0,0x0,8
tick,0x7ffd55ac6f44,79127438,0,0x0,8
tick,0x7ffd55ac6f44,79143837,0,0x0,8
tick,0x7ffd55ac6f44,79159716,0,0x0,8
tick,0x7ffd55ac6f44,79175372,0,0x0,8
tick,0x7ffd55ac6f44,79190605,0,0x0,8
tick,0x7ffd55ac6f44,79206243,0,0x0,8
tick,0x7ffd55ac6f44,79222154,0,0x0,8
tick,0x7ffd55ac6f44,79237632,0,0x0,8
tick,0x7ffd55ac6f44,79252389,0,0x0,8
tick,0x7ffd55ac6f44,79267307,0,0x0,8
tick,0x7ffd55ac6f44,79283115,0,0x0,8
tick,0x7ffd55ac6f44,79298395,0,0x0,8
tick,0x7ffd55ac6f44,79313594,0,0x0,8
tick,0x7ffd55ac6f44,79329434,0,0x0,8
tick,0x7ffd55ac6f44,79344979,0,0x0,8
tick,0x7ffd55ac6f44,79360253,0,0x0,8
tick,0x7ffd55ac6f44,79375308,0,0x0,8
tick,0x7ffd55ac6f44,79390508,0,0x0,8
tick,0x7ffd55ac6f44,79406184,0,0x0,8
tick,0x7ffd55ac6f44,79422293,0,0x0,8
tick,0x7ffd55ac6f44,79437534,0,0x0,8
tick,0x7ffd55ac6f44,79452624,0,0x0,8
tick,0x7ffd55ac6f44,79467943,0,0x0,8
tick,0x7ffd55ac6f44,79482275,0,0x0,8
tick,0x7ffd55ac6f44,79497036,0,0x0,8
tick,0x7ffd55ac6f44,79512074,0,0x0,8
tick,0x7ffd55ac6f44,79527877,0,0x0,8
tick,0x7ffd55ac6f44,79543638,0,0x0,8
tick,0x7ffd55ac6f44,79559625,0,0x0,8
tick,0x7ffd55ac6f44,79575263,0,0x0,8
tick,0x7ffd55ac6f44,79590655,0,0x0,8
tick,0x7ffd55ac6f44,79606067,0,0x0,8
tick,0x7ffd55ac6f44,79621237,0,0x0,8
tick,0x7ffd55ac6f44,79637300,0,0x0,8
tick,0x7ffd55ac6f44,79653408,0,0x0,8
tick,0x7ffd55ac6f44,79668434,0,0x0,8
tick,0x7ffd55ac6f44,79684658,0,0x0,8
tick,0x7ffd55ac6f44,79699634,0,0x0,8
tick,0x7ffd55ac6f44,79715299,0,0x0,8
tick,0x7ffd55ac6f44,79730815,0,0x0,8
tick,0x7ffd55ac6f44,79747164,0,0x0,8
tick,0x7ffd55ac6f44,79762270,0,0x0,8
tick,0x7ffd55ac6f44,79777483,0,0x0,8
tick,0x7ffd55ac6f44,79792662,0,0x0,8
tick,0x7ffd55ac6f44,79808644,0,0x0,8
tick,0x7ffd55ac6f44,79824683,0,0x0,8
tick,0x7ffd55ac6f44,79839851,0,0x0,8
tick,0x7ffd55ac6f44,79855242,0,0x0,8
tick,0x7ffd55ac6f44,79870578,0,0x0,8
tick,0x7ffd55ac6f44,79885617,0,0x0,8
tick,0x7ffd55ac6f44,79900805,0,0x0,8
tick,0x7ffd55ac6f44,79916309,0,0x0,8
tick,0x7ffd55ac6f44,79932095,0,0x0,8
tick,0x7ffd55ac6f44,79948000,0,0x0,8
tick,0x7ffd55ac6f44,79963271,0,0x0,8
tick,0x7ffd55ac6f44,79978902,0,0x0,8
tick,0x7ffd55ac6f44,79994023,0,0x0,8
tick,0x7ffd55ac6f44,80009469,0,0x0,8
tick,0x7ffd55ac6f44,80024689,0,0x0,8
tick,0x7ffd55ac6f44,80039912,0,0x0,8
tick,0x7ffd55ac6f44,80054848,0,0x0,8
tick,0x7ffd55ac6f44,80069695,0,0x0,8
tick,0x7ffd55ac6f44,80085055,0,0x0,8
tick,0x7ffd55ac6f44,80100355,0,0x0,8
tick,0x7ffd55ac6f44,80115449,0,0x0,8
tick,0x7ffd55ac6f44,80130731,0,0x0,8
tick,0x7ffd55ac6f44,80145952,0,0x0,8
tick,0x7ffd55ac6f44,80161586,0,0x0,8
tick,0x7ffd55ac6f44,80176249,0,0x0,8
tick,0x7ffd55ac6f44,80192450,0,0x0,8
tick,0x7ffd55ac6f44,80207614,0,0x0,8
tick,0x7ffd55ac6f44,80223209,0,0x0,8
tick,0x7ffd55ac6f44,80238711,0,0x0,8
tick,0x7ffd55ac6f44,80254397,0,0x0,8
tick,0x7ffd55ac6f44,80269563,0,0x0,8
tick,0x7ffd55ac6f44,80285210,0,0x0,8
tick,0x7ffd55ac6f44,80300602,0,0x0,8
tick,0x7ffd55ac6f44,80315908,0,0x0,8
tick,0x7ffd55ac6f44,80331477,0,0x0,8
tick,0x7ffd55ac6f44,80346662,0,0x0,8
tick,0x7ffd55ac6f44,80362912,0,0x0,8
tick,0x7ffd55ac6f44,80378275,0,0x0,8
tick,0x7ffd55ac6f44,80393682,0,0x0,8
tick,0x7ffd55ac6f44,80408994,0,0x0,8
tick,0x7ffd55ac6f44,80424251,0,0x0,8
tick,0x7ffd55ac6f44,80438948,0,0x0,8
tick,0x7ffd55ac6f44,80454015,0,0x0,8
tick,0x7ffd55ac6f44,80469163,0,0x0,8
tick,0x7ffd55ac6f44,80485029,0,0x0,8
tick,0x7ffd55ac6f44,80500567,0,0x0,8
tick,0x7ffd55ac6f44,80515469,0,0x0,8
tick,0x7ffd55ac6f44,80530533,0,0x0,8
tick,0x7ffd55ac6f44,80546257,0,0x0,8
tick,0x7ffd55ac6f44,80561369,0,0x0,8
tick,0x7ffd55ac6f44,80577138,0,0x0,8
tick,0x7ffd55ac6f44,80592351,0,0x0,8
tick,0x7ffd55ac6f44,80608346,0,0x0,8
tick,0x7ffd55ac6f44,80624530,0,0x0,8
tick,0x7ffd55ac6f44,80639899,0,0x0,8
tick,0x7ffd55ac6f44,80655351,0,0x0,8
tick,0x7ffd55ac6f44,80670795,0,0x0,8
tick,0x7ffd55ac6f44,80686239,0,0x0,8
tick,0x7ffd55ac6f44,80702064,0,0x0,8
tick,0x7ffd55ac6f44,80717480,0,0x0,8
tick,0x7ffd55ac6f44,80733505,0,0x0,8
tick,0x7ffd55ac6f44,80749334,0,0x0,8
tick,0x7ffd55ac6f44,80764820,0,0x0,8
tick,0x7ffd55ac6f44,80780215,0,0x0,8
tick,0x7ffd55ac6f44,80795495,0,0x0,8
tick,0x7ffd55ac6f44,80811300,0,0x0,8
tick,0x7ffd55ac6f44,80827328,0,0x0,8
tick,0x7ffd55ac6f44,80843595,0,0x0,8
tick,0x7ffd55ac6f44,80858731,0,0x0,8
tick,0x7ffd55ac6f44,80874446,0,0x0,8
tick,0x7ffd55ac6f44,80889616,0,0x0,8
tick,0x7ffd55ac6f44,80905333,0,0x0,8
tick,0x7ffd55ac6f44,80921240,0,0x0,8
tick,0x7ffd55ac6f44,80936170,0,0x0,8
tick,0x7ffd55ac6f44,80952101,0,0x0,8
tick,0x7ffd55ac6f44,80967554,0,0x0,8
tick,0x7ffd55ac6f44,80983085,0,0x0,8
tick,0x7ffd55ac6f44,80998073,0,0x0,8
tick,0x7ffd55ac6f44,81013200,0,0x0,8
tick,0x7ffd55ac6f44,81028826,0,0x0,8
tick,0x7ffd55ac6f44,81043533,0,0x0,8
tick,0x7ffd55ac6f44,81059151,0,0x0,8
tick,0x7ffd55ac6f44,81075081,0,0x0,8
tick,0x7ffd55ac6f44,81090293,0,0x0,8
tick,0x7ffd55ac6f44,81105982,0,0x0,8
tick,0x7ffd55ac6f44,81121313,0,0x0,8
tick,0x7ffd55ac6f44,81136805,0,0x0,8
tick,0x7ffd55ac6f44,81152902,0,0x0,8
tick,0x7ffd55ac6f44,81168941,0,0x0,8
tick,0x7ffd55ac6f44,81184957,0,0x0,8
tick,0x7ffd55ac6f44,81200967,0,0x0,8
tick,0x7ffd55ac6f44,81216077,0,0x0,8
tick,0x7ffd55ac6f44,81230972,0,0x0,8
tick,0x7ffd55ac6f44,81246896,0,0x0,8
tick,0x7ffd55ac6f44,81263235,0,0x0,8
tick,0x7ffd55ac6f44,81278045,0,0x0,8
tick,0x7ffd55ac6f44,81293039,0,0x0,8
tick,0x7ffd55ac6f44,81308227,0,0x0,8
tick,0x7ffd55ac6f44,81324143,0,0x0,8
tick,0x7ffd55ac6f44,81339477,0,0x0,8
tick,0x7ffd55ac6f44,81355396,0,0x0,8
tick,0x7ffd55ac6f44,81370833,0,0x0,8
tick,0x7ffd55ac6f44,81386690,0,0x0,8
tick,0x7ffd55ac6f44,81402728,0,0x0,8
tick,0x7ffd55ac6f44,81418256,0,0x0,8
tick,0x7ffd55ac6f44,81433835,0,0x0,8
tick,0x7ffd55ac6f44,81449599,0,0x0,8
tick,0x7ffd55ac6f44,81464860,0,0x0,8
tick,0x7ffd55ac6f44,81480718,0,0x0,8
tick,0x7ffd55ac6f44,81495842,0,0x0,8
tick,0x7ffd55ac6f44,81511964,0,0x0,8
tick,0x7ffd55ac6f44,81527930,0,0x0,8
tick,0x7ffd55ac6f44,81543952,0,0x0,8
tick,0x7ffd55ac6f44,81559496,0,0x0,8
tick,0x7ffd55ac6f44,81575138,0,0x0,8
tick,0x7ffd55ac6f44,81591020,0,0x0,8
tick,0x7ffd55ac6f44,81606411,0,0x0,8
tick,0x7ffd55ac6f44,81622178,0,0x0,8
tick,0x7ffd55ac6f44,81638188,0,0x0,8
tick,0x7ffd55ac6f44,81653927,0,0x0,8
tick,0x7ffd55ac6f44,81669563,0,0x0,8
tick,0x7ffd55ac6f44,81685963,0,0x0,8
tick,0x7ffd55ac6f44,81701231,0,0x0,8
tick,0x7ffd55ac6f44,81716077,0,0x0,8
tick,0x7ffd55ac6f44,81731382,0,0x0,8
tick,0x7ffd55ac6f44,81746230,0,0x0,8
tick,0x7ffd55ac6f44,81761170,0,0x0,8
tick,0x7ffd55ac6f44,81776088,0,0x0,8
tick,0x7ffd55ac6f44,81791505,0,0x0,8
tick,0x7ffd55ac6f44,81806787,0,0x0,8
tick,0x7ffd55ac6f44,81822119,0,0x0,8
tick,0x7ffd55ac6f44,81838076,0,0x0,8
tick,0x7ffd55ac6f44,81853730,0,0x0,8
tick,0x7ffd55ac6f44,81869693,0,0x0,8
tick,0x7ffd55ac6f44,81885404,0,0x0,8
tick,0x7ffd55ac6f44,81900416,0,0x0,8
tick,0x7ffd55ac6f44,81915427,0,0x0,8
tick,0x7ffd55ac6f44,81931403,0,0x0,8
tick,0x7ffd55ac6f44,81947521,0,0x0,8
tick,0x7ffd55ac6f44,81963358,0,0x0,8
tick,0x7ffd55ac6f44,81979398,0,0x0,8
tick,0x7ffd55ac6f44,81995389,0,0x0,8
tick,0x7ffd55ac6f44,82011402,0,0x0,8
tick,0x7ffd55ac6f44,82027347,0,0x0,8
tick,0x7ffd55ac6f44,82043397,0,0x0,8
tick,0x7ffd55ac6f44,82059366,0,0x0,8
tick,0x7ffd55ac6f44,82075363,0,0x0,8
tick,0x7ffd55ac6f44,82091358,0,0x0,8
tick,0x7ffd55ac6f44,82107367,0,0x0,8
tick,0x7ffd55ac6f44,82123392,0,0x0,8
tick,0x7ffd55ac6f44,82139426,0,0x0,8
tick,0x7ffd55ac6f44,82155437,0,0x0,8
tick,0x7ffd55ac6f44,82171418,0,0x0,8
tick,0x7ffd55ac6f44,82186370,0,0x0,8
tick,0x7ffd55ac6f44,82201342,0,0x0,8
tick,0x7ffd55ac6f44,82217435,0,0x0,8
tick,0x7ffd55ac6f44,82233477,0,0x0,8
tick,0x7ffd55ac6f44,82249250,0,0x0,8
tick,0x7ffd55ac6f44,82264578,0,0x0,8
tick,0x7ffd55ac6f44,82280706,0,0x0,8
tick,0x7ffd55ac6f44,82296483,0,0x0,8
tick,0x7ffd55ac6f44,82311572,0,0x0,8
tick,0x7ffd55ac6f44,82327518,0,0x0,8
tick,0x7ffd55ac6f44,82343510,0,0x0,8
tick,0x7ffd55ac6f44,82359721,0,0x0,8
tick,0x7ffd55ac6f44,82374504,0,0x0,8
tick,0x7ffd55ac6f44,82390350,0,0x0,8
tick,0x7ffd55ac6f44,82405407,0,0x0,8
tick,0x7ffd55ac6f44,82420329,0,0x0,8
tick,0x7ffd55ac6f44,82435346,0,0x0,8
tick,0x7ffd55ac6f44,82451101,0,0x0,8
tick,0x7ffd55ac6f44,82467337,0,0x0,8
tick,0x7ffd55ac6f44,82483379,0,0x0,8
tick,0x7ffd55ac6f44,82498793,0,0x0,8
tick,0x7ffd55ac6f44,82514352,0,0x0,8
tick,0x7ffd55ac6f44,82529589,0,0x0,8
tick,0x7ffd55ac6f44,82545068,0,0x0,8
tick,0x7ffd55ac6f44,82560399,0,0x0,8
tick,0x7ffd55ac6f44,82575399,0,0x0,8
tick,0x7ffd55ac6f44,82590446,0,0x0,8
tick,0x7ffd55ac6f44,82605972,0,0x0,8
tick,0x7ffd55ac6f44,82620551,0,0x0,8
tick,0x7ffd55ac6f44,82635234,0,0x0,8
tick,0x7ffd55ac6f44,82651123,0,0x0,8
tick,0x7ffd55ac6f44,82667076,0,0x0,8
tick,0x7ffd55ac6f44,82682139,0,0x0,8
tick,0x7ffd55ac6f44,82697435,0,0x0,8
tick,0x7ffd55ac6f44,82712231,0,0x0,8
tick,0x7ffd55ac6f44,82727822,0,0x0,8
tick,0x7ffd55ac6f44,82743829,0,0x0,8
tick,0x7ffd55ac6f44,82759802,0,0x0,8
tick,0x7ffd55ac6f44,82774813,0,0x0,8
tick,0x7ffd55ac6f44,82790388,0,0x0,8
tick,0x7ffd55ac6f44,82805336,0,0x0,8
tick,0x7ffd55ac6f44,82820171,0,0x0,8
tick,0x7ffd55ac6f44,82835205,0,0x0,8
tick,0x7ffd55ac6f44,82851077,0,0x0,8
tick,0x7ffd55ac6f44,82867236,0,0x0,8
tick,0x7ffd55ac6f44,82883197,0,0x0,8
tick,0x7ffd55ac6f44,82899296,0,0x0,8
tick,0x7ffd55ac6f44,82915092,0,0x0,8
tick,0x7ffd55ac6f44,82930588,0,0x0,8
tick,0x7ffd55ac6f44,82945858,0,0x0,8
tick,0x7ffd55ac6f44,82961419,0,0x0,8
tick,0x7ffd55ac6f44,82977612,0,0x0,8
tick,0x7ffd55ac6f44,82992341,0,0x0,8
tick,0x7ffd55ac6f44,83007668,0,0x0,8
tick,0x7ffd55ac6f44,83023175,0,0x0,8
tick,0x7ffd55ac6f44,83038438,0,0x0,8
tick,0x7ffd55ac6f44,83053745,0,0x0,8
tick,0x7ffd55ac6f44,83069203,0,0x0,8
tick,0x7ffd55ac6f44,83084418,0,0x0,8
tick,0x7ffd55ac6f44,83100752,0,0x0,8
tick,0x7ffd55ac6f44,83115442,0,0x0,8
tick,0x7ffd55ac6f44,83130634,0,0x0,8
tick,0x7ffd55ac6f44,83146083,0,0x0,8
tick,0x7ffd55ac6f44,83161426,0,0x0,8
tick,0x7ffd55ac6f44,83176747,0,0x0,8
tick,0x7ffd55ac6f44,83192181,0,0x0,8
tick,0x7ffd55ac6f44,83207737,0,0x0,8
tick,0x7ffd55ac6f44,83223611,0,0x0,8
tick,0x7ffd55ac6f44,83238807,0,0x0,8
tick,0x7ffd55ac6f44,83253535,0,0x0,8
tick,0x7ffd55ac6f44,83269299,0,0x0,8
tick,0x7ffd55ac6f44,83284509,0,0x0,8
tick,0x7ffd55ac6f44,83300612,0,0x0,8
tick,0x7ffd55ac6f44,83315481,0,0x0,8
tick,0x7ffd55ac6f44,83330506,0,0x0,8
tick,0x7ffd55ac6f44,83345526,0,0x0,8
tick,0x7ffd55ac6f44,83360762,0,0x0,8
tick,0x7ffd55ac6f44,83376415,0,0x0,8
tick,0x7ffd55ac6f44,83392360,0,0x0,8
tick,0x7ffd55ac6f44,83407464,0,0x0,8
tick,0x7ffd55ac6f44,83422771,0,0x0,8
tick,0x7ffd55ac6f44,83438386,0,0x0,8
tick,0x7ffd55ac6f44,83453792,0,0x0,8
tick,0x7ffd55ac6f44,83468772,0,0x0,8
tick,0x7ffd55ac6f44,83484618,0,0x0,8
tick,0x7ffd55ac6f44,83500161,0,0x0,8
tick,0x7ffd55ac6f44,83515373,0,0x0,8
tick,0x7ffd55ac6f44,83530764,0,0x0,8
tick,0x7ffd55ac6f44,83545962,0,0x0,8
tick,0x7ffd55ac6f44,83561986,0,0x0,8
tick,0x7ffd55ac6f44,83577513,0,0x0,8
tick,0x7ffd55ac6f44,83593504,0,0x0,8
tick,0x7ffd55ac6f44,83609742,0,0x0,8
tick,0x7ffd55ac6f44,83624993,0,0x0,8
tick,0x7ffd55ac6f44,83640461,0,0x0,8
tick,0x7ffd55ac6f44,83655764,0,0x0,8
tick,0x7ffd55ac6f44,83671964,0,0x0,8
tick,0x7ffd55ac6f44,83687789,0,0x0,8
tick,0x7ffd55ac6f44,83703051,0,0x0,8
tick,0x7ffd55ac6f44,83718368,0,0x0,8
tick,0x7ffd55ac6f44,83733680,0,0x0,8
tick,0x7ffd55ac6f44,83748948,0,0x0,8
tick,0x7ffd55ac6f44,83764294,0,0x0,8
tick,0x7ffd55ac6f44,83779809,0,0x0,8
tick,0x7ffd55ac6f44,83795315,0,0x0,8
tick,0x7ffd55ac6f44,83810754,0,0x0,8
tick,0x7ffd55ac6f44,83825702,0,0x0,8
tick,0x7ffd55ac6f44,83840582,0,0x0,8
tick,0x7ffd55ac6f44,83856066,0,0x0,8
tick,0x7ffd55ac6f44,83871335,0,0x0,8
tick,0x7ffd55ac6f44,83887548,0,0x0,8
tick,0x7ffd55ac6f44,83902857,0,0x0,8
tick,0x7ffd55ac6f44,83918112,0,0x0,8
tick,0x7ffd55ac6f44,83933601,0,0x0,8
tick,0x7ffd55ac6f44,83949766,0,0x0,8
tick,0x7ffd55ac6f44,83965545,0,0x0,8
tick,0x7ffd55ac6f44,83980579,0,0x0,8
tick,0x7ffd55ac6f44,83996161,0,0x0,8
tick,0x7ffd55ac6f44,84012468,0,0x0,8
tick,0x7ffd55ac6f44,84027805,0,0x0,8
tick,0x7ffd55ac6f44,84043353,0,0x0,8
tick,0x7ffd55ac6f44,84058669,0,0x0,8
tick,0x7ffd55ac6f44,84074260,0,0x0,8
tick,0x7ffd55ac6f44,84089583,0,0x0,8
tick,0x7ffd55ac6f44,84105370,0,0x0,8
tick,0x7ffd55ac6f44,84120543,0,0x0,8
tick,0x7ffd55ac6f44,84136337,0,0x0,8
tick,0x7ffd55ac6f44,84152407,0,0x0,8
tick,0x7ffd55ac6f44,84168481,0,0x0,8
tick,0x7ffd55ac6f44,84183517,0,0x0,8
tick,0x7ffd55ac6f44,84198644,0,0x0,8
tick,0x7ffd55ac6f44,84214544,0,0x0,8
tick,0x7ffd55ac6f44,84229815,0,0x0,8
tick,0x7ffd55ac6f44,84245176,0,0x0,8
tick,0x7ffd55ac6f44,84260635,0,0x0,8
tick,0x7ffd55ac6f44,84275377,0,0x0,8
tick,0x7ffd55ac6f44,84290266,0,0x0,8
tick,0x7ffd55ac6f44,84305333,0,0x0,8
tick,0x7ffd55ac6f44,84320870,0,0x0,8
tick,0x7ffd55ac6f44,84336215,0,0x0,8
tick,0x7ffd55ac6f44,84351780,0,0x0,8
tick,0x7ffd55ac6f44,84367301,0,0x0,8
tick,0x7ffd55ac6f44,84382250,0,0x0,8
tick,0x7ffd55ac6f44,84397184,0,0x0,8
tick,0x7ffd55ac6f44,84412868,0,0x0,8
tick,0x7ffd55ac6f44,84428526,0,0x0,8
tick,0x7ffd55ac6f44,84443980,0,0x0,8
tick,0x7ffd55ac6f44,84459471,0,0x0,8
tick,0x7ffd55ac6f44,84475193,0,0x0,8
tick,0x7ffd55ac6f44,84490540,0,0x0,8
tick,0x7ffd55ac6f44,84506341,0,0x0,8
tick,0x7ffd55ac6f44,84521283,0,0x0,8
tick,0x7ffd55ac6f44,84536122,0,0x0,8
tick,0x7ffd55ac6f44,84551424,0,0x0,8
tick,0x7ffd55ac6f44,84566701,0,0x0,8
tick,0x7ffd55ac6f44,84582611,0,0x0,8
tick,0x7ffd55ac6f44,84598698,0,0x0,8
tick,0x7ffd55ac6f44,84614431,0,0x0,8
tick,0x7ffd55ac6f44,84630651,0,0x0,8
tick,0x7ffd55ac6f44,84645911,0,0x0,8
tick,0x7ffd55ac6f44,84661361,0,0x0,8
tick,0x7ffd55ac6f44,84676263,0,0x0,8
tick,0x7ffd55ac6f44,84691136,0,0x0,8
tick,0x7ffd55ac6f44,84705868,0,0x0,8
tick,0x7ffd55ac6f44,84721185,0,0x0,8
tick,0x7ffd55ac6f44,84736198,0,0x0,8
tick,0x7ffd55ac6f44,84752180,0,0x0,8
tick,0x7ffd55ac6f44,84767454,0,0x0,8
tick,0x7ffd55ac6f44,84783489,0,0x0,8
tick,0x7ffd55ac6f44,84799020,0,0x0,8
tick,0x7ffd55ac6f44,84814828,0,0x0,8
tick,0x7ffd55ac6f44,84830362,0,0x0,8
tick,0x7ffd55ac6f44,84846308,0,0x0,8
tick,0x7ffd55ac6f44,84861285,0,0x0,8
tick,0x7ffd55ac6f44,84876594,0,0x0,8
tick,0x7ffd55ac6f44,84892270,0,0x0,8
tick,0x7ffd55ac6f44,84907991,0,0x0,8
tick,0x7ffd55ac6f44,84923303,0,0x0,8
tick,0x7ffd55ac6f44,84938843,0,0x0,8
tick,0x7ffd55ac6f44,84954864,0,0x0,8
tick,0x7ffd55ac6f44,84969991,0,0x0,8
tick,0x7ffd55ac6f44,84985537,0,0x0,8
tick,0x7ffd55ac6f44,85001358,0,0x0,8
tick,0x7ffd55ac6f44,85017427,0,0x0,8
tick,0x7ffd55ac6f44,85033385,0,0x0,8
tick,0x7ffd55ac6f44,85049435,0,0x0,8
tick,0x7ffd55ac6f44,85065448,0,0x0,8
tick,0x7ffd55ac6f44,85081691,0,0x0,8
tick,0x7ffd55ac6f44,85096923,0,0x0,8
tick,0x7ffd55ac6f44,85112821,0,0x0,8
tick,0x7ffd55ac6f44,85127836,0,0x0,8
tick,0x7ffd55ac6f44,85142861,0,0x0,8
tick,0x7ffd55ac6f44,85158125,0,0x0,8
tick,0x7ffd55ac6f44,85173489,0,0x0,8
tick,0x7ffd55ac6f44,85188123,0,0x0,8
tick,0x7ffd55ac6f44,85203582,0,0x0,8
tick,0x7ffd55ac6f44,85219547,0,0x0,8
tick,0x7ffd55ac6f44,85234087,0,0x0,8
tick,0x7ffd55ac6f44,85250105,0,0x0,8
tick,0x7ffd55ac6f44,85265208,0,0x0,8
tick,0x7ffd55ac6f44,85280436,0,0x0,8
tick,0x7ffd55ac6f44,85295270,0,0x0,8
tick,0x7ffd55ac6f44,85310114,0,0x0,8
tick,0x7ffd55ac6f44,85325342,0,0x0,8
tick,0x7ffd55ac6f44,85340341,0,0x0,8
tick,0x7ffd55ac6f44,85356321,0,0x0,8
tick,0x7ffd55ac6f44,85372326,0,0x0,8
tick,0x7ffd55ac6f44,85388423,0,0x0,8
tick,0x7ffd55ac6f44,85404312,0,0x0,8
tick,0x7ffd55ac6f44,85419478,0,0x0,8
tick,0x7ffd55ac6f44,85434365,0,0x0,8
tick,0x7ffd55ac6f44,85449296,0,0x0,8
tick,0x7ffd55ac6f44,85464421,0,0x0,8
tick,0x7ffd55ac6f44,85479739,0,0x0,8
tick,0x7ffd55ac6f44,85495375,0,0x0,8
tick,0x7ffd55ac6f44,85511310,0,0x0,8
tick,0x7ffd55ac6f44,85525903,0,0x0,8
tick,0x7ffd55ac6f44,85541981,0,0x0,8
tick,0x7ffd55ac6f44,85557476,0,0x0,8
tick,0x7ffd55ac6f44,85573293,0,0x0,8
tick,0x7ffd55ac6f44,85589860,0,0x0,8
tick,0x7ffd55ac6f44,85604997,0,0x0,8
tick,0x7ffd55ac6f44,85620894,0,0x0,8
tick,0x7ffd55ac6f44,85636122,0,0x0,8
tick,0x7ffd55ac6f44,85652200,0,0x0,8
tick,0x7ffd55ac6f44,85668208,0,0x0,8
tick,0x7ffd55ac6f44,85683319,0,0x0,8
tick,0x7ffd55ac6f44,85698461,0,0x0,8
tick,0x7ffd55ac6f44,85714442,0,0x0,8
tick,0x7ffd55ac6f44,85729472,0,0x0,8
tick,0x7ffd55ac6f44,85744198,0,0x0,8
tick,0x7ffd55ac6f44,85759474,0,0x0,8
tick,0x7ffd55ac6f44,85774599,0,0x0,8
tick,0x7ffd55ac6f44,85789724,0,0x0,8
tick,0x7ffd55ac6f44,85804831,0,0x0,8
tick,0x7ffd55ac6f44,85819355,0,0x0,8
tick,0x7ffd55ac6f44,85834512,0,0x0,8
tick,0x7ffd55ac6f44,85849406,0,0x0,8
tick,0x7ffd55ac6f44,85864367,0,0x0,8
tick,0x7ffd55ac6f44,85879360,0,0x0,8
tick,0x7ffd55ac6f44,85894411,0,0x0,8
tick,0x7ffd55ac6f44,85910436,0,0x0,8
tick,0x7ffd55ac6f44,85926434,0,0x0,8
tick,0x7ffd55ac6f44,85941879,0,0x0,8
tick,0x7ffd55ac6f44,85957402,0,0x0,8
tick,0x7ffd55ac6f44,85973253,0,0x0,8
tick,0x7ffd55ac6f44,85989023,0,0x0,8
tick,0x7ffd55ac6f44,86003986,0,0x0,8
tick,0x7ffd55ac6f44,86019010,0,0x0,8
tick,0x7ffd55ac6f44,86035028,0,0x0,8
tick,0x7ffd55ac6f44,86050973,0,0x0,8
tick,0x7ffd55ac6f44,86067060,0,0x0,8
tick,0x7ffd55ac6f44,86082867,0,0x0,8
tick,0x7ffd55ac6f44,86098306,0,0x0,8
tick,0x7ffd55ac6f44,86113364,0,0x0,8
tick,0x7ffd55ac6f44,86129185,0,0x0,8
tick,0x7ffd55ac6f44,86144111,0,0x0,8
tick,0x7ffd55ac6f44,86159484,0,0x0,8
tick,0x7ffd55ac6f44,86175021,0,0x0,8
tick,0x7ffd55ac6f44,86191098,0,0x0,8
tick,0x7ffd55ac6f44,86206886,0,0x0,8
tick,0x7ffd55ac6f44,86222843,0,0x0,8
tick,0x7ffd55ac6f44,86238876,0,0x0,8
tick,0x7ffd55ac6f44,86253822,0,0x0,8
tick,0x7ffd55ac6f44,86268828,0,0x0,8
tick,0x7ffd55ac6f44,86285017,0,0x0,8
tick,0x7ffd55ac6f44,86299833,0,0x0,8
tick,0x7ffd55ac6f44,86315354,0,0x0,8
tick,0x7ffd55ac6f44,86331025,0,0x0,8
tick,0x7ffd55ac6f44,86346685,0,0x0,8
tick,0x7ffd55ac6f44,86362020,0,0x0,8
tick,0x7ffd55ac6f44,86377405,0,0x0,8
tick,0x7ffd55ac6f44,86393390,0,0x0,8
tick,0x7ffd55ac6f44,86409436,0,0x0,8
tick,0x7ffd55ac6f44,86424614,0,0x0,8
tick,0x7ffd55ac6f44,86439433,0,0x0,8
tick,0x7ffd55ac6f44,86455499,0,0x0,8
tick,0x7ffd55ac6f44,86471450,0,0x0,8
tick,0x7ffd55ac6f44,86487460,0,0x0,8
tick,0x7ffd55ac6f44,86503522,0,0x0,8
tick,0x7ffd55ac6f44,86519000,0,0x0,8
tick,0x7ffd55ac6f44,86534226,0,0x0,8
tick,0x7ffd55ac6f44,86550299,0,0x0,8
tick,0x7ffd55ac6f44,86566311,0,0x0,8
tick,0x7ffd55ac6f44,86581830,0,0x0,8
tick,0x7ffd55ac6f44,86597616,0,0x0,8
tick,0x7ffd55ac6f44,86613141,0,0x0,8
tick,0x7ffd55ac6f44,86628510,0,0x0,8
tick,0x7ffd55ac6f44,86644616,0,0x0,8
tick,0x7ffd55ac6f44,86660496,0,0x0,8
tick,0x7ffd55ac6f44,86676790,0,0x0,8
tick,0x7ffd55ac6f44,86692790,0,0x0,8
tick,0x7ffd55ac6f44,86708381,0,0x0,8
tick,0x7ffd55ac6f44,86723732,0,0x0,8
tick,0x7ffd55ac6f44,86739342,0,0x0,8
tick,0x7ffd55ac6f44,86754482,0,0x0,8
tick,0x7ffd55ac6f44,86769956,0,0x0,8
tick,0x7ffd55ac6f44,86785384,0,0x0,8
tick,0x7ffd55ac6f44,86801242,0,0x0,8
tick,0x7ffd55ac6f44,86817062,0,0x0,8
tick,0x7ffd55ac6f44,86832246,0,0x0,8
tick,0x7ffd55ac6f44,86846908,0,0x0,8
tick,0x7ffd55ac6f44,86862799,0,0x0,8
tick,0x7ffd55ac6f44,86878431,0,0x0,8
tick,0x7ffd55ac6f44,86893754,0,0x0,8
tick,0x7ffd55ac6f44,86908995,0,0x0,8
tick,0x7ffd55ac6f44,86924723,0,0x0,8
tick,0x7ffd55ac6f44,86940276,0,0x0,8
tick,0x7ffd55ac6f44,86955229,0,0x0,8
tick,0x7ffd55ac6f44,86970057,0,0x0,8
tick,0x7ffd55ac6f44,86985649,0,0x0,8
tick,0x7ffd55ac6f44,87001317,0,0x0,8
tick,0x7ffd55ac6f44,87016382,0,0x0,8
tick,0x7ffd55ac6f44,87031750,0,0x0,8
tick,0x7ffd55ac6f44,87047259,0,0x0,8
tick,0x7ffd55ac6f44,87063313,0,0x0,8
tick,0x7ffd55ac6f44,87078530,0,0x0,8
tick,0x7ffd55ac6f44,87094707,0,0x0,8
tick,0x7ffd55ac6f44,87110498,0,0x0,8
tick,0x7ffd55ac6f44,87125893,0,0x0,8
tick,0x7ffd55ac6f44,87141991,0,0x0,8
tick,0x7ffd55ac6f44,87157996,0,0x0,8
tick,0x7ffd55ac6f44,87173930,0,0x0,8
tick,0x7ffd55ac6f44,87189527,0,0x0,8
tick,0x7ffd55ac6f44,87205043,0,0x0,8
tick,0x7ffd55ac6f44,87221206,0,0x0,8
tick,0x7ffd55ac6f44,87237022,0,0x0,8
tick,0x7ffd55ac6f44,87252419,0,0x0,8
tick,0x7ffd55ac6f44,87268015,0,0x0,8
tick,0x7ffd55ac6f44,87283671,0,0x0,8
tick,0x7ffd55ac6f44,87299496,0,0x0,8
tick,0x7ffd55ac6f44,87314880,0,0x0,8
tick,0x7ffd55ac6f44,87330302,0,0x0,8
tick,0x7ffd55ac6f44,87346214,0,0x0,8
tick,0x7ffd55ac6f44,87360841,0,0x0,8
tick,0x7ffd55ac6f44,87376986,0,0x0,8
tick,0x7ffd55ac6f44,87392242,0,0x0,8
tick,0x7ffd55ac6f44,87408331,0,0x0,8
tick,0x7ffd55ac6f44,87423307,0,0x0,8
tick,0x7ffd55ac6f44,87439233,0,0x0,8
tick,0x7ffd55ac6f44,87454904,0,0x0,8
tick,0x7ffd55ac6f44,87470943,0,0x0,8
tick,0x7ffd55ac6f44,87486266,0,0x0,8
tick,0x7ffd55ac6f44,87501903,0,0x0,8
tick,0x7ffd55ac6f44,87518165,0,0x0,8
tick,0x7ffd55ac6f44,87533498,0,0x0,8
tick,0x7ffd55ac6f44,87549386,0,0x0,8
tick,0x7ffd55ac6f44,87565033,0,0x0,8
tick,0x7ffd55ac6f44,87581159,0,0x0,8
tick,0x7ffd55ac6f44,87597243,0,0x0,8
tick,0x7ffd55ac6f44,87612214,0,0x0,8
tick,0x7ffd55ac6f44,87627388,0,0x0,8
tick,0x7ffd55ac6f44,87643283,0,0x0,8
tick,0x7ffd55ac6f44,87659486,0,0x0,8
tick,0x7ffd55ac6f44,87675215,0,0x0,8
tick,0x7ffd55ac6f44,87690745,0,0x0,8
tick,0x7ffd55ac6f44,87705883,0,0x0,8
tick,0x7ffd55ac6f44,87721587,0,0x0,8
tick,0x7ffd55ac6f44,87736998,0,0x0,8
tick,0x7ffd55ac6f44,87752466,0,0x0,8
tick,0x7ffd55ac6f44,87767728,0,0x0,8
tick,0x7ffd55ac6f44,87783402,0,0x0,8
tick,0x7ffd55ac6f44,87799427,0,0x0,8
tick,0x7ffd55ac6f44,87814392,0,0x0,8
tick,0x7ffd55ac6f44,87830303,0,0x0,8
tick,0x7ffd55ac6f44,87846257,0,0x0,8
tick,0x7ffd55ac6f44,87861519,0,0x0,8
tick,0x7ffd55ac6f44,87876178,0,0x0,8
tick,0x7ffd55ac6f44,87891427,0,0x0,8
tick,0x7ffd55ac6f44,87907188,0,0x0,8
tick,0x7ffd55ac6f44,87923440,0,0x0,8
tick,0x7ffd55ac6f44,87938985,0,0x0,8
tick,0x7ffd55ac6f44,87954669,0,0x0,8
tick,0x7ffd55ac6f44,87970630,0,0x0,8
tick,0x7ffd55ac6f44,87985831,0,0x0,8
tick,0x7ffd55ac6f44,88001130,0,0x0,8
tick,0x7ffd55ac6f44,88017181,0,0x0,8
tick,0x7ffd55ac6f44,88033174,0,0x0,8
tick,0x7ffd55ac6f44,88048329,0,0x0,8
tick,0x7ffd55ac6f44,88064451,0,0x0,8
tick,0x7ffd55ac6f44,88080082,0,0x0,8
tick,0x7ffd55ac6f44,88095661,0,0x0,8
tick,0x7ffd55ac6f44,88111209,0,0x0,8
tick,0x7ffd55ac6f44,88126473,0,0x0,8
tick,0x7ffd55ac6f44,88142392,0,0x0,8
tick,0x7ffd55ac6f44,88157626,0,0x0,8
tick,0x7ffd55ac6f44,88173336,0,0x0,8
tick,0x7ffd55ac6f44,88188515,0,0x0,8
tick,0x7ffd55ac6f44,88203534,0,0x0,8
tick,0x7ffd55ac6f44,88219075,0,0x0,8
tick,0x7ffd55ac6f44,88234418,0,0x0,8
tick,0x7ffd55ac6f44,88249932,0,0x0,8
tick,0x7ffd55ac6f44,88265434,0,0x0,8
tick,0x7ffd55ac6f44,88281266,0,0x0,8
tick,0x7ffd55ac6f44,88296681,0,0x0,8
tick,0x7ffd55ac6f44,88312446,0,0x0,8
tick,0x7ffd55ac6f44,88327749,0,0x0,8
tick,0x7ffd55ac6f44,88343436,0,0x0,8
tick,0x7ffd55ac6f44,88359329,0,0x0,8
tick,0x7ffd55ac6f44,88374632,0,0x0,8
tick,0x7ffd55ac6f44,88390061,0,0x0,8
tick,0x7ffd55ac6f44,88405437,0,0x0,8
tick,0x7ffd55ac6f44,88420577,0,0x0,8
tick,0x7ffd55ac6f44,88436233,0,0x0,8
tick,0x7ffd55ac6f44,88452250,0,0x0,8
tick,0x7ffd55ac6f44,88467789,0,0x0,8
tick,0x7ffd55ac6f44,88483829,0,0x0,8
tick,0x7ffd55ac6f44,88500092,0,0x0,8
tick,0x7ffd55ac6f44,88515331,0,0x0,8
tick,0x7ffd55ac6f44,88531270,0,0x0,8
tick,0x7ffd55ac6f44,88546260,0,0x0,8
tick,0x7ffd55ac6f44,88561329,0,0x0,8
tick,0x7ffd55ac6f44,88577344,0,0x0,8
tick,0x7ffd55ac6f44,88593412,0,0x0,8
tick,0x7ffd55ac6f44,88609383,0,0x0,8
tick,0x7ffd55ac6f44,88625207,0,0x0,8
tick,0x7ffd55ac6f44,88640547,0,0x0,8
tick,0x7ffd55ac6f44,88656110,0,0x0,8
tick,0x7ffd55ac6f44,88671746,0,0x0,8
tick,0x7ffd55ac6f44,88687336,0,0x0,8
tick,0x7ffd55ac6f44,88703479,0,0x0,8
tick,0x7ffd55ac6f44,88719136,0,0x0,8
tick,0x7ffd55ac6f44,88734339,0,0x0,8
tick,0x7ffd55ac6f44,88749690,0,0x0,8
tick,0x7ffd55ac6f44,88765215,0,0x0,8
tick,0x7ffd55ac6f44,88780639,0,0x0,8
tick,0x7ffd55ac6f44,88795616,0,0x0,8
tick,0x7ffd55ac6f44,88810683,0,0x0,8
tick,0x7ffd55ac6f44,88826404,0,0x0,8
tick,0x7ffd55ac6f44,88841601,0,0x0,8
tick,0x7ffd55ac6f44,88857066,0,0x0,8
tick,0x7ffd55ac6f44,88873284,0,0x0,8
tick,0x7ffd55ac6f44,88889430,0,0x0,8
tick,0x7ffd55ac6f44,88905236,0,0x0,8
tick,0x7ffd55ac6f44,88920725,0,0x0,8
tick,0x7ffd55ac6f44,88936113,0,0x0,8
tick,0x7ffd55ac6f44,88951330,0,0x0,8
tick,0x7ffd55ac6f44,88967197,0,0x0,8
tick,0x7ffd55ac6f44,88983317,0,0x0,8
tick,0x7ffd55ac6f44,88998776,0,0x0,8
tick,0x7ffd55ac6f44,89014167,0,0x0,8
tick,0x7ffd55ac6f44,89029419,0,0x0,8
tick,0x7ffd55ac6f44,89044520,0,0x0,8
tick,0x7ffd55ac6f44,89060364,0,0x0,8
tick,0x7ffd55ac6f44,89075491,0,0x0,8
tick,0x7ffd55ac6f44,89090459,0,0x0,8
tick,0x7ffd55ac6f44,89105296,0,0x0,8
tick,0x7ffd55ac6f44,89120947,0,0x0,8
tick,0x7ffd55ac6f44,89135666,0,0x0,8
tick,0x7ffd55ac6f44,89151830,0,0x0,8
tick,0x7ffd55ac6f44,89167188,0,0x0,8
tick,0x7ffd55ac6f44,89182389,0,0x0,8
tick,0x7ffd55ac6f44,89197863,0,0x0,8
tick,0x7ffd55ac6f44,89213836,0,0x0,8
tick,0x7ffd55ac6f44,89229494,0,0x0,8
tick,0x7ffd55ac6f44,89244728,0,0x0,8
tick,0x7ffd55ac6f44,89259999,0,0x0,8
tick,0x7ffd55ac6f44,89275626,0,0x0,8
tick,0x7ffd55ac6f44,89290970,0,0x0,8
tick,0x7ffd55ac6f44,89306049,0,0x0,8
tick,0x7ffd55ac6f44,89321303,0,0x0,8
tick,0x7ffd55ac6f44,89337576,0,0x0,8
tick,0x7ffd55ac6f44,89352648,0,0x0,8
tick,0x7ffd55ac6f44,89367617,0,0x0,8
tick,0x7ffd55ac6f44,89383566,0,0x0,8
tick,0x7ffd55ac6f44,89398944,0,0x0,8
tick,0x7ffd55ac6f44,89414166,0,0x0,8
tick,0x7ffd55ac6f44,89430570,0,0x0,8
tick,0x7ffd55ac6f44,89445940,0,0x0,8
tick,0x7ffd55ac6f44,89462112,0,0x0,8
tick,0x7ffd55ac6f44,89477168,0,0x0,8
tick,0x7ffd55ac6f44,89492200,0,0x0,8
tick,0x7ffd55ac6f44,89507393,0,0x0,8
tick,0x7ffd55ac6f44,89523366,0,0x0,8
tick,0x7ffd55ac6f44,89538776,0,0x0,8
tick,0x7ffd55ac6f44,89554432,0,0x0,8
tick,0x7ffd55ac6f44,89570335,0,0x0,8
tick,0x7ffd55ac6f44,89585989,0,0x0,8
tick,0x7ffd55ac6f44,89602005,0,0x0,8
tick,0x7ffd55ac6f44,89617934,0,0x0,8
tick,0x7ffd55ac6f44,89633966,0,0x0,8
tick,0x7ffd55ac6f44,89650189,0,0x0,8
tick,0x7ffd55ac6f44,89665266,0,0x0,8
tick,0x7ffd55ac6f44,89681196,0,0x0,8
tick,0x7ffd55ac6f44,89696908,0,0x0,8
tick,0x7ffd55ac6f44,89712354,0,0x0,8
tick,0x7ffd55ac6f44,89727799,0,0x0,8
tick,0x7ffd55ac6f44,89744190,0,0x0,8
tick,0x7ffd55ac6f44,89760837,0,0x0,8
tick,0x7ffd55ac6f44,89776414,0,0x0,8
tick,0x7ffd55ac6f44,89791822,0,0x0,8
tick,0x7ffd55ac6f44,89807585,0,0x0,8
tick,0x7ffd55ac6f44,89823797,0,0x0,8
tick,0x7ffd55ac6f44,89840213,0,0x0,8
tick,0x7ffd55ac6f44,89856069,0,0x0,8
tick,0x7ffd55ac6f44,89872096,0,0x0,8
tick,0x7ffd55ac6f44,89888557,0,0x0,8
tick,0x7ffd55ac6f44,89904481,0,0x0,8
tick,0x7ffd55ac6f44,89919994,0,0x0,8
tick,0x7ffd55ac6f44,89935480,0,0x0,8
tick,0x7ffd55ac6f44,89950711,0,0x0,8
tick,0x7ffd55ac6f44,89966767,0,0x0,8
tick,0x7ffd55ac6f44,89982229,0,0x0,8
tick,0x7ffd55ac6f44,89997189,0,0x0,8
tick,0x7ffd55ac6f44,90012073,0,0x0,8
tick,0x7ffd55ac6f44,90026879,0,0x0,8
tick,0x7ffd55ac6f44,90042146,0,0x0,8
tick,0x7ffd55ac6f44,90057505,0,0x0,8
tick,0x7ffd55ac6f44,90073915,0,0x0,8
tick,0x7ffd55ac6f44,90089652,0,0x0,8
tick,0x7ffd55ac6f44,90104869,0,0x0,8
tick,0x7ffd55ac6f44,90119880,0,0x0,8
tick,0x7ffd55ac6f44,90135662,0,0x0,8
tick,0x7ffd55ac6f44,90151236,0,0x0,8
tick,0x7ffd55ac6f44,90166361,0,0x0,8
tick,0x7ffd55ac6f44,90182350,0,0x0,8
tick,0x7ffd55ac6f44,90197706,0,0x0,8
tick,0x7ffd55ac6f44,90212529,0,0x0,8
tick,0x7ffd55ac6f44,90227784,0,0x0,8
tick,0x7ffd55ac6f44,90243724,0,0x0,8
tick,0x7ffd55ac6f44,90258809,0,0x0,8
tick,0x7ffd55ac6f44,90274474,0,0x0,8
tick,0x7ffd55ac6f44,90290908,0,0x0,8
tick,0x7ffd55ac6f44,90307324,0,0x0,8
tick,0x7ffd55ac6f44,90322686,0,0x0,8
tick,0x7ffd55ac6f44,90339073,0,0x0,8
tick,0x7ffd55ac6f44,90355365,0,0x0,8
tick,0x7ffd55ac6f44,90371308,0,0x0,8
tick,0x7ffd55ac6f44,90387480,0,0x0,8
tick,0x7ffd55ac6f44,90402841,0,0x0,8
tick,0x7ffd55ac6f44,90417656,0,0x0,8
tick,0x7ffd55ac6f44,90433018,0,0x0,8
tick,0x7ffd55ac6f44,90448363,0,0x0,8
tick,0x7ffd55ac6f44,90464018,0,0x0,8
tick,0x7ffd55ac6f44,90479132,0,0x0,8
tick,0x7ffd55ac6f44,90494416,0,0x0,8
tick,0x7ffd55ac6f44,90510017,0,0x0,8
tick,0x7ffd55ac6f44,90525095,0,0x0,8
tick,0x7ffd55ac6f44,90540654,0,0x0,8
tick,0x7ffd55ac6f44,90556447,0,0x0,8
tick,0x7ffd55ac6f44,90572169,0,0x0,8
tick,0x7ffd55ac6f44,90587391,0,0x0,8
tick,0x7ffd55ac6f44,90603576,0,0x0,8
tick,0x7ffd55ac6f44,90619237,0,0x0,8
tick,0x7ffd55ac6f44,90634979,0,0x0,8
tick,0x7ffd55ac6f44,90649888,0,0x0,8
tick,0x7ffd55ac6f44,90664812,0,0x0,8
tick,0x7ffd55ac6f44,90679850,0,0x0,8
tick,0x7ffd55ac6f44,90695794,0,0x0,8
tick,0x7ffd55ac6f44,90711979,0,0x0,8
tick,0x7ffd55ac6f44,90728126,0,0x0,8
tick,0x7ffd55ac6f44,90743672,0,0x0,8
tick,0x7ffd55ac6f44,90758629,0,0x0,8
tick,0x7ffd55ac6f44,90774556,0,0x0,8
tick,0x7ffd55ac6f44,90790318,0,0x0,8
tick,0x7ffd55ac6f44,90805547,0,0x0,8
tick,0x7ffd55ac6f44,90820692,0,0x0,8
tick,0x7ffd55ac6f44,90835549,0,0x0,8
tick,0x7ffd55ac6f44,90851364,0,0x0,8
tick,0x7ffd55ac6f44,90867416,0,0x0,8
tick,0x7ffd55ac6f44,90882986,0,0x0,8
tick,0x7ffd55ac6f44,90898818,0,0x0,8
tick,0x7ffd55ac6f44,90913508,0,0x0,8
tick,0x7ffd55ac6f44,90928488,0,0x0,8
tick,0x7ffd55ac6f44,90944407,0,0x0,8
tick,0x7ffd55ac6f44,90960223,0,0x0,8
tick,0x7ffd55ac6f44,90975504,0,0x0,8
tick,0x7ffd55ac6f44,90991212,0,0x0,8
tick,0x7ffd55ac6f44,91006859,0,0x0,8
tick,0x7ffd55ac6f44,91022109,0,0x0,8
tick,0x7ffd55ac6f44,91037740,0,0x0,8
tick,0x7ffd55ac6f44,91053449,0,0x0,8
tick,0x7ffd55ac6f44,91068563,0,0x0,8
tick,0x7ffd55ac6f44,91084155,0,0x0,8
tick,0x7ffd55ac6f44,91099370,0,0x0,8
tick,0x7ffd55ac6f44,91114789,0,0x0,8
tick,0x7ffd55ac6f44,91130439,0,0x0,8
tick,0x7ffd55ac6f44,91146018,0,0x0,8
tick,0x7ffd55ac6f44,91162010,0,0x0,8
tick,0x7ffd55ac6f44,91177704,0,0x0,8
tick,0x7ffd55ac6f44,91193506,0,0x0,8
tick,0x7ffd55ac6f44,91209768,0,0x0,8
tick,0x7ffd55ac6f44,91225299,0,0x0,8
tick,0x7ffd55ac6f44,91240680,0,0x0,8
tick,0x7ffd55ac6f44,91255969,0,0x0,8
tick,0x7ffd55ac6f44,91271744,0,0x0,8
tick,0x7ffd55ac6f44,91287462,0,0x0,8
tick,0x7ffd55ac6f44,91303389,0,0x0,8
tick,0x7ffd55ac6f44,91318797,0,0x0,8
tick,0x7ffd55ac6f44,91334293,0,0x0,8
tick,0x7ffd55ac6f44,91349561,0,0x0,8
tick,0x7ffd55ac6f44,91365023,0,0x0,8
tick,0x7ffd55ac6f44,91380283,0,0x0,8
tick,0x7ffd55ac6f44,91395874,0,0x0,8
tick,0x7ffd55ac6f44,91411591,0,0x0,8
tick,0x7ffd55ac6f44,91426746,0,0x0,8
tick,0x7ffd55ac6f44,91442317,0,0x0,8
tick,0x7ffd55ac6f44,91457606,0,0x0,8
tick,0x7ffd55ac6f44,91473535,0,0x0,8
tick,0x7ffd55ac6f44,91489488,0,0x0,8
tick,0x7ffd55ac6f44,91504185,0,0x0,8
tick,0x7ffd55ac6f44,91519542,0,0x0,8
tick,0x7ffd55ac6f44,91535260,0,0x0,8
tick,0x7ffd55ac6f44,91551180,0,0x0,8
tick,0x7ffd55ac6f44,91567272,0,0x0,8
tick,0x7ffd55ac6f44,91583692,0,0x0,8
tick,0x7ffd55ac6f44,91598780,0,0x0,8
tick,0x7ffd55ac6f44,91614646,0,0x0,8
tick,0x7ffd55ac6f44,91629603,0,0x0,8
tick,0x7ffd55ac6f44,91644721,0,0x0,8
tick,0x7ffd55ac6f44,91659527,0,0x0,8
tick,0x7ffd55ac6f44,91674604,0,0x0,8
tick,0x7ffd55ac6f44,91690980,0,0x0,8
tick,0x7ffd55ac6f44,91706530,0,0x0,8
tick,0x7ffd55ac6f44,91721519,0,0x0,8
tick,0x7ffd55ac6f44,91736561,0,0x0,8
tick,0x7ffd55ac6f44,91752177,0,0x0,8
tick,0x7ffd55ac6f44,91766788,0,0x0,8
tick,0x7ffd55ac6f44,91782047,0,0x0,8
tick,0x7ffd55ac6f44,91797549,0,0x0,8
tick,0x7ffd55ac6f44,91813477,0,0x0,8
tick,0x7ffd55ac6f44,91829113,0,0x0,8
tick,0x7ffd55ac6f44,91844681,0,0x0,8
tick,0x7ffd55ac6f44,91859540,0,0x0,8
tick,0x7ffd55ac6f44,91874455,0,0x0,8
tick,0x7ffd55ac6f44,91890878,0,0x0,8
tick,0x7ffd55ac6f44,91906845,0,0x0,8
tick,0x7ffd55ac6f44,91922863,0,0x0,8
tick,0x7ffd55ac6f44,91938899,0,0x0,8
tick,0x7ffd55ac6f44,91954169,0,0x0,8
tick,0x7ffd55ac6f44,91969335,0,0x0,8
tick,0x7ffd55ac6f44,91983999,0,0x0,8
tick,0x7ffd55ac6f44,91998999,0,0x0,8
tick,0x7ffd55ac6f44,92013873,0,0x0,8
tick,0x7ffd55ac6f44,92029105,0,0x0,8
tick,0x7ffd55ac6f44,92043957,0,0x0,8
tick,0x7ffd55ac6f44,92059411,0,0x0,8
tick,0x7ffd55ac6f44,92075119,0,0x0,8
tick,0x7ffd55ac6f44,92091333,0,0x0,8
tick,0x7ffd55ac6f44,92107329,0,0x0,8
tick,0x7ffd55ac6f44,92122883,0,0x0,8
tick,0x7ffd55ac6f44,92138496,0,0x0,8
tick,0x7ffd55ac6f44,92154546,0,0x0,8
tick,0x7ffd55ac6f44,92170554,0,0x0,8
tick,0x7ffd55ac6f44,92186188,0,0x0,8
tick,0x7ffd55ac6f44,92201209,0,0x0,8
tick,0x7ffd55ac6f44,92216126,0,0x0,8
tick,0x7ffd55ac6f44,92231556,0,0x0,8
tick,0x7ffd55ac6f44,92247447,0,0x0,8
tick,0x7ffd55ac6f44,92263466,0,0x0,8
tick,0x7ffd55ac6f44,92279302,0,0x0,8
tick,0x7ffd55ac6f44,92294571,0,0x0,8
tick,0x7ffd55ac6f44,92309845,0,0x0,8
tick,0x7ffd55ac6f44,92325469,0,0x0,8
tick,0x7ffd55ac6f44,92340839,0,0x0,8
tick,0x7ffd55ac6f44,92356017,0,0x0,8
tick,0x7ffd55ac6f44,92371701,0,0x0,8
tick,0x7ffd55ac6f44,92387296,0,0x0,8
tick,0x7ffd55ac6f44,92402392,0,0x0,8
tick,0x7ffd55ac6f44,92418495,0,0x0,8
tick,0x7ffd55ac6f44,92433788,0,0x0,8
tick,0x7ffd55ac6f44,92448837,0,0x0,8
tick,0x7ffd55ac6f44,92464134,0,0x0,8
tick,0x7ffd55ac6f44,92479493,0,0x0,8
tick,0x7ffd55ac6f44,92495093,0,0x0,8
tick,0x7ffd55ac6f44,92510723,0,0x0,8
tick,0x7ffd55ac6f44,92526035,0,0x0,8
tick,0x7ffd55ac6f44,92541208,0,0x0,8
tick,0x7ffd55ac6f44,92556220,0,0x0,8
tick,0x7ffd55ac6f44,92572639,0,0x0,8
tick,0x7ffd55ac6f44,92588632,0,0x0,8
tick,0x7ffd55ac6f44,92604443,0,0x0,8
tick,0x7ffd55ac6f44,92619450,0,0x0,8
tick,0x7ffd55ac6f44,92634359,0,0x0,8
tick,0x7ffd55ac6f44,92649695,0,0x0,8
tick,0x7ffd55ac6f44,92664803,0,0x0,8
tick,0x7ffd55ac6f44,92680552,0,0x0,8
tick,0x7ffd55ac6f44,92695256,0,0x0,8
tick,0x7ffd55ac6f44,92710969,0,0x0,8
tick,0x7ffd55ac6f44,92726569,0,0x0,8
tick,0x7ffd55ac6f44,92742015,0,0x0,8
tick,0x7ffd55ac6f44,92757605,0,0x0,8
tick,0x7ffd55ac6f44,92773164,0,0x0,8
tick,0x7ffd55ac6f44,92789174,0,0x0,8
tick,0x7ffd55ac6f44,92805172,0,0x0,8
tick,0x7ffd55ac6f44,92820450,0,0x0,8
tick,0x7ffd55ac6f44,92836281,0,0x0,8
tick,0x7ffd55ac6f44,92851725,0,0x0,8
tick,0x7ffd55ac6f44,92867346,0,0x0,8
tick,0x7ffd55ac6f44,92883391,0,0x0,8
tick,0x7ffd55ac6f44,92899630,0,0x0,8
tick,0x7ffd55ac6f44,92915584,0,0x0,8
tick,0x7ffd55ac6f44,92929965,0,0x0,8
tick,0x7ffd55ac6f44,92945264,0,0x0,8
tick,0x7ffd55ac6f44,92961315,0,0x0,8
tick,0x7ffd55ac6f44,92977455,0,0x0,8
tick,0x7ffd55ac6f44,92992372,0,0x0,8
tick,0x7ffd55ac6f44,93007326,0,0x0,8
tick,0x7ffd55ac6f44,93023413,0,0x0,8
tick,0x7ffd55ac6f44,93039419,0,0x0,8
tick,0x7ffd55ac6f44,93055203,0,0x0,8
tick,0x7ffd55ac6f44,93070752,0,0x0,8
tick,0x7ffd55ac6f44,93085933,0,0x0,8
tick,0x7ffd55ac6f44,93101393,0,0x0,8
tick,0x7ffd55ac6f44,93116758,0,0x0,8
tick,0x7ffd55ac6f44,93132866,0,0x0,8
tick,0x7ffd55ac6f44,93148261,0,0x0,8
tick,0x7ffd55ac6f44,93163454,0,0x0,8
tick,0x7ffd55ac6f44,93179480,0,0x0,8
tick,0x7ffd55ac6f44,93194569,0,0x0,8
tick,0x7ffd55ac6f44,93210767,0,0x0,8
tick,0x7ffd55ac6f44,93226253,0,0x0,8
tick,0x7ffd55ac6f44,93242209,0,0x0,8
tick,0x7ffd55ac6f44,93257238,0,0x0,8
tick,0x7ffd55ac6f44,93272245,0,0x0,8
tick,0x7ffd55ac6f44,93287455,0,0x0,8
tick,0x7ffd55ac6f44,93303413,0,0x0,8
tick,0x7ffd55ac6f44,93319055,0,0x0,8
tick,0x7ffd55ac6f44,93334576,0,0x0,8
tick,0x7ffd55ac6f44,93350531,0,0x0,8
tick,0x7ffd55ac6f44,93366208,0,0x0,8
tick,0x7ffd55ac6f44,93382062,0,0x0,8
tick,0x7ffd55ac6f44,93398119,0,0x0,8
tick,0x7ffd55ac6f44,93413573,0,0x0,8
tick,0x7ffd55ac6f44,93429447,0,0x0,8
tick,0x7ffd55ac6f44,93444860,0,0x0,8
tick,0x7ffd55ac6f44,93459916,0,0x0,8
tick,0x7ffd55ac6f44,93475780,0,0x0,8
tick,0x7ffd55ac6f44,93491292,0,0x0,8
tick,0x7ffd55ac6f44,93507599,0,0x0,8
tick,0x7ffd55ac6f44,93523387,0,0x0,8
tick,0x7ffd55ac6f44,93539421,0,0x0,8
tick,0x7ffd55ac6f44,93555232,0,0x0,8
tick,0x7ffd55ac6f44,93570664,0,0x0,8
tick,0x7ffd55ac6f44,93585798,0,0x0,8
tick,0x7ffd55ac6f44,93601236,0,0x0,8
tick,0x7ffd55ac6f44,93617231,0,0x0,8
tick,0x7ffd55ac6f44,93633413,0,0x0,8
tick,0x7ffd55ac6f44,93649375,0,0x0,8
tick,0x7ffd55ac6f44,93664719,0,0x0,8
tick,0x7ffd55ac6f44,93679939,0,0x0,8
tick,0x7ffd55ac6f44,93694974,0,0x0,8
tick,0x7ffd55ac6f44,93710116,0,0x0,8
tick,0x7ffd55ac6f44,93725212,0,0x0,8
tick,0x7ffd55ac6f44,93740612,0,0x0,8
tick,0x7ffd55ac6f44,93756431,0,0x0,8
tick,0x7ffd55ac6f44,93772211,0,0x0,8
tick,0x7ffd55ac6f44,93787653,0,0x0,8
tick,0x7ffd55ac6f44,93803711,0,0x0,8
tick,0x7ffd55ac6f44,93819407,0,0x0,8
tick,0x7ffd55ac6f44,93835083,0,0x0,8
tick,0x7ffd55ac6f44,93850109,0,0x0,8
tick,0x7ffd55ac6f44,93865541,0,0x0,8
tick,0x7ffd55ac6f44,93880589,0,0x0,8
tick,0x7ffd55ac6f44,93895806,0,0x0,8
tick,0x7ffd55ac6f44,93911543,0,0x0,8
tick,0x7ffd55ac6f44,93926944,0,0x0,8
tick,0x7ffd55ac6f44,93942104,0,0x0,8
tick,0x7ffd55ac6f44,93957579,0,0x0,8
tick,0x7ffd55ac6f44,93973572,0,0x0,8
tick,0x7ffd55ac6f44,93988955,0,0x0,8
tick,0x7ffd55ac6f44,94004175,0,0x0,8
tick,0x7ffd55ac6f44,94020482,0,0x0,8
tick,0x7ffd55ac6f44,94036052,0,0x0,8
tick,0x7ffd55ac6f44,94051356,0,0x0,8
tick,0x7ffd55ac6f44,94067166,0,0x0,8
tick,0x7ffd55ac6f44,94082285,0,0x0,8
tick,0x7ffd55ac6f44,94097945,0,0x0,8
tick,0x7ffd55ac6f44,94113100,0,0x0,8
tick,0x7ffd55ac6f44,94128367,0,0x0,8
tick,0x7ffd55ac6f44,94144694,0,0x0,8
tick,0x7ffd55ac6f44,94159769,0,0x0,8
tick,0x7ffd55ac6f44,94175934,0,0x0,8
tick,0x7ffd55ac6f44,94191312,0,0x0,8
tick,0x7ffd55ac6f44,94207075,0,0x0,8
tick,0x7ffd55ac6f44,94223216,0,0x0,8
tick,0x7ffd55ac6f44,94239031,0,0x0,8
tick,0x7ffd55ac6f44,94254109,0,0x0,8
tick,0x7ffd55ac6f44,94270346,0,0x0,8
tick,0x7ffd55ac6f44,94286287,0,0x0,8
tick,0x7ffd55ac6f44,94302104,0,0x0,8
tick,0x7ffd55ac6f44,94318320,0,0x0,8
tick,0x7ffd55ac6f44,94333484,0,0x0,8
tick,0x7ffd55ac6f44,94348656,0,0x0,8
tick,0x7ffd55ac6f44,94364125,0,0x0,8
tick,0x7ffd55ac6f44,94379633,0,0x0,8
tick,0x7ffd55ac6f44,94395156,0,0x0,8
tick,0x7ffd55ac6f44,94410219,0,0x0,8
tick,0x7ffd55ac6f44,94425197,0,0x0,8
tick,0x7ffd55ac6f44,94439921,0,0x0,8
tick,0x7ffd55ac6f44,94455790,0,0x0,8
tick,0x7ffd55ac6f44,94470941,0,0x0,8
tick,0x7ffd55ac6f44,94486917,0,0x0,8
tick,0x7ffd55ac6f44,94502098,0,0x0,8
tick,0x7ffd55ac6f44,94517290,0,0x0,8
tick,0x7ffd55ac6f44,94532943,0,0x0,8
tick,0x7ffd55ac6f44,94548205,0,0x0,8
tick,0x7ffd55ac6f44,94563364,0,0x0,8
tick,0x7ffd55ac6f44,94579378,0,0x0,8
tick,0x7ffd55ac6f44,94594927,0,0x0,8
tick,0x7ffd55ac6f44,94610579,0,0x0,8
tick,0x7ffd55ac6f44,94624970,0,0x0,8
tick,0x7ffd55ac6f44,94640588,0,0x0,8
tick,0x7ffd55ac6f44,94656109,0,0x0,8
tick,0x7ffd55ac6f44,94672130,0,0x0,8
tick,0x7ffd55ac6f44,94688117,0,0x0,8
tick,0x7ffd55ac6f44,94704228,0,0x0,8
tick,0x7ffd55ac6f44,94719108,0,0x0,8
tick,0x7ffd55ac6f44,94734150,0,0x0,8
tick,0x7ffd55ac6f44,94750088,0,0x0,8
tick,0x7ffd55ac6f44,94766083,0,0x0,8
tick,0x7ffd55ac6f44,94782100,0,0x0,8
tick,0x7ffd55ac6f44,94797101,0,0x0,8
tick,0x7ffd55ac6f44,94812113,0,0x0,8
tick,0x7ffd55ac6f44,94828103,0,0x0,8
tick,0x7ffd55ac6f44,94844141,0,0x0,8
tick,0x7ffd55ac6f44,94860157,0,0x0,8
tick,0x7ffd55ac6f44,94876102,0,0x0,8
tick,0x7ffd55ac6f44,94892224,0,0x0,8
tick,0x7ffd55ac6f44,94908125,0,0x0,8
tick,0x7ffd55ac6f44,94923538,0,0x0,8
tick,0x7ffd55ac6f44,94939096,0,0x0,8
tick,0x7ffd55ac6f44,94954477,0,0x0,8
tick,0x7ffd55ac6f44,94969630,0,0x0,8
tick,0x7ffd55ac6f44,94984543,0,0x0,8
tick,0x7ffd55ac6f44,94999481,0,0x0,8
tick,0x7ffd55ac6f44,95015369,0,0x0,8
tick,0x7ffd55ac6f44,95030563,0,0x0,8
tick,0x7ffd55ac6f44,95045993,0,0x0,8
tick,0x7ffd55ac6f44,95061423,0,0x0,8
tick,0x7ffd55ac6f44,95077614,0,0x0,8
tick,0x7ffd55ac6f44,95093445,0,0x0,8
tick,0x7ffd55ac6f44,95109710,0,0x0,8
tick,0x7ffd55ac6f44,95124458,0,0x0,8
tick,0x7ffd55ac6f44,95139503,0,0x0,8
tick,0x7ffd55ac6f44,95155084,0,0x0,8
tick,0x7ffd55ac6f44,95170546,0,0x0,8
tick,0x7ffd55ac6f44,95186711,0,0x0,8
tick,0x7ffd55ac6f44,95202503,0,0x0,8
tick,0x7ffd55ac6f44,95217797,0,0x0,8
tick,0x7ffd55ac6f44,95233392,0,0x0,8
tick,0x7ffd55ac6f44,95248515,0,0x0,8
tick,0x7ffd55ac6f44,95264864,0,0x0,8
tick,0x7ffd55ac6f44,95281226,0,0x0,8
tick,0x7ffd55ac6f44,95297213,0,0x0,8
tick,0x7ffd55ac6f44,95312695,0,0x0,8
tick,0x7ffd55ac6f44,95327861,0,0x0,8
tick,0x7ffd55ac6f44,95343780,0,0x0,8
tick,0x7ffd55ac6f44,95358699,0,0x0,8
tick,0x7ffd55ac6f44,95373885,0,0x0,8
tick,0x7ffd55ac6f44,95388916,0,0x0,8
tick,0x7ffd55ac6f44,95404484,0,0x0,8
tick,0x7ffd55ac6f44,95419939,0,0x0,8
tick,0x7ffd55ac6f44,95434927,0,0x0,8
tick,0x7ffd55ac6f44,95450984,0,0x0,8
tick,0x7ffd55ac6f44,95466965,0,0x0,8
tick,0x7ffd55ac6f44,95482746,0,0x0,8
tick,0x7ffd55ac6f44,95497919,0,0x0,8
tick,0x7ffd55ac6f44,95513008,0,0x0,8
tick,0x7ffd55ac6f44,95529084,0,0x0,8
tick,0x7ffd55ac6f44,95545009,0,0x0,8
tick,0x7ffd55ac6f44,95560637,0,0x0,8
tick,0x7ffd55ac6f44,95576685,0,0x0,8
tick,0x7ffd55ac6f44,95592582,0,0x0,8
tick,0x7ffd55ac6f44,95607448,0,0x0,8
tick,0x7ffd55ac6f44,95622922,0,0x0,8
tick,0x7ffd55ac6f44,95638753,0,0x0,8
tick,0x7ffd55ac6f44,95654015,0,0x0,8
tick,0x7ffd55ac6f44,95669724,0,0x0,8
tick,0x7ffd55ac6f44,95685010,0,0x0,8
tick,0x7ffd55ac6f44,95701025,0,0x0,8
tick,0x7ffd55ac6f44,95716457,0,0x0,8
tick,0x7ffd55ac6f44,95731367,0,0x0,8
tick,0x7ffd55ac6f44,95746861,0,0x0,8
tick,0x7ffd55ac6f44,95762244,0,0x0,8
tick,0x7ffd55ac6f44,95778422,0,0x0,8
tick,0x7ffd55ac6f44,95794007,0,0x0,8
tick,0x7ffd55ac6f44,95810046,0,0x0,8
tick,0x7ffd55ac6f44,95825086,0,0x0,8
tick,0x7ffd55ac6f44,95840480,0,0x0,8
tick,0x7ffd55ac6f44,95855967,0,0x0,8
tick,0x7ffd55ac6f44,95872248,0,0x0,8
tick,0x7ffd55ac6f44,95888053,0,0x0,8
tick,0x7ffd55ac6f44,95904154,0,0x0,8
tick,0x7ffd55ac6f44,95919360,0,0x0,8
tick,0x7ffd55ac6f44,95934535,0,0x0,8
tick,0x7ffd55ac6f44,95950267,0,0x0,8
tick,0x7ffd55ac6f44,95966235,0,0x0,8
tick,0x7ffd55ac6f44,95981333,0,0x0,8
tick,0x7ffd55ac6f44,95997312,0,0x0,8
tick,0x7ffd55ac6f44,96013190,0,0x0,8
tick,0x7ffd55ac6f44,96027855,0,0x0,8
tick,0x7ffd55ac6f44,96043776,0,0x0,8
tick,0x7ffd55ac6f44,96059558,0,0x0,8
tick,0x7ffd55ac6f44,96074812,0,0x0,8
tick,0x7ffd55ac6f44,96091157,0,0x0,8
tick,0x7ffd55ac6f44,96106613,0,0x0,8
tick,0x7ffd55ac6f44,96121933,0,0x0,8
tick,0x7ffd55ac6f44,96138010,0,0x0,8
tick,0x7ffd55ac6f44,96153541,0,0x0,8
tick,0x7ffd55ac6f44,96168686,0,0x0,8
tick,0x7ffd55ac6f44,96184503,0,0x0,8
tick,0x7ffd55ac6f44,96200255,0,0x0,8
tick,0x7ffd55ac6f44,96215891,0,0x0,8
tick,0x7ffd55ac6f44,96232027,0,0x0,8
tick,0x7ffd55ac6f44,96247915,0,0x0,8
tick,0x7ffd55ac6f44,96262783,0,0x0,8
tick,0x7ffd55ac6f44,96277795,0,0x0,8
tick,0x7ffd55ac6f44,96293787,0,0x0,8
tick,0x7ffd55ac6f44,96309270,0,0x0,8
tick,0x7ffd55ac6f44,96324001,0,0x0,8
tick,0x7ffd55ac6f44,96339471,0,0x0,8
tick,0x7ffd55ac6f44,96355308,0,0x0,8
tick,0x7ffd55ac6f44,96371351,0,0x0,8
tick,0x7ffd55ac6f44,96387056,0,0x0,8
tick,0x7ffd55ac6f44,96402734,0,0x0,8
tick,0x7ffd55ac6f44,96418763,0,0x0,8
tick,0x7ffd55ac6f44,96434587,0,0x0,8
tick,0x7ffd55ac6f44,96449299,0,0x0,8
tick,0x7ffd55ac6f44,96464342,0,0x0,8
tick,0x7ffd55ac6f44,96480315,0,0x0,8
tick,0x7ffd55ac6f44,96496314,0,0x0,8
tick,0x7ffd55ac6f44,96512395,0,0x0,8
tick,0x7ffd55ac6f44,96528389,0,0x0,8
tick,0x7ffd55ac6f44,96544530,0,0x0,8
tick,0x7ffd55ac6f44,96560257,0,0x0,8
tick,0x7ffd55ac6f44,96576045,0,0x0,8
tick,0x7ffd55ac6f44,96591978,0,0x0,8
tick,0x7ffd55ac6f44,96607974,0,0x0,8
tick,0x7ffd55ac6f44,96623956,0,0x0,8
tick,0x7ffd55ac6f44,96639963,0,0x0,8
tick,0x7ffd55ac6f44,96655078,0,0x0,8
tick,0x7ffd55ac6f44,96670088,0,0x0,8
tick,0x7ffd55ac6f44,96686103,0,0x0,8
tick,0x7ffd55ac6f44,96701077,0,0x0,8
tick,0x7ffd55ac6f44,96717090,0,0x0,8
tick,0x7ffd55ac6f44,96732112,0,0x0,8
tick,0x7ffd55ac6f44,96747100,0,0x0,8
tick,0x7ffd55ac6f44,96762095,0,0x0,8
tick,0x7ffd55ac6f44,96777114,0,0x0,8
tick,0x7ffd55ac6f44,96792087,0,0x0,8
tick,0x7ffd55ac6f44,96808123,0,0x0,8
tick,0x7ffd55ac6f44,96824139,0,0x0,8
tick,0x7ffd55ac6f44,96839249,0,0x0,8
tick,0x7ffd55ac6f44,96854105,0,0x0,8
tick,0x7ffd55ac6f44,96869130,0,0x0,8
tick,0x7ffd55ac6f44,96885079,0,0x0,8
tick,0x7ffd55ac6f44,96900205,0,0x0,8
tick,0x7ffd55ac6f44,96915157,0,0x0,8
tick,0x7ffd55ac6f44,96931120,0,0x0,8
tick,0x7ffd55ac6f44,96946080,0,0x0,8
tick,0x7ffd55ac6f44,96961098,0,0x0,8
tick,0x7ffd55ac6f44,96977110,0,0x0,8
tick,0x7ffd55ac6f44,96991996,0,0x0,8
tick,0x7ffd55ac6f44,97007045,0,0x0,8
tick,0x7ffd55ac6f44,97022113,0,0x0,8
tick,0x7ffd55ac6f44,97037997,0,0x0,8
tick,0x7ffd55ac6f44,97053393,0,0x0,8
tick,0x7ffd55ac6f44,97069708,0,0x0,8
tick,0x7ffd55ac6f44,97085178,0,0x0,8
tick,0x7ffd55ac6f44,97100533,0,0x0,8
tick,0x7ffd55ac6f44,97115876,0,0x0,8
tick,0x7ffd55ac6f44,97130906,0,0x0,8
tick,0x7ffd55ac6f44,97146692,0,0x0,8
tick,0x7ffd55ac6f44,97162293,0,0x0,8
tick,0x7ffd55ac6f44,97177863,0,0x0,8
tick,0x7ffd55ac6f44,97193722,0,0x0,8
tick,0x7ffd55ac6f44,97209549,0,0x0,8
tick,0x7ffd55ac6f44,97224606,0,0x0,8
tick,0x7ffd55ac6f44,97240663,0,0x0,8
tick,0x7ffd55ac6f44,97256633,0,0x0,8
tick,0x7ffd55ac6f44,97271699,0,0x0,8
tick,0x7ffd55ac6f44,97287478,0,0x0,8
tick,0x7ffd55ac6f44,97303950,0,0x0,8
tick,0x7ffd55ac6f44,97319370,0,0x0,8
tick,0x7ffd55ac6f44,97335406,0,0x0,8
tick,0x7ffd55ac6f44,97350348,0,0x0,8
tick,0x7ffd55ac6f44,97365333,0,0x0,8
tick,0x7ffd55ac6f44,97381386,0,0x0,8
tick,0x7ffd55ac6f44,97397484,0,0x0,8
tick,0x7ffd55ac6f44,97412772,0,0x0,8
tick,0x7ffd55ac6f44,97428252,0,0x0,8
tick,0x7ffd55ac6f44,97443476,0,0x0,8
tick,0x7ffd55ac6f44,97459214,0,0x0,8
tick,0x7ffd55ac6f44,97475093,0,0x0,8
tick,0x7ffd55ac6f44,97490151,0,0x0,8
tick,0x7ffd55ac6f44,97506430,0,0x0,8
tick,0x7ffd55ac6f44,97522374,0,0x0,8
tick,0x7ffd55ac6f44,97538076,0,0x0,8
tick,0x7ffd55ac6f44,97554134,0,0x0,8
tick,0x7ffd55ac6f44,97570108,0,0x0,8
tick,0x7ffd55ac6f44,97586187,0,0x0,8
tick,0x7ffd55ac6f44,97602123,0,0x0,8
tick,0x7ffd55ac6f44,97617262,0,0x0,8
tick,0x7ffd55ac6f44,97633042,0,0x0,8
tick,0x7ffd55ac6f44,97648842,0,0x0,8
tick,0x7ffd55ac6f44,97664549,0,0x0,8
tick,0x7ffd55ac6f44,97680846,0,0x0,8
tick,0x7ffd55ac6f44,97695538,0,0x0,8
tick,0x7ffd55ac6f44,97710761,0,0x0,8
tick,0x7ffd55ac6f44,97726187,0,0x0,8
tick,0x7ffd55ac6f44,97741907,0,0x0,8
tick,0x7ffd55ac6f44,97757096,0,0x0,8
tick,0x7ffd55ac6f44,97772379,0,0x0,8
tick,0x7ffd55ac6f44,97787677,0,0x0,8
tick,0x7ffd55ac6f44,97803007,0,0x0,8
tick,0x7ffd55ac6f44,97817682,0,0x0,8
tick,0x7ffd55ac6f44,97833313,0,0x0,8
tick,0x7ffd55ac6f44,97848352,0,0x0,8
tick,0x7ffd55ac6f44,97864181,0,0x0,8
tick,0x7ffd55ac6f44,97880049,0,0x0,8
tick,0x7ffd55ac6f44,97895151,0,0x0,8
tick,0x7ffd55ac6f44,97911294,0,0x0,8
tick,0x7ffd55ac6f44,97926395,0,0x0,8
tick,0x7ffd55ac6f44,97941285,0,0x0,8
tick,0x7ffd55ac6f44,97956389,0,0x0,8
tick,0x7ffd55ac6f44,97972132,0,0x0,8
tick,0x7ffd55ac6f44,97987155,0,0x0,8
tick,0x7ffd55ac6f44,98002092,0,0x0,8
tick,0x7ffd55ac6f44,98017566,0,0x0,8
tick,0x7ffd55ac6f44,98033022,0,0x0,8
tick,0x7ffd55ac6f44,98048331,0,0x0,8
tick,0x7ffd55ac6f44,98064300,0,0x0,8
tick,0x7ffd55ac6f44,98080316,0,0x0,8
tick,0x7ffd55ac6f44,98096266,0,0x0,8
tick,0x7ffd55ac6f44,98112304,0,0x0,8
tick,0x7ffd55ac6f44,98128376,0,0x0,8
tick,0x7ffd55ac6f44,98144266,0,0x0,8
tick,0x7ffd55ac6f44,98159948,0,0x0,8
tick,0x7ffd55ac6f44,98175948,0,0x0,8
tick,0x7ffd55ac6f44,98190924,0,0x0,8
tick,0x7ffd55ac6f44,98206556,0,0x0,8
tick,0x7ffd55ac6f44,98222184,0,0x0,8
tick,0x7ffd55ac6f44,98238223,0,0x0,8
tick,0x7ffd55ac6f44,98252897,0,0x0,8
tick,0x7ffd55ac6f44,98268059,0,0x0,8
tick,0x7ffd55ac6f44,98284073,0,0x0,8
tick,0x7ffd55ac6f44,98299876,0,0x0,8
tick,0x7ffd55ac6f44,98314919,0,0x0,8
tick,0x7ffd55ac6f44,98330606,0,0x0,8
tick,0x7ffd55ac6f44,98345890,0,0x0,8
tick,0x7ffd55ac6f44,98361730,0,0x0,8
tick,0x7ffd55ac6f44,98377728,0,0x0,8
tick,0x7ffd55ac6f44,98392917,0,0x0,8
tick,0x7ffd55ac6f44,98407934,0,0x0,8
tick,0x7ffd55ac6f44,98423908,0,0x0,8
tick,0x7ffd55ac6f44,98439923,0,0x0,8
tick,0x7ffd55ac6f44,98455990,0,0x0,8
tick,0x7ffd55ac6f44,98471979,0,0x0,8
tick,0x7ffd55ac6f44,98487800,0,0x0,8
tick,0x7ffd55ac6f44,98503880,0,0x0,8
tick,0x7ffd55ac6f44,98519350,0,0x0,8
tick,0x7ffd55ac6f44,98534950,0,0x0,8
tick,0x7ffd55ac6f44,98550623,0,0x0,8
tick,0x7ffd55ac6f44,98566037,0,0x0,8
tick,0x7ffd55ac6f44,98581924,0,0x0,8
tick,0x7ffd55ac6f44,98596756,0,0x0,8
tick,0x7ffd55ac6f44,98611790,0,0x0,8
tick,0x7ffd55ac6f44,98627263,0,0x0,8
tick,0x7ffd55ac6f44,98643510,0,0x0,8
tick,0x7ffd55ac6f44,98659386,0,0x0,8
tick,0x7ffd55ac6f44,98674841,0,0x0,8
tick,0x7ffd55ac6f44,98690393,0,0x0,8
tick,0x7ffd55ac6f44,98705423,0,0x0,8
tick,0x7ffd55ac6f44,98720560,0,0x0,8
tick,0x7ffd55ac6f44,98735205,0,0x0,8
tick,0x7ffd55ac6f44,98750888,0,0x0,8
tick,0x7ffd55ac6f44,98767428,0,0x0,8
tick,0x7ffd55ac6f44,98783429,0,0x0,8
tick,0x7ffd55ac6f44,98799294,0,0x0,8
tick,0x7ffd55ac6f44,98815211,0,0x0,8
tick,0x7ffd55ac6f44,98830695,0,0x0,8
tick,0x7ffd55ac6f44,98845349,0,0x0,8
tick,0x7ffd55ac6f44,98860400,0,0x0,8
tick,0x7ffd55ac6f44,98876161,0,0x0,8
tick,0x7ffd55ac6f44,98891109,0,0x0,8
tick,0x7ffd55ac6f44,98906421,0,0x0,8
tick,0x7ffd55ac6f44,98922300,0,0x0,8
tick,0x7ffd55ac6f44,98937224,0,0x0,8
tick,0x7ffd55ac6f44,98952143,0,0x0,8
tick,0x7ffd55ac6f44,98967123,0,0x0,8
tick,0x7ffd55ac6f44,98982922,0,0x0,8
tick,0x7ffd55ac6f44,98998128,0,0x0,8
tick,0x7ffd55ac6f44,99013222,0,0x0,8
tick,0x7ffd55ac6f44,99029204,0,0x0,8
tick,0x7ffd55ac6f44,99044146,0,0x0,8
tick,0x7ffd55ac6f44,99058870,0,0x0,8
tick,0x7ffd55ac6f44,99073809,0,0x0,8
tick,0x7ffd55ac6f44,99088885,0,0x0,8
tick,0x7ffd55ac6f44,99105176,0,0x0,8
tick,0x7ffd55ac6f44,99119983,0,0x0,8
tick,0x7ffd55ac6f44,99135911,0,0x0,8
tick,0x7ffd55ac6f44,99151911,0,0x0,8
tick,0x7ffd55ac6f44,99167837,0,0x0,8
tick,0x7ffd55ac6f44,99184247,0,0x0,8
tick,0x7ffd55ac6f44,99199885,0,0x0,8
tick,0x7ffd55ac6f44,99215653,0,0x0,8
tick,0x7ffd55ac6f44,99231185,0,0x0,8
tick,0x7ffd55ac6f44,99246338,0,0x0,8
tick,0x7ffd55ac6f44,99261277,0,0x0,8
tick,0x7ffd55ac6f44,99276125,0,0x0,8
tick,0x7ffd55ac6f44,99291424,0,0x0,8
tick,0x7ffd55ac6f44,99306751,0,0x0,8
tick,0x7ffd55ac6f44,99321389,0,0x0,8
tick,0x7ffd55ac6f44,99336402,0,0x0,8
tick,0x7ffd55ac6f44,99352363,0,0x0,8
tick,0x7ffd55ac6f44,99367839,0,0x0,8
tick,0x7ffd55ac6f44,99383163,0,0x0,8
tick,0x7ffd55ac6f44,99398572,0,0x0,8
tick,0x7ffd55ac6f44,99414174,0,0x0,8
tick,0x7ffd55ac6f44,99429786,0,0x0,8
tick,0x7ffd55ac6f44,99445663,0,0x0,8
tick,0x7ffd55ac6f44,99462057,0,0x0,8
tick,0x7ffd55ac6f44,99477155,0,0x0,8
tick,0x7ffd55ac6f44,99492161,0,0x0,8
tick,0x7ffd55ac6f44,99507475,0,0x0,8
tick,0x7ffd55ac6f44,99524041,0,0x0,8
tick,0x7ffd55ac6f44,99539850,0,0x0,8
tick,0x7ffd55ac6f44,99555089,0,0x0,8
tick,0x7ffd55ac6f44,99570503,0,0x0,8
tick,0x7ffd55ac6f44,99586628,0,0x0,8
tick,0x7ffd55ac6f44,99602044,0,0x0,8
tick,0x7ffd55ac6f44,99617707,0,0x0,8
tick,0x7ffd55ac6f44,99633301,0,0x0,8
tick,0x7ffd55ac6f44,99648650,0,0x0,8
tick,0x7ffd55ac6f44,99663836,0,0x0,8
tick,0x7ffd55ac6f44,99678548,0,0x0,8
tick,0x7ffd55ac6f44,99693341,0,0x0,8
tick,0x7ffd55ac6f44,99709043,0,0x0,8
tick,0x7ffd55ac6f44,99724351,0,0x0,8
tick,0x7ffd55ac6f44,99739691,0,0x0,8
tick,0x7ffd55ac6f44,99755178,0,0x0,8
tick,0x7ffd55ac6f44,99770822,0,0x0,8
tick,0x7ffd55ac6f44,99786082,0,0x0,8
tick,0x7ffd55ac6f44,99802022,0,0x0,8
tick,0x7ffd55ac6f44,99817877,0,0x0,8
tick,0x7ffd55ac6f44,99834003,0,0x0,8
tick,0x7ffd55ac6f44,99849507,0,0x0,8
tick,0x7ffd55ac6f44,99864958,0,0x0,8
tick,0x7ffd55ac6f44,99880585,0,0x0,8
tick,0x7ffd55ac6f44,99896295,0,0x0,8
tick,0x7ffd55ac6f44,99911595,0,0x0,8
tick,0x7ffd55ac6f44,99927188,0,0x0,8
tick,0x7ffd55ac6f44,99943718,0,0x0,8
tick,0x7ffd55ac6f44,99958924,0,0x0,8
tick,0x7ffd55ac6f44,99974595,0,0x0,8
tick,0x7ffd55ac6f44,99990286,0,0x0,8
tick,0x7ffd55ac6f44,100006749,0,0x0,8
tick,0x7ffd55ac6f44,100021849,0,0x0,8
tick,0x7ffd55ac6f44,100036778,0,0x0,8
tick,0x7ffd55ac6f44,100051903,0,0x0,8
tick,0x7ffd55ac6f44,100067954,0,0x0,8
tick,0x7ffd55ac6f44,100083217,0,0x0,8
tick,0x7ffd55ac6f44,100098540,0,0x0,8
tick,0x7ffd55ac6f44,100113645,0,0x0,8
tick,0x7ffd55ac6f44,100129244,0,0x0,8
tick,0x7ffd55ac6f44,100145211,0,0x0,8
tick,0x7ffd55ac6f44,100160370,0,0x0,8
tick,0x7ffd55ac6f44,100176167,0,0x0,8
tick,0x7ffd55ac6f44,100192211,0,0x0,8
tick,0x7ffd55ac6f44,100208261,0,0x0,8
tick,0x7ffd55ac6f44,100224072,0,0x0,8
tick,0x7ffd55ac6f44,100239259,0,0x0,8
tick,0x7ffd55ac6f44,100254726,0,0x0,8
tick,0x7ffd55ac6f44,100269932,0,0x0,8
tick,0x7ffd55ac6f44,100285229,0,0x0,8
tick,0x7ffd55ac6f44,100301000,0,0x0,8
tick,0x7ffd55ac6f44,100317078,0,0x0,8
tick,0x7ffd55ac6f44,100333162,0,0x0,8
tick,0x7ffd55ac6f44,100348787,0,0x0,8
tick,0x7ffd55ac6f44,100364126,0,0x0,8
tick,0x7ffd55ac6f44,100380175,0,0x0,8
tick,0x7ffd55ac6f44,100395881,0,0x0,8
tick,0x7ffd55ac6f44,100410917,0,0x0,8
tick,0x7ffd55ac6f44,100426957,0,0x0,8
tick,0x7ffd55ac6f44,100442830,0,0x0,8
tick,0x7ffd55ac6f44,100458972,0,0x0,8
tick,0x7ffd55ac6f44,100474793,0,0x0,8
tick,0x7ffd55ac6f44,100489897,0,0x0,8
tick,0x7ffd55ac6f44,100505034,0,0x0,8
tick,0x7ffd55ac6f44,100520556,0,0x0,8
tick,0x7ffd55ac6f44,100536407,0,0x0,8
tick,0x7ffd55ac6f44,100552106,0,0x0,8
tick,0x7ffd55ac6f44,100568393,0,0x0,8
tick,0x7ffd55ac6f44,100583581,0,0x0,8
tick,0x7ffd55ac6f44,100599084,0,0x0,8
tick,0x7ffd55ac6f44,100614359,0,0x0,8
tick,0x7ffd55ac6f44,100629855,0,0x0,8
tick,0x7ffd55ac6f44,100645217,0,0x0,8
tick,0x7ffd55ac6f44,100660452,0,0x0,8
tick,0x7ffd55ac6f44,100675555,0,0x0,8
tick,0x7ffd55ac6f44,100691510,0,0x0,8
tick,0x7ffd55ac6f44,100706760,0,0x0,8
tick,0x7ffd55ac6f44,100722480,0,0x0,8
tick,0x7ffd55ac6f44,100738562,0,0x0,8
tick,0x7ffd55ac6f44,100754574,0,0x0,8
tick,0x7ffd55ac6f44,100769847,0,0x0,8
tick,0x7ffd55ac6f44,100785698,0,0x0,8
tick,0x7ffd55ac6f44,100801195,0,0x0,8
tick,0x7ffd55ac6f44,100817063,0,0x0,8
tick,0x7ffd55ac6f44,100832970,0,0x0,8
tick,0x7ffd55ac6f44,100849024,0,0x0,8
tick,0x7ffd55ac6f44,100864203,0,0x0,8
tick,0x7ffd55ac6f44,100879829,0,0x0,8
tick,0x7ffd55ac6f44,100894705,0,0x0,8
tick,0x7ffd55ac6f44,100910363,0,0x0,8
tick,0x7ffd55ac6f44,100926357,0,0x0,8
tick,0x7ffd55ac6f44,100941706,0,0x0,8
tick,0x7ffd55ac6f44,100957527,0,0x0,8
tick,0x7ffd55ac6f44,100973055,0,0x0,8
tick,0x7ffd55ac6f44,100989161,0,0x0,8
tick,0x7ffd55ac6f44,101005159,0,0x0,8
tick,0x7ffd55ac6f44,101020058,0,0x0,8
tick,0x7ffd55ac6f44,101035426,0,0x0,8
tick,0x7ffd55ac6f44,101050927,0,0x0,8
tick,0x7ffd55ac6f44,101066973,0,0x0,8
tick,0x7ffd55ac6f44,101082377,0,0x0,8
tick,0x7ffd55ac6f44,101097260,0,0x0,8
tick,0x7ffd55ac6f44,101112256,0,0x0,8
tick,0x7ffd55ac6f44,101128250,0,0x0,8
tick,0x7ffd55ac6f44,101144078,0,0x0,8
tick,0x7ffd55ac6f44,101160109,0,0x0,8
tick,0x7ffd55ac6f44,101175449,0,0x0,8
tick,0x7ffd55ac6f44,101190740,0,0x0,8
tick,0x7ffd55ac6f44,101206436,0,0x0,8
tick,0x7ffd55ac6f44,101222260,0,0x0,8
tick,0x7ffd55ac6f44,101238147,0,0x0,8
tick,0x7ffd55ac6f44,101254262,0,0x0,8
tick,0x7ffd55ac6f44,101270135,0,0x0,8
tick,0x7ffd55ac6f44,101286623,0,0x0,8
tick,0x7ffd55ac6f44,101302157,0,0x0,8
tick,0x7ffd55ac6f44,101317723,0,0x0,8
tick,0x7ffd55ac6f44,101333090,0,0x0,8
tick,0x7ffd55ac6f44,101348327,0,0x0,8
tick,0x7ffd55ac6f44,101364403,0,0x0,8
tick,0x7ffd55ac6f44,101379640,0,0x0,8
tick,0x7ffd55ac6f44,101395050,0,0x0,8
tick,0x7ffd55ac6f44,101411167,0,0x0,8
tick,0x7ffd55ac6f44,101426018,0,0x0,8
tick,0x7ffd55ac6f44,101441544,0,0x0,8
tick,0x7ffd55ac6f44,101456860,0,0x0,8
tick,0x7ffd55ac6f44,101472041,0,0x0,8
tick,0x7ffd55ac6f44,101488436,0,0x0,8
tick,0x7ffd55ac6f44,101503813,0,0x0,8
tick,0x7ffd55ac6f44,101519808,0,0x0,8
tick,0x7ffd55ac6f44,101535283,0,0x0,8
tick,0x7ffd55ac6f44,101550167,0,0x0,8
tick,0x7ffd55ac6f44,101565493,0,0x0,8
tick,0x7ffd55ac6f44,101581328,0,0x0,8
tick,0x7ffd55ac6f44,101597345,0,0x0,8
tick,0x7ffd55ac6f44,101613358,0,0x0,8
tick,0x7ffd55ac6f44,101629222,0,0x0,8
tick,0x7ffd55ac6f44,101644680,0,0x0,8
tick,0x7ffd55ac6f44,101660878,0,0x0,8
tick,0x7ffd55ac6f44,101676156,0,0x0,8
tick,0x7ffd55ac6f44,101692155,0,0x0,8
tick,0x7ffd55ac6f44,101707587,0,0x0,8
tick,0x7ffd55ac6f44,101723707,0,0x0,8
tick,0x7ffd55ac6f44,101739627,0,0x0,8
tick,0x7ffd55ac6f44,101755249,0,0x0,8
tick,0x7ffd55ac6f44,101770848,0,0x0,8
tick,0x7ffd55ac6f44,101786882,0,0x0,8
tick,0x7ffd55ac6f44,101802239,0,0x0,8
tick,0x7ffd55ac6f44,101817591,0,0x0,8
tick,0x7ffd55ac6f44,101833004,0,0x0,8
tick,0x7ffd55ac6f44,101849096,0,0x0,8
tick,0x7ffd55ac6f44,101864161,0,0x0,8
tick,0x7ffd55ac6f44,101879083,0,0x0,8
tick,0x7ffd55ac6f44,101894212,0,0x0,8
tick,0x7ffd55ac6f44,101909220,0,0x0,8
tick,0x7ffd55ac6f44,101925111,0,0x0,8
tick,0x7ffd55ac6f44,101940570,0,0x0,8
tick,0x7ffd55ac6f44,101956374,0,0x0,8
tick,0x7ffd55ac6f44,101971127,0,0x0,8
tick,0x7ffd55ac6f44,101986945,0,0x0,8
tick,0x7ffd55ac6f44,102001909,0,0x0,8
tick,0x7ffd55ac6f44,102016960,0,0x0,8
tick,0x7ffd55ac6f44,102032683,0,0x0,8
tick,0x7ffd55ac6f44,102047948,0,0x0,8
tick,0x7ffd55ac6f44,102062878,0,0x0,8
tick,0x7ffd55ac6f44,102077664,0,0x0,8
tick,0x7ffd55ac6f44,102093615,0,0x0,8
tick,0x7ffd55ac6f44,102109092,0,0x0,8
tick,0x7ffd55ac6f44,102123698,0,0x0,8
tick,0x7ffd55ac6f44,102138896,0,0x0,8
tick,0x7ffd55ac6f44,102154604,0,0x0,8
tick,0x7ffd55ac6f44,102170352,0,0x0,8
tick,0x7ffd55ac6f44,102186276,0,0x0,8
tick,0x7ffd55ac6f44,102202212,0,0x0,8
tick,0x7ffd55ac6f44,102218015,0,0x0,8
tick,0x7ffd55ac6f44,102233357,0,0x0,8
tick,0x7ffd55ac6f44,102248657,0,0x0,8
tick,0x7ffd55ac6f44,102264277,0,0x0,8
tick,0x7ffd55ac6f44,102279617,0,0x0,8
tick,0x7ffd55ac6f44,102295358,0,0x0,8
tick,0x7ffd55ac6f44,102311279,0,0x0,8
tick,0x7ffd55ac6f44,102327276,0,0x0,8
tick,0x7ffd55ac6f44,102343302,0,0x0,8
tick,0x7ffd55ac6f44,102358527,0,0x0,8
tick,0x7ffd55ac6f44,102374451,0,0x0,8
tick,0x7ffd55ac6f44,102390264,0,0x0,8
tick,0x7ffd55ac6f44,102406249,0,0x0,8
tick,0x7ffd55ac6f44,102421821,0,0x0,8
tick,0x7ffd55ac6f44,102437985,0,0x0,8
tick,0x7ffd55ac6f44,102454413,0,0x0,8
tick,0x7ffd55ac6f44,102470352,0,0x0,8
tick,0x7ffd55ac6f44,102485578,0,0x0,8
tick,0x7ffd55ac6f44,102501207,0,0x0,8
tick,0x7ffd55ac6f44,102517344,0,0x0,8
tick,0x7ffd55ac6f44,102533366,0,0x0,8
tick,0x7ffd55ac6f44,102548663,0,0x0,8
tick,0x7ffd55ac6f44,102563589,0,0x0,8
tick,0x7ffd55ac6f44,102578649,0,0x0,8
tick,0x7ffd55ac6f44,102594525,0,0x0,8
tick,0x7ffd55ac6f44,102609748,0,0x0,8
tick,0x7ffd55ac6f44,102624788,0,0x0,8
tick,0x7ffd55ac6f44,102639742,0,0x0,8
tick,0x7ffd55ac6f44,102654432,0,0x0,8
tick,0x7ffd55ac6f44,102669465,0,0x0,8
tick,0x7ffd55ac6f44,102685322,0,0x0,8
tick,0x7ffd55ac6f44,102701516,0,0x0,8
tick,0x7ffd55ac6f44,102717135,0,0x0,8
tick,0x7ffd55ac6f44,102732738,0,0x0,8
tick,0x7ffd55ac6f44,102748713,0,0x0,8
tick,0x7ffd55ac6f44,102763314,0,0x0,8
tick,0x7ffd55ac6f44,102778402,0,0x0,8
tick,0x7ffd55ac6f44,102793321,0,0x0,8
tick,0x7ffd55ac6f44,102808326,0,0x0,8
tick,0x7ffd55ac6f44,102823395,0,0x0,8
tick,0x7ffd55ac6f44,102838990,0,0x0,8
tick,0x7ffd55ac6f44,102854337,0,0x0,8
tick,0x7ffd55ac6f44,102869298,0,0x0,8
tick,0x7ffd55ac6f44,102885363,0,0x0,8
tick,0x7ffd55ac6f44,102900736,0,0x0,8
tick,0x7ffd55ac6f44,102916185,0,0x0,8
tick,0x7ffd55ac6f44,102932385,0,0x0,8
tick,0x7ffd55ac6f44,102947678,0,0x0,8
tick,0x7ffd55ac6f44,102963035,0,0x0,8
tick,0x7ffd55ac6f44,102978756,0,0x0,8
tick,0x7ffd55ac6f44,102994576,0,0x0,8
tick,0x7ffd55ac6f44,103010096,0,0x0,8
tick,0x7ffd55ac6f44,103025551,0,0x0,8
tick,0x7ffd55ac6f44,103041419,0,0x0,8
tick,0x7ffd55ac6f44,103057172,0,0x0,8
tick,0x7ffd55ac6f44,103073275,0,0x0,8
tick,0x7ffd55ac6f44,103089341,0,0x0,8
tick,0x7ffd55ac6f44,103105383,0,0x0,8
tick,0x7ffd55ac6f44,103121244,0,0x0,8
tick,0x7ffd55ac6f44,103137262,0,0x0,8
tick,0x7ffd55ac6f44,103153180,0,0x0,8
tick,0x7ffd55ac6f44,103169398,0,0x0,8
tick,0x7ffd55ac6f44,103185244,0,0x0,8
tick,0x7ffd55ac6f44,103200864,0,0x0,8
tick,0x7ffd55ac6f44,103216170,0,0x0,8
tick,0x7ffd55ac6f44,103232345,0,0x0,8
tick,0x7ffd55ac6f44,103247674,0,0x0,8
tick,0x7ffd55ac6f44,103263182,0,0x0,8
tick,0x7ffd55ac6f44,103279246,0,0x0,8
tick,0x7ffd55ac6f44,103294821,0,0x0,8
tick,0x7ffd55ac6f44,103310371,0,0x0,8
tick,0x7ffd55ac6f44,103325421,0,0x0,8
tick,0x7ffd55ac6f44,103341139,0,0x0,8
tick,0x7ffd55ac6f44,103355946,0,0x0,8
tick,0x7ffd55ac6f44,103372057,0,0x0,8
tick,0x7ffd55ac6f44,103387092,0,0x0,8
tick,0x7ffd55ac6f44,103403468,0,0x0,8
tick,0x7ffd55ac6f44,103419531,0,0x0,8
tick,0x7ffd55ac6f44,103435252,0,0x0,8
tick,0x7ffd55ac6f44,103450823,0,0x0,8
tick,0x7ffd55ac6f44,103466066,0,0x0,8
tick,0x7ffd55ac6f44,103481836,0,0x0,8
tick,0x7ffd55ac6f44,103497206,0,0x0,8
tick,0x7ffd55ac6f44,103513594,0,0x0,8
tick,0x7ffd55ac6f44,103529395,0,0x0,8
tick,0x7ffd55ac6f44,103545073,0,0x0,8
tick,0x7ffd55ac6f44,103560259,0,0x0,8
tick,0x7ffd55ac6f44,103575191,0,0x0,8
tick,0x7ffd55ac6f44,103590457,0,0x0,8
tick,0x7ffd55ac6f44,103605240,0,0x0,8
tick,0x7ffd55ac6f44,103620155,0,0x0,8
tick,0x7ffd55ac6f44,103635616,0,0x0,8
tick,0x7ffd55ac6f44,103651251,0,0x0,8
tick,0x7ffd55ac6f44,103667220,0,0x0,8
tick,0x7ffd55ac6f44,103682322,0,0x0,8
tick,0x7ffd55ac6f44,103697472,0,0x0,8
tick,0x7ffd55ac6f44,103713949,0,0x0,8
tick,0x7ffd55ac6f44,103728688,0,0x0,8
tick,0x7ffd55ac6f44,103744246,0,0x0,8
tick,0x7ffd55ac6f44,103759790,0,0x0,8
tick,0x7ffd55ac6f44,103775362,0,0x0,8
tick,0x7ffd55ac6f44,103791292,0,0x0,8
tick,0x7ffd55ac6f44,103806242,0,0x0,8
tick,0x7ffd55ac6f44,103821346,0,0x0,8
tick,0x7ffd55ac6f44,103836415,0,0x0,8
tick,0x7ffd55ac6f44,103851959,0,0x0,8
tick,0x7ffd55ac6f44,103867422,0,0x0,8
tick,0x7ffd55ac6f44,103883690,0,0x0,8
tick,0x7ffd55ac6f44,103900273,0,0x0,8
tick,0x7ffd55ac6f44,103915374,0,0x0,8
tick,0x7ffd55ac6f44,103930470,0,0x0,8
tick,0x7ffd55ac6f44,103946186,0,0x0,8
tick,0x7ffd55ac6f44,103961075,0,0x0,8
tick,0x7ffd55ac6f44,103976047,0,0x0,8
tick,0x7ffd55ac6f44,103991451,0,0x0,8
tick,0x7ffd55ac6f44,104007063,0,0x0,8
tick,0x7ffd55ac6f44,104022786,0,0x0,8
tick,0x7ffd55ac6f44,104038658,0,0x0,8
tick,0x7ffd55ac6f44,104054591,0,0x0,8
tick,0x7ffd55ac6f44,104070301,0,0x0,8
tick,0x7ffd55ac6f44,104086086,0,0x0,8
tick,0x7ffd55ac6f44,104101759,0,0x0,8
tick,0x7ffd55ac6f44,104117287,0,0x0,8
tick,0x7ffd55ac6f44,104132228,0,0x0,8
tick,0x7ffd55ac6f44,104147332,0,0x0,8
tick,0x7ffd55ac6f44,104163539,0,0x0,8
tick,0x7ffd55ac6f44,104179491,0,0x0,8
tick,0x7ffd55ac6f44,104195304,0,0x0,8
tick,0x7ffd55ac6f44,104211211,0,0x0,8
tick,0x7ffd55ac6f44,104226297,0,0x0,8
tick,0x7ffd55ac6f44,104242297,0,0x0,8
tick,0x7ffd55ac6f44,104258645,0,0x0,8
tick,0x7ffd55ac6f44,104274763,0,0x0,8
tick,0x7ffd55ac6f44,104290166,0,0x0,8
tick,0x7ffd55ac6f44,104305328,0,0x0,8
tick,0x7ffd55ac6f44,104321431,0,0x0,8
tick,0x7ffd55ac6f44,104335891,0,0x0,8
tick,0x7ffd55ac6f44,104351174,0,0x0,8
tick,0x7ffd55ac6f44,104367349,0,0x0,8
tick,0x7ffd55ac6f44,104382495,0,0x0,8
tick,0x7ffd55ac6f44,104398031,0,0x0,8
tick,0x7ffd55ac6f44,104414175,0,0x0,8
tick,0x7ffd55ac6f44,104429868,0,0x0,8
tick,0x7ffd55ac6f44,104445889,0,0x0,8
tick,0x7ffd55ac6f44,104462009,0,0x0,8
tick,0x7ffd55ac6f44,104476915,0,0x0,8
tick,0x7ffd55ac6f44,104491902,0,0x0,8
tick,0x7ffd55ac6f44,104508088,0,0x0,8
tick,0x7ffd55ac6f44,104523514,0,0x0,8
tick,0x7ffd55ac6f44,104539500,0,0x0,8
tick,0x7ffd55ac6f44,104554676,0,0x0,8
tick,0x7ffd55ac6f44,104570623,0,0x0,8
tick,0x7ffd55ac6f44,104586292,0,0x0,8
tick,0x7ffd55ac6f44,104602407,0,0x0,8
tick,0x7ffd55ac6f44,104617572,0,0x0,8
tick,0x7ffd55ac6f44,104632366,0,0x0,8
tick,0x7ffd55ac6f44,104647810,0,0x0,8
tick,0x7ffd55ac6f44,104663229,0,0x0,8
tick,0x7ffd55ac6f44,104678190,0,0x0,8
tick,0x7ffd55ac6f44,104693493,0,0x0,8
tick,0x7ffd55ac6f44,104709212,0,0x0,8
tick,0x7ffd55ac6f44,104724390,0,0x0,8
tick,0x7ffd55ac6f44,104739742,0,0x0,8
tick,0x7ffd55ac6f44,104755209,0,0x0,8
tick,0x7ffd55ac6f44,104770860,0,0x0,8
tick,0x7ffd55ac6f44,104786089,0,0x0,8
tick,0x7ffd55ac6f44,104801776,0,0x0,8
tick,0x7ffd55ac6f44,104817615,0,0x0,8
tick,0x7ffd55ac6f44,104833231,0,0x0,8
tick,0x7ffd55ac6f44,104848625,0,0x0,8
tick,0x7ffd55ac6f44,104863399,0,0x0,8
tick,0x7ffd55ac6f44,104878733,0,0x0,8
tick,0x7ffd55ac6f44,104894510,0,0x0,8
tick,0x7ffd55ac6f44,104909871,0,0x0,8
tick,0x7ffd55ac6f44,104925370,0,0x0,8
tick,0x7ffd55ac6f44,104940596,0,0x0,8
tick,0x7ffd55ac6f44,104956056,0,0x0,8
tick,0x7ffd55ac6f44,104972385,0,0x0,8
tick,0x7ffd55ac6f44,104987955,0,0x0,8
tick,0x7ffd55ac6f44,105003478,0,0x0,8
tick,0x7ffd55ac6f44,105018405,0,0x0,8
tick,0x7ffd55ac6f44,105033593,0,0x0,8
tick,0x7ffd55ac6f44,105049063,0,0x0,8
tick,0x7ffd55ac6f44,105065086,0,0x0,8
tick,0x7ffd55ac6f44,105080868,0,0x0,8
tick,0x7ffd55ac6f44,105096161,0,0x0,8
tick,0x7ffd55ac6f44,105112004,0,0x0,8
tick,0x7ffd55ac6f44,105126972,0,0x0,8
tick,0x7ffd55ac6f44,105142799,0,0x0,8
tick,0x7ffd55ac6f44,105158527,0,0x0,8
tick,0x7ffd55ac6f44,105174385,0,0x0,8
tick,0x7ffd55ac6f44,105190566,0,0x0,8
tick,0x7ffd55ac6f44,105205981,0,0x0,8
tick,0x7ffd55ac6f44,105221276,0,0x0,8
tick,0x7ffd55ac6f44,105237299,0,0x0,8
tick,0x7ffd55ac6f44,105253052,0,0x0,8
tick,0x7ffd55ac6f44,105268416,0,0x0,8
tick,0x7ffd55ac6f44,105283528,0,0x0,8
tick,0x7ffd55ac6f44,105299564,0,0x0,8
tick,0x7ffd55ac6f44,105314712,0,0x0,8
tick,0x7ffd55ac6f44,105329910,0,0x0,8
tick,0x7ffd55ac6f44,105344743,0,0x0,8
tick,0x7ffd55ac6f44,105359714,0,0x0,8
tick,0x7ffd55ac6f44,105374899,0,0x0,8
tick,0x7ffd55ac6f44,105390913,0,0x0,8
tick,0x7ffd55ac6f44,105406663,0,0x0,8
tick,0x7ffd55ac6f44,105422483,0,0x0,8
tick,0x7ffd55ac6f44,105437718,0,0x0,8
tick,0x7ffd55ac6f44,105453705,0,0x0,8
tick,0x7ffd55ac6f44,105469384,0,0x0,8
tick,0x7ffd55ac6f44,105485349,0,0x0,8
tick,0x7ffd55ac6f44,105501377,0,0x0,8
tick,0x7ffd55ac6f44,105516111,0,0x0,8
tick,0x7ffd55ac6f44,105531664,0,0x0,8
tick,0x7ffd55ac6f44,105547000,0,0x0,8
tick,0x7ffd55ac6f44,105562257,0,0x0,8
tick,0x7ffd55ac6f44,105577920,0,0x0,8
tick,0x7ffd55ac6f44,105593878,0,0x0,8
tick,0x7ffd55ac6f44,105609218,0,0x0,8
tick,0x7ffd55ac6f44,105624944,0,0x0,8
tick,0x7ffd55ac6f44,105640813,0,0x0,8
tick,0x7ffd55ac6f44,105655799,0,0x0,8
tick,0x7ffd55ac6f44,105670676,0,0x0,8
tick,0x7ffd55ac6f44,105685456,0,0x0,8
tick,0x7ffd55ac6f44,105700446,0,0x0,8
tick,0x7ffd55ac6f44,105715547,0,0x0,8
tick,0x7ffd55ac6f44,105730124,0,0x0,8
tick,0x7ffd55ac6f44,105745232,0,0x0,8
tick,0x7ffd55ac6f44,105760068,0,0x0,8
tick,0x7ffd55ac6f44,105775371,0,0x0,8
tick,0x7ffd55ac6f44,105791313,0,0x0,8
tick,0x7ffd55ac6f44,105807582,0,0x0,8
tick,0x7ffd55ac6f44,105823669,0,0x0,8
tick,0x7ffd55ac6f44,105839020,0,0x0,8
tick,0x7ffd55ac6f44,105854467,0,0x0,8
tick,0x7ffd55ac6f44,105870340,0,0x0,8
tick,0x7ffd55ac6f44,105885612,0,0x0,8
tick,0x7ffd55ac6f44,105901156,0,0x0,8
tick,0x7ffd55ac6f44,105917614,0,0x0,8
tick,0x7ffd55ac6f44,105933062,0,0x0,8
tick,0x7ffd55ac6f44,105948747,0,0x0,8
tick,0x7ffd55ac6f44,105964589,0,0x0,8
tick,0x7ffd55ac6f44,105980593,0,0x0,8
tick,0x7ffd55ac6f44,105995844,0,0x0,8
tick,0x7ffd55ac6f44,106011954,0,0x0,8
tick,0x7ffd55ac6f44,106027505,0,0x0,8
tick,0x7ffd55ac6f44,106043448,0,0x0,8
tick,0x7ffd55ac6f44,106058598,0,0x0,8
tick,0x7ffd55ac6f44,106074302,0,0x0,8
tick,0x7ffd55ac6f44,106090336,0,0x0,8
tick,0x7ffd55ac6f44,106105301,0,0x0,8
tick,0x7ffd55ac6f44,106121334,0,0x0,8
tick,0x7ffd55ac6f44,106137578,0,0x0,8
tick,0x7ffd55ac6f44,106153306,0,0x0,8
tick,0x7ffd55ac6f44,106168384,0,0x0,8
tick,0x7ffd55ac6f44,106184127,0,0x0,8
tick,0x7ffd55ac6f44,106199371,0,0x0,8
tick,0x7ffd55ac6f44,106214615,0,0x0,8
tick,0x7ffd55ac6f44,106230024,0,0x0,8
tick,0x7ffd55ac6f44,106245447,0,0x0,8
tick,0x7ffd55ac6f44,106260774,0,0x0,8
tick,0x7ffd55ac6f44,106276165,0,0x0,8
tick,0x7ffd55ac6f44,106292456,0,0x0,8
tick,0x7ffd55ac6f44,106307559,0,0x0,8
tick,0x7ffd55ac6f44,106323618,0,0x0,8
tick,0x7ffd55ac6f44,106339270,0,0x0,8
tick,0x7ffd55ac6f44,106355282,0,0x0,8
tick,0x7ffd55ac6f44,106370462,0,0x0,8
tick,0x7ffd55ac6f44,106386233,0,0x0,8
tick,0x7ffd55ac6f44,106402258,0,0x0,8
tick,0x7ffd55ac6f44,106417524,0,0x0,8
tick,0x7ffd55ac6f44,106433316,0,0x0,8
tick,0x7ffd55ac6f44,106448782,0,0x0,8
tick,0x7ffd55ac6f44,106464422,0,0x0,8
tick,0x7ffd55ac6f44,106479307,0,0x0,8
tick,0x7ffd55ac6f44,106494615,0,0x0,8
tick,0x7ffd55ac6f44,106510360,0,0x0,8
tick,0x7ffd55ac6f44,106526073,0,0x0,8
tick,0x7ffd55ac6f44,106542071,0,0x0,8
tick,0x7ffd55ac6f44,106557028,0,0x0,8
tick,0x7ffd55ac6f44,106572080,0,0x0,8
tick,0x7ffd55ac6f44,106588490,0,0x0,8
tick,0x7ffd55ac6f44,106603093,0,0x0,8
tick,0x7ffd55ac6f44,106619500,0,0x0,8
tick,0x7ffd55ac6f44,106634189,0,0x0,8
tick,0x7ffd55ac6f44,106649318,0,0x0,8
tick,0x7ffd55ac6f44,106664699,0,0x0,8
tick,0x7ffd55ac6f44,106680341,0,0x0,8
tick,0x7ffd55ac6f44,106695623,0,0x0,8
tick,0x7ffd55ac6f44,106711571,0,0x0,8
tick,0x7ffd55ac6f44,106727030,0,0x0,8
tick,0x7ffd55ac6f44,106742294,0,0x0,8
tick,0x7ffd55ac6f44,106757845,0,0x0,8
tick,0x7ffd55ac6f44,106773068,0,0x0,8
tick,0x7ffd55ac6f44,106789112,0,0x0,8
tick,0x7ffd55ac6f44,106804680,0,0x0,8
tick,0x7ffd55ac6f44,106819963,0,0x0,8
tick,0x7ffd55ac6f44,106835311,0,0x0,8
tick,0x7ffd55ac6f44,106850772,0,0x0,8
tick,0x7ffd55ac6f44,106866466,0,0x0,8
tick,0x7ffd55ac6f44,106881323,0,0x0,8
tick,0x7ffd55ac6f44,106896443,0,0x0,8
tick,0x7ffd55ac6f44,106911281,0,0x0,8
tick,0x7ffd55ac6f44,106926259,0,0x0,8
tick,0x7ffd55ac6f44,106942439,0,0x0,8
tick,0x7ffd55ac6f44,106957946,0,0x0,8
tick,0x7ffd55ac6f44,106973812,0,0x0,8
tick,0x7ffd55ac6f44,106989570,0,0x0,8
tick,0x7ffd55ac6f44,107005602,0,0x0,8
tick,0x7ffd55ac6f44,107021007,0,0x0,8
tick,0x7ffd55ac6f44,107037008,0,0x0,8
tick,0x7ffd55ac6f44,107053040,0,0x0,8
tick,0x7ffd55ac6f44,107068670,0,0x0,8
tick,0x7ffd55ac6f44,107084543,0,0x0,8
tick,0x7ffd55ac6f44,107100389,0,0x0,8
tick,0x7ffd55ac6f44,107115513,0,0x0,8
tick,0x7ffd55ac6f44,107130569,0,0x0,8
tick,0x7ffd55ac6f44,107146360,0,0x0,8
tick,0x7ffd55ac6f44,107162384,0,0x0,8
tick,0x7ffd55ac6f44,107178326,0,0x0,8
tick,0x7ffd55ac6f44,107194503,0,0x0,8
tick,0x7ffd55ac6f44,107210563,0,0x0,8
tick,0x7ffd55ac6f44,107225400,0,0x0,8
tick,0x7ffd55ac6f44,107240394,0,0x0,8
tick,0x7ffd55ac6f44,107256578,0,0x0,8
tick,0x7ffd55ac6f44,107272395,0,0x0,8
tick,0x7ffd55ac6f44,107288461,0,0x0,8
tick,0x7ffd55ac6f44,107304784,0,0x0,8
tick,0x7ffd55ac6f44,107320393,0,0x0,8
tick,0x7ffd55ac6f44,107335327,0,0x0,8
tick,0x7ffd55ac6f44,107351562,0,0x0,8
tick,0x7ffd55ac6f44,107367366,0,0x0,8
tick,0x7ffd55ac6f44,107382690,0,0x0,8
tick,0x7ffd55ac6f44,107397678,0,0x0,8
tick,0x7ffd55ac6f44,107412708,0,0x0,8
tick,0x7ffd55ac6f44,107427827,0,0x0,8
tick,0x7ffd55ac6f44,107443367,0,0x0,8
tick,0x7ffd55ac6f44,107458468,0,0x0,8
tick,0x7ffd55ac6f44,107474149,0,0x0,8
tick,0x7ffd55ac6f44,107490358,0,0x0,8
tick,0x7ffd55ac6f44,107506497,0,0x0,8
tick,0x7ffd55ac6f44,107522325,0,0x0,8
tick,0x7ffd55ac6f44,107538406,0,0x0,8
tick,0x7ffd55ac6f44,107553434,0,0x0,8
tick,0x7ffd55ac6f44,107568874,0,0x0,8
tick,0x7ffd55ac6f44,107584746,0,0x0,8
tick,0x7ffd55ac6f44,107599737,0,0x0,8
tick,0x7ffd55ac6f44,107614707,0,0x0,8
tick,0x7ffd55ac6f44,107630754,0,0x0,8
tick,0x7ffd55ac6f44,107646959,0,0x0,8
tick,0x7ffd55ac6f44,107662802,0,0x0,8
tick,0x7ffd55ac6f44,107678419,0,0x0,8
tick,0x7ffd55ac6f44,107694148,0,0x0,8
tick,0x7ffd55ac6f44,107709311,0,0x0,8
tick,0x7ffd55ac6f44,107724838,0,0x0,8
tick,0x7ffd55ac6f44,107740630,0,0x0,8
tick,0x7ffd55ac6f44,107756830,0,0x0,8
tick,0x7ffd55ac6f44,107772256,0,0x0,8
tick,0x7ffd55ac6f44,107788142,0,0x0,8
tick,0x7ffd55ac6f44,107803855,0,0x0,8
tick,0x7ffd55ac6f44,107819027,0,0x0,8
tick,0x7ffd55ac6f44,107834323,0,0x0,8
tick,0x7ffd55ac6f44,107849952,0,0x0,8
tick,0x7ffd55ac6f44,107864972,0,0x0,8
tick,0x7ffd55ac6f44,107880540,0,0x0,8
tick,0x7ffd55ac6f44,107895631,0,0x0,8
tick,0x7ffd55ac6f44,107910975,0,0x0,8
tick,0x7ffd55ac6f44,107926266,0,0x0,8
tick,0x7ffd55ac6f44,107941281,0,0x0,8
tick,0x7ffd55ac6f44,107958080,0,0x0,8
tick,0x7ffd55ac6f44,107973273,0,0x0,8
tick,0x7ffd55ac6f44,107988823,0,0x0,8
tick,0x7ffd55ac6f44,108003768,0,0x0,8
tick,0x7ffd55ac6f44,108019433,0,0x0,8
tick,0x7ffd55ac6f44,108035059,0,0x0,8
tick,0x7ffd55ac6f44,108051009,0,0x0,8
tick,0x7ffd55ac6f44,108066787,0,0x0,8
tick,0x7ffd55ac6f44,108082140,0,0x0,8
tick,0x7ffd55ac6f44,108098437,0,0x0,8
tick,0x7ffd55ac6f44,108114504,0,0x0,8
tick,0x7ffd55ac6f44,108130404,0,0x0,8
tick,0x7ffd55ac6f44,108145848,0,0x0,8
tick,0x7ffd55ac6f44,108161210,0,0x0,8
tick,0x7ffd55ac6f44,108176215,0,0x0,8
tick,0x7ffd55ac6f44,108191996,0,0x0,8
tick,0x7ffd55ac6f44,108207618,0,0x0,8
tick,0x7ffd55ac6f44,108222149,0,0x0,8
tick,0x7ffd55ac6f44,108238082,0,0x0,8
tick,0x7ffd55ac6f44,108253371,0,0x0,8
tick,0x7ffd55ac6f44,108268616,0,0x0,8
tick,0x7ffd55ac6f44,108284605,0,0x0,8
tick,0x7ffd55ac6f44,108300743,0,0x0,8
tick,0x7ffd55ac6f44,108315439,0,0x0,8
tick,0x7ffd55ac6f44,108330340,0,0x0,8
tick,0x7ffd55ac6f44,108346246,0,0x0,8
tick,0x7ffd55ac6f44,108362262,0,0x0,8
tick,0x7ffd55ac6f44,108377462,0,0x0,8
tick,0x7ffd55ac6f44,108393458,0,0x0,8
tick,0x7ffd55ac6f44,108409537,0,0x0,8
tick,0x7ffd55ac6f44,108424740,0,0x0,8
tick,0x7ffd55ac6f44,108441387,0,0x0,8
tick,0x7ffd55ac6f44,108456248,0,0x0,8
tick,0x7ffd55ac6f44,108472274,0,0x0,8
tick,0x7ffd55ac6f44,108488025,0,0x0,8
tick,0x7ffd55ac6f44,108503560,0,0x0,8
tick,0x7ffd55ac6f44,108519599,0,0x0,8
tick,0x7ffd55ac6f44,108535290,0,0x0,8
tick,0x7ffd55ac6f44,108550588,0,0x0,8
tick,0x7ffd55ac6f44,108565265,0,0x0,8
tick,0x7ffd55ac6f44,108581062,0,0x0,8
tick,0x7ffd55ac6f44,108596686,0,0x0,8
tick,0x7ffd55ac6f44,108612122,0,0x0,8
tick,0x7ffd55ac6f44,108627481,0,0x0,8
tick,0x7ffd55ac6f44,108643212,0,0x0,8
tick,0x7ffd55ac6f44,108659301,0,0x0,8
tick,0x7ffd55ac6f44,108674965,0,0x0,8
tick,0x7ffd55ac6f44,108690130,0,0x0,8
tick,0x7ffd55ac6f44,108705445,0,0x0,8
tick,0x7ffd55ac6f44,108720751,0,0x0,8
tick,0x7ffd55ac6f44,108736149,0,0x0,8
tick,0x7ffd55ac6f44,108752169,0,0x0,8
tick,0x7ffd55ac6f44,108768165,0,0x0,8
tick,0x7ffd55ac6f44,108783832,0,0x0,8
tick,0x7ffd55ac6f44,108799777,0,0x0,8
tick,0x7ffd55ac6f44,108815303,0,0x0,8
tick,0x7ffd55ac6f44,108830981,0,0x0,8
tick,0x7ffd55ac6f44,108846057,0,0x0,8
tick,0x7ffd55ac6f44,108862298,0,0x0,8
tick,0x7ffd55ac6f44,108878123,0,0x0,8
tick,0x7ffd55ac6f44,108893494,0,0x0,8
tick,0x7ffd55ac6f44,108908863,0,0x0,8
tick,0x7ffd55ac6f44,108924554,0,0x0,8
tick,0x7ffd55ac6f44,108939933,0,0x0,8
tick,0x7ffd55ac6f44,108955657,0,0x0,8
tick,0x7ffd55ac6f44,108971044,0,0x0,8
tick,0x7ffd55ac6f44,108987392,0,0x0,8
tick,0x7ffd55ac6f44,109003206,0,0x0,8
tick,0x7ffd55ac6f44,109018690,0,0x0,8
tick,0x7ffd55ac6f44,109033442,0,0x0,8
tick,0x7ffd55ac6f44,109048344,0,0x0,8
tick,0x7ffd55ac6f44,109063459,0,0x0,8
tick,0x7ffd55ac6f44,109078916,0,0x0,8
tick,0x7ffd55ac6f44,109094010,0,0x0,8
tick,0x7ffd55ac6f44,109108813,0,0x0,8
tick,0x7ffd55ac6f44,109123795,0,0x0,8
tick,0x7ffd55ac6f44,109139443,0,0x0,8
tick,0x7ffd55ac6f44,109154957,0,0x0,8
tick,0x7ffd55ac6f44,109170283,0,0x0,8
tick,0x7ffd55ac6f44,109185512,0,0x0,8
tick,0x7ffd55ac6f44,109200972,0,0x0,8
tick,0x7ffd55ac6f44,109216899,0,0x0,8
tick,0x7ffd55ac6f44,109232229,0,0x0,8
tick,0x7ffd55ac6f44,109247037,0,0x0,8
tick,0x7ffd55ac6f44,109261978,0,0x0,8
tick,0x7ffd55ac6f44,109277889,0,0x0,8
tick,0x7ffd55ac6f44,109293676,0,0x0,8
tick,0x7ffd55ac6f44,109309616,0,0x0,8
tick,0x7ffd55ac6f44,109325026,0,0x0,8
tick,0x7ffd55ac6f44,109340876,0,0x0,8
tick,0x7ffd55ac6f44,109356448,0,0x0,8
tick,0x7ffd55ac6f44,109372254,0,0x0,8
tick,0x7ffd55ac6f44,109387466,0,0x0,8
tick,0x7ffd55ac6f44,109403148,0,0x0,8
tick,0x7ffd55ac6f44,109419045,0,0x0,8
tick,0x7ffd55ac6f44,109434130,0,0x0,8
tick,0x7ffd55ac6f44,109449275,0,0x0,8
tick,0x7ffd55ac6f44,109464589,0,0x0,8
tick,0x7ffd55ac6f44,109480515,0,0x0,8
tick,0x7ffd55ac6f44,109496542,0,0x0,8
tick,0x7ffd55ac6f44,109511811,0,0x0,8
tick,0x7ffd55ac6f44,109527459,0,0x0,8
tick,0x7ffd55ac6f44,109543303,0,0x0,8
tick,0x7ffd55ac6f44,109558818,0,0x0,8
tick,0x7ffd55ac6f44,109574731,0,0x0,8
tick,0x7ffd55ac6f44,109590553,0,0x0,8
tick,0x7ffd55ac6f44,109606293,0,0x0,8
tick,0x7ffd55ac6f44,109622470,0,0x0,8
tick,0x7ffd55ac6f44,109638297,0,0x0,8
tick,0x7ffd55ac6f44,109653506,0,0x0,8
tick,0x7ffd55ac6f44,109669568,0,0x0,8
tick,0x7ffd55ac6f44,109685244,0,0x0,8
tick,0x7ffd55ac6f44,109701324,0,0x0,8
tick,0x7ffd55ac6f44,109717335,0,0x0,8
tick,0x7ffd55ac6f44,109732615,0,0x0,8
tick,0x7ffd55ac6f44,109748050,0,0x0,8
tick,0x7ffd55ac6f44,109763493,0,0x0,8
tick,0x7ffd55ac6f44,109779246,0,0x0,8
tick,0x7ffd55ac6f44,109794539,0,0x0,8
tick,0x7ffd55ac6f44,109810567,0,0x0,8
tick,0x7ffd55ac6f44,109825259,0,0x0,8
tick,0x7ffd55ac6f44,109840420,0,0x0,8
tick,0x7ffd55ac6f44,109855469,0,0x0,8
tick,0x7ffd55ac6f44,109870651,0,0x0,8
tick,0x7ffd55ac6f44,109885439,0,0x0,8
tick,0x7ffd55ac6f44,109900442,0,0x0,8
tick,0x7ffd55ac6f44,109915670,0,0x0,8
tick,0x7ffd55ac6f44,109931435,0,0x0,8
tick,0x7ffd55ac6f44,109947149,0,0x0,8
tick,0x7ffd55ac6f44,109962875,0,0x0,8
tick,0x7ffd55ac6f44,109978045,0,0x0,8
tick,0x7ffd55ac6f44,109993258,0,0x0,8
tick,0x7ffd55ac6f44,110008860,0,0x0,8
tick,0x7ffd55ac6f44,110024423,0,0x0,8
tick,0x7ffd55ac6f44,110039766,0,0x0,8
tick,0x7ffd55ac6f44,110054833,0,0x0,8
tick,0x7ffd55ac6f44,110071249,0,0x0,8
tick,0x7ffd55ac6f44,110086545,0,0x0,8
tick,0x7ffd55ac6f44,110102153,0,0x0,8
tick,0x7ffd55ac6f44,110117674,0,0x0,8
tick,0x7ffd55ac6f44,110133347,0,0x0,8
tick,0x7ffd55ac6f44,110149478,0,0x0,8
tick,0x7ffd55ac6f44,110165516,0,0x0,8
tick,0x7ffd55ac6f44,110180987,0,0x0,8
tick,0x7ffd55ac6f44,110195445,0,0x0,8
tick,0x7ffd55ac6f44,110210994,0,0x0,8
tick,0x7ffd55ac6f44,110226949,0,0x0,8
tick,0x7ffd55ac6f44,110242954,0,0x0,8
tick,0x7ffd55ac6f44,110259015,0,0x0,8
tick,0x7ffd55ac6f44,110274850,0,0x0,8
tick,0x7ffd55ac6f44,110290300,0,0x0,8
tick,0x7ffd55ac6f44,110306034,0,0x0,8
tick,0x7ffd55ac6f44,110322128,0,0x0,8
tick,0x7ffd55ac6f44,110337320,0,0x0,8
tick,0x7ffd55ac6f44,110353325,0,0x0,8
tick,0x7ffd55ac6f44,110368715,0,0x0,8
tick,0x7ffd55ac6f44,110384100,0,0x0,8
tick,0x7ffd55ac6f44,110399559,0,0x0,8
tick,0x7ffd55ac6f44,110415263,0,0x0,8
tick,0x7ffd55ac6f44,110430537,0,0x0,8
tick,0x7ffd55ac6f44,110446292,0,0x0,8
tick,0x7ffd55ac6f44,110462250,0,0x0,8
tick,0x7ffd55ac6f44,110477867,0,0x0,8
tick,0x7ffd55ac6f44,110493509,0,0x0,8
tick,0x7ffd55ac6f44,110508583,0,0x0,8
tick,0x7ffd55ac6f44,110524675,0,0x0,8
tick,0x7ffd55ac6f44,110540328,0,0x0,8
tick,0x7ffd55ac6f44,110556233,0,0x0,8
tick,0x7ffd55ac6f44,110571854,0,0x0,8
tick,0x7ffd55ac6f44,110587489,0,0x0,8
tick,0x7ffd55ac6f44,110602430,0,0x0,8
tick,0x7ffd55ac6f44,110617591,0,0x0,8
tick,0x7ffd55ac6f44,110632359,0,0x0,8
tick,0x7ffd55ac6f44,110647268,0,0x0,8
tick,0x7ffd55ac6f44,110662345,0,0x0,8
tick,0x7ffd55ac6f44,110677493,0,0x0,8
tick,0x7ffd55ac6f44,110692301,0,0x0,8
tick,0x7ffd55ac6f44,110707601,0,0x0,8
tick,0x7ffd55ac6f44,110723472,0,0x0,8
tick,0x7ffd55ac6f44,110739078,0,0x0,8
tick,0x7ffd55ac6f44,110754070,0,0x0,8
tick,0x7ffd55ac6f44,110769062,0,0x0,8
tick,0x7ffd55ac6f44,110785082,0,0x0,8
tick,0x7ffd55ac6f44,110800092,0,0x0,8
tick,0x7ffd55ac6f44,110815016,0,0x0,8
tick,0x7ffd55ac6f44,110830883,0,0x0,8
tick,0x7ffd55ac6f44,110846905,0,0x0,8
tick,0x7ffd55ac6f44,110862154,0,0x0,8
tick,0x7ffd55ac6f44,110877596,0,0x0,8
tick,0x7ffd55ac6f44,110893054,0,0x0,8
tick,0x7ffd55ac6f44,110908810,0,0x0,8
tick,0x7ffd55ac6f44,110924641,0,0x0,8
tick,0x7ffd55ac6f44,110939645,0,0x0,8
tick,0x7ffd55ac6f44,110954813,0,0x0,8
tick,0x7ffd55ac6f44,110970455,0,0x0,8
tick,0x7ffd55ac6f44,110985716,0,0x0,8
tick,0x7ffd55ac6f44,111000971,0,0x0,8
tick,0x7ffd55ac6f44,111015656,0,0x0,8
tick,0x7ffd55ac6f44,111030695,0,0x0,8
tick,0x7ffd55ac6f44,111046229,0,0x0,8
tick,0x7ffd55ac6f44,111062291,0,0x0,8
tick,0x7ffd55ac6f44,111078341,0,0x0,8
tick,0x7ffd55ac6f44,111093249,0,0x0,8
tick,0x7ffd55ac6f44,111108767,0,0x0,8
tick,0x7ffd55ac6f44,111124100,0,0x0,8
tick,0x7ffd55ac6f44,111139155,0,0x0,8
tick,0x7ffd55ac6f44,111154103,0,0x0,8
tick,0x7ffd55ac6f44,111170088,0,0x0,8
tick,0x7ffd55ac6f44,111185155,0,0x0,8
tick,0x7ffd55ac6f44,111201130,0,0x0,8
tick,0x7ffd55ac6f44,111217148,0,0x0,8
tick,0x7ffd55ac6f44,111232425,0,0x0,8
tick,0x7ffd55ac6f44,111247415,0,0x0,8
tick,0x7ffd55ac6f44,111262415,0,0x0,8
tick,0x7ffd55ac6f44,111277442,0,0x0,8
tick,0x7ffd55ac6f44,111294590,0,0x0,8
tick,0x7ffd55ac6f44,111309535,0,0x0,8
tick,0x7ffd55ac6f44,111325738,0,0x0,8
tick,0x7ffd55ac6f44,111340430,0,0x0,8
tick,0x7ffd55ac6f44,111355428,0,0x0,8
tick,0x7ffd55ac6f44,111370458,0,0x0,8
tick,0x7ffd55ac6f44,111385431,0,0x0,8
tick,0x7ffd55ac6f44,111400516,0,0x0,8
tick,0x7ffd55ac6f44,111415510,0,0x0,8
tick,0x7ffd55ac6f44,111430601,0,0x0,8
tick,0x7ffd55ac6f44,111446263,0,0x0,8
tick,0x7ffd55ac6f44,111462296,0,0x0,8
tick,0x7ffd55ac6f44,111477488,0,0x0,8
tick,0x7ffd55ac6f44,111493033,0,0x0,8
tick,0x7ffd55ac6f44,111508494,0,0x0,8
tick,0x7ffd55ac6f44,111523317,0,0x0,8
tick,0x7ffd55ac6f44,111538141,0,0x0,8
tick,0x7ffd55ac6f44,111553315,0,0x0,8
tick,0x7ffd55ac6f44,111568478,0,0x0,8
tick,0x7ffd55ac6f44,111583713,0,0x0,8
tick,0x7ffd55ac6f44,111599238,0,0x0,8
tick,0x7ffd55ac6f44,111614136,0,0x0,8
tick,0x7ffd55ac6f44,111629505,0,0x0,8
tick,0x7ffd55ac6f44,111644332,0,0x0,8
tick,0x7ffd55ac6f44,111659413,0,0x0,8
tick,0x7ffd55ac6f44,111674382,0,0x0,8
tick,0x7ffd55ac6f44,111690394,0,0x0,8
tick,0x7ffd55ac6f44,111705588,0,0x0,8
tick,0x7ffd55ac6f44,111721056,0,0x0,8
tick,0x7ffd55ac6f44,111736216,0,0x0,8
tick,0x7ffd55ac6f44,111751029,0,0x0,8
tick,0x7ffd55ac6f44,111766110,0,0x0,8
tick,0x7ffd55ac6f44,111780915,0,0x0,8
tick,0x7ffd55ac6f44,111796104,0,0x0,8
tick,0x7ffd55ac6f44,111811141,0,0x0,8
tick,0x7ffd55ac6f44,111827070,0,0x0,8
tick,0x7ffd55ac6f44,111843123,0,0x0,8
tick,0x7ffd55ac6f44,111858121,0,0x0,8
tick,0x7ffd55ac6f44,111873104,0,0x0,8
tick,0x7ffd55ac6f44,111888377,0,0x0,8
tick,0x7ffd55ac6f44,111904431,0,0x0,8
tick,0x7ffd55ac6f44,111920818,0,0x0,8
tick,0x7ffd55ac6f44,111936251,0,0x0,8
tick,0x7ffd55ac6f44,111951540,0,0x0,8
tick,0x7ffd55ac6f44,111966165,0,0x0,8
tick,0x7ffd55ac6f44,111980895,0,0x0,8
tick,0x7ffd55ac6f44,111996083,0,0x0,8
tick,0x7ffd55ac6f44,112010977,0,0x0,8
tick,0x7ffd55ac6f44,112025963,0,0x0,8
tick,0x7ffd55ac6f44,112041725,0,0x0,8
tick,0x7ffd55ac6f44,112057399,0,0x0,8
tick,0x7ffd55ac6f44,112073387,0,0x0,8
tick,0x7ffd55ac6f44,112088987,0,0x0,8
tick,0x7ffd55ac6f44,112105921,0,0x0,8
tick,0x7ffd55ac6f44,112121269,0,0x0,8
tick,0x7ffd55ac6f44,112135980,0,0x0,8
tick,0x7ffd55ac6f44,112151177,0,0x0,8
tick,0x7ffd55ac6f44,112166132,0,0x0,8
tick,0x7ffd55ac6f44,112181444,0,0x0,8
tick,0x7ffd55ac6f44,112196282,0,0x0,8
tick,0x7ffd55ac6f44,112211308,0,0x0,8
tick,0x7ffd55ac6f44,112227528,0,0x0,8
tick,0x7ffd55ac6f44,112242786,0,0x0,8
tick,0x7ffd55ac6f44,112257796,0,0x0,8
tick,0x7ffd55ac6f44,112273067,0,0x0,8
tick,0x7ffd55ac6f44,112289166,0,0x0,8
tick,0x7ffd55ac6f44,112304012,0,0x0,8
tick,0x7ffd55ac6f44,112319460,0,0x0,8
tick,0x7ffd55ac6f44,112334819,0,0x0,8
tick,0x7ffd55ac6f44,112350298,0,0x0,8
tick,0x7ffd55ac6f44,112365415,0,0x0,8
tick,0x7ffd55ac6f44,112381705,0,0x0,8
tick,0x7ffd55ac6f44,112396238,0,0x0,8
tick,0x7ffd55ac6f44,112411640,0,0x0,8
tick,0x7ffd55ac6f44,112426825,0,0x0,8
tick,0x7ffd55ac6f44,112441768,0,0x0,8
tick,0x7ffd55ac6f44,112456695,0,0x0,8
tick,0x7ffd55ac6f44,112472395,0,0x0,8
tick,0x7ffd55ac6f44,112486978,0,0x0,8
tick,0x7ffd55ac6f44,112502162,0,0x0,8
tick,0x7ffd55ac6f44,112517418,0,0x0,8
tick,0x7ffd55ac6f44,112533921,0,0x0,8
tick,0x7ffd55ac6f44,112549855,0,0x0,8
tick,0x7ffd55ac6f44,112565333,0,0x0,8
tick,0x7ffd55ac6f44,112581265,0,0x0,8
tick,0x7ffd55ac6f44,112597079,0,0x0,8
tick,0x7ffd55ac6f44,112612234,0,0x0,8
tick,0x7ffd55ac6f44,112627516,0,0x0,8
tick,0x7ffd55ac6f44,112642958,0,0x0,8
tick,0x7ffd55ac6f44,112658192,0,0x0,8
tick,0x7ffd55ac6f44,112673541,0,0x0,8
tick,0x7ffd55ac6f44,112689220,0,0x0,8
tick,0x7ffd55ac6f44,112705135,0,0x0,8
tick,0x7ffd55ac6f44,112720235,0,0x0,8
tick,0x7ffd55ac6f44,112736129,0,0x0,8
tick,0x7ffd55ac6f44,112751935,0,0x0,8
tick,0x7ffd55ac6f44,112767430,0,0x0,8
tick,0x7ffd55ac6f44,112783273,0,0x0,8
tick,0x7ffd55ac6f44,112799345,0,0x0,8
tick,0x7ffd55ac6f44,112815660,0,0x0,8
tick,0x7ffd55ac6f44,112830196,0,0x0,8
tick,0x7ffd55ac6f44,112845216,0,0x0,8
tick,0x7ffd55ac6f44,112860877,0,0x0,8
tick,0x7ffd55ac6f44,112876649,0,0x0,8
tick,0x7ffd55ac6f44,112891663,0,0x0,8
tick,0x7ffd55ac6f44,112906538,0,0x0,8
tick,0x7ffd55ac6f44,112922660,0,0x0,8
tick,0x7ffd55ac6f44,112937748,0,0x0,8
tick,0x7ffd55ac6f44,112952653,0,0x0,8
tick,0x7ffd55ac6f44,112967576,0,0x0,8
tick,0x7ffd55ac6f44,112982458,0,0x0,8
tick,0x7ffd55ac6f44,112998462,0,0x0,8
tick,0x7ffd55ac6f44,113013451,0,0x0,8
tick,0x7ffd55ac6f44,113028868,0,0x0,8
tick,0x7ffd55ac6f44,113045048,0,0x0,8
tick,0x7ffd55ac6f44,113059957,0,0x0,8
tick,0x7ffd55ac6f44,113075457,0,0x0,8
tick,0x7ffd55ac6f44,113091891,0,0x0,8
tick,0x7ffd55ac6f44,113106565,0,0x0,8
tick,0x7ffd55ac6f44,113121645,0,0x0,8
tick,0x7ffd55ac6f44,113137138,0,0x0,8
tick,0x7ffd55ac6f44,113152358,0,0x0,8
tick,0x7ffd55ac6f44,113168106,0,0x0,8
tick,0x7ffd55ac6f44,113183525,0,0x0,8
tick,0x7ffd55ac6f44,113199195,0,0x0,8
tick,0x7ffd55ac6f44,113214498,0,0x0,8
tick,0x7ffd55ac6f44,113230112,0,0x0,8
tick,0x7ffd55ac6f44,113245988,0,0x0,8
tick,0x7ffd55ac6f44,113262500,0,0x0,8
tick,0x7ffd55ac6f44,113277823,0,0x0,8
tick,0x7ffd55ac6f44,113293379,0,0x0,8
tick,0x7ffd55ac6f44,113309551,0,0x0,8
tick,0x7ffd55ac6f44,113324629,0,0x0,8
tick,0x7ffd55ac6f44,113340133,0,0x0,8
tick,0x7ffd55ac6f44,113356135,0,0x0,8
tick,0x7ffd55ac6f44,113371344,0,0x0,8
tick,0x7ffd55ac6f44,113386946,0,0x0,8
tick,0x7ffd55ac6f44,113402325,0,0x0,8
tick,0x7ffd55ac6f44,113417725,0,0x0,8
tick,0x7ffd55ac6f44,113433099,0,0x0,8
tick,0x7ffd55ac6f44,113448719,0,0x0,8
tick,0x7ffd55ac6f44,113464662,0,0x0,8
tick,0x7ffd55ac6f44,113480415,0,0x0,8
tick,0x7ffd55ac6f44,113495789,0,0x0,8
tick,0x7ffd55ac6f44,113510959,0,0x0,8
tick,0x7ffd55ac6f44,113526851,0,0x0,8
tick,0x7ffd55ac6f44,113542164,0,0x0,8
tick,0x7ffd55ac6f44,113557880,0,0x0,8
tick,0x7ffd55ac6f44,113573683,0,0x0,8
tick,0x7ffd55ac6f44,113589133,0,0x0,8
tick,0x7ffd55ac6f44,113604558,0,0x0,8
tick,0x7ffd55ac6f44,113620329,0,0x0,8
tick,0x7ffd55ac6f44,113635289,0,0x0,8
tick,0x7ffd55ac6f44,113650730,0,0x0,8
tick,0x7ffd55ac6f44,113665511,0,0x0,8
tick,0x7ffd55ac6f44,113680526,0,0x0,8
tick,0x7ffd55ac6f44,113695366,0,0x0,8
tick,0x7ffd55ac6f44,113710730,0,0x0,8
tick,0x7ffd55ac6f44,113726292,0,0x0,8
tick,0x7ffd55ac6f44,113741960,0,0x0,8
tick,0x7ffd55ac6f44,113756439,0,0x0,8
tick,0x7ffd55ac6f44,113771858,0,0x0,8
tick,0x7ffd55ac6f44,113787929,0,0x0,8
tick,0x7ffd55ac6f44,113804364,0,0x0,8
tick,0x7ffd55ac6f44,113819252,0,0x0,8
tick,0x7ffd55ac6f44,113834460,0,0x0,8
tick,0x7ffd55ac6f44,113849313,0,0x0,8
tick,0x7ffd55ac6f44,113864339,0,0x0,8
tick,0x7ffd55ac6f44,113880746,0,0x0,8
tick,0x7ffd55ac6f44,113896058,0,0x0,8
tick,0x7ffd55ac6f44,113911981,0,0x0,8
tick,0x7ffd55ac6f44,113927805,0,0x0,8
tick,0x7ffd55ac6f44,113943742,0,0x0,8
tick,0x7ffd55ac6f44,113959712,0,0x0,8
tick,0x7ffd55ac6f44,113974892,0,0x0,8
tick,0x7ffd55ac6f44,113990747,0,0x0,8
tick,0x7ffd55ac6f44,114006852,0,0x0,8
tick,0x7ffd55ac6f44,114021877,0,0x0,8
tick,0x7ffd55ac6f44,114037909,0,0x0,8
tick,0x7ffd55ac6f44,114052933,0,0x0,8
tick,0x7ffd55ac6f44,114068309,0,0x0,8
tick,0x7ffd55ac6f44,114084051,0,0x0,8
tick,0x7ffd55ac6f44,114100114,0,0x0,8
tick,0x7ffd55ac6f44,114115326,0,0x0,8
tick,0x7ffd55ac6f44,114131406,0,0x0,8
tick,0x7ffd55ac6f44,114145918,0,0x0,8
tick,0x7ffd55ac6f44,114161474,0,0x0,8
tick,0x7ffd55ac6f44,114176359,0,0x0,8
tick,0x7ffd55ac6f44,114191732,0,0x0,8
tick,0x7ffd55ac6f44,114207361,0,0x0,8
tick,0x7ffd55ac6f44,114222953,0,0x0,8
tick,0x7ffd55ac6f44,114238811,0,0x0,8
tick,0x7ffd55ac6f44,114254445,0,0x0,8
tick,0x7ffd55ac6f44,114270612,0,0x0,8
tick,0x7ffd55ac6f44,114286776,0,0x0,8
tick,0x7ffd55ac6f44,114302203,0,0x0,8
tick,0x7ffd55ac6f44,114317576,0,0x0,8
tick,0x7ffd55ac6f44,114332726,0,0x0,8
tick,0x7ffd55ac6f44,114347754,0,0x0,8
tick,0x7ffd55ac6f44,114362311,0,0x0,8
tick,0x7ffd55ac6f44,114378159,0,0x0,8
tick,0x7ffd55ac6f44,114393530,0,0x0,8
tick,0x7ffd55ac6f44,114409407,0,0x0,8
tick,0x7ffd55ac6f44,114425085,0,0x0,8
tick,0x7ffd55ac6f44,114441321,0,0x0,8
tick,0x7ffd55ac6f44,114455824,0,0x0,8
tick,0x7ffd55ac6f44,114471172,0,0x0,8
tick,0x7ffd55ac6f44,114486050,0,0x0,8
tick,0x7ffd55ac6f44,114501234,0,0x0,8
tick,0x7ffd55ac6f44,114516231,0,0x0,8
tick,0x7ffd55ac6f44,114532231,0,0x0,8
tick,0x7ffd55ac6f44,114547990,0,0x0,8
tick,0x7ffd55ac6f44,114563075,0,0x0,8
tick,0x7ffd55ac6f44,114578779,0,0x0,8
tick,0x7ffd55ac6f44,114593961,0,0x0,8
tick,0x7ffd55ac6f44,114609748,0,0x0,8
tick,0x7ffd55ac6f44,114625336,0,0x0,8
tick,0x7ffd55ac6f44,114640946,0,0x0,8
tick,0x7ffd55ac6f44,114655492,0,0x0,8
tick,0x7ffd55ac6f44,114671196,0,0x0,8
tick,0x7ffd55ac6f44,114686460,0,0x0,8
tick,0x7ffd55ac6f44,114702321,0,0x0,8
tick,0x7ffd55ac6f44,114718105,0,0x0,8
tick,0x7ffd55ac6f44,114733405,0,0x0,8
tick,0x7ffd55ac6f44,114749711,0,0x0,8
tick,0x7ffd55ac6f44,114765461,0,0x0,8
tick,0x7ffd55ac6f44,114781086,0,0x0,8
tick,0x7ffd55ac6f44,114797616,0,0x0,8
tick,0x7ffd55ac6f44,114812815,0,0x0,8
tick,0x7ffd55ac6f44,114828106,0,0x0,8
tick,0x7ffd55ac6f44,114843693,0,0x0,8
tick,0x7ffd55ac6f44,114859485,0,0x0,8
tick,0x7ffd55ac6f44,114875972,0,0x0,8
tick,0x7ffd55ac6f44,114890907,0,0x0,8
tick,0x7ffd55ac6f44,114905743,0,0x0,8
tick,0x7ffd55ac6f44,114921589,0,0x0,8
tick,0x7ffd55ac6f44,114937551,0,0x0,8
tick,0x7ffd55ac6f44,114953172,0,0x0,8
tick,0x7ffd55ac6f44,114968277,0,0x0,8
tick,0x7ffd55ac6f44,114983271,0,0x0,8
tick,0x7ffd55ac6f44,114998516,0,0x0,8
tick,0x7ffd55ac6f44,115013128,0,0x0,8
tick,0x7ffd55ac6f44,115029445,0,0x0,8
tick,0x7ffd55ac6f44,115044144,0,0x0,8
tick,0x7ffd55ac6f44,115059651,0,0x0,8
tick,0x7ffd55ac6f44,115075226,0,0x0,8
tick,0x7ffd55ac6f44,115090640,0,0x0,8
tick,0x7ffd55ac6f44,115106337,0,0x0,8
tick,0x7ffd55ac6f44,115122271,0,0x0,8
tick,0x7ffd55ac6f44,115137307,0,0x0,8
tick,0x7ffd55ac6f44,115153192,0,0x0,8
tick,0x7ffd55ac6f44,115168602,0,0x0,8
tick,0x7ffd55ac6f44,115184412,0,0x0,8
tick,0x7ffd55ac6f44,115201016,0,0x0,8
tick,0x7ffd55ac6f44,115215804,0,0x0,8
tick,0x7ffd55ac6f44,115231692,0,0x0,8
tick,0x7ffd55ac6f44,115247559,0,0x0,8
tick,0x7ffd55ac6f44,115263251,0,0x0,8
tick,0x7ffd55ac6f44,115278665,0,0x0,8
tick,0x7ffd55ac6f44,115294506,0,0x0,8
tick,0x7ffd55ac6f44,115309860,0,0x0,8
tick,0x7ffd55ac6f44,115325246,0,0x0,8
tick,0x7ffd55ac6f44,115340333,0,0x0,8
tick,0x7ffd55ac6f44,115356510,0,0x0,8
tick,0x7ffd55ac6f44,115372181,0,0x0,8
tick,0x7ffd55ac6f44,115388270,0,0x0,8
tick,0x7ffd55ac6f44,115403335,0,0x0,8
tick,0x7ffd55ac6f44,115419328,0,0x0,8
tick,0x7ffd55ac6f44,115434429,0,0x0,8
tick,0x7ffd55ac6f44,115450474,0,0x0,8
tick,0x7ffd55ac6f44,115466057,0,0x0,8
tick,0x7ffd55ac6f44,115482116,0,0x0,8
tick,0x7ffd55ac6f44,115497958,0,0x0,8
tick,0x7ffd55ac6f44,115513121,0,0x0,8
tick,0x7ffd55ac6f44,115528815,0,0x0,8
tick,0x7ffd55ac6f44,115544066,0,0x0,8
tick,0x7ffd55ac6f44,115559766,0,0x0,8
tick,0x7ffd55ac6f44,115574754,0,0x0,8
tick,0x7ffd55ac6f44,115590225,0,0x0,8
tick,0x7ffd55ac6f44,115606113,0,0x0,8
tick,0x7ffd55ac6f44,115621096,0,0x0,8
tick,0x7ffd55ac6f44,115636276,0,0x0,8
tick,0x7ffd55ac6f44,115651350,0,0x0,8
tick,0x7ffd55ac6f44,115666363,0,0x0,8
tick,0x7ffd55ac6f44,115682726,0,0x0,8
tick,0x7ffd55ac6f44,115697523,0,0x0,8
tick,0x7ffd55ac6f44,115713429,0,0x0,8
tick,0x7ffd55ac6f44,115729354,0,0x0,8
tick,0x7ffd55ac6f44,115744881,0,0x0,8
tick,0x7ffd55ac6f44,115761006,0,0x0,8
tick,0x7ffd55ac6f44,115776479,0,0x0,8
tick,0x7ffd55ac6f44,115792347,0,0x0,8
tick,0x7ffd55ac6f44,115808038,0,0x0,8
tick,0x7ffd55ac6f44,115823267,0,0x0,8
tick,0x7ffd55ac6f44,115839437,0,0x0,8
tick,0x7ffd55ac6f44,115855172,0,0x0,8
tick,0x7ffd55ac6f44,115870762,0,0x0,8
tick,0x7ffd55ac6f44,115885933,0,0x0,8
tick,0x7ffd55ac6f44,115901292,0,0x0,8
tick,0x7ffd55ac6f44,115916156,0,0x0,8
tick,0x7ffd55ac6f44,115931605,0,0x0,8
tick,0x7ffd55ac6f44,115947108,0,0x0,8
tick,0x7ffd55ac6f44,115962411,0,0x0,8
tick,0x7ffd55ac6f44,115977717,0,0x0,8
tick,0x7ffd55ac6f44,115993636,0,0x0,8
tick,0x7ffd55ac6f44,116009454,0,0x0,8
tick,0x7ffd55ac6f44,116024954,0,0x0,8
tick,0x7ffd55ac6f44,116039966,0,0x0,8
tick,0x7ffd55ac6f44,116055140,0,0x0,8
tick,0x7ffd55ac6f44,116071089,0,0x0,8
tick,0x7ffd55ac6f44,116086356,0,0x0,8
tick,0x7ffd55ac6f44,116101704,0,0x0,8
tick,0x7ffd55ac6f44,116117327,0,0x0,8
tick,0x7ffd55ac6f44,116133457,0,0x0,8
tick,0x7ffd55ac6f44,116148851,0,0x0,8
tick,0x7ffd55ac6f44,116164523,0,0x0,8
tick,0x7ffd55ac6f44,116179971,0,0x0,8
tick,0x7ffd55ac6f44,116194810,0,0x0,8
tick,0x7ffd55ac6f44,116210056,0,0x0,8
tick,0x7ffd55ac6f44,116225398,0,0x0,8
tick,0x7ffd55ac6f44,116240684,0,0x0,8
tick,0x7ffd55ac6f44,116256244,0,0x0,8
tick,0x7ffd55ac6f44,116272239,0,0x0,8
tick,0x7ffd55ac6f44,116288299,0,0x0,8
tick,0x7ffd55ac6f44,116303754,0,0x0,8
tick,0x7ffd55ac6f44,116319682,0,0x0,8
tick,0x7ffd55ac6f44,116334854,0,0x0,8
tick,0x7ffd55ac6f44,116350712,0,0x0,8
tick,0x7ffd55ac6f44,116366289,0,0x0,8
tick,0x7ffd55ac6f44,116381941,0,0x0,8
tick,0x7ffd55ac6f44,116398076,0,0x0,8
tick,0x7ffd55ac6f44,116413639,0,0x0,8
tick,0x7ffd55ac6f44,116428901,0,0x0,8
tick,0x7ffd55ac6f44,116444435,0,0x0,8
tick,0x7ffd55ac6f44,116459494,0,0x0,8
tick,0x7ffd55ac6f44,116475089,0,0x0,8
tick,0x7ffd55ac6f44,116490387,0,0x0,8
tick,0x7ffd55ac6f44,116505739,0,0x0,8
tick,0x7ffd55ac6f44,116520607,0,0x0,8
tick,0x7ffd55ac6f44,116536362,0,0x0,8
tick,0x7ffd55ac6f44,116551761,0,0x0,8
tick,0x7ffd55ac6f44,116567886,0,0x0,8
tick,0x7ffd55ac6f44,116583604,0,0x0,8
tick,0x7ffd55ac6f44,116599480,0,0x0,8
tick,0x7ffd55ac6f44,116614474,0,0x0,8
tick,0x7ffd55ac6f44,116629440,0,0x0,8
tick,0x7ffd55ac6f44,116645093,0,0x0,8
tick,0x7ffd55ac6f44,116660418,0,0x0,8
tick,0x7ffd55ac6f44,116675790,0,0x0,8
tick,0x7ffd55ac6f44,116691476,0,0x0,8
tick,0x7ffd55ac6f44,116706921,0,0x0,8
tick,0x7ffd55ac6f44,116722198,0,0x0,8
tick,0x7ffd55ac6f44,116737632,0,0x0,8
tick,0x7ffd55ac6f44,116753332,0,0x0,8
tick,0x7ffd55ac6f44,116769423,0,0x0,8
tick,0x7ffd55ac6f44,116785371,0,0x0,8
tick,0x7ffd55ac6f44,116801011,0,0x0,8
tick,0x7ffd55ac6f44,116816350,0,0x0,8
tick,0x7ffd55ac6f44,116832192,0,0x0,8
tick,0x7ffd55ac6f44,116847265,0,0x0,8
tick,0x7ffd55ac6f44,116863367,0,0x0,8
tick,0x7ffd55ac6f44,116879708,0,0x0,8
tick,0x7ffd55ac6f44,116894657,0,0x0,8
tick,0x7ffd55ac6f44,116909616,0,0x0,8
tick,0x7ffd55ac6f44,116925027,0,0x0,8
tick,0x7ffd55ac6f44,116940566,0,0x0,8
tick,0x7ffd55ac6f44,116955884,0,0x0,8
tick,0x7ffd55ac6f44,116971352,0,0x0,8
tick,0x7ffd55ac6f44,116987317,0,0x0,8
tick,0x7ffd55ac6f44,117002441,0,0x0,8
tick,0x7ffd55ac6f44,117018080,0,0x0,8
tick,0x7ffd55ac6f44,117033632,0,0x0,8
tick,0x7ffd55ac6f44,117048854,0,0x0,8
tick,0x7ffd55ac6f44,117064294,0,0x0,8
tick,0x7ffd55ac6f44,117080014,0,0x0,8
tick,0x7ffd55ac6f44,117095606,0,0x0,8
tick,0x7ffd55ac6f44,117110770,0,0x0,8
tick,0x7ffd55ac6f44,117126537,0,0x0,8
tick,0x7ffd55ac6f44,117142050,0,0x0,8
tick,0x7ffd55ac6f44,117157682,0,0x0,8
tick,0x7ffd55ac6f44,117173112,0,0x0,8
tick,0x7ffd55ac6f44,117189308,0,0x0,8
tick,0x7ffd55ac6f44,117205193,0,0x0,8
tick,0x7ffd55ac6f44,117220369,0,0x0,8
tick,0x7ffd55ac6f44,117235640,0,0x0,8
tick,0x7ffd55ac6f44,117250599,0,0x0,8
tick,0x7ffd55ac6f44,117266220,0,0x0,8
tick,0x7ffd55ac6f44,117281668,0,0x0,8
tick,0x7ffd55ac6f44,117297327,0,0x0,8
tick,0x7ffd55ac6f44,117312218,0,0x0,8
tick,0x7ffd55ac6f44,117327442,0,0x0,8
tick,0x7ffd55ac6f44,117343018,0,0x0,8
tick,0x7ffd55ac6f44,117358500,0,0x0,8
tick,0x7ffd55ac6f44,117374540,0,0x0,8
tick,0x7ffd55ac6f44,117390685,0,0x0,8
tick,0x7ffd55ac6f44,117406376,0,0x0,8
tick,0x7ffd55ac6f44,117421612,0,0x0,8
tick,0x7ffd55ac6f44,117437825,0,0x0,8
tick,0x7ffd55ac6f44,117453278,0,0x0,8
tick,0x7ffd55ac6f44,117468525,0,0x0,8
tick,0x7ffd55ac6f44,117484483,0,0x0,8
tick,0x7ffd55ac6f44,117500496,0,0x0,8
tick,0x7ffd55ac6f44,117515473,0,0x0,8
tick,0x7ffd55ac6f44,117530753,0,0x0,8
tick,0x7ffd55ac6f44,117546479,0,0x0,8
tick,0x7ffd55ac6f44,117562540,0,0x0,8
tick,0x7ffd55ac6f44,117578488,0,0x0,8
tick,0x7ffd55ac6f44,117594661,0,0x0,8
tick,0x7ffd55ac6f44,117610000,0,0x0,8
tick,0x7ffd55ac6f44,117626108,0,0x0,8
tick,0x7ffd55ac6f44,117642097,0,0x0,8
tick,0x7ffd55ac6f44,117657401,0,0x0,8
tick,0x7ffd55ac6f44,117673392,0,0x0,8
tick,0x7ffd55ac6f44,117689627,0,0x0,8
tick,0x7ffd55ac6f44,117705382,0,0x0,8
tick,0x7ffd55ac6f44,117721435,0,0x0,8
tick,0x7ffd55ac6f44,117737452,0,0x0,8
tick,0x7ffd55ac6f44,117752614,0,0x0,8
tick,0x7ffd55ac6f44,117768562,0,0x0,8
tick,0x7ffd55ac6f44,117784507,0,0x0,8
tick,0x7ffd55ac6f44,117799831,0,0x0,8
tick,0x7ffd55ac6f44,117815559,0,0x0,8
tick,0x7ffd55ac6f44,117831809,0,0x0,8
tick,0x7ffd55ac6f44,117846501,0,0x0,8
tick,0x7ffd55ac6f44,117862442,0,0x0,8
tick,0x7ffd55ac6f44,117877386,0,0x0,8
tick,0x7ffd55ac6f44,117892402,0,0x0,8
tick,0x7ffd55ac6f44,117908436,0,0x0,8
tick,0x7ffd55ac6f44,117924282,0,0x0,8
tick,0x7ffd55ac6f44,117940174,0,0x0,8
tick,0x7ffd55ac6f44,117955079,0,0x0,8
tick,0x7ffd55ac6f44,117970379,0,0x0,8
tick,0x7ffd55ac6f44,117985431,0,0x0,8
tick,0x7ffd55ac6f44,118000901,0,0x0,8
tick,0x7ffd55ac6f44,118016013,0,0x0,8
tick,0x7ffd55ac6f44,118031525,0,0x0,8
tick,0x7ffd55ac6f44,118047441,0,0x0,8
tick,0x7ffd55ac6f44,118062813,0,0x0,8
tick,0x7ffd55ac6f44,118078470,0,0x0,8
tick,0x7ffd55ac6f44,118093550,0,0x0,8
tick,0x7ffd55ac6f44,118109125,0,0x0,8
tick,0x7ffd55ac6f44,118125145,0,0x0,8
tick,0x7ffd55ac6f44,118141344,0,0x0,8
tick,0x7ffd55ac6f44,118156906,0,0x0,8
tick,0x7ffd55ac6f44,118172960,0,0x0,8
tick,0x7ffd55ac6f44,118187947,0,0x0,8
tick,0x7ffd55ac6f44,118203939,0,0x0,8
tick,0x7ffd55ac6f44,118219940,0,0x0,8
tick,0x7ffd55ac6f44,118235048,0,0x0,8
tick,0x7ffd55ac6f44,118250375,0,0x0,8
tick,0x7ffd55ac6f44,118266018,0,0x0,8
tick,0x7ffd55ac6f44,118281046,0,0x0,8
tick,0x7ffd55ac6f44,118296208,0,0x0,8
tick,0x7ffd55ac6f44,118312218,0,0x0,8
tick,0x7ffd55ac6f44,118327562,0,0x0,8
tick,0x7ffd55ac6f44,118343529,0,0x0,8
tick,0x7ffd55ac6f44,118359006,0,0x0,8
tick,0x7ffd55ac6f44,118374228,0,0x0,8
tick,0x7ffd55ac6f44,118389870,0,0x0,8
tick,0x7ffd55ac6f44,118405383,0,0x0,8
tick,0x7ffd55ac6f44,118420551,0,0x0,8
tick,0x7ffd55ac6f44,118436220,0,0x0,8
tick,0x7ffd55ac6f44,118451450,0,0x0,8
tick,0x7ffd55ac6f44,118466498,0,0x0,8
tick,0x7ffd55ac6f44,118481722,0,0x0,8
tick,0x7ffd55ac6f44,118497344,0,0x0,8
tick,0x7ffd55ac6f44,118513538,0,0x0,8
tick,0x7ffd55ac6f44,118529139,0,0x0,8
tick,0x7ffd55ac6f44,118545133,0,0x0,8
tick,0x7ffd55ac6f44,118560778,0,0x0,8
tick,0x7ffd55ac6f44,118576637,0,0x0,8
tick,0x7ffd55ac6f44,118592251,0,0x0,8
tick,0x7ffd55ac6f44,118607844,0,0x0,8
tick,0x7ffd55ac6f44,118623622,0,0x0,8
tick,0x7ffd55ac6f44,118639142,0,0x0,8
tick,0x7ffd55ac6f44,118654174,0,0x0,8
tick,0x7ffd55ac6f44,118669337,0,0x0,8
tick,0x7ffd55ac6f44,118684963,0,0x0,8
tick,0x7ffd55ac6f44,118700618,0,0x0,8
tick,0x7ffd55ac6f44,118715556,0,0x0,8
tick,0x7ffd55ac6f44,118731317,0,0x0,8
tick,0x7ffd55ac6f44,118747320,0,0x0,8
tick,0x7ffd55ac6f44,118762259,0,0x0,8
tick,0x7ffd55ac6f44,118777246,0,0x0,8
tick,0x7ffd55ac6f44,118793278,0,0x0,8
tick,0x7ffd55ac6f44,118808461,0,0x0,8
tick,0x7ffd55ac6f44,118824495,0,0x0,8
tick,0x7ffd55ac6f44,118839907,0,0x0,8
tick,0x7ffd55ac6f44,118854645,0,0x0,8
tick,0x7ffd55ac6f44,118870086,0,0x0,8
tick,0x7ffd55ac6f44,118885688,0,0x0,8
tick,0x7ffd55ac6f44,118901563,0,0x0,8
tick,0x7ffd55ac6f44,118916644,0,0x0,8
tick,0x7ffd55ac6f44,118932220,0,0x0,8
tick,0x7ffd55ac6f44,118947567,0,0x0,8
tick,0x7ffd55ac6f44,118963345,0,0x0,8
tick,0x7ffd55ac6f44,118978588,0,0x0,8
tick,0x7ffd55ac6f44,118994519,0,0x0,8
tick,0x7ffd55ac6f44,119009691,0,0x0,8
tick,0x7ffd55ac6f44,119025343,0,0x0,8
tick,0x7ffd55ac6f44,119040767,0,0x0,8
tick,0x7ffd55ac6f44,119055868,0,0x0,8
tick,0x7ffd55ac6f44,119071362,0,0x0,8
tick,0x7ffd55ac6f44,119086786,0,0x0,8
tick,0x7ffd55ac6f44,119102283,0,0x0,8
tick,0x7ffd55ac6f44,119118025,0,0x0,8
tick,0x7ffd55ac6f44,119133485,0,0x0,8
tick,0x7ffd55ac6f44,119148646,0,0x0,8
tick,0x7ffd55ac6f44,119164651,0,0x0,8
tick,0x7ffd55ac6f44,119179513,0,0x0,8
tick,0x7ffd55ac6f44,119194993,0,0x0,8
tick,0x7ffd55ac6f44,119209988,0,0x0,8
tick,0x7ffd55ac6f44,119225772,0,0x0,8
tick,0x7ffd55ac6f44,119241686,0,0x0,8
tick,0x7ffd55ac6f44,119257632,0,0x0,8
tick,0x7ffd55ac6f44,119273043,0,0x0,8
tick,0x7ffd55ac6f44,119288345,0,0x0,8
tick,0x7ffd55ac6f44,119304229,0,0x0,8
tick,0x7ffd55ac6f44,119319431,0,0x0,8
tick,0x7ffd55ac6f44,119335251,0,0x0,8
tick,0x7ffd55ac6f44,119350750,0,0x0,8
tick,0x7ffd55ac6f44,119366448,0,0x0,8
tick,0x7ffd55ac6f44,119382251,0,0x0,8
tick,0x7ffd55ac6f44,119397233,0,0x0,8
tick,0x7ffd55ac6f44,119413221,0,0x0,8
tick,0x7ffd55ac6f44,119428693,0,0x0,8
tick,0x7ffd55ac6f44,119444712,0,0x0,8
tick,0x7ffd55ac6f44,119459687,0,0x0,8
tick,0x7ffd55ac6f44,119475244,0,0x0,8
tick,0x7ffd55ac6f44,119490538,0,0x0,8
tick,0x7ffd55ac6f44,119506161,0,0x0,8
tick,0x7ffd55ac6f44,119521760,0,0x0,8
tick,0x7ffd55ac6f44,119537237,0,0x0,8
tick,0x7ffd55ac6f44,119552346,0,0x0,8
tick,0x7ffd55ac6f44,119568368,0,0x0,8
tick,0x7ffd55ac6f44,119584378,0,0x0,8
tick,0x7ffd55ac6f44,119599854,0,0x0,8
tick,0x7ffd55ac6f44,119615751,0,0x0,8
tick,0x7ffd55ac6f44,119631195,0,0x0,8
tick,0x7ffd55ac6f44,119647108,0,0x0,8
tick,0x7ffd55ac6f44,119663023,0,0x0,8
tick,0x7ffd55ac6f44,119678557,0,0x0,8
tick,0x7ffd55ac6f44,119694571,0,0x0,8
tick,0x7ffd55ac6f44,119709853,0,0x0,8
tick,0x7ffd55ac6f44,119725356,0,0x0,8
tick,0x7ffd55ac6f44,119740744,0,0x0,8
tick,0x7ffd55ac6f44,119756155,0,0x0,8
tick,0x7ffd55ac6f44,119772197,0,0x0,8
tick,0x7ffd55ac6f44,119787324,0,0x0,8
tick,0x7ffd55ac6f44,119802389,0,0x0,8
tick,0x7ffd55ac6f44,119817988,0,0x0,8
tick,0x7ffd55ac6f44,119833259,0,0x0,8
tick,0x7ffd55ac6f44,119848667,0,0x0,8
tick,0x7ffd55ac6f44,119863999,0,0x0,8
tick,0x7ffd55ac6f44,119879282,0,0x0,8
tick,0x7ffd55ac6f44,119894442,0,0x0,8
tick,0x7ffd55ac6f44,119910458,0,0x0,8
tick,0x7ffd55ac6f44,119925879,0,0x0,8
tick,0x7ffd55ac6f44,119941392,0,0x0,8
tick,0x7ffd55ac6f44,119956699,0,0x0,8
tick,0x7ffd55ac6f44,119972534,0,0x0,8
tick,0x7ffd55ac6f44,119988278,0,0x0,8
tick,0x7ffd55ac6f44,120004296,0,0x0,8
tick,0x7ffd55ac6f44,120020313,0,0x0,8
tick,0x7ffd55ac6f44,120035362,0,0x0,8
tick,0x7ffd55ac6f44,120050312,0,0x0,8
tick,0x7ffd55ac6f44,120065318,0,0x0,8
tick,0x7ffd55ac6f44,120080297,0,0x0,8
tick,0x7ffd55ac6f44,120096356,0,0x0,8
tick,0x7ffd55ac6f44,120112343,0,0x0,8
tick,0x7ffd55ac6f44,120128301,0,0x0,8
tick,0x7ffd55ac6f44,120144310,0,0x0,8
tick,0x7ffd55ac6f44,120160320,0,0x0,8
tick,0x7ffd55ac6f44,120176361,0,0x0,8
tick,0x7ffd55ac6f44,120191549,0,0x0,8
tick,0x7ffd55ac6f44,120207299,0,0x0,8
tick,0x7ffd55ac6f44,120222380,0,0x0,8
tick,0x7ffd55ac6f44,120237347,0,0x0,8
tick,0x7ffd55ac6f44,120252322,0,0x0,8
tick,0x7ffd55ac6f44,120268340,0,0x0,8
tick,0x7ffd55ac6f44,120284293,0,0x0,8
tick,0x7ffd55ac6f44,120299351,0,0x0,8
tick,0x7ffd55ac6f44,120314321,0,0x0,8
tick,0x7ffd55ac6f44,120329396,0,0x0,8
tick,0x7ffd55ac6f44,120344455,0,0x0,8
tick,0x7ffd55ac6f44,120360374,0,0x0,8
tick,0x7ffd55ac6f44,120375340,0,0x0,8
tick,0x7ffd55ac6f44,120390048,0,0x0,8
tick,0x7ffd55ac6f44,120405052,0,0x0,8
tick,0x7ffd55ac6f44,120420251,0,0x0,8
tick,0x7ffd55ac6f44,120435132,0,0x0,8
tick,0x7ffd55ac6f44,120449957,0,0x0,8
tick,0x7ffd55ac6f44,120464978,0,0x0,8
tick,0x7ffd55ac6f44,120480158,0,0x0,8
tick,0x7ffd55ac6f44,120495992,0,0x0,8
tick,0x7ffd55ac6f44,120512019,0,0x0,8
tick,0x7ffd55ac6f44,120527022,0,0x0,8
tick,0x7ffd55ac6f44,120541967,0,0x0,8
tick,0x7ffd55ac6f44,120556912,0,0x0,8
tick,0x7ffd55ac6f44,120571939,0,0x0,8
tick,0x7ffd55ac6f44,120586932,0,0x0,8
tick,0x7ffd55ac6f44,120602017,0,0x0,8
tick,0x7ffd55ac6f44,120617970,0,0x0,8
tick,0x7ffd55ac6f44,120633928,0,0x0,8
tick,0x7ffd55ac6f44,120648964,0,0x0,8
tick,0x7ffd55ac6f44,120663993,0,0x0,8
tick,0x7ffd55ac6f44,120678986,0,0x0,8
tick,0x7ffd55ac6f44,120694923,0,0x0,8
tick,0x7ffd55ac6f44,120710151,0,0x0,8
tick,0x7ffd55ac6f44,120725937,0,0x0,8
tick,0x7ffd55ac6f44,120742058,0,0x0,8
tick,0x7ffd55ac6f44,120756977,0,0x0,8
tick,0x7ffd55ac6f44,120773006,0,0x0,8
tick,0x7ffd55ac6f44,120789006,0,0x0,8
tick,0x7ffd55ac6f44,120804605,0,0x0,8
tick,0x7ffd55ac6f44,120819626,0,0x0,8
tick,0x7ffd55ac6f44,120835419,0,0x0,8
tick,0x7ffd55ac6f44,120851355,0,0x0,8
tick,0x7ffd55ac6f44,120866376,0,0x0,8
tick,0x7ffd55ac6f44,120881347,0,0x0,8
tick,0x7ffd55ac6f44,120897335,0,0x0,8
tick,0x7ffd55ac6f44,120912449,0,0x0,8
tick,0x7ffd55ac6f44,120928364,0,0x0,8
tick,0x7ffd55ac6f44,120944422,0,0x0,8
tick,0x7ffd55ac6f44,120960377,0,0x0,8
tick,0x7ffd55ac6f44,120976436,0,0x0,8
tick,0x7ffd55ac6f44,120992524,0,0x0,8
tick,0x7ffd55ac6f44,121008389,0,0x0,8
tick,0x7ffd55ac6f44,121024411,0,0x0,8
tick,0x7ffd55ac6f44,121039375,0,0x0,8
tick,0x7ffd55ac6f44,121054376,0,0x0,8
tick,0x7ffd55ac6f44,121069218,0,0x0,8
tick,0x7ffd55ac6f44,121084160,0,0x0,8
tick,0x7ffd55ac6f44,121100198,0,0x0,8
tick,0x7ffd55ac6f44,121115184,0,0x0,8
tick,0x7ffd55ac6f44,121130169,0,0x0,8
tick,0x7ffd55ac6f44,121146180,0,0x0,8
tick,0x7ffd55ac6f44,121162205,0,0x0,8
tick,0x7ffd55ac6f44,121178158,0,0x0,8
tick,0x7ffd55ac6f44,121194178,0,0x0,8
tick,0x7ffd55ac6f44,121210150,0,0x0,8
tick,0x7ffd55ac6f44,121225170,0,0x0,8
tick,0x7ffd55ac6f44,121240190,0,0x0,8
tick,0x7ffd55ac6f44,121255173,0,0x0,8
tick,0x7ffd55ac6f44,121271211,0,0x0,8
tick,0x7ffd55ac6f44,121287187,0,0x0,8
tick,0x7ffd55ac6f44,121303650,0,0x0,8
tick,0x7ffd55ac6f44,121319165,0,0x0,8
tick,0x7ffd55ac6f44,121334147,0,0x0,8
tick,0x7ffd55ac6f44,121350193,0,0x0,8
tick,0x7ffd55ac6f44,121365677,0,0x0,8
tick,0x7ffd55ac6f44,121380706,0,0x0,8
tick,0x7ffd55ac6f44,121396825,0,0x0,8
tick,0x7ffd55ac6f44,121412714,0,0x0,8
tick,0x7ffd55ac6f44,121427747,0,0x0,8
tick,0x7ffd55ac6f44,121442809,0,0x0,8
tick,0x7ffd55ac6f44,121458678,0,0x0,8
tick,0x7ffd55ac6f44,121474721,0,0x0,8
tick,0x7ffd55ac6f44,121490732,0,0x0,8
tick,0x7ffd55ac6f44,121506732,0,0x0,8
tick,0x7ffd55ac6f44,121522713,0,0x0,8
tick,0x7ffd55ac6f44,121538718,0,0x0,8
tick,0x7ffd55ac6f44,121553841,0,0x0,8
tick,0x7ffd55ac6f44,121569873,0,0x0,8
tick,0x7ffd55ac6f44,121585749,0,0x0,8
tick,0x7ffd55ac6f44,121600694,0,0x0,8
tick,0x7ffd55ac6f44,121615725,0,0x0,8
tick,0x7ffd55ac6f44,121630750,0,0x0,8
tick,0x7ffd55ac6f44,121645678,0,0x0,8
tick,0x7ffd55ac6f44,121661796,0,0x0,8
tick,0x7ffd55ac6f44,121677789,0,0x0,8
tick,0x7ffd55ac6f44,121693784,0,0x0,8
tick,0x7ffd55ac6f44,121709929,0,0x0,8
tick,0x7ffd55ac6f44,121725746,0,0x0,8
tick,0x7ffd55ac6f44,121741825,0,0x0,8
tick,0x7ffd55ac6f44,121756774,0,0x0,8
tick,0x7ffd55ac6f44,121771735,0,0x0,8
tick,0x7ffd55ac6f44,121786759,0,0x0,8
tick,0x7ffd55ac6f44,121802820,0,0x0,8
tick,0x7ffd55ac6f44,121817809,0,0x0,8
tick,0x7ffd55ac6f44,121834061,0,0x0,8
tick,0x7ffd55ac6f44,121849918,0,0x0,8
tick,0x7ffd55ac6f44,121865750,0,0x0,8
tick,0x7ffd55ac6f44,121880735,0,0x0,8
tick,0x7ffd55ac6f44,121896840,0,0x0,8
tick,0x7ffd55ac6f44,121912771,0,0x0,8
tick,0x7ffd55ac6f44,121927758,0,0x0,8
tick,0x7ffd55ac6f44,121942795,0,0x0,8
tick,0x7ffd55ac6f44,121957762,0,0x0,8
tick,0x7ffd55ac6f44,121973731,0,0x0,8
tick,0x7ffd55ac6f44,121989828,0,0x0,8
tick,0x7ffd55ac6f44,122005778,0,0x0,8
tick,0x7ffd55ac6f44,122020776,0,0x0,8
tick,0x7ffd55ac6f44,122036806,0,0x0,8
tick,0x7ffd55ac6f44,122051807,0,0x0,8
tick,0x7ffd55ac6f44,122067724,0,0x0,8
tick,0x7ffd55ac6f44,122083755,0,0x0,8
tick,0x7ffd55ac6f44,122098742,0,0x0,8
tick,0x7ffd55ac6f44,122113732,0,0x0,8
tick,0x7ffd55ac6f44,122128732,0,0x0,8
tick,0x7ffd55ac6f44,122143819,0,0x0,8
tick,0x7ffd55ac6f44,122159884,0,0x0,8
tick,0x7ffd55ac6f44,122175878,0,0x0,8
tick,0x7ffd55ac6f44,122191981,0,0x0,8
tick,0x7ffd55ac6f44,122207825,0,0x0,8
tick,0x7ffd55ac6f44,122223859,0,0x0,8
tick,0x7ffd55ac6f44,122239928,0,0x0,8
tick,0x7ffd55ac6f44,122255842,0,0x0,8
tick,0x7ffd55ac6f44,122271951,0,0x0,8
tick,0x7ffd55ac6f44,122287928,0,0x0,8
tick,0x7ffd55ac6f44,122302845,0,0x0,8
tick,0x7ffd55ac6f44,122317831,0,0x0,8
tick,0x7ffd55ac6f44,122332823,0,0x0,8
tick,0x7ffd55ac6f44,122348030,0,0x0,8
tick,0x7ffd55ac6f44,122363845,0,0x0,8
tick,0x7ffd55ac6f44,122378877,0,0x0,8
tick,0x7ffd55ac6f44,122394931,0,0x0,8
tick,0x7ffd55ac6f44,122409856,0,0x0,8
tick,0x7ffd55ac6f44,122426136,0,0x0,8
tick,0x7ffd55ac6f44,122440925,0,0x0,8
tick,0x7ffd55ac6f44,122455863,0,0x0,8
tick,0x7ffd55ac6f44,122472881,0,0x0,8
tick,0x7ffd55ac6f44,122489636,0,0x0,8
tick,0x7ffd55ac6f44,122503072,0,0x0,8
tick,0x7ffd55ac6f44,122516827,0,0x0,8
tick,0x7ffd55ac6f44,122532843,0,0x0,8
tick,0x7ffd55ac6f44,122548889,0,0x0,8
tick,0x7ffd55ac6f44,122564878,0,0x0,8
tick,0x7ffd55ac6f44,122580051,0,0x0,8
tick,0x7ffd55ac6f44,122595869,0,0x0,8
tick,0x7ffd55ac6f44,122612012,0,0x0,8
tick,0x7ffd55ac6f44,122627933,0,0x0,8
tick,0x7ffd55ac6f44,122643902,0,0x0,8
tick,0x7ffd55ac6f44,122660022,0,0x0,8
tick,0x7ffd55ac6f44,122674982,0,0x0,8
tick,0x7ffd55ac6f44,122689921,0,0x0,8
tick,0x7ffd55ac6f44,122704928,0,0x0,8
tick,0x7ffd55ac6f44,122720921,0,0x0,8
tick,0x7ffd55ac6f44,122735937,0,0x0,8
tick,0x7ffd55ac6f44,122751952,0,0x0,8
tick,0x7ffd55ac6f44,122766899,0,0x0,8
tick,0x7ffd55ac6f44,122782979,0,0x0,8
tick,0x7ffd55ac6f44,122797988,0,0x0,8
tick,0x7ffd55ac6f44,122813956,0,0x0,8
tick,0x7ffd55ac6f44,122828965,0,0x0,8
tick,0x7ffd55ac6f44,122843967,0,0x0,8
tick,0x7ffd55ac6f44,122859939,0,0x0,8
tick,0x7ffd55ac6f44,122875107,0,0x0,8
tick,0x7ffd55ac6f44,122890560,0,0x0,8
tick,0x7ffd55ac6f44,122905026,0,0x0,8
tick,0x7ffd55ac6f44,122920236,0,0x0,8
tick,0x7ffd55ac6f44,122936045,0,0x0,8
tick,0x7ffd55ac6f44,122951027,0,0x0,8
tick,0x7ffd55ac6f44,122967047,0,0x0,8
tick,0x7ffd55ac6f44,122982041,0,0x0,8
tick,0x7ffd55ac6f44,122997221,0,0x0,8
tick,0x7ffd55ac6f44,123013032,0,0x0,8
tick,0x7ffd55ac6f44,123029071,0,0x0,8
tick,0x7ffd55ac6f44,123045094,0,0x0,8
tick,0x7ffd55ac6f44,123061057,0,0x0,8
tick,0x7ffd55ac6f44,123076032,0,0x0,8
tick,0x7ffd55ac6f44,123091030,0,0x0,8
tick,0x7ffd55ac6f44,123106090,0,0x0,8
tick,0x7ffd55ac6f44,123121438,0,0x0,8
tick,0x7ffd55ac6f44,123142088,0,0x0,8
tick,0x7ffd55ac6f44,123153768,0,0x0,8
tick,0x7ffd55ac6f44,123169424,0,0x0,8
tick,0x7ffd55ac6f44,123185417,0,0x0,8
tick,0x7ffd55ac6f44,123200399,0,0x0,8
tick,0x7ffd55ac6f44,123215547,0,0x0,8
tick,0x7ffd55ac6f44,123231388,0,0x0,8
tick,0x7ffd55ac6f44,123247475,0,0x0,8
tick,0x7ffd55ac6f44,123262909,0,0x0,8
tick,0x7ffd55ac6f44,123278933,0,0x0,8
tick,0x7ffd55ac6f44,123294979,0,0x0,8
tick,0x7ffd55ac6f44,123310209,0,0x0,8
tick,0x7ffd55ac6f44,123325014,0,0x0,8
tick,0x7ffd55ac6f44,123339948,0,0x0,8
tick,0x7ffd55ac6f44,123355230,0,0x0,8
tick,0x7ffd55ac6f44,123369964,0,0x0,8
tick,0x7ffd55ac6f44,123386113,0,0x0,8
tick,0x7ffd55ac6f44,123401976,0,0x0,8
tick,0x7ffd55ac6f44,123417959,0,0x0,8
tick,0x7ffd55ac6f44,123432992,0,0x0,8
tick,0x7ffd55ac6f44,123448143,0,0x0,8
tick,0x7ffd55ac6f44,123464072,0,0x0,8
tick,0x7ffd55ac6f44,123479113,0,0x0,8
tick,0x7ffd55ac6f44,123494071,0,0x0,8
tick,0x7ffd55ac6f44,123509099,0,0x0,8
tick,0x7ffd55ac6f44,123524340,0,0x0,8
tick,0x7ffd55ac6f44,123540089,0,0x0,8
tick,0x7ffd55ac6f44,123555198,0,0x0,8
tick,0x7ffd55ac6f44,123571113,0,0x0,8
tick,0x7ffd55ac6f44,123587133,0,0x0,8
tick,0x7ffd55ac6f44,123603079,0,0x0,8
tick,0x7ffd55ac6f44,123619084,0,0x0,8
tick,0x7ffd55ac6f44,123634026,0,0x0,8
tick,0x7ffd55ac6f44,123649049,0,0x0,8
tick,0x7ffd55ac6f44,123664048,0,0x0,8
tick,0x7ffd55ac6f44,123680258,0,0x0,8
tick,0x7ffd55ac6f44,123695091,0,0x0,8
tick,0x7ffd55ac6f44,123712195,0,0x0,8
tick,0x7ffd55ac6f44,123726148,0,0x0,8
tick,0x7ffd55ac6f44,123742100,0,0x0,8
tick,0x7ffd55ac6f44,123757067,0,0x0,8
tick,0x7ffd55ac6f44,123772059,0,0x0,8
tick,0x7ffd55ac6f44,123787066,0,0x0,8
tick,0x7ffd55ac6f44,123803128,0,0x0,8
tick,0x7ffd55ac6f44,123818066,0,0x0,8
tick,0x7ffd55ac6f44,123833097,0,0x0,8
tick,0x7ffd55ac6f44,123848082,0,0x0,8
tick,0x7ffd55ac6f44,123863084,0,0x0,8
tick,0x7ffd55ac6f44,123879062,0,0x0,8
tick,0x7ffd55ac6f44,123895122,0,0x0,8
tick,0x7ffd55ac6f44,123910077,0,0x0,8
tick,0x7ffd55ac6f44,123925114,0,0x0,8
tick,0x7ffd55ac6f44,123941085,0,0x0,8
tick,0x7ffd55ac6f44,123957277,0,0x0,8
tick,0x7ffd55ac6f44,123973053,0,0x0,8
tick,0x7ffd55ac6f44,123988114,0,0x0,8
tick,0x7ffd55ac6f44,124004075,0,0x0,8
tick,0x7ffd55ac6f44,124020113,0,0x0,8
tick,0x7ffd55ac6f44,124036097,0,0x0,8
tick,0x7ffd55ac6f44,124052052,0,0x0,8
tick,0x7ffd55ac6f44,124067108,0,0x0,8
tick,0x7ffd55ac6f44,124083089,0,0x0,8
tick,0x7ffd55ac6f44,124098152,0,0x0,8
tick,0x7ffd55ac6f44,124114075,0,0x0,8
tick,0x7ffd55ac6f44,124130088,0,0x0,8
tick,0x7ffd55ac6f44,124146098,0,0x0,8
tick,0x7ffd55ac6f44,124161055,0,0x0,8
tick,0x7ffd55ac6f44,124177109,0,0x0,8
tick,0x7ffd55ac6f44,124192065,0,0x0,8
tick,0x7ffd55ac6f44,124207090,0,0x0,8
tick,0x7ffd55ac6f44,124223412,0,0x0,8
tick,0x7ffd55ac6f44,124240205,0,0x0,8
tick,0x7ffd55ac6f44,124254084,0,0x0,8
tick,0x7ffd55ac6f44,124269091,0,0x0,8
tick,0x7ffd55ac6f44,124284107,0,0x0,8
tick,0x7ffd55ac6f44,124299137,0,0x0,8
tick,0x7ffd55ac6f44,124315083,0,0x0,8
tick,0x7ffd55ac6f44,124330077,0,0x0,8
tick,0x7ffd55ac6f44,124345067,0,0x0,8
tick,0x7ffd55ac6f44,124360096,0,0x0,8
tick,0x7ffd55ac6f44,124376204,0,0x0,8
tick,0x7ffd55ac6f44,124391065,0,0x0,8
tick,0x7ffd55ac6f44,124406076,0,0x0,8
tick,0x7ffd55ac6f44,124422062,0,0x0,8
tick,0x7ffd55ac6f44,124437044,0,0x0,8
tick,0x7ffd55ac6f44,124452050,0,0x0,8
tick,0x7ffd55ac6f44,124467094,0,0x0,8
tick,0x7ffd55ac6f44,124483252,0,0x0,8
tick,0x7ffd55ac6f44,124498176,0,0x0,8
tick,0x7ffd55ac6f44,124513150,0,0x0,8
tick,0x7ffd55ac6f44,124528147,0,0x0,8
tick,0x7ffd55ac6f44,124543168,0,0x0,8
tick,0x7ffd55ac6f44,124558215,0,0x0,8
tick,0x7ffd55ac6f44,124574218,0,0x0,8
tick,0x7ffd55ac6f44,124590197,0,0x0,8
tick,0x7ffd55ac6f44,124605231,0,0x0,8
tick,0x7ffd55ac6f44,124620180,0,0x0,8
tick,0x7ffd55ac6f44,124635178,0,0x0,8
tick,0x7ffd55ac6f44,124650171,0,0x0,8
tick,0x7ffd55ac6f44,124666195,0,0x0,8
tick,0x7ffd55ac6f44,124682242,0,0x0,8
tick,0x7ffd55ac6f44,124697178,0,0x0,8
tick,0x7ffd55ac6f44,124712493,0,0x0,8
tick,0x7ffd55ac6f44,124727185,0,0x0,8
tick,0x7ffd55ac6f44,124742146,0,0x0,8
tick,0x7ffd55ac6f44,124757299,0,0x0,8
tick,0x7ffd55ac6f44,124772383,0,0x0,8
tick,0x7ffd55ac6f44,124788159,0,0x0,8
tick,0x7ffd55ac6f44,124804184,0,0x0,8
tick,0x7ffd55ac6f44,124820200,0,0x0,8
tick,0x7ffd55ac6f44,124835211,0,0x0,8
tick,0x7ffd55ac6f44,124850150,0,0x0,8
tick,0x7ffd55ac6f44,124865187,0,0x0,8
tick,0x7ffd55ac6f44,124881401,0,0x0,8
tick,0x7ffd55ac6f44,124896187,0,0x0,8
tick,0x7ffd55ac6f44,124911178,0,0x0,8
tick,0x7ffd55ac6f44,124926172,0,0x0,8
tick,0x7ffd55ac6f44,124942128,0,0x0,8
tick,0x7ffd55ac6f44,124957156,0,0x0,8
tick,0x7ffd55ac6f44,124972181,0,0x0,8
tick,0x7ffd55ac6f44,124987193,0,0x0,8
tick,0x7ffd55ac6f44,125002358,0,0x0,8
tick,0x7ffd55ac6f44,125018162,0,0x0,8
tick,0x7ffd55ac6f44,125034163,0,0x0,8
tick,0x7ffd55ac6f44,125050142,0,0x0,8
tick,0x7ffd55ac6f44,125065189,0,0x0,8
tick,0x7ffd55ac6f44,125081336,0,0x0,8
tick,0x7ffd55ac6f44,125096196,0,0x0,8
tick,0x7ffd55ac6f44,125111224,0,0x0,8
tick,0x7ffd55ac6f44,125127184,0,0x0,8
tick,0x7ffd55ac6f44,125143184,0,0x0,8
tick,0x7ffd55ac6f44,125159193,0,0x0,8
tick,0x7ffd55ac6f44,125174289,0,0x0,8
tick,0x7ffd55ac6f44,125190122,0,0x0,8
tick,0x7ffd55ac6f44,125205173,0,0x0,8
tick,0x7ffd55ac6f44,125220212,0,0x0,8
tick,0x7ffd55ac6f44,125236159,0,0x0,8
tick,0x7ffd55ac6f44,125251173,0,0x0,8
tick,0x7ffd55ac6f44,125266160,0,0x0,8
tick,0x7ffd55ac6f44,125282219,0,0x0,8
tick,0x7ffd55ac6f44,125298148,0,0x0,8
tick,0x7ffd55ac6f44,125314258,0,0x0,8
tick,0x7ffd55ac6f44,125330138,0,0x0,8
tick,0x7ffd55ac6f44,125345196,0,0x0,8
tick,0x7ffd55ac6f44,125361254,0,0x0,8
tick,0x7ffd55ac6f44,125376146,0,0x0,8
tick,0x7ffd55ac6f44,125391162,0,0x0,8
tick,0x7ffd55ac6f44,125406296,0,0x0,8
tick,0x7ffd55ac6f44,125422213,0,0x0,8
tick,0x7ffd55ac6f44,125438169,0,0x0,8
tick,0x7ffd55ac6f44,125453186,0,0x0,8
tick,0x7ffd55ac6f44,125468142,0,0x0,8
tick,0x7ffd55ac6f44,125486689,0,0x0,8
tick,0x7ffd55ac6f44,125500570,0,0x0,8
tick,0x7ffd55ac6f44,125515231,0,0x0,8
tick,0x7ffd55ac6f44,125531191,0,0x0,8
tick,0x7ffd55ac6f44,125547137,0,0x0,8
tick,0x7ffd55ac6f44,125562181,0,0x0,8
tick,0x7ffd55ac6f44,125577175,0,0x0,8
tick,0x7ffd55ac6f44,125592335,0,0x0,8
tick,0x7ffd55ac6f44,125608156,0,0x0,8
tick,0x7ffd55ac6f44,125623195,0,0x0,8
tick,0x7ffd55ac6f44,125638146,0,0x0,8
tick,0x7ffd55ac6f44,125654183,0,0x0,8
tick,0x7ffd55ac6f44,125670186,0,0x0,8
tick,0x7ffd55ac6f44,125685221,0,0x0,8
tick,0x7ffd55ac6f44,125700138,0,0x0,8
tick,0x7ffd55ac6f44,125715185,0,0x0,8
tick,0x7ffd55ac6f44,125731167,0,0x0,8
tick,0x7ffd55ac6f44,125746194,0,0x0,8
tick,0x7ffd55ac6f44,125762221,0,0x0,8
tick,0x7ffd55ac6f44,125778367,0,0x0,8
tick,0x7ffd55ac6f44,125794181,0,0x0,8
tick,0x7ffd55ac6f44,125810268,0,0x0,8
tick,0x7ffd55ac6f44,125826150,0,0x0,8
tick,0x7ffd55ac6f44,125841164,0,0x0,8
tick,0x7ffd55ac6f44,125856768,0,0x0,8
tick,0x7ffd55ac6f44,125873699,0,0x0,8
tick,0x7ffd55ac6f44,125887393,0,0x0,8
tick,0x7ffd55ac6f44,125902757,0,0x0,8
tick,0x7ffd55ac6f44,125917812,0,0x0,8
tick,0x7ffd55ac6f44,125932798,0,0x0,8
tick,0x7ffd55ac6f44,125948797,0,0x0,8
tick,0x7ffd55ac6f44,125963759,0,0x0,8
tick,0x7ffd55ac6f44,125979769,0,0x0,8
tick,0x7ffd55ac6f44,125994870,0,0x0,8
tick,0x7ffd55ac6f44,126010702,0,0x0,8
tick,0x7ffd55ac6f44,126026751,0,0x0,8
tick,0x7ffd55ac6f44,126041819,0,0x0,8
tick,0x7ffd55ac6f44,126057764,0,0x0,8
tick,0x7ffd55ac6f44,126073792,0,0x0,8
tick,0x7ffd55ac6f44,126089797,0,0x0,8
tick,0x7ffd55ac6f44,126105729,0,0x0,8
tick,0x7ffd55ac6f44,126122334,0,0x0,8
tick,0x7ffd55ac6f44,126137745,0,0x0,8
tick,0x7ffd55ac6f44,126153731,0,0x0,8
tick,0x7ffd55ac6f44,126168755,0,0x0,8
tick,0x7ffd55ac6f44,126183746,0,0x0,8
tick,0x7ffd55ac6f44,126198749,0,0x0,8
tick,0x7ffd55ac6f44,126214759,0,0x0,8
tick,0x7ffd55ac6f44,126229929,0,0x0,8
tick,0x7ffd55ac6f44,126245754,0,0x0,8
tick,0x7ffd55ac6f44,126260745,0,0x0,8
tick,0x7ffd55ac6f44,126275822,0,0x0,8
tick,0x7ffd55ac6f44,126292200,0,0x0,8
tick,0x7ffd55ac6f44,126306767,0,0x0,8
tick,0x7ffd55ac6f44,126321971,0,0x0,8
tick,0x7ffd55ac6f44,126336766,0,0x0,8
tick,0x7ffd55ac6f44,126351795,0,0x0,8
tick,0x7ffd55ac6f44,126367765,0,0x0,8
tick,0x7ffd55ac6f44,126383761,0,0x0,8
tick,0x7ffd55ac6f44,126399760,0,0x0,8
tick,0x7ffd55ac6f44,126415769,0,0x0,8
tick,0x7ffd55ac6f44,126431783,0,0x0,8
tick,0x7ffd55ac6f44,126446854,0,0x0,8
tick,0x7ffd55ac6f44,126462754,0,0x0,8
tick,0x7ffd55ac6f44,126478816,0,0x0,8
tick,0x7ffd55ac6f44,126494763,0,0x0,8
tick,0x7ffd55ac6f44,126510824,0,0x0,8
tick,0x7ffd55ac6f44,126525748,0,0x0,8
tick,0x7ffd55ac6f44,126541726,0,0x0,8
tick,0x7ffd55ac6f44,126556803,0,0x0,8
tick,0x7ffd55ac6f44,126571828,0,0x0,8
tick,0x7ffd55ac6f44,126587755,0,0x0,8
tick,0x7ffd55ac6f44,126603832,0,0x0,8
tick,0x7ffd55ac6f44,126618759,0,0x0,8
tick,0x7ffd55ac6f44,126633944,0,0x0,8
tick,0x7ffd55ac6f44,126649785,0,0x0,8
tick,0x7ffd55ac6f44,126665862,0,0x0,8
tick,0x7ffd55ac6f44,126680936,0,0x0,8
tick,0x7ffd55ac6f44,126696709,0,0x0,8
tick,0x7ffd55ac6f44,126711751,0,0x0,8
tick,0x7ffd55ac6f44,126726742,0,0x0,8
tick,0x7ffd55ac6f44,126741777,0,0x0,8
tick,0x7ffd55ac6f44,126757251,0,0x0,8
tick,0x7ffd55ac6f44,126771816,0,0x0,8
tick,0x7ffd55ac6f44,126786781,0,0x0,8
tick,0x7ffd55ac6f44,126802411,0,0x0,8
tick,0x7ffd55ac6f44,126817021,0,0x0,8
tick,0x7ffd55ac6f44,126832129,0,0x0,8
tick,0x7ffd55ac6f44,126846869,0,0x0,8
tick,0x7ffd55ac6f44,126861782,0,0x0,8
tick,0x7ffd55ac6f44,126876890,0,0x0,8
tick,0x7ffd55ac6f44,126891780,0,0x0,8
tick,0x7ffd55ac6f44,126907756,0,0x0,8
tick,0x7ffd55ac6f44,126922767,0,0x0,8
tick,0x7ffd55ac6f44,126937820,0,0x0,8
tick,0x7ffd55ac6f44,126952788,0,0x0,8
tick,0x7ffd55ac6f44,126967756,0,0x0,8
tick,0x7ffd55ac6f44,126982758,0,0x0,8
tick,0x7ffd55ac6f44,126998862,0,0x0,8
tick,0x7ffd55ac6f44,127013778,0,0x0,8
tick,0x7ffd55ac6f44,127028737,0,0x0,8
tick,0x7ffd55ac6f44,127043778,0,0x0,8
tick,0x7ffd55ac6f44,127058763,0,0x0,8
tick,0x7ffd55ac6f44,127073751,0,0x0,8
tick,0x7ffd55ac6f44,127088754,0,0x0,8
tick,0x7ffd55ac6f44,127103752,0,0x0,8
tick,0x7ffd55ac6f44,127118753,0,0x0,8
tick,0x7ffd55ac6f44,127133782,0,0x0,8
tick,0x7ffd55ac6f44,127148754,0,0x0,8
tick,0x7ffd55ac6f44,127164777,0,0x0,8
tick,0x7ffd55ac6f44,127179819,0,0x0,8
tick,0x7ffd55ac6f44,127195936,0,0x0,8
tick,0x7ffd55ac6f44,127211893,0,0x0,8
tick,0x7ffd55ac6f44,127226809,0,0x0,8
tick,0x7ffd55ac6f44,127241844,0,0x0,8
tick,0x7ffd55ac6f44,127256824,0,0x0,8
tick,0x7ffd55ac6f44,127271850,0,0x0,8
tick,0x7ffd55ac6f44,127286899,0,0x0,8
tick,0x7ffd55ac6f44,127301847,0,0x0,8
tick,0x7ffd55ac6f44,127317826,0,0x0,8
tick,0x7ffd55ac6f44,127333801,0,0x0,8
tick,0x7ffd55ac6f44,127348821,0,0x0,8
tick,0x7ffd55ac6f44,127363929,0,0x0,8
tick,0x7ffd55ac6f44,127379820,0,0x0,8
tick,0x7ffd55ac6f44,127394822,0,0x0,8
tick,0x7ffd55ac6f44,127409916,0,0x0,8
tick,0x7ffd55ac6f44,127424814,0,0x0,8
tick,0x7ffd55ac6f44,127440789,0,0x0,8
tick,0x7ffd55ac6f44,127456909,0,0x0,8
tick,0x7ffd55ac6f44,127471991,0,0x0,8
tick,0x7ffd55ac6f44,127487827,0,0x0,8
tick,0x7ffd55ac6f44,127502826,0,0x0,8
tick,0x7ffd55ac6f44,127517836,0,0x0,8
tick,0x7ffd55ac6f44,127532809,0,0x0,8
tick,0x7ffd55ac6f44,127547850,0,0x0,8
tick,0x7ffd55ac6f44,127562796,0,0x0,8
tick,0x7ffd55ac6f44,127577864,0,0x0,8
tick,0x7ffd55ac6f44,127592763,0,0x0,8
tick,0x7ffd55ac6f44,127607839,0,0x0,8
tick,0x7ffd55ac6f44,127622807,0,0x0,8
tick,0x7ffd55ac6f44,127638826,0,0x0,8
tick,0x7ffd55ac6f44,127654803,0,0x0,8
tick,0x7ffd55ac6f44,127669924,0,0x0,8
tick,0x7ffd55ac6f44,127684819,0,0x0,8
tick,0x7ffd55ac6f44,127700775,0,0x0,8
tick,0x7ffd55ac6f44,127716818,0,0x0,8
tick,0x7ffd55ac6f44,127732921,0,0x0,8
tick,0x7ffd55ac6f44,127748893,0,0x0,8
tick,0x7ffd55ac6f44,127763845,0,0x0,8
tick,0x7ffd55ac6f44,127778827,0,0x0,8
tick,0x7ffd55ac6f44,127796781,0,0x0,8
tick,0x7ffd55ac6f44,127810987,0,0x0,8
tick,0x7ffd55ac6f44,127825831,0,0x0,8
tick,0x7ffd55ac6f44,127840849,0,0x0,8
tick,0x7ffd55ac6f44,127855926,0,0x0,8
tick,0x7ffd55ac6f44,127871985,0,0x0,8
tick,0x7ffd55ac6f44,127886832,0,0x0,8
tick,0x7ffd55ac6f44,127901884,0,0x0,8
tick,0x7ffd55ac6f44,127917823,0,0x0,8
tick,0x7ffd55ac6f44,127932816,0,0x0,8
tick,0x7ffd55ac6f44,127948820,0,0x0,8
tick,0x7ffd55ac6f44,127963521,0,0x0,8
tick,0x7ffd55ac6f44,127979080,0,0x0,8
tick,0x7ffd55ac6f44,127995087,0,0x0,8
tick,0x7ffd55ac6f44,128011207,0,0x0,8
tick,0x7ffd55ac6f44,128026106,0,0x0,8
tick,0x7ffd55ac6f44,128041127,0,0x0,8
tick,0x7ffd55ac6f44,128057096,0,0x0,8
tick,0x7ffd55ac6f44,128073052,0,0x0,8
tick,0x7ffd55ac6f44,128088076,0,0x0,8
tick,0x7ffd55ac6f44,128104117,0,0x0,8
tick,0x7ffd55ac6f44,128119104,0,0x0,8
tick,0x7ffd55ac6f44,128135077,0,0x0,8
tick,0x7ffd55ac6f44,128150081,0,0x0,8
tick,0x7ffd55ac6f44,128165124,0,0x0,8
tick,0x7ffd55ac6f44,128180183,0,0x0,8
tick,0x7ffd55ac6f44,128196098,0,0x0,8
tick,0x7ffd55ac6f44,128211062,0,0x0,8
tick,0x7ffd55ac6f44,128226077,0,0x0,8
tick,0x7ffd55ac6f44,128242187,0,0x0,8
tick,0x7ffd55ac6f44,128257136,0,0x0,8
tick,0x7ffd55ac6f44,128272131,0,0x0,8
tick,0x7ffd55ac6f44,128288107,0,0x0,8
tick,0x7ffd55ac6f44,128304187,0,0x0,8
tick,0x7ffd55ac6f44,128321034,0,0x0,8
tick,0x7ffd55ac6f44,128336146,0,0x0,8
tick,0x7ffd55ac6f44,128352145,0,0x0,8
tick,0x7ffd55ac6f44,128368108,0,0x0,8
tick,0x7ffd55ac6f44,128384110,0,0x0,8
tick,0x7ffd55ac6f44,128400096,0,0x0,8
tick,0x7ffd55ac6f44,128416101,0,0x0,8
tick,0x7ffd55ac6f44,128432248,0,0x0,8
tick,0x7ffd55ac6f44,128448084,0,0x0,8
tick,0x7ffd55ac6f44,128464104,0,0x0,8
tick,0x7ffd55ac6f44,128479081,0,0x0,8
tick,0x7ffd55ac6f44,128495129,0,0x0,8
tick,0x7ffd55ac6f44,128510125,0,0x0,8
tick,0x7ffd55ac6f44,128525083,0,0x0,8
tick,0x7ffd55ac6f44,128540112,0,0x0,8
tick,0x7ffd55ac6f44,128555162,0,0x0,8
tick,0x7ffd55ac6f44,128570076,0,0x0,8
tick,0x7ffd55ac6f44,128586617,0,0x0,8
tick,0x7ffd55ac6f44,128602058,0,0x0,8
tick,0x7ffd55ac6f44,128618116,0,0x0,8
tick,0x7ffd55ac6f44,128634128,0,0x0,8
tick,0x7ffd55ac6f44,128649108,0,0x0,8
tick,0x7ffd55ac6f44,128665113,0,0x0,8
tick,0x7ffd55ac6f44,128680081,0,0x0,8
tick,0x7ffd55ac6f44,128696074,0,0x0,8
tick,0x7ffd55ac6f44,128711155,0,0x0,8
tick,0x7ffd55ac6f44,128726080,0,0x0,8
tick,0x7ffd55ac6f44,128741144,0,0x0,8
tick,0x7ffd55ac6f44,128756174,0,0x0,8
tick,0x7ffd55ac6f44,128771182,0,0x0,8
tick,0x7ffd55ac6f44,128787082,0,0x0,8
tick,0x7ffd55ac6f44,128802149,0,0x0,8
tick,0x7ffd55ac6f44,128817105,0,0x0,8
tick,0x7ffd55ac6f44,128832173,0,0x0,8
tick,0x7ffd55ac6f44,128847056,0,0x0,8
tick,0x7ffd55ac6f44,128862106,0,0x0,8
tick,0x7ffd55ac6f44,128878097,0,0x0,8
tick,0x7ffd55ac6f44,128894063,0,0x0,8
tick,0x7ffd55ac6f44,128909148,0,0x0,8
tick,0x7ffd55ac6f44,128924068,0,0x0,8
tick,0x7ffd55ac6f44,128939282,0,0x0,8
tick,0x7ffd55ac6f44,128955157,0,0x0,8
tick,0x7ffd55ac6f44,128970137,0,0x0,8
tick,0x7ffd55ac6f44,128985188,0,0x0,8
tick,0x7ffd55ac6f44,129000116,0,0x0,8
tick,0x7ffd55ac6f44,129016038,0,0x0,8
tick,0x7ffd55ac6f44,129032076,0,0x0,8
tick,0x7ffd55ac6f44,129047128,0,0x0,8
tick,0x7ffd55ac6f44,129062071,0,0x0,8
tick,0x7ffd55ac6f44,129077103,0,0x0,8
tick,0x7ffd55ac6f44,129092136,0,0x0,8
tick,0x7ffd55ac6f44,129107142,0,0x0,8
tick,0x7ffd55ac6f44,129122102,0,0x0,8
tick,0x7ffd55ac6f44,129138129,0,0x0,8
tick,0x7ffd55ac6f44,129154159,0,0x0,8
tick,0x7ffd55ac6f44,129169099,0,0x0,8
tick,0x7ffd55ac6f44,129184061,0,0x0,8
tick,0x7ffd55ac6f44,129199084,0,0x0,8
tick,0x7ffd55ac6f44,129217694,0,0x0,8
tick,0x7ffd55ac6f44,129231211,0,0x0,8
tick,0x7ffd55ac6f44,129246226,0,0x0,8
tick,0x7ffd55ac6f44,129262147,0,0x0,8
tick,0x7ffd55ac6f44,129277153,0,0x0,8
tick,0x7ffd55ac6f44,129292142,0,0x0,8
tick,0x7ffd55ac6f44,129307201,0,0x0,8
tick,0x7ffd55ac6f44,129323161,0,0x0,8
tick,0x7ffd55ac6f44,129339354,0,0x0,8
tick,0x7ffd55ac6f44,129354156,0,0x0,8
tick,0x7ffd55ac6f44,129369166,0,0x0,8
tick,0x7ffd55ac6f44,129384209,0,0x0,8
tick,0x7ffd55ac6f44,129400168,0,0x0,8
tick,0x7ffd55ac6f44,129415220,0,0x0,8
tick,0x7ffd55ac6f44,129431151,0,0x0,8
tick,0x7ffd55ac6f44,129447162,0,0x0,8
tick,0x7ffd55ac6f44,129462119,0,0x0,8
tick,0x7ffd55ac6f44,129477161,0,0x0,8
tick,0x7ffd55ac6f44,129493225,0,0x0,8
tick,0x7ffd55ac6f44,129508115,0,0x0,8
tick,0x7ffd55ac6f44,129523166,0,0x0,8
tick,0x7ffd55ac6f44,129539155,0,0x0,8
tick,0x7ffd55ac6f44,129554470,0,0x0,8
tick,0x7ffd55ac6f44,129569946,0,0x0,8
tick,0x7ffd55ac6f44,129584290,0,0x0,8
tick,0x7ffd55ac6f44,129599190,0,0x0,8
tick,0x7ffd55ac6f44,129614177,0,0x0,8
tick,0x7ffd55ac6f44,129629171,0,0x0,8
tick,0x7ffd55ac6f44,129644153,0,0x0,8
tick,0x7ffd55ac6f44,129659173,0,0x0,8
tick,0x7ffd55ac6f44,129675119,0,0x0,8
tick,0x7ffd55ac6f44,129690126,0,0x0,8
tick,0x7ffd55ac6f44,129705165,0,0x0,8
tick,0x7ffd55ac6f44,129720157,0,0x0,8
tick,0x7ffd55ac6f44,129735183,0,0x0,8
tick,0x7ffd55ac6f44,129751191,0,0x0,8
tick,0x7ffd55ac6f44,129767170,0,0x0,8
tick,0x7ffd55ac6f44,129783150,0,0x0,8
tick,0x7ffd55ac6f44,129799661,0,0x0,8
tick,0x7ffd55ac6f44,129814295,0,0x0,8
tick,0x7ffd55ac6f44,129830206,0,0x0,8
tick,0x7ffd55ac6f44,129845153,0,0x0,8
tick,0x7ffd55ac6f44,129860252,0,0x0,8
tick,0x7ffd55ac6f44,129875165,0,0x0,8
tick,0x7ffd55ac6f44,129890168,0,0x0,8
tick,0x7ffd55ac6f44,129905393,0,0x0,8
tick,0x7ffd55ac6f44,129920274,0,0x0,8
tick,0x7ffd55ac6f44,129936295,0,0x0,8
tick,0x7ffd55ac6f44,129951739,0,0x0,8
tick,0x7ffd55ac6f44,129967379,0,0x0,8
tick,0x7ffd55ac6f44,129983294,0,0x0,8
tick,0x7ffd55ac6f44,129999298,0,0x0,8
tick,0x7ffd55ac6f44,130015301,0,0x0,8
tick,0x7ffd55ac6f44,130031432,0,0x0,8
tick,0x7ffd55ac6f44,130046310,0,0x0,8
tick,0x7ffd55ac6f44,130061273,0,0x0,8
tick,0x7ffd55ac6f44,130077263,0,0x0,8
tick,0x7ffd55ac6f44,130093291,0,0x0,8
tick,0x7ffd55ac6f44,130109290,0,0x0,8
tick,0x7ffd55ac6f44,130125368,0,0x0,8
tick,0x7ffd55ac6f44,130140444,0,0x0,8
tick,0x7ffd55ac6f44,130155261,0,0x0,8
tick,0x7ffd55ac6f44,130170277,0,0x0,8
tick,0x7ffd55ac6f44,130186315,0,0x0,8
tick,0x7ffd55ac6f44,130201426,0,0x0,8
tick,0x7ffd55ac6f44,130216340,0,0x0,8
tick,0x7ffd55ac6f44,130231429,0,0x0,8
tick,0x7ffd55ac6f44,130246287,0,0x0,8
tick,0x7ffd55ac6f44,130262340,0,0x0,8
tick,0x7ffd55ac6f44,130278337,0,0x0,8
tick,0x7ffd55ac6f44,130294288,0,0x0,8
tick,0x7ffd55ac6f44,130309511,0,0x0,8
tick,0x7ffd55ac6f44,130325423,0,0x0,8
tick,0x7ffd55ac6f44,130341336,0,0x0,8
tick,0x7ffd55ac6f44,130355344,0,0x0,8
tick,0x7ffd55ac6f44,130371323,0,0x0,8
tick,0x7ffd55ac6f44,130387356,0,0x0,8
tick,0x7ffd55ac6f44,130403270,0,0x0,8
tick,0x7ffd55ac6f44,130419413,0,0x0,8
tick,0x7ffd55ac6f44,130435834,0,0x0,8
tick,0x7ffd55ac6f44,130461950,0,0x0,8
tick,0x7ffd55ac6f44,130471621,0,0x0,8
tick,0x7ffd55ac6f44,130483489,0,0x0,8
tick,0x7ffd55ac6f44,130498309,0,0x0,8
tick,0x7ffd55ac6f44,130513284,0,0x0,8
tick,0x7ffd55ac6f44,130528292,0,0x0,8
tick,0x7ffd55ac6f44,130543271,0,0x0,8
tick,0x7ffd55ac6f44,130559562,0,0x0,8
tick,0x7ffd55ac6f44,130574301,0,0x0,8
tick,0x7ffd55ac6f44,130590455,0,0x0,8
tick,0x7ffd55ac6f44,130606684,0,0x0,8
tick,0x7ffd55ac6f44,130622388,0,0x0,8
tick,0x7ffd55ac6f44,130638284,0,0x0,8
tick,0x7ffd55ac6f44,130654350,0,0x0,8
tick,0x7ffd55ac6f44,130670297,0,0x0,8
tick,0x7ffd55ac6f44,130685349,0,0x0,8
tick,0x7ffd55ac6f44,130701343,0,0x0,8
tick,0x7ffd55ac6f44,130716372,0,0x0,8
tick,0x7ffd55ac6f44,130731267,0,0x0,8
tick,0x7ffd55ac6f44,130747308,0,0x0,8
tick,0x7ffd55ac6f44,130763331,0,0x0,8
tick,0x7ffd55ac6f44,130779362,0,0x0,8
tick,0x7ffd55ac6f44,130795357,0,0x0,8
tick,0x7ffd55ac6f44,130810403,0,0x0,8
tick,0x7ffd55ac6f44,130826314,0,0x0,8
tick,0x7ffd55ac6f44,130841323,0,0x0,8
tick,0x7ffd55ac6f44,130856339,0,0x0,8
tick,0x7ffd55ac6f44,130872435,0,0x0,8
tick,0x7ffd55ac6f44,130888747,0,0x0,8
tick,0x7ffd55ac6f44,130903569,0,0x0,8
tick,0x7ffd55ac6f44,130919506,0,0x0,8
tick,0x7ffd55ac6f44,130935474,0,0x0,8
tick,0x7ffd55ac6f44,130950276,0,0x0,8
tick,0x7ffd55ac6f44,130965309,0,0x0,8
tick,0x7ffd55ac6f44,130980289,0,0x0,8
tick,0x7ffd55ac6f44,130995538,0,0x0,8
tick,0x7ffd55ac6f44,131011342,0,0x0,8
tick,0x7ffd55ac6f44,131026300,0,0x0,8
tick,0x7ffd55ac6f44,131041358,0,0x0,8
tick,0x7ffd55ac6f44,131056385,0,0x0,8
tick,0x7ffd55ac6f44,131072399,0,0x0,8
tick,0x7ffd55ac6f44,131087325,0,0x0,8
tick,0x7ffd55ac6f44,131103326,0,0x0,8
tick,0x7ffd55ac6f44,131118268,0,0x0,8
tick,0x7ffd55ac6f44,131133313,0,0x0,8
tick,0x7ffd55ac6f44,131148289,0,0x0,8
tick,0x7ffd55ac6f44,131163275,0,0x0,8
tick,0x7ffd55ac6f44,131179139,0,0x0,8
tick,0x7ffd55ac6f44,131194056,0,0x0,8
tick,0x7ffd55ac6f44,131209285,0,0x0,8
tick,0x7ffd55ac6f44,131225553,0,0x0,8
tick,0x7ffd55ac6f44,131240281,0,0x0,8
tick,0x7ffd55ac6f44,131255330,0,0x0,8
tick,0x7ffd55ac6f44,131270302,0,0x0,8
tick,0x7ffd55ac6f44,131285412,0,0x0,8
tick,0x7ffd55ac6f44,131301023,0,0x0,8
tick,0x7ffd55ac6f44,131316020,0,0x0,8
tick,0x7ffd55ac6f44,131330922,0,0x0,8
tick,0x7ffd55ac6f44,131345951,0,0x0,8
tick,0x7ffd55ac6f44,131361953,0,0x0,8
tick,0x7ffd55ac6f44,131377705,0,0x0,8
tick,0x7ffd55ac6f44,131392724,0,0x0,8
tick,0x7ffd55ac6f44,131407647,0,0x0,8
tick,0x7ffd55ac6f44,131422442,0,0x0,8
tick,0x7ffd55ac6f44,131437447,0,0x0,8
tick,0x7ffd55ac6f44,131452921,0,0x0,8
tick,0x7ffd55ac6f44,131469412,0,0x0,8
tick,0x7ffd55ac6f44,131484505,0,0x0,8
tick,0x7ffd55ac6f44,131498468,0,0x0,8
tick,0x7ffd55ac6f44,131513498,0,0x0,8
tick,0x7ffd55ac6f44,131528442,0,0x0,8
tick,0x7ffd55ac6f44,131543444,0,0x0,8
tick,0x7ffd55ac6f44,131559703,0,0x0,8
tick,0x7ffd55ac6f44,131575474,0,0x0,8
tick,0x7ffd55ac6f44,131591625,0,0x0,8
tick,0x7ffd55ac6f44,131606654,0,0x0,8
tick,0x7ffd55ac6f44,131621467,0,0x0,8
tick,0x7ffd55ac6f44,131637591,0,0x0,8
tick,0x7ffd55ac6f44,131652502,0,0x0,8
tick,0x7ffd55ac6f44,131667463,0,0x0,8
tick,0x7ffd55ac6f44,131682453,0,0x0,8
tick,0x7ffd55ac6f44,131697917,0,0x0,8
tick,0x7ffd55ac6f44,131713577,0,0x0,8
tick,0x7ffd55ac6f44,131728591,0,0x0,8
tick,0x7ffd55ac6f44,131743628,0,0x0,8
tick,0x7ffd55ac6f44,131758544,0,0x0,8
tick,0x7ffd55ac6f44,131773599,0,0x0,8
tick,0x7ffd55ac6f44,131788776,0,0x0,8
tick,0x7ffd55ac6f44,131803532,0,0x0,8
tick,0x7ffd55ac6f44,131818582,0,0x0,8
tick,0x7ffd55ac6f44,131833536,0,0x0,8
tick,0x7ffd55ac6f44,131848536,0,0x0,8
tick,0x7ffd55ac6f44,131863541,0,0x0,8
tick,0x7ffd55ac6f44,131878675,0,0x0,8
tick,0x7ffd55ac6f44,131894567,0,0x0,8
tick,0x7ffd55ac6f44,131911182,0,0x0,8
tick,0x7ffd55ac6f44,131925552,0,0x0,8
tick,0x7ffd55ac6f44,131940642,0,0x0,8
tick,0x7ffd55ac6f44,131956653,0,0x0,8
tick,0x7ffd55ac6f44,131971583,0,0x0,8
tick,0x7ffd55ac6f44,131986629,0,0x0,8
tick,0x7ffd55ac6f44,132002036,0,0x0,8
tick,0x7ffd55ac6f44,132017742,0,0x0,8
tick,0x7ffd55ac6f44,132032572,0,0x0,8
tick,0x7ffd55ac6f44,132047615,0,0x0,8
tick,0x7ffd55ac6f44,132063548,0,0x0,8
tick,0x7ffd55ac6f44,132078545,0,0x0,8
tick,0x7ffd55ac6f44,132094532,0,0x0,8
tick,0x7ffd55ac6f44,132110583,0,0x0,8
tick,0x7ffd55ac6f44,132125902,0,0x0,8
tick,0x7ffd55ac6f44,132140596,0,0x0,8
tick,0x7ffd55ac6f44,132155623,0,0x0,8
tick,0x7ffd55ac6f44,132170554,0,0x0,8
tick,0x7ffd55ac6f44,132185549,0,0x0,8
tick,0x7ffd55ac6f44,132201611,0,0x0,8
tick,0x7ffd55ac6f44,132217631,0,0x0,8
tick,0x7ffd55ac6f44,132232733,0,0x0,8
tick,0x7ffd55ac6f44,132247695,0,0x0,8
tick,0x7ffd55ac6f44,132262673,0,0x0,8
tick,0x7ffd55ac6f44,132278949,0,0x0,8
tick,0x7ffd55ac6f44,132293650,0,0x0,8
tick,0x7ffd55ac6f44,132308668,0,0x0,8
tick,0x7ffd55ac6f44,132323673,0,0x0,8
tick,0x7ffd55ac6f44,132338658,0,0x0,8
tick,0x7ffd55ac6f44,132353658,0,0x0,8
tick,0x7ffd55ac6f44,132369653,0,0x0,8
tick,0x7ffd55ac6f44,132385752,0,0x0,8
tick,0x7ffd55ac6f44,132401647,0,0x0,8
tick,0x7ffd55ac6f44,132417632,0,0x0,8
tick,0x7ffd55ac6f44,132432781,0,0x0,8
tick,0x7ffd55ac6f44,132448609,0,0x0,8
tick,0x7ffd55ac6f44,132465702,0,0x0,8
tick,0x7ffd55ac6f44,132481251,0,0x0,8
tick,0x7ffd55ac6f44,132495677,0,0x0,8
tick,0x7ffd55ac6f44,132510619,0,0x0,8
tick,0x7ffd55ac6f44,132525649,0,0x0,8
tick,0x7ffd55ac6f44,132541699,0,0x0,8
tick,0x7ffd55ac6f44,132556717,0,0x0,8
tick,0x7ffd55ac6f44,132571717,0,0x0,8
tick,0x7ffd55ac6f44,132586818,0,0x0,8
tick,0x7ffd55ac6f44,132601733,0,0x0,8
tick,0x7ffd55ac6f44,132616717,0,0x0,8
tick,0x7ffd55ac6f44,132632638,0,0x0,8
tick,0x7ffd55ac6f44,132648731,0,0x0,8
tick,0x7ffd55ac6f44,132663765,0,0x0,8
tick,0x7ffd55ac6f44,132679744,0,0x0,8
tick,0x7ffd55ac6f44,132695723,0,0x0,8
tick,0x7ffd55ac6f44,132711815,0,0x0,8
tick,0x7ffd55ac6f44,132726745,0,0x0,8
tick,0x7ffd55ac6f44,132742718,0,0x0,8
tick,0x7ffd55ac6f44,132758979,0,0x0,8
tick,0x7ffd55ac6f44,132775089,0,0x0,8
tick,0x7ffd55ac6f44,132790779,0,0x0,8
tick,0x7ffd55ac6f44,132805763,0,0x0,8
tick,0x7ffd55ac6f44,132821759,0,0x0,8
tick,0x7ffd55ac6f44,132836747,0,0x0,8
tick,0x7ffd55ac6f44,132852714,0,0x0,8
tick,0x7ffd55ac6f44,132868787,0,0x0,8
tick,0x7ffd55ac6f44,132883711,0,0x0,8
tick,0x7ffd55ac6f44,132898731,0,0x0,8
tick,0x7ffd55ac6f44,132915795,0,0x0,8
tick,0x7ffd55ac6f44,132929963,0,0x0,8
tick,0x7ffd55ac6f44,132944768,0,0x0,8
tick,0x7ffd55ac6f44,132959861,0,0x0,8
tick,0x7ffd55ac6f44,132975828,0,0x0,8
tick,0x7ffd55ac6f44,132991759,0,0x0,8
tick,0x7ffd55ac6f44,133007717,0,0x0,8
tick,0x7ffd55ac6f44,133022871,0,0x0,8
tick,0x7ffd55ac6f44,133037740,0,0x0,8
tick,0x7ffd55ac6f44,133052728,0,0x0,8
tick,0x7ffd55ac6f44,133068703,0,0x0,8
tick,0x7ffd55ac6f44,133083857,0,0x0,8
tick,0x7ffd55ac6f44,133099736,0,0x0,8
tick,0x7ffd55ac6f44,133114715,0,0x0,8
tick,0x7ffd55ac6f44,133129694,0,0x0,8
tick,0x7ffd55ac6f44,133144816,0,0x0,8
tick,0x7ffd55ac6f44,133159705,0,0x0,8
tick,0x7ffd55ac6f44,133174857,0,0x0,8
tick,0x7ffd55ac6f44,133192101,0,0x0,8
tick,0x7ffd55ac6f44,133206848,0,0x0,8
tick,0x7ffd55ac6f44,133221993,0,0x0,8
tick,0x7ffd55ac6f44,133236779,0,0x0,8
tick,0x7ffd55ac6f44,133251822,0,0x0,8
tick,0x7ffd55ac6f44,133266779,0,0x0,8
tick,0x7ffd55ac6f44,133281796,0,0x0,8
tick,0x7ffd55ac6f44,133296803,0,0x0,8
tick,0x7ffd55ac6f44,133312773,0,0x0,8
tick,0x7ffd55ac6f44,133327752,0,0x0,8
tick,0x7ffd55ac6f44,133342846,0,0x0,8
tick,0x7ffd55ac6f44,133358912,0,0x0,8
tick,0x7ffd55ac6f44,133377567,0,0x0,8
tick,0x7ffd55ac6f44,133390876,0,0x0,8
tick,0x7ffd55ac6f44,133405797,0,0x0,8
tick,0x7ffd55ac6f44,133420851,0,0x0,8
tick,0x7ffd55ac6f44,133435753,0,0x0,8
tick,0x7ffd55ac6f44,133451323,0,0x0,8
tick,0x7ffd55ac6f44,133465811,0,0x0,8
tick,0x7ffd55ac6f44,133480836,0,0x0,8
tick,0x7ffd55ac6f44,133496850,0,0x0,8
tick,0x7ffd55ac6f44,133511829,0,0x0,8
tick,0x7ffd55ac6f44,133526765,0,0x0,8
tick,0x7ffd55ac6f44,133541930,0,0x0,8
tick,0x7ffd55ac6f44,133557830,0,0x0,8
tick,0x7ffd55ac6f44,133573783,0,0x0,8
tick,0x7ffd55ac6f44,133588846,0,0x0,8
tick,0x7ffd55ac6f44,133604767,0,0x0,8
tick,0x7ffd55ac6f44,133619770,0,0x0,8
tick,0x7ffd55ac6f44,133635824,0,0x0,8
tick,0x7ffd55ac6f44,133651909,0,0x0,8
tick,0x7ffd55ac6f44,133666770,0,0x0,8
tick,0x7ffd55ac6f44,133681779,0,0x0,8
tick,0x7ffd55ac6f44,133696775,0,0x0,8
tick,0x7ffd55ac6f44,133711788,0,0x0,8
tick,0x7ffd55ac6f44,133726751,0,0x0,8
tick,0x7ffd55ac6f44,133742004,0,0x0,8
tick,0x7ffd55ac6f44,133757788,0,0x0,8
tick,0x7ffd55ac6f44,133773800,0,0x0,8
tick,0x7ffd55ac6f44,133788786,0,0x0,8
tick,0x7ffd55ac6f44,133804766,0,0x0,8
tick,0x7ffd55ac6f44,133819809,0,0x0,8
tick,0x7ffd55ac6f44,133834727,0,0x0,8
tick,0x7ffd55ac6f44,133849847,0,0x0,8
tick,0x7ffd55ac6f44,133865819,0,0x0,8
tick,0x7ffd55ac6f44,133880773,0,0x0,8
tick,0x7ffd55ac6f44,133896487,0,0x0,8
tick,0x7ffd55ac6f44,133911808,0,0x0,8
tick,0x7ffd55ac6f44,133926895,0,0x0,8
tick,0x7ffd55ac6f44,133941734,0,0x0,8
tick,0x7ffd55ac6f44,133956767,0,0x0,8
tick,0x7ffd55ac6f44,133971867,0,0x0,8
tick,0x7ffd55ac6f44,133987779,0,0x0,8
tick,0x7ffd55ac6f44,134003799,0,0x0,8
tick,0x7ffd55ac6f44,134018801,0,0x0,8
tick,0x7ffd55ac6f44,134034407,0,0x0,8
tick,0x7ffd55ac6f44,134050386,0,0x0,8
tick,0x7ffd55ac6f44,134065917,0,0x0,8
tick,0x7ffd55ac6f44,134081885,0,0x0,8
tick,0x7ffd55ac6f44,134096901,0,0x0,8
tick,0x7ffd55ac6f44,134113040,0,0x0,8
tick,0x7ffd55ac6f44,134127968,0,0x0,8
tick,0x7ffd55ac6f44,134142920,0,0x0,8
tick,0x7ffd55ac6f44,134159898,0,0x0,8
tick,0x7ffd55ac6f44,134174919,0,0x0,8
tick,0x7ffd55ac6f44,134189998,0,0x0,8
tick,0x7ffd55ac6f44,134205998,0,0x0,8
tick,0x7ffd55ac6f44,134221915,0,0x0,8
tick,0x7ffd55ac6f44,134236867,0,0x0,8
tick,0x7ffd55ac6f44,134251940,0,0x0,8
tick,0x7ffd55ac6f44,134268026,0,0x0,8
tick,0x7ffd55ac6f44,134282926,0,0x0,8
tick,0x7ffd55ac6f44,134298062,0,0x0,8
tick,0x7ffd55ac6f44,134313973,0,0x0,8
tick,0x7ffd55ac6f44,134329904,0,0x0,8
tick,0x7ffd55ac6f44,134346046,0,0x0,8
tick,0x7ffd55ac6f44,134361103,0,0x0,8
tick,0x7ffd55ac6f44,134377132,0,0x0,8
tick,0x7ffd55ac6f44,134392902,0,0x0,8
tick,0x7ffd55ac6f44,134407935,0,0x0,8
tick,0x7ffd55ac6f44,134423067,0,0x0,8
tick,0x7ffd55ac6f44,134439053,0,0x0,8
tick,0x7ffd55ac6f44,134453990,0,0x0,8
tick,0x7ffd55ac6f44,134468902,0,0x0,8
tick,0x7ffd55ac6f44,134484011,0,0x0,8
tick,0x7ffd55ac6f44,134499864,0,0x0,8
tick,0x7ffd55ac6f44,134515907,0,0x0,8
tick,0x7ffd55ac6f44,134530906,0,0x0,8
tick,0x7ffd55ac6f44,134545918,0,0x0,8
tick,0x7ffd55ac6f44,134561900,0,0x0,8
tick,0x7ffd55ac6f44,134576906,0,0x0,8
tick,0x7ffd55ac6f44,134591926,0,0x0,8
tick,0x7ffd55ac6f44,134606948,0,0x0,8
tick,0x7ffd55ac6f44,134621998,0,0x0,8
tick,0x7ffd55ac6f44,134636890,0,0x0,8
tick,0x7ffd55ac6f44,134652952,0,0x0,8
tick,0x7ffd55ac6f44,134667883,0,0x0,8
tick,0x7ffd55ac6f44,134682889,0,0x0,8
tick,0x7ffd55ac6f44,134697888,0,0x0,8
tick,0x7ffd55ac6f44,134712999,0,0x0,8
tick,0x7ffd55ac6f44,134727888,0,0x0,8
tick,0x7ffd55ac6f44,134742934,0,0x0,8
tick,0x7ffd55ac6f44,134758879,0,0x0,8
tick,0x7ffd55ac6f44,134775394,0,0x0,8
tick,0x7ffd55ac6f44,134792381,0,0x0,8
tick,0x7ffd55ac6f44,134807151,0,0x0,8
tick,0x7ffd55ac6f44,134822934,0,0x0,8
tick,0x7ffd55ac6f44,134837916,0,0x0,8
tick,0x7ffd55ac6f44,134852930,0,0x0,8
tick,0x7ffd55ac6f44,134867886,0,0x0,8
tick,0x7ffd55ac6f44,134882856,0,0x0,8
tick,0x7ffd55ac6f44,134898899,0,0x0,8
tick,0x7ffd55ac6f44,134914940,0,0x0,8
tick,0x7ffd55ac6f44,134930977,0,0x0,8
tick,0x7ffd55ac6f44,134947005,0,0x0,8
tick,0x7ffd55ac6f44,134962912,0,0x0,8
tick,0x7ffd55ac6f44,134977863,0,0x0,8
tick,0x7ffd55ac6f44,134993180,0,0x0,8
tick,0x7ffd55ac6f44,135008947,0,0x0,8
tick,0x7ffd55ac6f44,135023905,0,0x0,8
tick,0x7ffd55ac6f44,135038930,0,0x0,8
tick,0x7ffd55ac6f44,135054928,0,0x0,8
tick,0x7ffd55ac6f44,135069880,0,0x0,8
tick,0x7ffd55ac6f44,135084924,0,0x0,8
tick,0x7ffd55ac6f44,135099902,0,0x0,8
tick,0x7ffd55ac6f44,135115589,0,0x0,8
tick,0x7ffd55ac6f44,135131548,0,0x0,8
tick,0x7ffd55ac6f44,135147508,0,0x0,8
tick,0x7ffd55ac6f44,135162484,0,0x0,8
tick,0x7ffd55ac6f44,135178101,0,0x0,8
tick,0x7ffd55ac6f44,135194078,0,0x0,8
tick,0x7ffd55ac6f44,135209198,0,0x0,8
tick,0x7ffd55ac6f44,135225046,0,0x0,8
tick,0x7ffd55ac6f44,135240045,0,0x0,8
tick,0x7ffd55ac6f44,135256033,0,0x0,8
tick,0x7ffd55ac6f44,135272143,0,0x0,8
tick,0x7ffd55ac6f44,135287361,0,0x0,8
tick,0x7ffd55ac6f44,135303757,0,0x0,8
tick,0x7ffd55ac6f44,135318393,0,0x0,8
tick,0x7ffd55ac6f44,135333062,0,0x0,8
tick,0x7ffd55ac6f44,135348036,0,0x0,8
tick,0x7ffd55ac6f44,135363037,0,0x0,8
tick,0x7ffd55ac6f44,135379138,0,0x0,8
tick,0x7ffd55ac6f44,135394732,0,0x0,8
tick,0x7ffd55ac6f44,135410749,0,0x0,8
tick,0x7ffd55ac6f44,135425674,0,0x0,8
tick,0x7ffd55ac6f44,135440674,0,0x0,8
tick,0x7ffd55ac6f44,135456742,0,0x0,8
tick,0x7ffd55ac6f44,135472690,0,0x0,8
tick,0x7ffd55ac6f44,135487740,0,0x0,8
tick,0x7ffd55ac6f44,135503742,0,0x0,8
tick,0x7ffd55ac6f44,135519678,0,0x0,8
tick,0x7ffd55ac6f44,135535723,0,0x0,8
tick,0x7ffd55ac6f44,135551713,0,0x0,8
tick,0x7ffd55ac6f44,135566704,0,0x0,8
tick,0x7ffd55ac6f44,135581692,0,0x0,8
tick,0x7ffd55ac6f44,135596705,0,0x0,8
tick,0x7ffd55ac6f44,135611705,0,0x0,8
tick,0x7ffd55ac6f44,135626671,0,0x0,8
tick,0x7ffd55ac6f44,135642691,0,0x0,8
tick,0x7ffd55ac6f44,135657751,0,0x0,8
tick,0x7ffd55ac6f44,135673765,0,0x0,8
tick,0x7ffd55ac6f44,135688714,0,0x0,8
tick,0x7ffd55ac6f44,135704722,0,0x0,8
tick,0x7ffd55ac6f44,135719735,0,0x0,8
tick,0x7ffd55ac6f44,135735173,0,0x0,8
tick,0x7ffd55ac6f44,135751051,0,0x0,8
tick,0x7ffd55ac6f44,135766164,0,0x0,8
tick,0x7ffd55ac6f44,135780722,0,0x0,8
tick,0x7ffd55ac6f44,135795689,0,0x0,8
tick,0x7ffd55ac6f44,135810683,0,0x0,8
tick,0x7ffd55ac6f44,135825691,0,0x0,8
tick,0x7ffd55ac6f44,135841778,0,0x0,8
tick,0x7ffd55ac6f44,135857768,0,0x0,8
tick,0x7ffd55ac6f44,135872688,0,0x0,8
tick,0x7ffd55ac6f44,135887769,0,0x0,8
tick,0x7ffd55ac6f44,135902722,0,0x0,8
tick,0x7ffd55ac6f44,135918874,0,0x0,8
tick,0x7ffd55ac6f44,135933713,0,0x0,8
tick,0x7ffd55ac6f44,135948763,0,0x0,8
tick,0x7ffd55ac6f44,135964699,0,0x0,8
tick,0x7ffd55ac6f44,135980709,0,0x0,8
tick,0x7ffd55ac6f44,135995711,0,0x0,8
tick,0x7ffd55ac6f44,136010802,0,0x0,8
tick,0x7ffd55ac6f44,136025670,0,0x0,8
tick,0x7ffd55ac6f44,136040796,0,0x0,8
tick,0x7ffd55ac6f44,136055722,0,0x0,8
tick,0x7ffd55ac6f44,136070755,0,0x0,8
tick,0x7ffd55ac6f44,136085704,0,0x0,8
tick,0x7ffd55ac6f44,136100716,0,0x0,8
tick,0x7ffd55ac6f44,136115787,0,0x0,8
tick,0x7ffd55ac6f44,136131708,0,0x0,8
tick,0x7ffd55ac6f44,136146706,0,0x0,8
tick,0x7ffd55ac6f44,136161750,0,0x0,8
tick,0x7ffd55ac6f44,136176750,0,0x0,8
tick,0x7ffd55ac6f44,136191701,0,0x0,8
tick,0x7ffd55ac6f44,136206676,0,0x0,8
tick,0x7ffd55ac6f44,136222342,0,0x0,8
tick,0x7ffd55ac6f44,136237710,0,0x0,8
tick,0x7ffd55ac6f44,136253245,0,0x0,8
tick,0x7ffd55ac6f44,136267740,0,0x0,8
tick,0x7ffd55ac6f44,136282718,0,0x0,8
tick,0x7ffd55ac6f44,136298697,0,0x0,8
tick,0x7ffd55ac6f44,136314687,0,0x0,8
tick,0x7ffd55ac6f44,136329743,0,0x0,8
tick,0x7ffd55ac6f44,136344738,0,0x0,8
tick,0x7ffd55ac6f44,136360845,0,0x0,8
tick,0x7ffd55ac6f44,136376705,0,0x0,8
tick,0x7ffd55ac6f44,136391722,0,0x0,8
tick,0x7ffd55ac6f44,136407797,0,0x0,8
tick,0x7ffd55ac6f44,136422790,0,0x0,8
tick,0x7ffd55ac6f44,136438681,0,0x0,8
tick,0x7ffd55ac6f44,136454989,0,0x0,8
tick,0x7ffd55ac6f44,136470779,0,0x0,8
tick,0x7ffd55ac6f44,136486770,0,0x0,8
tick,0x7ffd55ac6f44,136502828,0,0x0,8
tick,0x7ffd55ac6f44,136518799,0,0x0,8
tick,0x7ffd55ac6f44,136533710,0,0x0,8
tick,0x7ffd55ac6f44,136548737,0,0x0,8
tick,0x7ffd55ac6f44,136563710,0,0x0,8
tick,0x7ffd55ac6f44,136578741,0,0x0,8
tick,0x7ffd55ac6f44,136593778,0,0x0,8
tick,0x7ffd55ac6f44,136608712,0,0x0,8
tick,0x7ffd55ac6f44,136623909,0,0x0,8
tick,0x7ffd55ac6f44,136639802,0,0x0,8
tick,0x7ffd55ac6f44,136654726,0,0x0,8
tick,0x7ffd55ac6f44,136670739,0,0x0,8
tick,0x7ffd55ac6f44,136685910,0,0x0,8
tick,0x7ffd55ac6f44,136701689,0,0x0,8
tick,0x7ffd55ac6f44,136717947,0,0x0,8
tick,0x7ffd55ac6f44,136733928,0,0x0,8
tick,0x7ffd55ac6f44,136748797,0,0x0,8
tick,0x7ffd55ac6f44,136764775,0,0x0,8
tick,0x7ffd55ac6f44,136779741,0,0x0,8
tick,0x7ffd55ac6f44,136794767,0,0x0,8
tick,0x7ffd55ac6f44,136809818,0,0x0,8
tick,0x7ffd55ac6f44,136825766,0,0x0,8
tick,0x7ffd55ac6f44,136840750,0,0x0,8
tick,0x7ffd55ac6f44,136855781,0,0x0,8
tick,0x7ffd55ac6f44,136871938,0,0x0,8
tick,0x7ffd55ac6f44,136888282,0,0x0,8
tick,0x7ffd55ac6f44,136902808,0,0x0,8
tick,0x7ffd55ac6f44,136917801,0,0x0,8
tick,0x7ffd55ac6f44,136933791,0,0x0,8
tick,0x7ffd55ac6f44,136949796,0,0x0,8
tick,0x7ffd55ac6f44,136964791,0,0x0,8
tick,0x7ffd55ac6f44,136979795,0,0x0,8
tick,0x7ffd55ac6f44,136994793,0,0x0,8
tick,0x7ffd55ac6f44,137009810,0,0x0,8
tick,0x7ffd55ac6f44,137024728,0,0x0,8
tick,0x7ffd55ac6f44,137040762,0,0x0,8
tick,0x7ffd55ac6f44,137057093,0,0x0,8
tick,0x7ffd55ac6f44,137072780,0,0x0,8
tick,0x7ffd55ac6f44,137088769,0,0x0,8
tick,0x7ffd55ac6f44,137103811,0,0x0,8
tick,0x7ffd55ac6f44,137119124,0,0x0,8
tick,0x7ffd55ac6f44,137134927,0,0x0,8
tick,0x7ffd55ac6f44,137150753,0,0x0,8
tick,0x7ffd55ac6f44,137165824,0,0x0,8
tick,0x7ffd55ac6f44,137180804,0,0x0,8
tick,0x7ffd55ac6f44,137195964,0,0x0,8
tick,0x7ffd55ac6f44,137211175,0,0x0,8
tick,0x7ffd55ac6f44,137227072,0,0x0,8
tick,0x7ffd55ac6f44,137242062,0,0x0,8
tick,0x7ffd55ac6f44,137256924,0,0x0,8
tick,0x7ffd55ac6f44,137273035,0,0x0,8
tick,0x7ffd55ac6f44,137287960,0,0x0,8
tick,0x7ffd55ac6f44,137303004,0,0x0,8
tick,0x7ffd55ac6f44,137318980,0,0x0,8
tick,0x7ffd55ac6f44,137335227,0,0x0,8
tick,0x7ffd55ac6f44,137349967,0,0x0,8
tick,0x7ffd55ac6f44,137364952,0,0x0,8
tick,0x7ffd55ac6f44,137380078,0,0x0,8
tick,0x7ffd55ac6f44,137394993,0,0x0,8
tick,0x7ffd55ac6f44,137409964,0,0x0,8
tick,0x7ffd55ac6f44,137424949,0,0x0,8
tick,0x7ffd55ac6f44,137439960,0,0x0,8
tick,0x7ffd55ac6f44,137455089,0,0x0,8
tick,0x7ffd55ac6f44,137470934,0,0x0,8
tick,0x7ffd55ac6f44,137486996,0,0x0,8
tick,0x7ffd55ac6f44,137502058,0,0x0,8
tick,0x7ffd55ac6f44,137516997,0,0x0,8
tick,0x7ffd55ac6f44,137531973,0,0x0,8
tick,0x7ffd55ac6f44,137546917,0,0x0,8
tick,0x7ffd55ac6f44,137561925,0,0x0,8
tick,0x7ffd55ac6f44,137577963,0,0x0,8
tick,0x7ffd55ac6f44,137593742,0,0x0,8
tick,0x7ffd55ac6f44,137607915,0,0x0,8
tick,0x7ffd55ac6f44,137622939,0,0x0,8
tick,0x7ffd55ac6f44,137638046,0,0x0,8
tick,0x7ffd55ac6f44,137654086,0,0x0,8
tick,0x7ffd55ac6f44,137669949,0,0x0,8
tick,0x7ffd55ac6f44,137684991,0,0x0,8
tick,0x7ffd55ac6f44,137700554,0,0x0,8
tick,0x7ffd55ac6f44,137715980,0,0x0,8
tick,0x7ffd55ac6f44,137730967,0,0x0,8
tick,0x7ffd55ac6f44,137746936,0,0x0,8
tick,0x7ffd55ac6f44,137762012,0,0x0,8
tick,0x7ffd55ac6f44,137778017,0,0x0,8
tick,0x7ffd55ac6f44,137793949,0,0x0,8
tick,0x7ffd55ac6f44,137809012,0,0x0,8
tick,0x7ffd55ac6f44,137823944,0,0x0,8
tick,0x7ffd55ac6f44,137838946,0,0x0,8
tick,0x7ffd55ac6f44,137854236,0,0x0,8
tick,0x7ffd55ac6f44,137868993,0,0x0,8
tick,0x7ffd55ac6f44,137883969,0,0x0,8
tick,0x7ffd55ac6f44,137899962,0,0x0,8
tick,0x7ffd55ac6f44,137915172,0,0x0,8
tick,0x7ffd55ac6f44,137929980,0,0x0,8
tick,0x7ffd55ac6f44,137944978,0,0x0,8
tick,0x7ffd55ac6f44,137959925,0,0x0,8
tick,0x7ffd55ac6f44,137975026,0,0x0,8
tick,0x7ffd55ac6f44,137989895,0,0x0,8
tick,0x7ffd55ac6f44,138005088,0,0x0,8
tick,0x7ffd55ac6f44,138019946,0,0x0,8
tick,0x7ffd55ac6f44,138034954,0,0x0,8
tick,0x7ffd55ac6f44,138051003,0,0x0,8
tick,0x7ffd55ac6f44,138066929,0,0x0,8
tick,0x7ffd55ac6f44,138082147,0,0x0,8
tick,0x7ffd55ac6f44,138097944,0,0x0,8
tick,0x7ffd55ac6f44,138114039,0,0x0,8
tick,0x7ffd55ac6f44,138129141,0,0x0,8
tick,0x7ffd55ac6f44,138143995,0,0x0,8
tick,0x7ffd55ac6f44,138159038,0,0x0,8
tick,0x7ffd55ac6f44,138175006,0,0x0,8
tick,0x7ffd55ac6f44,138189993,0,0x0,8
tick,0x7ffd55ac6f44,138205006,0,0x0,8
tick,0x7ffd55ac6f44,138220011,0,0x0,8
tick,0x7ffd55ac6f44,138235058,0,0x0,8
tick,0x7ffd55ac6f44,138251055,0,0x0,8
tick,0x7ffd55ac6f44,138265998,0,0x0,8
tick,0x7ffd55ac6f44,138282029,0,0x0,8
tick,0x7ffd55ac6f44,138297036,0,0x0,8
tick,0x7ffd55ac6f44,138311990,0,0x0,8
tick,0x7ffd55ac6f44,138327032,0,0x0,8
tick,0x7ffd55ac6f44,138341997,0,0x0,8
tick,0x7ffd55ac6f44,138357025,0,0x0,8
tick,0x7ffd55ac6f44,138373033,0,0x0,8
tick,0x7ffd55ac6f44,138389037,0,0x0,8
tick,0x7ffd55ac6f44,138405045,0,0x0,8
tick,0x7ffd55ac6f44,138420123,0,0x0,8
tick,0x7ffd55ac6f44,138435046,0,0x0,8
tick,0x7ffd55ac6f44,138450040,0,0x0,8
tick,0x7ffd55ac6f44,138465010,0,0x0,8
tick,0x7ffd55ac6f44,138480004,0,0x0,8
tick,0x7ffd55ac6f44,138495070,0,0x0,8
tick,0x7ffd55ac6f44,138510038,0,0x0,8
tick,0x7ffd55ac6f44,138526062,0,0x0,8
tick,0x7ffd55ac6f44,138541694,0,0x0,8
tick,0x7ffd55ac6f44,138557081,0,0x0,8
tick,0x7ffd55ac6f44,138572009,0,0x0,8
tick,0x7ffd55ac6f44,138588053,0,0x0,8
tick,0x7ffd55ac6f44,138604043,0,0x0,8
tick,0x7ffd55ac6f44,138619008,0,0x0,8
tick,0x7ffd55ac6f44,138635257,0,0x0,8
tick,0x7ffd55ac6f44,138651081,0,0x0,8
tick,0x7ffd55ac6f44,138667178,0,0x0,8
tick,0x7ffd55ac6f44,138683712,0,0x0,8
tick,0x7ffd55ac6f44,138697360,0,0x0,8
tick,0x7ffd55ac6f44,138713075,0,0x0,8
tick,0x7ffd55ac6f44,138728086,0,0x0,8
tick,0x7ffd55ac6f44,138743624,0,0x0,8
tick,0x7ffd55ac6f44,138759600,0,0x0,8
tick,0x7ffd55ac6f44,138774611,0,0x0,8
tick,0x7ffd55ac6f44,138790580,0,0x0,8
tick,0x7ffd55ac6f44,138806606,0,0x0,8
tick,0x7ffd55ac6f44,138822592,0,0x0,8
tick,0x7ffd55ac6f44,138837577,0,0x0,8
tick,0x7ffd55ac6f44,138852623,0,0x0,8
tick,0x7ffd55ac6f44,138868614,0,0x0,8
tick,0x7ffd55ac6f44,138883637,0,0x0,8
tick,0x7ffd55ac6f44,138898705,0,0x0,8
tick,0x7ffd55ac6f44,138913600,0,0x0,8
tick,0x7ffd55ac6f44,138928590,0,0x0,8
tick,0x7ffd55ac6f44,138944635,0,0x0,8
tick,0x7ffd55ac6f44,138959639,0,0x0,8
tick,0x7ffd55ac6f44,138974590,0,0x0,8
tick,0x7ffd55ac6f44,138989640,0,0x0,8
tick,0x7ffd55ac6f44,139006041,0,0x0,8
tick,0x7ffd55ac6f44,139021726,0,0x0,8
tick,0x7ffd55ac6f44,139036622,0,0x0,8
tick,0x7ffd55ac6f44,139051629,0,0x0,8
tick,0x7ffd55ac6f44,139067602,0,0x0,8
tick,0x7ffd55ac6f44,139083633,0,0x0,8
tick,0x7ffd55ac6f44,139099618,0,0x0,8
tick,0x7ffd55ac6f44,139115685,0,0x0,8
tick,0x7ffd55ac6f44,139131576,0,0x0,8
tick,0x7ffd55ac6f44,139146689,0,0x0,8
tick,0x7ffd55ac6f44,139162576,0,0x0,8
tick,0x7ffd55ac6f44,139178616,0,0x0,8
tick,0x7ffd55ac6f44,139194686,0,0x0,8
tick,0x7ffd55ac6f44,139210596,0,0x0,8
tick,0x7ffd55ac6f44,139225610,0,0x0,8
tick,0x7ffd55ac6f44,139241567,0,0x0,8
tick,0x7ffd55ac6f44,139256585,0,0x0,8
tick,0x7ffd55ac6f44,139271608,0,0x0,8
tick,0x7ffd55ac6f44,139287760,0,0x0,8
tick,0x7ffd55ac6f44,139303605,0,0x0,8
tick,0x7ffd55ac6f44,139318591,0,0x0,8
tick,0x7ffd55ac6f44,139334616,0,0x0,8
tick,0x7ffd55ac6f44,139350691,0,0x0,8
tick,0x7ffd55ac6f44,139366574,0,0x0,8
tick,0x7ffd55ac6f44,139381643,0,0x0,8
tick,0x7ffd55ac6f44,139396636,0,0x0,8
tick,0x7ffd55ac6f44,139411971,0,0x0,8
tick,0x7ffd55ac6f44,139426643,0,0x0,8
tick,0x7ffd55ac6f44,139441608,0,0x0,8
tick,0x7ffd55ac6f44,139456783,0,0x0,8
tick,0x7ffd55ac6f44,139477924,0,0x0,8
tick,0x7ffd55ac6f44,139487217,0,0x0,8
tick,0x7ffd55ac6f44,139502649,0,0x0,8
tick,0x7ffd55ac6f44,139517650,0,0x0,8
tick,0x7ffd55ac6f44,139532617,0,0x0,8
tick,0x7ffd55ac6f44,139547628,0,0x0,8
tick,0x7ffd55ac6f44,139562601,0,0x0,8
tick,0x7ffd55ac6f44,139577573,0,0x0,8
tick,0x7ffd55ac6f44,139593677,0,0x0,8
tick,0x7ffd55ac6f44,139609678,0,0x0,8
tick,0x7ffd55ac6f44,139625629,0,0x0,8
tick,0x7ffd55ac6f44,139640615,0,0x0,8
tick,0x7ffd55ac6f44,139655638,0,0x0,8
tick,0x7ffd55ac6f44,139671681,0,0x0,8
tick,0x7ffd55ac6f44,139687124,0,0x0,8
tick,0x7ffd55ac6f44,139702664,0,0x0,8
tick,0x7ffd55ac6f44,139717608,0,0x0,8
tick,0x7ffd55ac6f44,139732628,0,0x0,8
tick,0x7ffd55ac6f44,139748642,0,0x0,8
tick,0x7ffd55ac6f44,139763619,0,0x0,8
tick,0x7ffd55ac6f44,139779609,0,0x0,8
tick,0x7ffd55ac6f44,139794666,0,0x0,8
tick,0x7ffd55ac6f44,139810601,0,0x0,8
tick,0x7ffd55ac6f44,139826634,0,0x0,8
tick,0x7ffd55ac6f44,139841579,0,0x0,8
tick,0x7ffd55ac6f44,139856636,0,0x0,8
tick,0x7ffd55ac6f44,139871581,0,0x0,8
tick,0x7ffd55ac6f44,139887687,0,0x0,8
tick,0x7ffd55ac6f44,139903563,0,0x0,8
tick,0x7ffd55ac6f44,139919615,0,0x0,8
tick,0x7ffd55ac6f44,139935692,0,0x0,8
tick,0x7ffd55ac6f44,139951605,0,0x0,8
tick,0x7ffd55ac6f44,139967602,0,0x0,8
tick,0x7ffd55ac6f44,139983575,0,0x0,8
tick,0x7ffd55ac6f44,139998724,0,0x0,8
tick,0x7ffd55ac6f44,140014640,0,0x0,8
tick,0x7ffd55ac6f44,140030619,0,0x0,8
tick,0x7ffd55ac6f44,140046589,0,0x0,8
tick,0x7ffd55ac6f44,140062581,0,0x0,8
tick,0x7ffd55ac6f44,140077633,0,0x0,8
tick,0x7ffd55ac6f44,140092610,0,0x0,8
tick,0x7ffd55ac6f44,140107590,0,0x0,8
tick,0x7ffd55ac6f44,140122577,0,0x0,8
tick,0x7ffd55ac6f44,140137554,0,0x0,8
tick,0x7ffd55ac6f44,140152652,0,0x0,8
tick,0x7ffd55ac6f44,140169672,0,0x0,8
tick,0x7ffd55ac6f44,140184897,0,0x0,8
tick,0x7ffd55ac6f44,140199589,0,0x0,8
tick,0x7ffd55ac6f44,140214652,0,0x0,8
tick,0x7ffd55ac6f44,140229710,0,0x0,8
tick,0x7ffd55ac6f44,140245631,0,0x0,8
tick,0x7ffd55ac6f44,140261659,0,0x0,8
tick,0x7ffd55ac6f44,140277754,0,0x0,8
tick,0x7ffd55ac6f44,140293726,0,0x0,8
tick,0x7ffd55ac6f44,140308672,0,0x0,8
tick,0x7ffd55ac6f44,140323634,0,0x0,8
tick,0x7ffd55ac6f44,140339635,0,0x0,8
tick,0x7ffd55ac6f44,140355597,0,0x0,8
tick,0x7ffd55ac6f44,140371662,0,0x0,8
tick,0x7ffd55ac6f44,140386613,0,0x0,8
tick,0x7ffd55ac6f44,140401598,0,0x0,8
tick,0x7ffd55ac6f44,140416591,0,0x0,8
tick,0x7ffd55ac6f44,140431768,0,0x0,8
tick,0x7ffd55ac6f44,140446694,0,0x0,8
tick,0x7ffd55ac6f44,140461622,0,0x0,8
tick,0x7ffd55ac6f44,140476645,0,0x0,8
tick,0x7ffd55ac6f44,140491588,0,0x0,8
tick,0x7ffd55ac6f44,140506631,0,0x0,8
tick,0x7ffd55ac6f44,140521994,0,0x0,8
tick,0x7ffd55ac6f44,140537633,0,0x0,8
tick,0x7ffd55ac6f44,140552597,0,0x0,8
tick,0x7ffd55ac6f44,140567641,0,0x0,8
tick,0x7ffd55ac6f44,140582668,0,0x0,8
tick,0x7ffd55ac6f44,140597713,0,0x0,8
tick,0x7ffd55ac6f44,140612670,0,0x0,8
tick,0x7ffd55ac6f44,140627748,0,0x0,8
tick,0x7ffd55ac6f44,140643596,0,0x0,8
tick,0x7ffd55ac6f44,140658592,0,0x0,8
tick,0x7ffd55ac6f44,140673604,0,0x0,8
tick,0x7ffd55ac6f44,140688644,0,0x0,8
tick,0x7ffd55ac6f44,140704638,0,0x0,8
tick,0x7ffd55ac6f44,140720570,0,0x0,8
tick,0x7ffd55ac6f44,140735623,0,0x0,8
tick,0x7ffd55ac6f44,140751672,0,0x0,8
tick,0x7ffd55ac6f44,140767593,0,0x0,8
tick,0x7ffd55ac6f44,140782614,0,0x0,8
tick,0x7ffd55ac6f44,140798608,0,0x0,8
tick,0x7ffd55ac6f44,140814679,0,0x0,8
tick,0x7ffd55ac6f44,140829586,0,0x0,8
tick,0x7ffd55ac6f44,140845704,0,0x0,8
tick,0x7ffd55ac6f44,140861473,0,0x0,8
tick,0x7ffd55ac6f44,140876377,0,0x0,8
tick,0x7ffd55ac6f44,140891287,0,0x0,8
tick,0x7ffd55ac6f44,140906404,0,0x0,8
tick,0x7ffd55ac6f44,140921228,0,0x0,8
tick,0x7ffd55ac6f44,140937204,0,0x0,8
tick,0x7ffd55ac6f44,140954639,0,0x0,8
tick,0x7ffd55ac6f44,140967218,0,0x0,8
tick,0x7ffd55ac6f44,140983294,0,0x0,8
tick,0x7ffd55ac6f44,140999209,0,0x0,8
tick,0x7ffd55ac6f44,141014246,0,0x0,8
tick,0x7ffd55ac6f44,141029194,0,0x0,8
tick,0x7ffd55ac6f44,141044223,0,0x0,8
tick,0x7ffd55ac6f44,141060255,0,0x0,8
tick,0x7ffd55ac6f44,141076295,0,0x0,8
tick,0x7ffd55ac6f44,141091209,0,0x0,8
tick,0x7ffd55ac6f44,141106210,0,0x0,8
tick,0x7ffd55ac6f44,141122258,0,0x0,8
tick,0x7ffd55ac6f44,141138154,0,0x0,8
tick,0x7ffd55ac6f44,141154207,0,0x0,8
tick,0x7ffd55ac6f44,141169186,0,0x0,8
tick,0x7ffd55ac6f44,141184216,0,0x0,8
tick,0x7ffd55ac6f44,141199225,0,0x0,8
tick,0x7ffd55ac6f44,141215224,0,0x0,8
tick,0x7ffd55ac6f44,141230382,0,0x0,8
tick,0x7ffd55ac6f44,141246204,0,0x0,8
tick,0x7ffd55ac6f44,141262239,0,0x0,8
tick,0x7ffd55ac6f44,141278234,0,0x0,8
tick,0x7ffd55ac6f44,141293240,0,0x0,8
tick,0x7ffd55ac6f44,141308210,0,0x0,8
tick,0x7ffd55ac6f44,141323215,0,0x0,8
tick,0x7ffd55ac6f44,141338808,0,0x0,8
tick,0x7ffd55ac6f44,141354252,0,0x0,8
tick,0x7ffd55ac6f44,141370206,0,0x0,8
tick,0x7ffd55ac6f44,141386276,0,0x0,8
tick,0x7ffd55ac6f44,141402196,0,0x0,8
tick,0x7ffd55ac6f44,141418198,0,0x0,8
tick,0x7ffd55ac6f44,141434360,0,0x0,8
tick,0x7ffd55ac6f44,141450187,0,0x0,8
tick,0x7ffd55ac6f44,141465278,0,0x0,8
tick,0x7ffd55ac6f44,141481221,0,0x0,8
tick,0x7ffd55ac6f44,141496228,0,0x0,8
tick,0x7ffd55ac6f44,141512543,0,0x0,8
tick,0x7ffd55ac6f44,141528213,0,0x0,8
tick,0x7ffd55ac6f44,141544216,0,0x0,8
tick,0x7ffd55ac6f44,141559293,0,0x0,8
tick,0x7ffd55ac6f44,141575503,0,0x0,8
tick,0x7ffd55ac6f44,141590253,0,0x0,8
tick,0x7ffd55ac6f44,141605206,0,0x0,8
tick,0x7ffd55ac6f44,141620235,0,0x0,8
tick,0x7ffd55ac6f44,141635250,0,0x0,8
tick,0x7ffd55ac6f44,141651234,0,0x0,8
tick,0x7ffd55ac6f44,141668171,0,0x0,8
tick,0x7ffd55ac6f44,141684094,0,0x0,8
tick,0x7ffd55ac6f44,141698492,0,0x0,8
tick,0x7ffd55ac6f44,141714334,0,0x0,8
tick,0x7ffd55ac6f44,141728329,0,0x0,8
tick,0x7ffd55ac6f44,141744226,0,0x0,8
tick,0x7ffd55ac6f44,141759229,0,0x0,8
tick,0x7ffd55ac6f44,141775263,0,0x0,8
tick,0x7ffd55ac6f44,141791295,0,0x0,8
tick,0x7ffd55ac6f44,141806199,0,0x0,8
tick,0x7ffd55ac6f44,141821224,0,0x0,8
tick,0x7ffd55ac6f44,141836182,0,0x0,8
tick,0x7ffd55ac6f44,141851262,0,0x0,8
tick,0x7ffd55ac6f44,141867292,0,0x0,8
tick,0x7ffd55ac6f44,141882276,0,0x0,8
tick,0x7ffd55ac6f44,141897146,0,0x0,8
tick,0x7ffd55ac6f44,141912298,0,0x0,8
tick,0x7ffd55ac6f44,141928273,0,0x0,8
tick,0x7ffd55ac6f44,141943299,0,0x0,8
tick,0x7ffd55ac6f44,141959400,0,0x0,8
tick,0x7ffd55ac6f44,141974889,0,0x0,8
tick,0x7ffd55ac6f44,141990570,0,0x0,8
tick,0x7ffd55ac6f44,142005633,0,0x0,8
tick,0x7ffd55ac6f44,142021782,0,0x0,8
tick,0x7ffd55ac6f44,142036756,0,0x0,8
tick,0x7ffd55ac6f44,142052278,0,0x0,8
tick,0x7ffd55ac6f44,142067897,0,0x0,8
tick,0x7ffd55ac6f44,142084093,0,0x0,8
tick,0x7ffd55ac6f44,142100167,0,0x0,8
tick,0x7ffd55ac6f44,142115153,0,0x0,8
tick,0x7ffd55ac6f44,142130532,0,0x0,8
tick,0x7ffd55ac6f44,142146295,0,0x0,8
tick,0x7ffd55ac6f44,142162779,0,0x0,8
tick,0x7ffd55ac6f44,142178279,0,0x0,8
tick,0x7ffd55ac6f44,142194196,0,0x0,8
tick,0x7ffd55ac6f44,142209934,0,0x0,8
tick,0x7ffd55ac6f44,142224842,0,0x0,8
tick,0x7ffd55ac6f44,142240393,0,0x0,8
tick,0x7ffd55ac6f44,142256079,0,0x0,8
tick,0x7ffd55ac6f44,142271447,0,0x0,8
tick,0x7ffd55ac6f44,142286487,0,0x0,8
tick,0x7ffd55ac6f44,142302218,0,0x0,8
tick,0x7ffd55ac6f44,142318183,0,0x0,8
tick,0x7ffd55ac6f44,142333354,0,0x0,8
tick,0x7ffd55ac6f44,142349397,0,0x0,8
tick,0x7ffd55ac6f44,142365158,0,0x0,8
tick,0x7ffd55ac6f44,142380451,0,0x0,8
tick,0x7ffd55ac6f44,142395736,0,0x0,8
tick,0x7ffd55ac6f44,142411083,0,0x0,8
tick,0x7ffd55ac6f44,142426173,0,0x0,8
tick,0x7ffd55ac6f44,142441821,0,0x0,8
tick,0x7ffd55ac6f44,142457508,0,0x0,8
tick,0x7ffd55ac6f44,142473437,0,0x0,8
tick,0x7ffd55ac6f44,142488955,0,0x0,8
tick,0x7ffd55ac6f44,142504737,0,0x0,8
tick,0x7ffd55ac6f44,142520576,0,0x0,8
tick,0x7ffd55ac6f44,142536157,0,0x0,8
tick,0x7ffd55ac6f44,142552076,0,0x0,8
tick,0x7ffd55ac6f44,142566202,0,0x0,8
tick,0x7ffd55ac6f44,142581084,0,0x0,8
tick,0x7ffd55ac6f44,142596081,0,0x0,8
tick,0x7ffd55ac6f44,142612391,0,0x0,8
tick,0x7ffd55ac6f44,142627606,0,0x0,8
tick,0x7ffd55ac6f44,142643519,0,0x0,8
tick,0x7ffd55ac6f44,142658596,0,0x0,8
tick,0x7ffd55ac6f44,142674375,0,0x0,8
tick,0x7ffd55ac6f44,142689648,0,0x0,8
tick,0x7ffd55ac6f44,142705825,0,0x0,8
tick,0x7ffd55ac6f44,142722013,0,0x0,8
tick,0x7ffd55ac6f44,142736887,0,0x0,8
tick,0x7ffd55ac6f44,142752224,0,0x0,8
tick,0x7ffd55ac6f44,142767037,0,0x0,8
tick,0x7ffd55ac6f44,142782040,0,0x0,8
tick,0x7ffd55ac6f44,142798231,0,0x0,8
tick,0x7ffd55ac6f44,142813462,0,0x0,8
tick,0x7ffd55ac6f44,142828655,0,0x0,8
tick,0x7ffd55ac6f44,142843988,0,0x0,8
tick,0x7ffd55ac6f44,142859500,0,0x0,8
tick,0x7ffd55ac6f44,142875227,0,0x0,8
tick,0x7ffd55ac6f44,142891198,0,0x0,8
tick,0x7ffd55ac6f44,142906483,0,0x0,8
tick,0x7ffd55ac6f44,142922619,0,0x0,8
tick,0x7ffd55ac6f44,142938637,0,0x0,8
tick,0x7ffd55ac6f44,142954690,0,0x0,8
tick,0x7ffd55ac6f44,142970149,0,0x0,8
tick,0x7ffd55ac6f44,142985206,0,0x0,8
tick,0x7ffd55ac6f44,143001428,0,0x0,8
tick,0x7ffd55ac6f44,143017305,0,0x0,8
tick,0x7ffd55ac6f44,143033145,0,0x0,8
tick,0x7ffd55ac6f44,143048652,0,0x0,8
tick,0x7ffd55ac6f44,143064315,0,0x0,8
tick,0x7ffd55ac6f44,143080734,0,0x0,8
tick,0x7ffd55ac6f44,143096482,0,0x0,8
tick,0x7ffd55ac6f44,143112628,0,0x0,8
tick,0x7ffd55ac6f44,143128425,0,0x0,8
tick,0x7ffd55ac6f44,143143602,0,0x0,8
tick,0x7ffd55ac6f44,143158941,0,0x0,8
tick,0x7ffd55ac6f44,143173489,0,0x0,8
tick,0x7ffd55ac6f44,143188872,0,0x0,8
tick,0x7ffd55ac6f44,143203559,0,0x0,8
tick,0x7ffd55ac6f44,143219308,0,0x0,8
tick,0x7ffd55ac6f44,143235310,0,0x0,8
tick,0x7ffd55ac6f44,143251292,0,0x0,8
tick,0x7ffd55ac6f44,143266047,0,0x0,8
tick,0x7ffd55ac6f44,143281714,0,0x0,8
tick,0x7ffd55ac6f44,143297862,0,0x0,8
tick,0x7ffd55ac6f44,143313383,0,0x0,8
tick,0x7ffd55ac6f44,143329840,0,0x0,8
tick,0x7ffd55ac6f44,143345346,0,0x0,8
tick,0x7ffd55ac6f44,143360621,0,0x0,8
tick,0x7ffd55ac6f44,143376296,0,0x0,8
tick,0x7ffd55ac6f44,143391765,0,0x0,8
tick,0x7ffd55ac6f44,143407046,0,0x0,8
tick,0x7ffd55ac6f44,143422370,0,0x0,8
tick,0x7ffd55ac6f44,143437800,0,0x0,8
tick,0x7ffd55ac6f44,143453440,0,0x0,8
tick,0x7ffd55ac6f44,143469398,0,0x0,8
tick,0x7ffd55ac6f44,143485237,0,0x0,8
tick,0x7ffd55ac6f44,143500474,0,0x0,8
tick,0x7ffd55ac6f44,143515506,0,0x0,8
tick,0x7ffd55ac6f44,143531009,0,0x0,8
tick,0x7ffd55ac6f44,143546050,0,0x0,8
tick,0x7ffd55ac6f44,143562033,0,0x0,8
tick,0x7ffd55ac6f44,143577780,0,0x0,8
tick,0x7ffd55ac6f44,143593822,0,0x0,8
tick,0x7ffd55ac6f44,143608924,0,0x0,8
tick,0x7ffd55ac6f44,143624655,0,0x0,8
tick,0x7ffd55ac6f44,143639769,0,0x0,8
tick,0x7ffd55ac6f44,143655124,0,0x0,8
tick,0x7ffd55ac6f44,143670557,0,0x0,8
tick,0x7ffd55ac6f44,143685991,0,0x0,8
tick,0x7ffd55ac6f44,143702262,0,0x0,8
tick,0x7ffd55ac6f44,143717785,0,0x0,8
tick,0x7ffd55ac6f44,143733250,0,0x0,8
tick,0x7ffd55ac6f44,143748809,0,0x0,8
tick,0x7ffd55ac6f44,143763759,0,0x0,8
tick,0x7ffd55ac6f44,143779533,0,0x0,8
tick,0x7ffd55ac6f44,143794139,0,0x0,8
tick,0x7ffd55ac6f44,143809239,0,0x0,8
tick,0x7ffd55ac6f44,143824973,0,0x0,8
tick,0x7ffd55ac6f44,143840562,0,0x0,8
tick,0x7ffd55ac6f44,143855324,0,0x0,8
tick,0x7ffd55ac6f44,143870467,0,0x0,8
tick,0x7ffd55ac6f44,143886118,0,0x0,8
tick,0x7ffd55ac6f44,143901563,0,0x0,8
tick,0x7ffd55ac6f44,143917316,0,0x0,8
tick,0x7ffd55ac6f44,143933111,0,0x0,8
tick,0x7ffd55ac6f44,143948192,0,0x0,8
tick,0x7ffd55ac6f44,143963804,0,0x0,8
tick,0x7ffd55ac6f44,143979765,0,0x0,8
tick,0x7ffd55ac6f44,143995430,0,0x0,8
tick,0x7ffd55ac6f44,144011254,0,0x0,8
tick,0x7ffd55ac6f44,144026034,0,0x0,8
tick,0x7ffd55ac6f44,144040926,0,0x0,8
tick,0x7ffd55ac6f44,144056294,0,0x0,8
tick,0x7ffd55ac6f44,144071479,0,0x0,8
tick,0x7ffd55ac6f44,144086159,0,0x0,8
tick,0x7ffd55ac6f44,144101532,0,0x0,8
tick,0x7ffd55ac6f44,144116264,0,0x0,8
tick,0x7ffd55ac6f44,144131909,0,0x0,8
tick,0x7ffd55ac6f44,144147414,0,0x0,8
tick,0x7ffd55ac6f44,144163401,0,0x0,8
tick,0x7ffd55ac6f44,144178069,0,0x0,8
tick,0x7ffd55ac6f44,144193543,0,0x0,8
tick,0x7ffd55ac6f44,144208702,0,0x0,8
tick,0x7ffd55ac6f44,144224282,0,0x0,8
tick,0x7ffd55ac6f44,144239722,0,0x0,8
tick,0x7ffd55ac6f44,144255030,0,0x0,8
tick,0x7ffd55ac6f44,144271005,0,0x0,8
tick,0x7ffd55ac6f44,144287015,0,0x0,8
tick,0x7ffd55ac6f44,144303270,0,0x0,8
tick,0x7ffd55ac6f44,144318347,0,0x0,8
tick,0x7ffd55ac6f44,144333550,0,0x0,8
tick,0x7ffd55ac6f44,144349410,0,0x0,8
tick,0x7ffd55ac6f44,144365760,0,0x0,8
tick,0x7ffd55ac6f44,144380002,0,0x0,8
tick,0x7ffd55ac6f44,144395050,0,0x0,8
tick,0x7ffd55ac6f44,144409899,0,0x0,8
tick,0x7ffd55ac6f44,144425323,0,0x0,8
tick,0x7ffd55ac6f44,144441285,0,0x0,8
tick,0x7ffd55ac6f44,144457277,0,0x0,8
tick,0x7ffd55ac6f44,144473223,0,0x0,8
tick,0x7ffd55ac6f44,144488185,0,0x0,8
tick,0x7ffd55ac6f44,144503122,0,0x0,8
tick,0x7ffd55ac6f44,144518656,0,0x0,8
tick,0x7ffd55ac6f44,144533783,0,0x0,8
tick,0x7ffd55ac6f44,144549586,0,0x0,8
tick,0x7ffd55ac6f44,144565500,0,0x0,8
tick,0x7ffd55ac6f44,144581149,0,0x0,8
tick,0x7ffd55ac6f44,144597173,0,0x0,8
tick,0x7ffd55ac6f44,144612132,0,0x0,8
tick,0x7ffd55ac6f44,144627032,0,0x0,8
tick,0x7ffd55ac6f44,144642020,0,0x0,8
tick,0x7ffd55ac6f44,144656972,0,0x0,8
tick,0x7ffd55ac6f44,144672846,0,0x0,8
tick,0x7ffd55ac6f44,144687924,0,0x0,8
tick,0x7ffd55ac6f44,144703823,0,0x0,8
tick,0x7ffd55ac6f44,144719741,0,0x0,8
tick,0x7ffd55ac6f44,144735241,0,0x0,8
tick,0x7ffd55ac6f44,144751532,0,0x0,8
tick,0x7ffd55ac6f44,144767131,0,0x0,8
tick,0x7ffd55ac6f44,144782392,0,0x0,8
tick,0x7ffd55ac6f44,144797593,0,0x0,8
tick,0x7ffd55ac6f44,144813825,0,0x0,8
tick,0x7ffd55ac6f44,144829333,0,0x0,8
tick,0x7ffd55ac6f44,144844827,0,0x0,8
tick,0x7ffd55ac6f44,144860388,0,0x0,8
tick,0x7ffd55ac6f44,144876427,0,0x0,8
tick,0x7ffd55ac6f44,144891770,0,0x0,8
tick,0x7ffd55ac6f44,144907252,0,0x0,8
tick,0x7ffd55ac6f44,144922580,0,0x0,8
tick,0x7ffd55ac6f44,144938076,0,0x0,8
tick,0x7ffd55ac6f44,144953985,0,0x0,8
tick,0x7ffd55ac6f44,144970437,0,0x0,8
tick,0x7ffd55ac6f44,144986268,0,0x0,8
tick,0x7ffd55ac6f44,145002229,0,0x0,8
tick,0x7ffd55ac6f44,145017496,0,0x0,8
tick,0x7ffd55ac6f44,145033517,0,0x0,8
tick,0x7ffd55ac6f44,145049512,0,0x0,8
tick,0x7ffd55ac6f44,145065082,0,0x0,8
tick,0x7ffd55ac6f44,145080253,0,0x0,8
tick,0x7ffd55ac6f44,145094993,0,0x0,8
tick,0x7ffd55ac6f44,145110007,0,0x0,8
tick,0x7ffd55ac6f44,145126036,0,0x0,8
tick,0x7ffd55ac6f44,145140694,0,0x0,8
tick,0x7ffd55ac6f44,145155410,0,0x0,8
tick,0x7ffd55ac6f44,145171274,0,0x0,8
tick,0x7ffd55ac6f44,145186719,0,0x0,8
tick,0x7ffd55ac6f44,145202730,0,0x0,8
tick,0x7ffd55ac6f44,145218243,0,0x0,8
tick,0x7ffd55ac6f44,145233319,0,0x0,8
tick,0x7ffd55ac6f44,145249493,0,0x0,8
tick,0x7ffd55ac6f44,145264534,0,0x0,8
tick,0x7ffd55ac6f44,145279859,0,0x0,8
tick,0x7ffd55ac6f44,145295318,0,0x0,8
tick,0x7ffd55ac6f44,145310879,0,0x0,8
tick,0x7ffd55ac6f44,145326315,0,0x0,8
tick,0x7ffd55ac6f44,145342400,0,0x0,8
tick,0x7ffd55ac6f44,145357414,0,0x0,8
tick,0x7ffd55ac6f44,145373380,0,0x0,8
tick,0x7ffd55ac6f44,145388631,0,0x0,8
tick,0x7ffd55ac6f44,145404600,0,0x0,8
tick,0x7ffd55ac6f44,145420523,0,0x0,8
tick,0x7ffd55ac6f44,145436115,0,0x0,8
tick,0x7ffd55ac6f44,145451227,0,0x0,8
tick,0x7ffd55ac6f44,145467269,0,0x0,8
tick,0x7ffd55ac6f44,145483380,0,0x0,8
tick,0x7ffd55ac6f44,145498504,0,0x0,8
tick,0x7ffd55ac6f44,145514086,0,0x0,8
tick,0x7ffd55ac6f44,145529556,0,0x0,8
tick,0x7ffd55ac6f44,145544620,0,0x0,8
tick,0x7ffd55ac6f44,145559785,0,0x0,8
tick,0x7ffd55ac6f44,145575372,0,0x0,8
tick,0x7ffd55ac6f44,145591267,0,0x0,8
tick,0x7ffd55ac6f44,145606475,0,0x0,8
tick,0x7ffd55ac6f44,145622219,0,0x0,8
tick,0x7ffd55ac6f44,145637319,0,0x0,8
tick,0x7ffd55ac6f44,145653301,0,0x0,8
tick,0x7ffd55ac6f44,145669106,0,0x0,8
tick,0x7ffd55ac6f44,145685319,0,0x0,8
tick,0x7ffd55ac6f44,145700824,0,0x0,8
tick,0x7ffd55ac6f44,145716513,0,0x0,8
tick,0x7ffd55ac6f44,145732044,0,0x0,8
tick,0x7ffd55ac6f44,145746885,0,0x0,8
tick,0x7ffd55ac6f44,145762089,0,0x0,8
tick,0x7ffd55ac6f44,145778176,0,0x0,8
tick,0x7ffd55ac6f44,145794008,0,0x0,8
tick,0x7ffd55ac6f44,145809957,0,0x0,8
tick,0x7ffd55ac6f44,145825123,0,0x0,8
tick,0x7ffd55ac6f44,145840983,0,0x0,8
tick,0x7ffd55ac6f44,145856989,0,0x0,8
tick,0x7ffd55ac6f44,145872042,0,0x0,8
tick,0x7ffd55ac6f44,145886935,0,0x0,8
tick,0x7ffd55ac6f44,145903038,0,0x0,8
tick,0x7ffd55ac6f44,145919046,0,0x0,8
tick,0x7ffd55ac6f44,145934855,0,0x0,8
tick,0x7ffd55ac6f44,145950074,0,0x0,8
tick,0x7ffd55ac6f44,145965929,0,0x0,8
tick,0x7ffd55ac6f44,145981919,0,0x0,8
tick,0x7ffd55ac6f44,145996986,0,0x0,8
tick,0x7ffd55ac6f44,146013012,0,0x0,8
tick,0x7ffd55ac6f44,146028083,0,0x0,8
tick,0x7ffd55ac6f44,146043136,0,0x0,8
tick,0x7ffd55ac6f44,146058044,0,0x0,8
tick,0x7ffd55ac6f44,146073083,0,0x0,8
tick,0x7ffd55ac6f44,146089119,0,0x0,8
tick,0x7ffd55ac6f44,146105079,0,0x0,8
tick,0x7ffd55ac6f44,146121039,0,0x0,8
tick,0x7ffd55ac6f44,146136030,0,0x0,8
tick,0x7ffd55ac6f44,146151053,0,0x0,8
tick,0x7ffd55ac6f44,146167057,0,0x0,8
tick,0x7ffd55ac6f44,146183052,0,0x0,8
tick,0x7ffd55ac6f44,146198030,0,0x0,8
tick,0x7ffd55ac6f44,146213082,0,0x0,8
tick,0x7ffd55ac6f44,146229084,0,0x0,8
tick,0x7ffd55ac6f44,146244146,0,0x0,8
tick,0x7ffd55ac6f44,146260099,0,0x0,8
tick,0x7ffd55ac6f44,146276115,0,0x0,8
tick,0x7ffd55ac6f44,146292046,0,0x0,8
tick,0x7ffd55ac6f44,146308076,0,0x0,8
tick,0x7ffd55ac6f44,146324043,0,0x0,8
tick,0x7ffd55ac6f44,146340083,0,0x0,8
tick,0x7ffd55ac6f44,146356076,0,0x0,8
tick,0x7ffd55ac6f44,146371049,0,0x0,8
tick,0x7ffd55ac6f44,146387062,0,0x0,8
tick,0x7ffd55ac6f44,146403113,0,0x0,8
tick,0x7ffd55ac6f44,146419039,0,0x0,8
tick,0x7ffd55ac6f44,146435205,0,0x0,8
tick,0x7ffd55ac6f44,146450854,0,0x0,8
tick,0x7ffd55ac6f44,146466918,0,0x0,8
tick,0x7ffd55ac6f44,146482281,0,0x0,8
tick,0x7ffd55ac6f44,146498204,0,0x0,8
tick,0x7ffd55ac6f44,146514083,0,0x0,8
tick,0x7ffd55ac6f44,146530045,0,0x0,8
tick,0x7ffd55ac6f44,146546182,0,0x0,8
tick,0x7ffd55ac6f44,146562229,0,0x0,8
tick,0x7ffd55ac6f44,146578126,0,0x0,8
tick,0x7ffd55ac6f44,146593362,0,0x0,8
tick,0x7ffd55ac6f44,146608610,0,0x0,8
tick,0x7ffd55ac6f44,146624619,0,0x0,8
tick,0x7ffd55ac6f44,146640080,0,0x0,8
tick,0x7ffd55ac6f44,146655109,0,0x0,8
tick,0x7ffd55ac6f44,146670344,0,0x0,8
tick,0x7ffd55ac6f44,146685566,0,0x0,8
tick,0x7ffd55ac6f44,146701261,0,0x0,8
tick,0x7ffd55ac6f44,146716941,0,0x0,8
tick,0x7ffd55ac6f44,146732353,0,0x0,8
tick,0x7ffd55ac6f44,146747785,0,0x0,8
tick,0x7ffd55ac6f44,146763463,0,0x0,8
tick,0x7ffd55ac6f44,146779214,0,0x0,8
tick,0x7ffd55ac6f44,146794760,0,0x0,8
tick,0x7ffd55ac6f44,146809691,0,0x0,8
tick,0x7ffd55ac6f44,146824674,0,0x0,8
tick,0x7ffd55ac6f44,146839652,0,0x0,8
tick,0x7ffd55ac6f44,146854645,0,0x0,8
tick,0x7ffd55ac6f44,146870748,0,0x0,8
tick,0x7ffd55ac6f44,146886705,0,0x0,8
tick,0x7ffd55ac6f44,146903032,0,0x0,8
tick,0x7ffd55ac6f44,146917950,0,0x0,8
tick,0x7ffd55ac6f44,146933106,0,0x0,8
tick,0x7ffd55ac6f44,146948804,0,0x0,8
tick,0x7ffd55ac6f44,146964700,0,0x0,8
tick,0x7ffd55ac6f44,146980782,0,0x0,8
tick,0x7ffd55ac6f44,146995739,0,0x0,8
tick,0x7ffd55ac6f44,147010731,0,0x0,8
tick,0x7ffd55ac6f44,147025686,0,0x0,8
tick,0x7ffd55ac6f44,147041077,0,0x0,8
tick,0x7ffd55ac6f44,147055769,0,0x0,8
tick,0x7ffd55ac6f44,147071372,0,0x0,8
tick,0x7ffd55ac6f44,147086981,0,0x0,8
tick,0x7ffd55ac6f44,147102763,0,0x0,8
tick,0x7ffd55ac6f44,147118793,0,0x0,8
tick,0x7ffd55ac6f44,147134820,0,0x0,8
tick,0x7ffd55ac6f44,147149772,0,0x0,8
tick,0x7ffd55ac6f44,147165888,0,0x0,8
tick,0x7ffd55ac6f44,147180792,0,0x0,8
tick,0x7ffd55ac6f44,147195899,0,0x0,8
tick,0x7ffd55ac6f44,147211811,0,0x0,8
tick,0x7ffd55ac6f44,147226867,0,0x0,8
tick,0x7ffd55ac6f44,147242773,0,0x0,8
tick,0x7ffd55ac6f44,147257932,0,0x0,8
tick,0x7ffd55ac6f44,147272765,0,0x0,8
tick,0x7ffd55ac6f44,147287945,0,0x0,8
tick,0x7ffd55ac6f44,147304005,0,0x0,8
tick,0x7ffd55ac6f44,147320017,0,0x0,8
tick,0x7ffd55ac6f44,147335688,0,0x0,8
tick,0x7ffd55ac6f44,147350945,0,0x0,8
tick,0x7ffd55ac6f44,147366930,0,0x0,8
tick,0x7ffd55ac6f44,147382842,0,0x0,8
tick,0x7ffd55ac6f44,147398505,0,0x0,8
tick,0x7ffd55ac6f44,147413989,0,0x0,8
tick,0x7ffd55ac6f44,147429750,0,0x0,8
tick,0x7ffd55ac6f44,147445893,0,0x0,8
tick,0x7ffd55ac6f44,147461007,0,0x0,8
tick,0x7ffd55ac6f44,147476202,0,0x0,8
tick,0x7ffd55ac6f44,147492043,0,0x0,8
tick,0x7ffd55ac6f44,147506958,0,0x0,8
tick,0x7ffd55ac6f44,147521702,0,0x0,8
tick,0x7ffd55ac6f44,147538238,0,0x0,8
tick,0x7ffd55ac6f44,147553489,0,0x0,8
tick,0x7ffd55ac6f44,147569484,0,0x0,8
tick,0x7ffd55ac6f44,147585300,0,0x0,8
tick,0x7ffd55ac6f44,147600858,0,0x0,8
tick,0x7ffd55ac6f44,147616455,0,0x0,8
tick,0x7ffd55ac6f44,147631705,0,0x0,8
tick,0x7ffd55ac6f44,147647063,0,0x0,8
tick,0x7ffd55ac6f44,147662454,0,0x0,8
tick,0x7ffd55ac6f44,147677240,0,0x0,8
tick,0x7ffd55ac6f44,147692953,0,0x0,8
tick,0x7ffd55ac6f44,147708455,0,0x0,8
tick,0x7ffd55ac6f44,147724666,0,0x0,8
tick,0x7ffd55ac6f44,147739733,0,0x0,8
tick,0x7ffd55ac6f44,147755741,0,0x0,8
tick,0x7ffd55ac6f44,147771216,0,0x0,8
tick,0x7ffd55ac6f44,147787011,0,0x0,8
tick,0x7ffd55ac6f44,147802413,0,0x0,8
tick,0x7ffd55ac6f44,147818047,0,0x0,8
tick,0x7ffd55ac6f44,147834093,0,0x0,8
tick,0x7ffd55ac6f44,147849488,0,0x0,8
tick,0x7ffd55ac6f44,147864839,0,0x0,8
tick,0x7ffd55ac6f44,147880309,0,0x0,8
tick,0x7ffd55ac6f44,147895073,0,0x0,8
tick,0x7ffd55ac6f44,147910434,0,0x0,8
tick,0x7ffd55ac6f44,147925017,0,0x0,8
tick,0x7ffd55ac6f44,147940709,0,0x0,8
tick,0x7ffd55ac6f44,147956398,0,0x0,8
tick,0x7ffd55ac6f44,147971287,0,0x0,8
tick,0x7ffd55ac6f44,147986423,0,0x0,8
tick,0x7ffd55ac6f44,148002070,0,0x0,8
tick,0x7ffd55ac6f44,148017470,0,0x0,8
tick,0x7ffd55ac6f44,148033559,0,0x0,8
tick,0x7ffd55ac6f44,148048965,0,0x0,8
tick,0x7ffd55ac6f44,148065211,0,0x0,8
tick,0x7ffd55ac6f44,148081276,0,0x0,8
tick,0x7ffd55ac6f44,148097485,0,0x0,8
tick,0x7ffd55ac6f44,148113389,0,0x0,8
tick,0x7ffd55ac6f44,148128333,0,0x0,8
tick,0x7ffd55ac6f44,148144147,0,0x0,8
tick,0x7ffd55ac6f44,148159266,0,0x0,8
tick,0x7ffd55ac6f44,148175100,0,0x0,8
tick,0x7ffd55ac6f44,148191222,0,0x0,8
tick,0x7ffd55ac6f44,148207209,0,0x0,8
tick,0x7ffd55ac6f44,148222510,0,0x0,8
tick,0x7ffd55ac6f44,148238763,0,0x0,8
tick,0x7ffd55ac6f44,148254510,0,0x0,8
tick,0x7ffd55ac6f44,148269349,0,0x0,8
tick,0x7ffd55ac6f44,148285044,0,0x0,8
tick,0x7ffd55ac6f44,148300639,0,0x0,8
tick,0x7ffd55ac6f44,148315645,0,0x0,8
tick,0x7ffd55ac6f44,148331204,0,0x0,8
tick,0x7ffd55ac6f44,148346902,0,0x0,8
tick,0x7ffd55ac6f44,148362996,0,0x0,8
tick,0x7ffd55ac6f44,148378975,0,0x0,8
tick,0x7ffd55ac6f44,148395042,0,0x0,8
tick,0x7ffd55ac6f44,148409974,0,0x0,8
tick,0x7ffd55ac6f44,148425992,0,0x0,8
tick,0x7ffd55ac6f44,148442134,0,0x0,8
tick,0x7ffd55ac6f44,148456920,0,0x0,8
tick,0x7ffd55ac6f44,148472779,0,0x0,8
tick,0x7ffd55ac6f44,148487132,0,0x0,8
tick,0x7ffd55ac6f44,148502909,0,0x0,8
tick,0x7ffd55ac6f44,148518945,0,0x0,8
tick,0x7ffd55ac6f44,148533907,0,0x0,8
tick,0x7ffd55ac6f44,148549142,0,0x0,8
tick,0x7ffd55ac6f44,148564940,0,0x0,8
tick,0x7ffd55ac6f44,148580939,0,0x0,8
tick,0x7ffd55ac6f44,148595933,0,0x0,8
tick,0x7ffd55ac6f44,148611916,0,0x0,8
tick,0x7ffd55ac6f44,148627989,0,0x0,8
tick,0x7ffd55ac6f44,148643923,0,0x0,8
tick,0x7ffd55ac6f44,148659991,0,0x0,8
tick,0x7ffd55ac6f44,148674935,0,0x0,8
tick,0x7ffd55ac6f44,148689978,0,0x0,8
tick,0x7ffd55ac6f44,148704995,0,0x0,8
tick,0x7ffd55ac6f44,148719937,0,0x0,8
tick,0x7ffd55ac6f44,148735029,0,0x0,8
tick,0x7ffd55ac6f44,148749964,0,0x0,8
tick,0x7ffd55ac6f44,148765920,0,0x0,8
tick,0x7ffd55ac6f44,148781919,0,0x0,8
tick,0x7ffd55ac6f44,148796991,0,0x0,8
tick,0x7ffd55ac6f44,148812954,0,0x0,8
tick,0x7ffd55ac6f44,148828016,0,0x0,8
tick,0x7ffd55ac6f44,148844048,0,0x0,8
tick,0x7ffd55ac6f44,148859910,0,0x0,8
tick,0x7ffd55ac6f44,148875960,0,0x0,8
tick,0x7ffd55ac6f44,148891020,0,0x0,8
tick,0x7ffd55ac6f44,148907018,0,0x0,8
tick,0x7ffd55ac6f44,148923270,0,0x0,8
tick,0x7ffd55ac6f44,148937942,0,0x0,8
tick,0x7ffd55ac6f44,148953990,0,0x0,8
tick,0x7ffd55ac6f44,148970007,0,0x0,8
tick,0x7ffd55ac6f44,148984979,0,0x0,8
tick,0x7ffd55ac6f44,149000929,0,0x0,8
tick,0x7ffd55ac6f44,149017049,0,0x0,8
tick,0x7ffd55ac6f44,149031865,0,0x0,8
tick,0x7ffd55ac6f44,149047087,0,0x0,8
tick,0x7ffd55ac6f44,149062171,0,0x0,8
tick,0x7ffd55ac6f44,149077324,0,0x0,8
tick,0x7ffd55ac6f44,149092179,0,0x0,8
tick,0x7ffd55ac6f44,149107938,0,0x0,8
tick,0x7ffd55ac6f44,149123908,0,0x0,8
tick,0x7ffd55ac6f44,149139383,0,0x0,8
tick,0x7ffd55ac6f44,149154508,0,0x0,8
tick,0x7ffd55ac6f44,149170371,0,0x0,8
tick,0x7ffd55ac6f44,149185475,0,0x0,8
tick,0x7ffd55ac6f44,149201264,0,0x0,8
tick,0x7ffd55ac6f44,149216752,0,0x0,8
tick,0x7ffd55ac6f44,149232269,0,0x0,8
tick,0x7ffd55ac6f44,149247564,0,0x0,8
tick,0x7ffd55ac6f44,149263621,0,0x0,8
tick,0x7ffd55ac6f44,149279169,0,0x0,8
tick,0x7ffd55ac6f44,149295379,0,0x0,8
tick,0x7ffd55ac6f44,149310199,0,0x0,8
tick,0x7ffd55ac6f44,149326205,0,0x0,8
tick,0x7ffd55ac6f44,149342203,0,0x0,8
tick,0x7ffd55ac6f44,149357048,0,0x0,8
tick,0x7ffd55ac6f44,149372036,0,0x0,8
tick,0x7ffd55ac6f44,149387130,0,0x0,8
tick,0x7ffd55ac6f44,149402790,0,0x0,8
tick,0x7ffd55ac6f44,149418777,0,0x0,8
tick,0x7ffd55ac6f44,149434708,0,0x0,8
tick,0x7ffd55ac6f44,149450291,0,0x0,8
tick,0x7ffd55ac6f44,149466241,0,0x0,8
tick,0x7ffd55ac6f44,149481261,0,0x0,8
tick,0x7ffd55ac6f44,149496232,0,0x0,8
tick,0x7ffd55ac6f44,149514014,0,0x0,8
tick,0x7ffd55ac6f44,149529536,0,0x0,8
tick,0x7ffd55ac6f44,149543242,0,0x0,8
tick,0x7ffd55ac6f44,149559263,0,0x0,8
tick,0x7ffd55ac6f44,149575244,0,0x0,8
tick,0x7ffd55ac6f44,149591267,0,0x0,8
tick,0x7ffd55ac6f44,149607365,0,0x0,8
tick,0x7ffd55ac6f44,149623321,0,0x0,8
tick,0x7ffd55ac6f44,149639413,0,0x0,8
tick,0x7ffd55ac6f44,149655332,0,0x0,8
tick,0x7ffd55ac6f44,149671342,0,0x0,8
tick,0x7ffd55ac6f44,149687294,0,0x0,8
tick,0x7ffd55ac6f44,149703350,0,0x0,8
tick,0x7ffd55ac6f44,149718324,0,0x0,8
tick,0x7ffd55ac6f44,149733308,0,0x0,8
tick,0x7ffd55ac6f44,149748351,0,0x0,8
tick,0x7ffd55ac6f44,149763325,0,0x0,8
tick,0x7ffd55ac6f44,149779488,0,0x0,8
tick,0x7ffd55ac6f44,149795324,0,0x0,8
tick,0x7ffd55ac6f44,149810362,0,0x0,8
tick,0x7ffd55ac6f44,149825289,0,0x0,8
tick,0x7ffd55ac6f44,149840275,0,0x0,8
tick,0x7ffd55ac6f44,149855315,0,0x0,8
tick,0x7ffd55ac6f44,149870256,0,0x0,8
tick,0x7ffd55ac6f44,149885281,0,0x0,8
tick,0x7ffd55ac6f44,149901305,0,0x0,8
tick,0x7ffd55ac6f44,149917320,0,0x0,8
tick,0x7ffd55ac6f44,149932333,0,0x0,8
tick,0x7ffd55ac6f44,149947313,0,0x0,8
tick,0x7ffd55ac6f44,149962586,0,0x0,8
tick,0x7ffd55ac6f44,149978322,0,0x0,8
tick,0x7ffd55ac6f44,149994266,0,0x0,8
tick,0x7ffd55ac6f44,150010433,0,0x0,8
tick,0x7ffd55ac6f44,150025633,0,0x0,8
tick,0x7ffd55ac6f44,150040365,0,0x0,8
tick,0x7ffd55ac6f44,150056334,0,0x0,8
tick,0x7ffd55ac6f44,150072399,0,0x0,8
tick,0x7ffd55ac6f44,150087299,0,0x0,8
tick,0x7ffd55ac6f44,150102310,0,0x0,8
tick,0x7ffd55ac6f44,150118530,0,0x0,8
tick,0x7ffd55ac6f44,150133361,0,0x0,8
tick,0x7ffd55ac6f44,150148328,0,0x0,8
tick,0x7ffd55ac6f44,150164307,0,0x0,8
tick,0x7ffd55ac6f44,150180266,0,0x0,8
tick,0x7ffd55ac6f44,150195478,0,0x0,8
tick,0x7ffd55ac6f44,150211311,0,0x0,8
tick,0x7ffd55ac6f44,150227145,0,0x0,8
tick,0x7ffd55ac6f44,150242824,0,0x0,8
tick,0x7ffd55ac6f44,150258982,0,0x0,8
tick,0x7ffd55ac6f44,150273857,0,0x0,8
tick,0x7ffd55ac6f44,150289908,0,0x0,8
tick,0x7ffd55ac6f44,150306001,0,0x0,8
tick,0x7ffd55ac6f44,150320888,0,0x0,8
tick,0x7ffd55ac6f44,150336966,0,0x0,8
tick,0x7ffd55ac6f44,150353073,0,0x0,8
tick,0x7ffd55ac6f44,150368336,0,0x0,8
tick,0x7ffd55ac6f44,150383481,0,0x0,8
tick,0x7ffd55ac6f44,150399150,0,0x0,8
tick,0x7ffd55ac6f44,150414558,0,0x0,8
tick,0x7ffd55ac6f44,150430425,0,0x0,8
tick,0x7ffd55ac6f44,150446316,0,0x0,8
tick,0x7ffd55ac6f44,150461640,0,0x0,8
tick,0x7ffd55ac6f44,150476928,0,0x0,8
tick,0x7ffd55ac6f44,150492484,0,0x0,8
tick,0x7ffd55ac6f44,150508193,0,0x0,8
tick,0x7ffd55ac6f44,150523174,0,0x0,8
tick,0x7ffd55ac6f44,150538329,0,0x0,8
tick,0x7ffd55ac6f44,150553078,0,0x0,8
tick,0x7ffd55ac6f44,150568022,0,0x0,8
tick,0x7ffd55ac6f44,150583648,0,0x0,8
tick,0x7ffd55ac6f44,150598965,0,0x0,8
tick,0x7ffd55ac6f44,150615036,0,0x0,8
tick,0x7ffd55ac6f44,150629978,0,0x0,8
tick,0x7ffd55ac6f44,150645036,0,0x0,8
tick,0x7ffd55ac6f44,150660864,0,0x0,8
tick,0x7ffd55ac6f44,150675995,0,0x0,8
tick,0x7ffd55ac6f44,150690873,0,0x0,8
tick,0x7ffd55ac6f44,150706127,0,0x0,8
tick,0x7ffd55ac6f44,150721843,0,0x0,8
tick,0x7ffd55ac6f44,150737693,0,0x0,8
tick,0x7ffd55ac6f44,150752964,0,0x0,8
tick,0x7ffd55ac6f44,150768152,0,0x0,8
tick,0x7ffd55ac6f44,150783027,0,0x0,8
tick,0x7ffd55ac6f44,150797915,0,0x0,8
tick,0x7ffd55ac6f44,150812968,0,0x0,8
tick,0x7ffd55ac6f44,150828347,0,0x0,8
tick,0x7ffd55ac6f44,150844513,0,0x0,8
tick,0x7ffd55ac6f44,150860464,0,0x0,8
tick,0x7ffd55ac6f44,150875912,0,0x0,8
tick,0x7ffd55ac6f44,150890731,0,0x0,8
tick,0x7ffd55ac6f44,150905950,0,0x0,8
tick,0x7ffd55ac6f44,150922101,0,0x0,8
tick,0x7ffd55ac6f44,150937443,0,0x0,8
tick,0x7ffd55ac6f44,150953537,0,0x0,8
tick,0x7ffd55ac6f44,150969602,0,0x0,8
tick,0x7ffd55ac6f44,150984542,0,0x0,8
tick,0x7ffd55ac6f44,150999550,0,0x0,8
tick,0x7ffd55ac6f44,151014770,0,0x0,8
tick,0x7ffd55ac6f44,151030470,0,0x0,8
tick,0x7ffd55ac6f44,151046034,0,0x0,8
tick,0x7ffd55ac6f44,151061893,0,0x0,8
tick,0x7ffd55ac6f44,151077389,0,0x0,8
tick,0x7ffd55ac6f44,151092921,0,0x0,8
tick,0x7ffd55ac6f44,151108139,0,0x0,8
tick,0x7ffd55ac6f44,151123308,0,0x0,8
tick,0x7ffd55ac6f44,151138468,0,0x0,8
tick,0x7ffd55ac6f44,151154108,0,0x0,8
tick,0x7ffd55ac6f44,151169534,0,0x0,8
tick,0x7ffd55ac6f44,151185576,0,0x0,8
tick,0x7ffd55ac6f44,151201964,0,0x0,8
tick,0x7ffd55ac6f44,151217704,0,0x0,8
tick,0x7ffd55ac6f44,151233544,0,0x0,8
tick,0x7ffd55ac6f44,151248551,0,0x0,8
tick,0x7ffd55ac6f44,151264553,0,0x0,8
tick,0x7ffd55ac6f44,151280490,0,0x0,8
tick,0x7ffd55ac6f44,151295573,0,0x0,8
tick,0x7ffd55ac6f44,151310338,0,0x0,8
tick,0x7ffd55ac6f44,151325661,0,0x0,8
tick,0x7ffd55ac6f44,151340425,0,0x0,8
tick,0x7ffd55ac6f44,151355738,0,0x0,8
tick,0x7ffd55ac6f44,151370774,0,0x0,8
tick,0x7ffd55ac6f44,151385699,0,0x0,8
tick,0x7ffd55ac6f44,151401201,0,0x0,8
tick,0x7ffd55ac6f44,151416301,0,0x0,8
tick,0x7ffd55ac6f44,151431462,0,0x0,8
tick,0x7ffd55ac6f44,151447232,0,0x0,8
tick,0x7ffd55ac6f44,151463025,0,0x0,8
tick,0x7ffd55ac6f44,151478369,0,0x0,8
tick,0x7ffd55ac6f44,151494057,0,0x0,8
tick,0x7ffd55ac6f44,151509162,0,0x0,8
tick,0x7ffd55ac6f44,151524479,0,0x0,8
tick,0x7ffd55ac6f44,151539605,0,0x0,8
tick,0x7ffd55ac6f44,151554765,0,0x0,8
tick,0x7ffd55ac6f44,151570098,0,0x0,8
tick,0x7ffd55ac6f44,151585839,0,0x0,8
tick,0x7ffd55ac6f44,151601176,0,0x0,8
tick,0x7ffd55ac6f44,151616991,0,0x0,8
tick,0x7ffd55ac6f44,151632001,0,0x0,8
tick,0x7ffd55ac6f44,151647992,0,0x0,8
tick,0x7ffd55ac6f44,151662598,0,0x0,8
tick,0x7ffd55ac6f44,151677643,0,0x0,8
tick,0x7ffd55ac6f44,151692590,0,0x0,8
tick,0x7ffd55ac6f44,151707952,0,0x0,8
tick,0x7ffd55ac6f44,151723961,0,0x0,8
tick,0x7ffd55ac6f44,151739830,0,0x0,8
tick,0x7ffd55ac6f44,151755074,0,0x0,8
tick,0x7ffd55ac6f44,151770991,0,0x0,8
tick,0x7ffd55ac6f44,151787027,0,0x0,8
tick,0x7ffd55ac6f44,151803003,0,0x0,8
tick,0x7ffd55ac6f44,151818858,0,0x0,8
tick,0x7ffd55ac6f44,151834974,0,0x0,8
tick,0x7ffd55ac6f44,151850828,0,0x0,8
tick,0x7ffd55ac6f44,151865969,0,0x0,8
tick,0x7ffd55ac6f44,151882009,0,0x0,8
tick,0x7ffd55ac6f44,151897190,0,0x0,8
tick,0x7ffd55ac6f44,151912214,0,0x0,8
tick,0x7ffd55ac6f44,151927720,0,0x0,8
tick,0x7ffd55ac6f44,151943342,0,0x0,8
tick,0x7ffd55ac6f44,151959200,0,0x0,8
tick,0x7ffd55ac6f44,151974591,0,0x0,8
tick,0x7ffd55ac6f44,151990872,0,0x0,8
tick,0x7ffd55ac6f44,152006553,0,0x0,8
tick,0x7ffd55ac6f44,152021971,0,0x0,8
tick,0x7ffd55ac6f44,152037539,0,0x0,8
tick,0x7ffd55ac6f44,152052493,0,0x0,8
tick,0x7ffd55ac6f44,152068056,0,0x0,8
tick,0x7ffd55ac6f44,152083458,0,0x0,8
tick,0x7ffd55ac6f44,152099336,0,0x0,8
tick,0x7ffd55ac6f44,152114781,0,0x0,8
tick,0x7ffd55ac6f44,152130711,0,0x0,8
tick,0x7ffd55ac6f44,152146389,0,0x0,8
tick,0x7ffd55ac6f44,152162237,0,0x0,8
tick,0x7ffd55ac6f44,152177636,0,0x0,8
tick,0x7ffd55ac6f44,152193879,0,0x0,8
tick,0x7ffd55ac6f44,152210040,0,0x0,8
tick,0x7ffd55ac6f44,152225494,0,0x0,8
tick,0x7ffd55ac6f44,152240548,0,0x0,8
tick,0x7ffd55ac6f44,152255351,0,0x0,8
tick,0x7ffd55ac6f44,152270424,0,0x0,8
tick,0x7ffd55ac6f44,152285906,0,0x0,8
tick,0x7ffd55ac6f44,152301231,0,0x0,8
tick,0x7ffd55ac6f44,152317191,0,0x0,8
tick,0x7ffd55ac6f44,152333325,0,0x0,8
tick,0x7ffd55ac6f44,152348900,0,0x0,8
tick,0x7ffd55ac6f44,152364890,0,0x0,8
tick,0x7ffd55ac6f44,152379942,0,0x0,8
tick,0x7ffd55ac6f44,152395790,0,0x0,8
tick,0x7ffd55ac6f44,152411624,0,0x0,8
tick,0x7ffd55ac6f44,152427629,0,0x0,8
tick,0x7ffd55ac6f44,152442648,0,0x0,8
tick,0x7ffd55ac6f44,152457446,0,0x0,8
tick,0x7ffd55ac6f44,152473457,0,0x0,8
tick,0x7ffd55ac6f44,152489479,0,0x0,8
tick,0x7ffd55ac6f44,152505495,0,0x0,8
tick,0x7ffd55ac6f44,152520728,0,0x0,8
tick,0x7ffd55ac6f44,152536732,0,0x0,8
tick,0x7ffd55ac6f44,152551508,0,0x0,8
tick,0x7ffd55ac6f44,152566465,0,0x0,8
tick,0x7ffd55ac6f44,152582503,0,0x0,8
tick,0x7ffd55ac6f44,152598202,0,0x0,8
tick,0x7ffd55ac6f44,152613278,0,0x0,8
tick,0x7ffd55ac6f44,152629284,0,0x0,8
tick,0x7ffd55ac6f44,152644993,0,0x0,8
tick,0x7ffd55ac6f44,152661011,0,0x0,8
tick,0x7ffd55ac6f44,152677041,0,0x0,8
tick,0x7ffd55ac6f44,152692559,0,0x0,8
tick,0x7ffd55ac6f44,152707547,0,0x0,8
tick,0x7ffd55ac6f44,152722985,0,0x0,8
tick,0x7ffd55ac6f44,152738960,0,0x0,8
tick,0x7ffd55ac6f44,152753995,0,0x0,8
tick,0x7ffd55ac6f44,152769123,0,0x0,8
tick,0x7ffd55ac6f44,152784953,0,0x0,8
tick,0x7ffd55ac6f44,152801035,0,0x0,8
tick,0x7ffd55ac6f44,152816951,0,0x0,8
tick,0x7ffd55ac6f44,152832911,0,0x0,8
tick,0x7ffd55ac6f44,152848599,0,0x0,8
tick,0x7ffd55ac6f44,152864176,0,0x0,8
tick,0x7ffd55ac6f44,152879717,0,0x0,8
tick,0x7ffd55ac6f44,152895869,0,0x0,8
tick,0x7ffd55ac6f44,152910932,0,0x0,8
tick,0x7ffd55ac6f44,152925313,0,0x0,8
tick,0x7ffd55ac6f44,152940540,0,0x0,8
tick,0x7ffd55ac6f44,152956452,0,0x0,8
tick,0x7ffd55ac6f44,152972345,0,0x0,8
tick,0x7ffd55ac6f44,152988233,0,0x0,8
tick,0x7ffd55ac6f44,153003573,0,0x0,8
tick,0x7ffd55ac6f44,153019689,0,0x0,8
tick,0x7ffd55ac6f44,153034481,0,0x0,8
tick,0x7ffd55ac6f44,153049515,0,0x0,8
tick,0x7ffd55ac6f44,153064792,0,0x0,8
tick,0x7ffd55ac6f44,153080910,0,0x0,8
tick,0x7ffd55ac6f44,153096019,0,0x0,8
tick,0x7ffd55ac6f44,153112026,0,0x0,8
tick,0x7ffd55ac6f44,153127292,0,0x0,8
tick,0x7ffd55ac6f44,153143656,0,0x0,8
tick,0x7ffd55ac6f44,153158552,0,0x0,8
tick,0x7ffd55ac6f44,153173538,0,0x0,8
tick,0x7ffd55ac6f44,153189350,0,0x0,8
tick,0x7ffd55ac6f44,153205265,0,0x0,8
tick,0x7ffd55ac6f44,153220975,0,0x0,8
tick,0x7ffd55ac6f44,153236315,0,0x0,8
tick,0x7ffd55ac6f44,153251801,0,0x0,8
tick,0x7ffd55ac6f44,153267530,0,0x0,8
tick,0x7ffd55ac6f44,153284084,0,0x0,8
tick,0x7ffd55ac6f44,153299420,0,0x0,8
tick,0x7ffd55ac6f44,153314912,0,0x0,8
tick,0x7ffd55ac6f44,153330684,0,0x0,8
tick,0x7ffd55ac6f44,153345963,0,0x0,8
tick,0x7ffd55ac6f44,153361605,0,0x0,8
tick,0x7ffd55ac6f44,153377638,0,0x0,8
tick,0x7ffd55ac6f44,153393607,0,0x0,8
tick,0x7ffd55ac6f44,153408889,0,0x0,8
tick,0x7ffd55ac6f44,153424670,0,0x0,8
tick,0x7ffd55ac6f44,153440563,0,0x0,8
tick,0x7ffd55ac6f44,153455797,0,0x0,8
tick,0x7ffd55ac6f44,153471514,0,0x0,8
tick,0x7ffd55ac6f44,153487331,0,0x0,8
tick,0x7ffd55ac6f44,153502560,0,0x0,8
tick,0x7ffd55ac6f44,153518610,0,0x0,8
tick,0x7ffd55ac6f44,153534690,0,0x0,8
tick,0x7ffd55ac6f44,153550556,0,0x0,8
tick,0x7ffd55ac6f44,153566685,0,0x0,8
tick,0x7ffd55ac6f44,153581737,0,0x0,8
tick,0x7ffd55ac6f44,153597564,0,0x0,8
tick,0x7ffd55ac6f44,153613495,0,0x0,8
tick,0x7ffd55ac6f44,153628648,0,0x0,8
tick,0x7ffd55ac6f44,153644614,0,0x0,8
tick,0x7ffd55ac6f44,153660217,0,0x0,8
tick,0x7ffd55ac6f44,153675443,0,0x0,8
tick,0x7ffd55ac6f44,153690198,0,0x0,8
tick,0x7ffd55ac6f44,153705424,0,0x0,8
tick,0x7ffd55ac6f44,153720655,0,0x0,8
tick,0x7ffd55ac6f44,153735874,0,0x0,8
tick,0x7ffd55ac6f44,153750732,0,0x0,8
tick,0x7ffd55ac6f44,153766641,0,0x0,8
tick,0x7ffd55ac6f44,153782401,0,0x0,8
tick,0x7ffd55ac6f44,153798313,0,0x0,8
tick,0x7ffd55ac6f44,153813366,0,0x0,8
tick,0x7ffd55ac6f44,153829703,0,0x0,8
tick,0x7ffd55ac6f44,153845502,0,0x0,8
tick,0x7ffd55ac6f44,153861041,0,0x0,8
tick,0x7ffd55ac6f44,153877176,0,0x0,8
tick,0x7ffd55ac6f44,153892302,0,0x0,8
tick,0x7ffd55ac6f44,153907351,0,0x0,8
tick,0x7ffd55ac6f44,153923360,0,0x0,8
tick,0x7ffd55ac6f44,153939103,0,0x0,8
tick,0x7ffd55ac6f44,153954502,0,0x0,8
tick,0x7ffd55ac6f44,153970318,0,0x0,8
tick,0x7ffd55ac6f44,153986340,0,0x0,8
tick,0x7ffd55ac6f44,154002250,0,0x0,8
tick,0x7ffd55ac6f44,154018156,0,0x0,8
tick,0x7ffd55ac6f44,154033555,0,0x0,8
tick,0x7ffd55ac6f44,154048809,0,0x0,8
tick,0x7ffd55ac6f44,154064747,0,0x0,8
tick,0x7ffd55ac6f44,154080929,0,0x0,8
tick,0x7ffd55ac6f44,154095693,0,0x0,8
tick,0x7ffd55ac6f44,154111039,0,0x0,8
tick,0x7ffd55ac6f44,154126343,0,0x0,8
tick,0x7ffd55ac6f44,154142250,0,0x0,8
tick,0x7ffd55ac6f44,154157193,0,0x0,8
tick,0x7ffd55ac6f44,154172135,0,0x0,8
tick,0x7ffd55ac6f44,154187823,0,0x0,8
tick,0x7ffd55ac6f44,154203871,0,0x0,8
tick,0x7ffd55ac6f44,154219357,0,0x0,8
tick,0x7ffd55ac6f44,154235050,0,0x0,8
tick,0x7ffd55ac6f44,154250555,0,0x0,8
tick,0x7ffd55ac6f44,154265985,0,0x0,8
tick,0x7ffd55ac6f44,154281303,0,0x0,8
tick,0x7ffd55ac6f44,154296208,0,0x0,8
tick,0x7ffd55ac6f44,154311507,0,0x0,8
tick,0x7ffd55ac6f44,154326411,0,0x0,8
tick,0x7ffd55ac6f44,154341661,0,0x0,8
tick,0x7ffd55ac6f44,154357523,0,0x0,8
tick,0x7ffd55ac6f44,154372583,0,0x0,8
tick,0x7ffd55ac6f44,154388467,0,0x0,8
tick,0x7ffd55ac6f44,154403256,0,0x0,8
tick,0x7ffd55ac6f44,154418240,0,0x0,8
tick,0x7ffd55ac6f44,154433481,0,0x0,8
tick,0x7ffd55ac6f44,154449410,0,0x0,8
tick,0x7ffd55ac6f44,154464417,0,0x0,8
tick,0x7ffd55ac6f44,154480160,0,0x0,8
tick,0x7ffd55ac6f44,154496037,0,0x0,8
tick,0x7ffd55ac6f44,154511970,0,0x0,8
tick,0x7ffd55ac6f44,154528138,0,0x0,8
tick,0x7ffd55ac6f44,154543990,0,0x0,8
tick,0x7ffd55ac6f44,154559018,0,0x0,8
tick,0x7ffd55ac6f44,154573992,0,0x0,8
tick,0x7ffd55ac6f44,154589752,0,0x0,8
tick,0x7ffd55ac6f44,154605012,0,0x0,8
tick,0x7ffd55ac6f44,154620962,0,0x0,8
tick,0x7ffd55ac6f44,154636767,0,0x0,8
tick,0x7ffd55ac6f44,154652036,0,0x0,8
tick,0x7ffd55ac6f44,154668015,0,0x0,8
tick,0x7ffd55ac6f44,154683970,0,0x0,8
tick,0x7ffd55ac6f44,154699022,0,0x0,8
tick,0x7ffd55ac6f44,154715069,0,0x0,8
tick,0x7ffd55ac6f44,154730930,0,0x0,8
tick,0x7ffd55ac6f44,154746061,0,0x0,8
tick,0x7ffd55ac6f44,154760947,0,0x0,8
tick,0x7ffd55ac6f44,154776273,0,0x0,8
tick,0x7ffd55ac6f44,154791876,0,0x0,8
tick,0x7ffd55ac6f44,154807208,0,0x0,8
tick,0x7ffd55ac6f44,154822501,0,0x0,8
tick,0x7ffd55ac6f44,154838367,0,0x0,8
tick,0x7ffd55ac6f44,154854262,0,0x0,8
tick,0x7ffd55ac6f44,154870282,0,0x0,8
tick,0x7ffd55ac6f44,154886373,0,0x0,8
tick,0x7ffd55ac6f44,154902230,0,0x0,8
tick,0x7ffd55ac6f44,154917590,0,0x0,8
tick,0x7ffd55ac6f44,154933276,0,0x0,8
tick,0x7ffd55ac6f44,154949017,0,0x0,8
tick,0x7ffd55ac6f44,154964345,0,0x0,8
tick,0x7ffd55ac6f44,154979329,0,0x0,8
tick,0x7ffd55ac6f44,154995309,0,0x0,8
tick,0x7ffd55ac6f44,155010597,0,0x0,8
tick,0x7ffd55ac6f44,155025697,0,0x0,8
tick,0x7ffd55ac6f44,155041499,0,0x0,8
tick,0x7ffd55ac6f44,155057429,0,0x0,8
tick,0x7ffd55ac6f44,155072279,0,0x0,8
tick,0x7ffd55ac6f44,155087328,0,0x0,8
tick,0x7ffd55ac6f44,155103081,0,0x0,8
tick,0x7ffd55ac6f44,155119114,0,0x0,8
tick,0x7ffd55ac6f44,155134271,0,0x0,8
tick,0x7ffd55ac6f44,155149557,0,0x0,8
tick,0x7ffd55ac6f44,155165329,0,0x0,8
tick,0x7ffd55ac6f44,155180574,0,0x0,8
tick,0x7ffd55ac6f44,155196267,0,0x0,8
tick,0x7ffd55ac6f44,155212342,0,0x0,8
tick,0x7ffd55ac6f44,155228355,0,0x0,8
tick,0x7ffd55ac6f44,155244258,0,0x0,8
tick,0x7ffd55ac6f44,155259622,0,0x0,8
tick,0x7ffd55ac6f44,155275516,0,0x0,8
tick,0x7ffd55ac6f44,155290812,0,0x0,8
tick,0x7ffd55ac6f44,155306195,0,0x0,8
tick,0x7ffd55ac6f44,155322174,0,0x0,8
tick,0x7ffd55ac6f44,155337331,0,0x0,8
tick,0x7ffd55ac6f44,155352785,0,0x0,8
tick,0x7ffd55ac6f44,155367911,0,0x0,8
tick,0x7ffd55ac6f44,155383370,0,0x0,8
tick,0x7ffd55ac6f44,155398652,0,0x0,8
tick,0x7ffd55ac6f44,155414116,0,0x0,8
tick,0x7ffd55ac6f44,155429245,0,0x0,8
tick,0x7ffd55ac6f44,155444667,0,0x0,8
tick,0x7ffd55ac6f44,155460144,0,0x0,8
tick,0x7ffd55ac6f44,155475458,0,0x0,8
tick,0x7ffd55ac6f44,155490658,0,0x0,8
tick,0x7ffd55ac6f44,155505892,0,0x0,8
tick,0x7ffd55ac6f44,155521658,0,0x0,8
tick,0x7ffd55ac6f44,155537665,0,0x0,8
tick,0x7ffd55ac6f44,155553719,0,0x0,8
tick,0x7ffd55ac6f44,155569739,0,0x0,8
tick,0x7ffd55ac6f44,155585040,0,0x0,8
tick,0x7ffd55ac6f44,155600445,0,0x0,8
tick,0x7ffd55ac6f44,155615699,0,0x0,8
tick,0x7ffd55ac6f44,155631494,0,0x0,8
tick,0x7ffd55ac6f44,155646928,0,0x0,8
tick,0x7ffd55ac6f44,155662096,0,0x0,8
tick,0x7ffd55ac6f44,155678135,0,0x0,8
tick,0x7ffd55ac6f44,155693564,0,0x0,8
tick,0x7ffd55ac6f44,155709550,0,0x0,8
tick,0x7ffd55ac6f44,155725286,0,0x0,8
tick,0x7ffd55ac6f44,155740951,0,0x0,8
tick,0x7ffd55ac6f44,155756234,0,0x0,8
tick,0x7ffd55ac6f44,155772038,0,0x0,8
tick,0x7ffd55ac6f44,155787729,0,0x0,8
tick,0x7ffd55ac6f44,155803738,0,0x0,8
tick,0x7ffd55ac6f44,155819053,0,0x0,8
tick,0x7ffd55ac6f44,155835147,0,0x0,8
tick,0x7ffd55ac6f44,155851192,0,0x0,8
tick,0x7ffd55ac6f44,155867540,0,0x0,8
tick,0x7ffd55ac6f44,155883011,0,0x0,8
tick,0x7ffd55ac6f44,155899007,0,0x0,8
tick,0x7ffd55ac6f44,155914860,0,0x0,8
tick,0x7ffd55ac6f44,155929785,0,0x0,8
tick,0x7ffd55ac6f44,155945023,0,0x0,8
tick,0x7ffd55ac6f44,155960976,0,0x0,8
tick,0x7ffd55ac6f44,155976594,0,0x0,8
tick,0x7ffd55ac6f44,155991799,0,0x0,8
tick,0x7ffd55ac6f44,156007701,0,0x0,8
tick,0x7ffd55ac6f44,156023698,0,0x0,8
tick,0x7ffd55ac6f44,156039734,0,0x0,8
tick,0x7ffd55ac6f44,156055051,0,0x0,8
tick,0x7ffd55ac6f44,156071057,0,0x0,8
tick,0x7ffd55ac6f44,156086184,0,0x0,8
tick,0x7ffd55ac6f44,156102388,0,0x0,8
tick,0x7ffd55ac6f44,156118392,0,0x0,8
tick,0x7ffd55ac6f44,156134382,0,0x0,8
tick,0x7ffd55ac6f44,156149894,0,0x0,8
tick,0x7ffd55ac6f44,156165433,0,0x0,8
tick,0x7ffd55ac6f44,156181366,0,0x0,8
tick,0x7ffd55ac6f44,156196888,0,0x0,8
tick,0x7ffd55ac6f44,156212507,0,0x0,8
tick,0x7ffd55ac6f44,156228609,0,0x0,8
tick,0x7ffd55ac6f44,156243948,0,0x0,8
tick,0x7ffd55ac6f44,156259157,0,0x0,8
tick,0x7ffd55ac6f44,156275149,0,0x0,8
tick,0x7ffd55ac6f44,156291232,0,0x0,8
tick,0x7ffd55ac6f44,156306453,0,0x0,8
tick,0x7ffd55ac6f44,156322659,0,0x0,8
tick,0x7ffd55ac6f44,156338793,0,0x0,8
tick,0x7ffd55ac6f44,156354686,0,0x0,8
tick,0x7ffd55ac6f44,156370930,0,0x0,8
tick,0x7ffd55ac6f44,156386402,0,0x0,8
tick,0x7ffd55ac6f44,156402357,0,0x0,8
tick,0x7ffd55ac6f44,156418249,0,0x0,8
tick,0x7ffd55ac6f44,156433671,0,0x0,8
tick,0x7ffd55ac6f44,156449738,0,0x0,8
tick,0x7ffd55ac6f44,156464739,0,0x0,8
tick,0x7ffd55ac6f44,156480964,0,0x0,8
tick,0x7ffd55ac6f44,156495283,0,0x0,8
tick,0x7ffd55ac6f44,156510450,0,0x0,8
tick,0x7ffd55ac6f44,156526263,0,0x0,8
tick,0x7ffd55ac6f44,156542328,0,0x0,8
tick,0x7ffd55ac6f44,156557001,0,0x0,8
tick,0x7ffd55ac6f44,156572282,0,0x0,8
tick,0x7ffd55ac6f44,156587366,0,0x0,8
tick,0x7ffd55ac6f44,156602236,0,0x0,8
tick,0x7ffd55ac6f44,156617723,0,0x0,8
tick,0x7ffd55ac6f44,156633844,0,0x0,8
tick,0x7ffd55ac6f44,156649520,0,0x0,8
tick,0x7ffd55ac6f44,156665471,0,0x0,8
tick,0x7ffd55ac6f44,156681596,0,0x0,8
tick,0x7ffd55ac6f44,156696408,0,0x0,8
tick,0x7ffd55ac6f44,156711335,0,0x0,8
tick,0x7ffd55ac6f44,156726338,0,0x0,8
tick,0x7ffd55ac6f44,156741719,0,0x0,8
tick,0x7ffd55ac6f44,156756705,0,0x0,8
tick,0x7ffd55ac6f44,156771809,0,0x0,8
tick,0x7ffd55ac6f44,156787274,0,0x0,8
tick,0x7ffd55ac6f44,156802420,0,0x0,8
tick,0x7ffd55ac6f44,156817462,0,0x0,8
tick,0x7ffd55ac6f44,156832449,0,0x0,8
tick,0x7ffd55ac6f44,156847839,0,0x0,8
tick,0x7ffd55ac6f44,156863389,0,0x0,8
tick,0x7ffd55ac6f44,156878806,0,0x0,8
tick,0x7ffd55ac6f44,156894161,0,0x0,8
tick,0x7ffd55ac6f44,156909419,0,0x0,8
tick,0x7ffd55ac6f44,156924433,0,0x0,8
tick,0x7ffd55ac6f44,156940434,0,0x0,8
tick,0x7ffd55ac6f44,156955652,0,0x0,8
tick,0x7ffd55ac6f44,156970687,0,0x0,8
tick,0x7ffd55ac6f44,156985920,0,0x0,8
tick,0x7ffd55ac6f44,157001666,0,0x0,8
tick,0x7ffd55ac6f44,157017379,0,0x0,8
tick,0x7ffd55ac6f44,157033253,0,0x0,8
tick,0x7ffd55ac6f44,157048503,0,0x0,8
tick,0x7ffd55ac6f44,157064183,0,0x0,8
tick,0x7ffd55ac6f44,157079775,0,0x0,8
tick,0x7ffd55ac6f44,157095042,0,0x0,8
tick,0x7ffd55ac6f44,157110694,0,0x0,8
tick,0x7ffd55ac6f44,157126136,0,0x0,8
tick,0x7ffd55ac6f44,157142241,0,0x0,8
tick,0x7ffd55ac6f44,157157445,0,0x0,8
tick,0x7ffd55ac6f44,157172956,0,0x0,8
tick,0x7ffd55ac6f44,157188671,0,0x0,8
tick,0x7ffd55ac6f44,157203672,0,0x0,8
tick,0x7ffd55ac6f44,157219557,0,0x0,8
tick,0x7ffd55ac6f44,157234252,0,0x0,8
tick,0x7ffd55ac6f44,157250215,0,0x0,8
tick,0x7ffd55ac6f44,157265785,0,0x0,8
tick,0x7ffd55ac6f44,157280995,0,0x0,8
tick,0x7ffd55ac6f44,157296104,0,0x0,8
tick,0x7ffd55ac6f44,157312278,0,0x0,8
tick,0x7ffd55ac6f44,157327318,0,0x0,8
tick,0x7ffd55ac6f44,157343493,0,0x0,8
tick,0x7ffd55ac6f44,157359570,0,0x0,8
tick,0x7ffd55ac6f44,157375008,0,0x0,8
tick,0x7ffd55ac6f44,157389801,0,0x0,8
tick,0x7ffd55ac6f44,157404751,0,0x0,8
tick,0x7ffd55ac6f44,157420408,0,0x0,8
tick,0x7ffd55ac6f44,157436366,0,0x0,8
tick,0x7ffd55ac6f44,157451569,0,0x0,8
tick,0x7ffd55ac6f44,157467619,0,0x0,8
tick,0x7ffd55ac6f44,157482516,0,0x0,8
tick,0x7ffd55ac6f44,157497429,0,0x0,8
tick,0x7ffd55ac6f44,157513629,0,0x0,8
tick,0x7ffd55ac6f44,157528837,0,0x0,8
tick,0x7ffd55ac6f44,157544305,0,0x0,8
tick,0x7ffd55ac6f44,157559847,0,0x0,8
tick,0x7ffd55ac6f44,157575146,0,0x0,8
tick,0x7ffd55ac6f44,157591215,0,0x0,8
tick,0x7ffd55ac6f44,157607812,0,0x0,8
tick,0x7ffd55ac6f44,157623450,0,0x0,8
tick,0x7ffd55ac6f44,157638770,0,0x0,8
tick,0x7ffd55ac6f44,157654168,0,0x0,8
tick,0x7ffd55ac6f44,157669356,0,0x0,8
tick,0x7ffd55ac6f44,157685196,0,0x0,8
tick,0x7ffd55ac6f44,157700603,0,0x0,8
tick,0x7ffd55ac6f44,157715546,0,0x0,8
tick,0x7ffd55ac6f44,157730417,0,0x0,8
tick,0x7ffd55ac6f44,157746092,0,0x0,8
tick,0x7ffd55ac6f44,157761452,0,0x0,8
tick,0x7ffd55ac6f44,157775794,0,0x0,8
tick,0x7ffd55ac6f44,157791005,0,0x0,8
tick,0x7ffd55ac6f44,157806782,0,0x0,8
tick,0x7ffd55ac6f44,157822160,0,0x0,8
tick,0x7ffd55ac6f44,157838120,0,0x0,8
tick,0x7ffd55ac6f44,157853389,0,0x0,8
tick,0x7ffd55ac6f44,157868658,0,0x0,8
tick,0x7ffd55ac6f44,157884684,0,0x0,8
tick,0x7ffd55ac6f44,157900999,0,0x0,8
tick,0x7ffd55ac6f44,157915401,0,0x0,8
tick,0x7ffd55ac6f44,157930587,0,0x0,8
tick,0x7ffd55ac6f44,157946486,0,0x0,8
tick,0x7ffd55ac6f44,157961929,0,0x0,8
tick,0x7ffd55ac6f44,157977045,0,0x0,8
tick,0x7ffd55ac6f44,157992359,0,0x0,8
tick,0x7ffd55ac6f44,158007494,0,0x0,8
tick,0x7ffd55ac6f44,158023273,0,0x0,8
tick,0x7ffd55ac6f44,158038630,0,0x0,8
tick,0x7ffd55ac6f44,158053969,0,0x0,8
tick,0x7ffd55ac6f44,158069726,0,0x0,8
tick,0x7ffd55ac6f44,158084669,0,0x0,8
tick,0x7ffd55ac6f44,158099373,0,0x0,8
tick,0x7ffd55ac6f44,158115418,0,0x0,8
tick,0x7ffd55ac6f44,158131088,0,0x0,8
tick,0x7ffd55ac6f44,158146030,0,0x0,8
tick,0x7ffd55ac6f44,158161299,0,0x0,8
tick,0x7ffd55ac6f44,158176312,0,0x0,8
tick,0x7ffd55ac6f44,158191354,0,0x0,8
tick,0x7ffd55ac6f44,158206280,0,0x0,8
tick,0x7ffd55ac6f44,158221442,0,0x0,8
tick,0x7ffd55ac6f44,158236514,0,0x0,8
tick,0x7ffd55ac6f44,158252206,0,0x0,8
tick,0x7ffd55ac6f44,158267861,0,0x0,8
tick,0x7ffd55ac6f44,158283739,0,0x0,8
tick,0x7ffd55ac6f44,158299121,0,0x0,8
tick,0x7ffd55ac6f44,158314516,0,0x0,8
tick,0x7ffd55ac6f44,158329976,0,0x0,8
tick,0x7ffd55ac6f44,158345182,0,0x0,8
tick,0x7ffd55ac6f44,158360241,0,0x0,8
tick,0x7ffd55ac6f44,158376272,0,0x0,8
tick,0x7ffd55ac6f44,158392281,0,0x0,8
tick,0x7ffd55ac6f44,158407210,0,0x0,8
tick,0x7ffd55ac6f44,158422215,0,0x0,8
tick,0x7ffd55ac6f44,158438517,0,0x0,8
tick,0x7ffd55ac6f44,158453247,0,0x0,8
tick,0x7ffd55ac6f44,158468308,0,0x0,8
tick,0x7ffd55ac6f44,158483221,0,0x0,8
tick,0x7ffd55ac6f44,158499234,0,0x0,8
tick,0x7ffd55ac6f44,158515244,0,0x0,8
tick,0x7ffd55ac6f44,158530385,0,0x0,8
tick,0x7ffd55ac6f44,158545865,0,0x0,8
tick,0x7ffd55ac6f44,158561339,0,0x0,8
tick,0x7ffd55ac6f44,158577374,0,0x0,8
tick,0x7ffd55ac6f44,158593355,0,0x0,8
tick,0x7ffd55ac6f44,158609366,0,0x0,8
tick,0x7ffd55ac6f44,158624851,0,0x0,8
tick,0x7ffd55ac6f44,158640407,0,0x0,8
tick,0x7ffd55ac6f44,158655246,0,0x0,8
tick,0x7ffd55ac6f44,158670417,0,0x0,8
tick,0x7ffd55ac6f44,158685273,0,0x0,8
tick,0x7ffd55ac6f44,158700891,0,0x0,8
tick,0x7ffd55ac6f44,158716207,0,0x0,8
tick,0x7ffd55ac6f44,158731445,0,0x0,8
tick,0x7ffd55ac6f44,158747567,0,0x0,8
tick,0x7ffd55ac6f44,158763310,0,0x0,8
tick,0x7ffd55ac6f44,158779139,0,0x0,8
tick,0x7ffd55ac6f44,158795104,0,0x0,8
tick,0x7ffd55ac6f44,158811094,0,0x0,8
tick,0x7ffd55ac6f44,158825990,0,0x0,8
tick,0x7ffd55ac6f44,158841024,0,0x0,8
tick,0x7ffd55ac6f44,158857029,0,0x0,8
tick,0x7ffd55ac6f44,158872882,0,0x0,8
tick,0x7ffd55ac6f44,158888948,0,0x0,8
tick,0x7ffd55ac6f44,158903675,0,0x0,8
tick,0x7ffd55ac6f44,158918917,0,0x0,8
tick,0x7ffd55ac6f44,158933940,0,0x0,8
tick,0x7ffd55ac6f44,158949377,0,0x0,8
tick,0x7ffd55ac6f44,158965439,0,0x0,8
tick,0x7ffd55ac6f44,158980993,0,0x0,8
tick,0x7ffd55ac6f44,158995968,0,0x0,8
tick,0x7ffd55ac6f44,159010789,0,0x0,8
tick,0x7ffd55ac6f44,159025986,0,0x0,8
tick,0x7ffd55ac6f44,159040977,0,0x0,8
tick,0x7ffd55ac6f44,159055987,0,0x0,8
tick,0x7ffd55ac6f44,159071008,0,0x0,8
tick,0x7ffd55ac6f44,159085962,0,0x0,8
tick,0x7ffd55ac6f44,159100964,0,0x0,8
tick,0x7ffd55ac6f44,159116787,0,0x0,8
tick,0x7ffd55ac6f44,159132828,0,0x0,8
tick,0x7ffd55ac6f44,159148839,0,0x0,8
tick,0x7ffd55ac6f44,159163833,0,0x0,8
tick,0x7ffd55ac6f44,159179040,0,0x0,8
tick,0x7ffd55ac6f44,159194994,0,0x0,8
tick,0x7ffd55ac6f44,159211069,0,0x0,8
tick,0x7ffd55ac6f44,159227069,0,0x0,8
tick,0x7ffd55ac6f44,159242378,0,0x0,8
tick,0x7ffd55ac6f44,159258016,0,0x0,8
tick,0x7ffd55ac6f44,159273965,0,0x0,8
tick,0x7ffd55ac6f44,159289971,0,0x0,8
tick,0x7ffd55ac6f44,159305954,0,0x0,8
tick,0x7ffd55ac6f44,159321983,0,0x0,8
tick,0x7ffd55ac6f44,159338046,0,0x0,8
tick,0x7ffd55ac6f44,159354286,0,0x0,8
tick,0x7ffd55ac6f44,159370019,0,0x0,8
tick,0x7ffd55ac6f44,159385392,0,0x0,8
tick,0x7ffd55ac6f44,159400220,0,0x0,8
tick,0x7ffd55ac6f44,159415198,0,0x0,8
tick,0x7ffd55ac6f44,159430696,0,0x0,8
tick,0x7ffd55ac6f44,159446584,0,0x0,8
tick,0x7ffd55ac6f44,159461876,0,0x0,8
tick,0x7ffd55ac6f44,159477407,0,0x0,8
tick,0x7ffd55ac6f44,159492288,0,0x0,8
tick,0x7ffd55ac6f44,159507438,0,0x0,8
tick,0x7ffd55ac6f44,159523496,0,0x0,8
tick,0x7ffd55ac6f44,159539357,0,0x0,8
tick,0x7ffd55ac6f44,159554812,0,0x0,8
tick,0x7ffd55ac6f44,159570785,0,0x0,8
tick,0x7ffd55ac6f44,159586469,0,0x0,8
tick,0x7ffd55ac6f44,159602274,0,0x0,8
tick,0x7ffd55ac6f44,159617568,0,0x0,8
tick,0x7ffd55ac6f44,159632641,0,0x0,8
tick,0x7ffd55ac6f44,159648198,0,0x0,8
tick,0x7ffd55ac6f44,159663653,0,0x0,8
tick,0x7ffd55ac6f44,159678865,0,0x0,8
tick,0x7ffd55ac6f44,159694953,0,0x0,8
tick,0x7ffd55ac6f44,159710521,0,0x0,8
tick,0x7ffd55ac6f44,159726064,0,0x0,8
tick,0x7ffd55ac6f44,159742076,0,0x0,8
tick,0x7ffd55ac6f44,159757883,0,0x0,8
tick,0x7ffd55ac6f44,159773219,0,0x0,8
tick,0x7ffd55ac6f44,159788593,0,0x0,8
tick,0x7ffd55ac6f44,159804385,0,0x0,8
tick,0x7ffd55ac6f44,159820603,0,0x0,8
tick,0x7ffd55ac6f44,159836548,0,0x0,8
tick,0x7ffd55ac6f44,159852345,0,0x0,8
tick,0x7ffd55ac6f44,159868339,0,0x0,8
tick,0x7ffd55ac6f44,159883236,0,0x0,8
tick,0x7ffd55ac6f44,159898609,0,0x0,8
tick,0x7ffd55ac6f44,159914219,0,0x0,8
tick,0x7ffd55ac6f44,159930202,0,0x0,8
tick,0x7ffd55ac6f44,159945521,0,0x0,8
tick,0x7ffd55ac6f44,159960908,0,0x0,8
tick,0x7ffd55ac6f44,159977100,0,0x0,8
tick,0x7ffd55ac6f44,159992249,0,0x0,8
tick,0x7ffd55ac6f44,160008504,0,0x0,8
tick,0x7ffd55ac6f44,160023845,0,0x0,8
tick,0x7ffd55ac6f44,160039180,0,0x0,8
tick,0x7ffd55ac6f44,160054022,0,0x0,8
tick,0x7ffd55ac6f44,160070017,0,0x0,8
tick,0x7ffd55ac6f44,160084983,0,0x0,8
tick,0x7ffd55ac6f44,160101022,0,0x0,8
tick,0x7ffd55ac6f44,160116011,0,0x0,8
tick,0x7ffd55ac6f44,160132086,0,0x0,8
tick,0x7ffd55ac6f44,160148082,0,0x0,8
tick,0x7ffd55ac6f44,160163104,0,0x0,8
tick,0x7ffd55ac6f44,160178025,0,0x0,8
tick,0x7ffd55ac6f44,160194054,0,0x0,8
tick,0x7ffd55ac6f44,160210000,0,0x0,8
tick,0x7ffd55ac6f44,160225067,0,0x0,8
tick,0x7ffd55ac6f44,160241160,0,0x0,8
tick,0x7ffd55ac6f44,160256058,0,0x0,8
tick,0x7ffd55ac6f44,160271026,0,0x0,8
tick,0x7ffd55ac6f44,160287014,0,0x0,8
tick,0x7ffd55ac6f44,160303076,0,0x0,8
tick,0x7ffd55ac6f44,160319056,0,0x0,8
tick,0x7ffd55ac6f44,160334480,0,0x0,8
tick,0x7ffd55ac6f44,160349038,0,0x0,8
tick,0x7ffd55ac6f44,160364983,0,0x0,8
tick,0x7ffd55ac6f44,160381036,0,0x0,8
tick,0x7ffd55ac6f44,160397081,0,0x0,8
tick,0x7ffd55ac6f44,160412034,0,0x0,8
tick,0x7ffd55ac6f44,160427025,0,0x0,8
tick,0x7ffd55ac6f44,160442643,0,0x0,8
tick,0x7ffd55ac6f44,160458757,0,0x0,8
tick,0x7ffd55ac6f44,160473685,0,0x0,8
tick,0x7ffd55ac6f44,160488684,0,0x0,8
tick,0x7ffd55ac6f44,160504709,0,0x0,8
tick,0x7ffd55ac6f44,160519784,0,0x0,8
tick,0x7ffd55ac6f44,160534987,0,0x0,8
tick,0x7ffd55ac6f44,160549697,0,0x0,8
tick,0x7ffd55ac6f44,160564686,0,0x0,8
tick,0x7ffd55ac6f44,160579766,0,0x0,8
tick,0x7ffd55ac6f44,160595119,0,0x0,8
tick,0x7ffd55ac6f44,160609819,0,0x0,8
tick,0x7ffd55ac6f44,160625279,0,0x0,8
tick,0x7ffd55ac6f44,160640589,0,0x0,8
tick,0x7ffd55ac6f44,160656330,0,0x0,8
tick,0x7ffd55ac6f44,160671612,0,0x0,8
tick,0x7ffd55ac6f44,160687565,0,0x0,8
tick,0x7ffd55ac6f44,160702941,0,0x0,8
tick,0x7ffd55ac6f44,160718503,0,0x0,8
tick,0x7ffd55ac6f44,160733627,0,0x0,8
tick,0x7ffd55ac6f44,160749453,0,0x0,8
tick,0x7ffd55ac6f44,160764379,0,0x0,8
tick,0x7ffd55ac6f44,160779911,0,0x0,8
tick,0x7ffd55ac6f44,160794762,0,0x0,8
tick,0x7ffd55ac6f44,160809495,0,0x0,8
tick,0x7ffd55ac6f44,160825148,0,0x0,8
tick,0x7ffd55ac6f44,160841161,0,0x0,8
tick,0x7ffd55ac6f44,160856192,0,0x0,8
tick,0x7ffd55ac6f44,160871088,0,0x0,8
tick,0x7ffd55ac6f44,160886336,0,0x0,8
tick,0x7ffd55ac6f44,160901534,0,0x0,8
tick,0x7ffd55ac6f44,160917707,0,0x0,8
tick,0x7ffd55ac6f44,160933399,0,0x0,8
tick,0x7ffd55ac6f44,160949419,0,0x0,8
tick,0x7ffd55ac6f44,160965138,0,0x0,8
tick,0x7ffd55ac6f44,160980820,0,0x0,8
tick,0x7ffd55ac6f44,160996922,0,0x0,8
tick,0x7ffd55ac6f44,161012088,0,0x0,8
tick,0x7ffd55ac6f44,161027910,0,0x0,8
tick,0x7ffd55ac6f44,161043557,0,0x0,8
tick,0x7ffd55ac6f44,161058762,0,0x0,8
tick,0x7ffd55ac6f44,161073582,0,0x0,8
tick,0x7ffd55ac6f44,161088628,0,0x0,8
tick,0x7ffd55ac6f44,161104599,0,0x0,8
tick,0x7ffd55ac6f44,161119360,0,0x0,8
tick,0x7ffd55ac6f44,161134815,0,0x0,8
tick,0x7ffd55ac6f44,161150777,0,0x0,8
tick,0x7ffd55ac6f44,161165474,0,0x0,8
tick,0x7ffd55ac6f44,161180843,0,0x0,8
tick,0x7ffd55ac6f44,161195624,0,0x0,8
tick,0x7ffd55ac6f44,161210398,0,0x0,8
tick,0x7ffd55ac6f44,161225931,0,0x0,8
tick,0x7ffd55ac6f44,161241268,0,0x0,8
tick,0x7ffd55ac6f44,161256392,0,0x0,8
tick,0x7ffd55ac6f44,161271303,0,0x0,8
tick,0x7ffd55ac6f44,161286810,0,0x0,8
tick,0x7ffd55ac6f44,161302478,0,0x0,8
tick,0x7ffd55ac6f44,161318420,0,0x0,8
tick,0x7ffd55ac6f44,161333921,0,0x0,8
tick,0x7ffd55ac6f44,161349680,0,0x0,8
tick,0x7ffd55ac6f44,161365402,0,0x0,8
tick,0x7ffd55ac6f44,161380848,0,0x0,8
tick,0x7ffd55ac6f44,161396110,0,0x0,8
tick,0x7ffd55ac6f44,161411403,0,0x0,8
tick,0x7ffd55ac6f44,161426145,0,0x0,8
tick,0x7ffd55ac6f44,161441224,0,0x0,8
tick,0x7ffd55ac6f44,161456943,0,0x0,8
tick,0x7ffd55ac6f44,161472361,0,0x0,8
tick,0x7ffd55ac6f44,161488554,0,0x0,8
tick,0x7ffd55ac6f44,161503947,0,0x0,8
tick,0x7ffd55ac6f44,161519256,0,0x0,8
tick,0x7ffd55ac6f44,161534781,0,0x0,8
tick,0x7ffd55ac6f44,161550410,0,0x0,8
tick,0x7ffd55ac6f44,161565486,0,0x0,8
tick,0x7ffd55ac6f44,161580852,0,0x0,8
tick,0x7ffd55ac6f44,161595992,0,0x0,8
tick,0x7ffd55ac6f44,161611605,0,0x0,8
tick,0x7ffd55ac6f44,161627316,0,0x0,8
tick,0x7ffd55ac6f44,161643549,0,0x0,8
tick,0x7ffd55ac6f44,161658518,0,0x0,8
tick,0x7ffd55ac6f44,161673406,0,0x0,8
tick,0x7ffd55ac6f44,161689242,0,0x0,8
tick,0x7ffd55ac6f44,161705343,0,0x0,8
tick,0x7ffd55ac6f44,161720621,0,0x0,8
tick,0x7ffd55ac6f44,161735775,0,0x0,8
tick,0x7ffd55ac6f44,161751460,0,0x0,8
tick,0x7ffd55ac6f44,161766713,0,0x0,8
tick,0x7ffd55ac6f44,161782373,0,0x0,8
tick,0x7ffd55ac6f44,161797831,0,0x0,8
tick,0x7ffd55ac6f44,161813405,0,0x0,8
tick,0x7ffd55ac6f44,161829067,0,0x0,8
tick,0x7ffd55ac6f44,161844740,0,0x0,8
tick,0x7ffd55ac6f44,161859905,0,0x0,8
tick,0x7ffd55ac6f44,161875339,0,0x0,8
tick,0x7ffd55ac6f44,161890956,0,0x0,8
tick,0x7ffd55ac6f44,161906009,0,0x0,8
tick,0x7ffd55ac6f44,161922024,0,0x0,8
tick,0x7ffd55ac6f44,161938196,0,0x0,8
tick,0x7ffd55ac6f44,161952937,0,0x0,8
tick,0x7ffd55ac6f44,161968649,0,0x0,8
tick,0x7ffd55ac6f44,161984353,0,0x0,8
tick,0x7ffd55ac6f44,162000118,0,0x0,8
tick,0x7ffd55ac6f44,162016031,0,0x0,8
tick,0x7ffd55ac6f44,162031054,0,0x0,8
tick,0x7ffd55ac6f44,162046366,0,0x0,8
tick,0x7ffd55ac6f44,162061776,0,0x0,8
tick,0x7ffd55ac6f44,162077018,0,0x0,8
tick,0x7ffd55ac6f44,162093223,0,0x0,8
tick,0x7ffd55ac6f44,162108521,0,0x0,8
tick,0x7ffd55ac6f44,162124414,0,0x0,8
tick,0x7ffd55ac6f44,162140643,0,0x0,8
tick,0x7ffd55ac6f44,162156180,0,0x0,8
tick,0x7ffd55ac6f44,162171528,0,0x0,8
tick,0x7ffd55ac6f44,162187399,0,0x0,8
tick,0x7ffd55ac6f44,162203315,0,0x0,8
tick,0x7ffd55ac6f44,162219719,0,0x0,8
tick,0x7ffd55ac6f44,162235117,0,0x0,8
tick,0x7ffd55ac6f44,162251123,0,0x0,8
tick,0x7ffd55ac6f44,162266010,0,0x0,8
tick,0x7ffd55ac6f44,162280894,0,0x0,8
tick,0x7ffd55ac6f44,162296885,0,0x0,8
tick,0x7ffd55ac6f44,162313097,0,0x0,8
tick,0x7ffd55ac6f44,162328213,0,0x0,8
tick,0x7ffd55ac6f44,162343057,0,0x0,8
tick,0x7ffd55ac6f44,162358541,0,0x0,8
tick,0x7ffd55ac6f44,162374114,0,0x0,8
tick,0x7ffd55ac6f44,162388879,0,0x0,8
tick,0x7ffd55ac6f44,162403933,0,0x0,8
tick,0x7ffd55ac6f44,162419132,0,0x0,8
tick,0x7ffd55ac6f44,162434367,0,0x0,8
tick,0x7ffd55ac6f44,162449381,0,0x0,8
tick,0x7ffd55ac6f44,162464338,0,0x0,8
tick,0x7ffd55ac6f44,162480347,0,0x0,8
tick,0x7ffd55ac6f44,162496376,0,0x0,8
tick,0x7ffd55ac6f44,162512530,0,0x0,8
tick,0x7ffd55ac6f44,162528464,0,0x0,8
tick,0x7ffd55ac6f44,162543911,0,0x0,8
tick,0x7ffd55ac6f44,162559974,0,0x0,8
tick,0x7ffd55ac6f44,162575853,0,0x0,8
tick,0x7ffd55ac6f44,162591961,0,0x0,8
tick,0x7ffd55ac6f44,162606968,0,0x0,8
tick,0x7ffd55ac6f44,162621922,0,0x0,8
tick,0x7ffd55ac6f44,162637200,0,0x0,8
tick,0x7ffd55ac6f44,162653281,0,0x0,8
tick,0x7ffd55ac6f44,162669031,0,0x0,8
tick,0x7ffd55ac6f44,162683998,0,0x0,8
tick,0x7ffd55ac6f44,162699308,0,0x0,8
tick,0x7ffd55ac6f44,162715084,0,0x0,8
tick,0x7ffd55ac6f44,162731099,0,0x0,8
tick,0x7ffd55ac6f44,162747165,0,0x0,8
tick,0x7ffd55ac6f44,162762985,0,0x0,8
tick,0x7ffd55ac6f44,162779120,0,0x0,8
tick,0x7ffd55ac6f44,162794042,0,0x0,8
tick,0x7ffd55ac6f44,162809042,0,0x0,8
tick,0x7ffd55ac6f44,162825079,0,0x0,8
tick,0x7ffd55ac6f44,162841005,0,0x0,8
tick,0x7ffd55ac6f44,162856033,0,0x0,8
tick,0x7ffd55ac6f44,162872103,0,0x0,8
tick,0x7ffd55ac6f44,162887677,0,0x0,8
tick,0x7ffd55ac6f44,162903517,0,0x0,8
tick,0x7ffd55ac6f44,162919032,0,0x0,8
tick,0x7ffd55ac6f44,162934504,0,0x0,8
tick,0x7ffd55ac6f44,162950400,0,0x0,8
tick,0x7ffd55ac6f44,162966040,0,0x0,8
tick,0x7ffd55ac6f44,162981972,0,0x0,8
tick,0x7ffd55ac6f44,162997710,0,0x0,8
tick,0x7ffd55ac6f44,163013660,0,0x0,8
tick,0x7ffd55ac6f44,163029567,0,0x0,8
tick,0x7ffd55ac6f44,163044991,0,0x0,8
tick,0x7ffd55ac6f44,163061057,0,0x0,8
tick,0x7ffd55ac6f44,163075865,0,0x0,8
tick,0x7ffd55ac6f44,163091049,0,0x0,8
tick,0x7ffd55ac6f44,163106334,0,0x0,8
tick,0x7ffd55ac6f44,163122052,0,0x0,8
tick,0x7ffd55ac6f44,163137267,0,0x0,8
tick,0x7ffd55ac6f44,163152622,0,0x0,8
tick,0x7ffd55ac6f44,163168716,0,0x0,8
tick,0x7ffd55ac6f44,163184607,0,0x0,8
tick,0x7ffd55ac6f44,163200274,0,0x0,8
tick,0x7ffd55ac6f44,163215928,0,0x0,8
tick,0x7ffd55ac6f44,163231124,0,0x0,8
tick,0x7ffd55ac6f44,163246287,0,0x0,8
tick,0x7ffd55ac6f44,163262043,0,0x0,8
tick,0x7ffd55ac6f44,163277541,0,0x0,8
tick,0x7ffd55ac6f44,163293430,0,0x0,8
tick,0x7ffd55ac6f44,163309587,0,0x0,8
tick,0x7ffd55ac6f44,163325419,0,0x0,8
tick,0x7ffd55ac6f44,163340824,0,0x0,8
tick,0x7ffd55ac6f44,163356011,0,0x0,8
tick,0x7ffd55ac6f44,163370684,0,0x0,8
tick,0x7ffd55ac6f44,163386182,0,0x0,8
tick,0x7ffd55ac6f44,163401981,0,0x0,8
tick,0x7ffd55ac6f44,163418006,0,0x0,8
tick,0x7ffd55ac6f44,163433956,0,0x0,8
tick,0x7ffd55ac6f44,163449873,0,0x0,8
tick,0x7ffd55ac6f44,163465038,0,0x0,8
tick,0x7ffd55ac6f44,163480990,0,0x0,8
tick,0x7ffd55ac6f44,163497075,0,0x0,8
tick,0x7ffd55ac6f44,163513082,0,0x0,8
tick,0x7ffd55ac6f44,163529491,0,0x0,8
tick,0x7ffd55ac6f44,163545131,0,0x0,8
tick,0x7ffd55ac6f44,163560128,0,0x0,8
tick,0x7ffd55ac6f44,163576187,0,0x0,8
tick,0x7ffd55ac6f44,163592070,0,0x0,8
tick,0x7ffd55ac6f44,163607400,0,0x0,8
tick,0x7ffd55ac6f44,163623952,0,0x0,8
tick,0x7ffd55ac6f44,163639478,0,0x0,8
tick,0x7ffd55ac6f44,163655074,0,0x0,8
tick,0x7ffd55ac6f44,163670565,0,0x0,8
tick,0x7ffd55ac6f44,163686056,0,0x0,8
tick,0x7ffd55ac6f44,163701988,0,0x0,8
tick,0x7ffd55ac6f44,163718116,0,0x0,8
tick,0x7ffd55ac6f44,163733969,0,0x0,8
tick,0x7ffd55ac6f44,163749136,0,0x0,8
tick,0x7ffd55ac6f44,163765621,0,0x0,8
tick,0x7ffd55ac6f44,163780572,0,0x0,8
tick,0x7ffd55ac6f44,163796245,0,0x0,8
tick,0x7ffd55ac6f44,163811563,0,0x0,8
tick,0x7ffd55ac6f44,163826967,0,0x0,8
tick,0x7ffd55ac6f44,163842025,0,0x0,8
tick,0x7ffd55ac6f44,163857362,0,0x0,8
tick,0x7ffd55ac6f44,163873305,0,0x0,8
tick,0x7ffd55ac6f44,163889647,0,0x0,8
tick,0x7ffd55ac6f44,163905289,0,0x0,8
tick,0x7ffd55ac6f44,163920306,0,0x0,8
tick,0x7ffd55ac6f44,163935429,0,0x0,8
tick,0x7ffd55ac6f44,163951369,0,0x0,8
tick,0x7ffd55ac6f44,163966392,0,0x0,8
tick,0x7ffd55ac6f44,163982141,0,0x0,8
tick,0x7ffd55ac6f44,163997109,0,0x0,8
tick,0x7ffd55ac6f44,164011806,0,0x0,8
tick,0x7ffd55ac6f44,164027368,0,0x0,8
tick,0x7ffd55ac6f44,164042956,0,0x0,8
tick,0x7ffd55ac6f44,164058325,0,0x0,8
tick,0x7ffd55ac6f44,164073577,0,0x0,8
tick,0x7ffd55ac6f44,164089631,0,0x0,8
tick,0x7ffd55ac6f44,164105443,0,0x0,8
tick,0x7ffd55ac6f44,164121323,0,0x0,8
tick,0x7ffd55ac6f44,164136408,0,0x0,8
tick,0x7ffd55ac6f44,164151990,0,0x0,8
tick,0x7ffd55ac6f44,164167302,0,0x0,8
tick,0x7ffd55ac6f44,164183331,0,0x0,8
tick,0x7ffd55ac6f44,164199068,0,0x0,8
tick,0x7ffd55ac6f44,164214491,0,0x0,8
tick,0x7ffd55ac6f44,164229852,0,0x0,8
tick,0x7ffd55ac6f44,164244896,0,0x0,8
tick,0x7ffd55ac6f44,164260868,0,0x0,8
tick,0x7ffd55ac6f44,164275875,0,0x0,8
tick,0x7ffd55ac6f44,164292145,0,0x0,8
tick,0x7ffd55ac6f44,164307505,0,0x0,8
tick,0x7ffd55ac6f44,164323172,0,0x0,8
tick,0x7ffd55ac6f44,164338569,0,0x0,8
tick,0x7ffd55ac6f44,164353339,0,0x0,8
tick,0x7ffd55ac6f44,164369124,0,0x0,8
tick,0x7ffd55ac6f44,164384651,0,0x0,8
tick,0x7ffd55ac6f44,164399690,0,0x0,8
tick,0x7ffd55ac6f44,164414587,0,0x0,8
tick,0x7ffd55ac6f44,164429465,0,0x0,8
tick,0x7ffd55ac6f44,164444624,0,0x0,8
tick,0x7ffd55ac6f44,164460103,0,0x0,8
tick,0x7ffd55ac6f44,164475447,0,0x0,8
tick,0x7ffd55ac6f44,164491415,0,0x0,8
tick,0x7ffd55ac6f44,164507768,0,0x0,8
tick,0x7ffd55ac6f44,164523606,0,0x0,8
tick,0x7ffd55ac6f44,164539470,0,0x0,8
tick,0x7ffd55ac6f44,164555102,0,0x0,8
tick,0x7ffd55ac6f44,164570820,0,0x0,8
tick,0x7ffd55ac6f44,164586770,0,0x0,8
tick,0x7ffd55ac6f44,164602315,0,0x0,8
tick,0x7ffd55ac6f44,164618034,0,0x0,8
tick,0x7ffd55ac6f44,164633555,0,0x0,8
tick,0x7ffd55ac6f44,164649340,0,0x0,8
tick,0x7ffd55ac6f44,164665324,0,0x0,8
tick,0x7ffd55ac6f44,164680689,0,0x0,8
tick,0x7ffd55ac6f44,164696330,0,0x0,8
tick,0x7ffd55ac6f44,164711559,0,0x0,8
tick,0x7ffd55ac6f44,164727461,0,0x0,8
tick,0x7ffd55ac6f44,164743671,0,0x0,8
tick,0x7ffd55ac6f44,164758840,0,0x0,8
tick,0x7ffd55ac6f44,164773492,0,0x0,8
tick,0x7ffd55ac6f44,164788834,0,0x0,8
tick,0x7ffd55ac6f44,164804555,0,0x0,8
tick,0x7ffd55ac6f44,164820182,0,0x0,8
tick,0x7ffd55ac6f44,164835400,0,0x0,8
tick,0x7ffd55ac6f44,164850373,0,0x0,8
tick,0x7ffd55ac6f44,164865665,0,0x0,8
tick,0x7ffd55ac6f44,164880788,0,0x0,8
tick,0x7ffd55ac6f44,164895951,0,0x0,8
tick,0x7ffd55ac6f44,164911006,0,0x0,8
tick,0x7ffd55ac6f44,164926325,0,0x0,8
tick,0x7ffd55ac6f44,164941573,0,0x0,8
tick,0x7ffd55ac6f44,164957679,0,0x0,8
tick,0x7ffd55ac6f44,164973684,0,0x0,8
tick,0x7ffd55ac6f44,164989038,0,0x0,8
tick,0x7ffd55ac6f44,165004997,0,0x0,8
tick,0x7ffd55ac6f44,165020414,0,0x0,8
tick,0x7ffd55ac6f44,165036246,0,0x0,8
tick,0x7ffd55ac6f44,165052204,0,0x0,8
tick,0x7ffd55ac6f44,165067746,0,0x0,8
tick,0x7ffd55ac6f44,165083628,0,0x0,8
tick,0x7ffd55ac6f44,165098764,0,0x0,8
tick,0x7ffd55ac6f44,165113616,0,0x0,8
tick,0x7ffd55ac6f44,165128703,0,0x0,8
tick,0x7ffd55ac6f44,165144700,0,0x0,8
tick,0x7ffd55ac6f44,165159439,0,0x0,8
tick,0x7ffd55ac6f44,165174674,0,0x0,8
tick,0x7ffd55ac6f44,165190323,0,0x0,8
tick,0x7ffd55ac6f44,165205270,0,0x0,8
tick,0x7ffd55ac6f44,165220448,0,0x0,8
tick,0x7ffd55ac6f44,165235481,0,0x0,8
tick,0x7ffd55ac6f44,165250523,0,0x0,8
tick,0x7ffd55ac6f44,165265535,0,0x0,8
tick,0x7ffd55ac6f44,165281231,0,0x0,8
tick,0x7ffd55ac6f44,165295803,0,0x0,8
tick,0x7ffd55ac6f44,165310508,0,0x0,8
tick,0x7ffd55ac6f44,165326176,0,0x0,8
tick,0x7ffd55ac6f44,165342064,0,0x0,8
tick,0x7ffd55ac6f44,165357388,0,0x0,8
tick,0x7ffd55ac6f44,165373610,0,0x0,8
tick,0x7ffd55ac6f44,165389410,0,0x0,8
tick,0x7ffd55ac6f44,165404631,0,0x0,8
tick,0x7ffd55ac6f44,165419958,0,0x0,8
tick,0x7ffd55ac6f44,165435261,0,0x0,8
tick,0x7ffd55ac6f44,165450428,0,0x0,8
tick,0x7ffd55ac6f44,165466306,0,0x0,8
tick,0x7ffd55ac6f44,165482262,0,0x0,8
tick,0x7ffd55ac6f44,165496969,0,0x0,8
tick,0x7ffd55ac6f44,165512012,0,0x0,8
tick,0x7ffd55ac6f44,165528042,0,0x0,8
tick,0x7ffd55ac6f44,165543162,0,0x0,8
tick,0x7ffd55ac6f44,165559197,0,0x0,8
tick,0x7ffd55ac6f44,165575740,0,0x0,8
tick,0x7ffd55ac6f44,165590947,0,0x0,8
tick,0x7ffd55ac6f44,165606738,0,0x0,8
tick,0x7ffd55ac6f44,165622316,0,0x0,8
tick,0x7ffd55ac6f44,165638596,0,0x0,8
tick,0x7ffd55ac6f44,165654665,0,0x0,8
tick,0x7ffd55ac6f44,165670819,0,0x0,8
tick,0x7ffd55ac6f44,165685693,0,0x0,8
tick,0x7ffd55ac6f44,165700881,0,0x0,8
tick,0x7ffd55ac6f44,165716980,0,0x0,8
tick,0x7ffd55ac6f44,165733039,0,0x0,8
tick,0x7ffd55ac6f44,165748659,0,0x0,8
tick,0x7ffd55ac6f44,165764532,0,0x0,8
tick,0x7ffd55ac6f44,165780574,0,0x0,8
tick,0x7ffd55ac6f44,165796631,0,0x0,8
tick,0x7ffd55ac6f44,165812077,0,0x0,8
tick,0x7ffd55ac6f44,165827439,0,0x0,8
tick,0x7ffd55ac6f44,165843614,0,0x0,8
tick,0x7ffd55ac6f44,165859199,0,0x0,8
tick,0x7ffd55ac6f44,165874958,0,0x0,8
tick,0x7ffd55ac6f44,165889597,0,0x0,8
tick,0x7ffd55ac6f44,165905162,0,0x0,8
tick,0x7ffd55ac6f44,165920112,0,0x0,8
tick,0x7ffd55ac6f44,165935568,0,0x0,8
tick,0x7ffd55ac6f44,165950596,0,0x0,8
tick,0x7ffd55ac6f44,165965395,0,0x0,8
tick,0x7ffd55ac6f44,165980910,0,0x0,8
tick,0x7ffd55ac6f44,165995530,0,0x0,8
tick,0x7ffd55ac6f44,166010820,0,0x0,8
tick,0x7ffd55ac6f44,166025911,0,0x0,8
tick,0x7ffd55ac6f44,166041318,0,0x0,8
tick,0x7ffd55ac6f44,166056324,0,0x0,8
tick,0x7ffd55ac6f44,166072308,0,0x0,8
tick,0x7ffd55ac6f44,166087783,0,0x0,8
tick,0x7ffd55ac6f44,166103971,0,0x0,8
tick,0x7ffd55ac6f44,166119784,0,0x0,8
tick,0x7ffd55ac6f44,166135173,0,0x0,8
tick,0x7ffd55ac6f44,166150815,0,0x0,8
tick,0x7ffd55ac6f44,166166291,0,0x0,8
tick,0x7ffd55ac6f44,166182367,0,0x0,8
tick,0x7ffd55ac6f44,166197457,0,0x0,8
tick,0x7ffd55ac6f44,166213713,0,0x0,8
tick,0x7ffd55ac6f44,166229430,0,0x0,8
tick,0x7ffd55ac6f44,166244802,0,0x0,8
tick,0x7ffd55ac6f44,166259815,0,0x0,8
tick,0x7ffd55ac6f44,166275705,0,0x0,8
tick,0x7ffd55ac6f44,166291354,0,0x0,8
tick,0x7ffd55ac6f44,166306460,0,0x0,8
tick,0x7ffd55ac6f44,166321760,0,0x0,8
tick,0x7ffd55ac6f44,166336469,0,0x0,8
tick,0x7ffd55ac6f44,166351329,0,0x0,8
tick,0x7ffd55ac6f44,166366007,0,0x0,8
tick,0x7ffd55ac6f44,166381425,0,0x0,8
tick,0x7ffd55ac6f44,166396458,0,0x0,8
tick,0x7ffd55ac6f44,166411325,0,0x0,8
tick,0x7ffd55ac6f44,166426018,0,0x0,8
tick,0x7ffd55ac6f44,166441429,0,0x0,8
tick,0x7ffd55ac6f44,166456098,0,0x0,8
tick,0x7ffd55ac6f44,166471471,0,0x0,8
tick,0x7ffd55ac6f44,166487546,0,0x0,8
tick,0x7ffd55ac6f44,166503136,0,0x0,8
tick,0x7ffd55ac6f44,166518226,0,0x0,8
tick,0x7ffd55ac6f44,166533466,0,0x0,8
tick,0x7ffd55ac6f44,166549310,0,0x0,8
tick,0x7ffd55ac6f44,166564691,0,0x0,8
tick,0x7ffd55ac6f44,166580546,0,0x0,8
tick,0x7ffd55ac6f44,166596402,0,0x0,8
tick,0x7ffd55ac6f44,166611435,0,0x0,8
tick,0x7ffd55ac6f44,166626328,0,0x0,8
tick,0x7ffd55ac6f44,166641237,0,0x0,8
tick,0x7ffd55ac6f44,166656189,0,0x0,8
tick,0x7ffd55ac6f44,166672455,0,0x0,8
tick,0x7ffd55ac6f44,166687774,0,0x0,8
tick,0x7ffd55ac6f44,166703429,0,0x0,8
tick,0x7ffd55ac6f44,166718570,0,0x0,8
tick,0x7ffd55ac6f44,166733535,0,0x0,8
tick,0x7ffd55ac6f44,166748512,0,0x0,8
tick,0x7ffd55ac6f44,166763586,0,0x0,8
tick,0x7ffd55ac6f44,166778724,0,0x0,8
tick,0x7ffd55ac6f44,166793849,0,0x0,8
tick,0x7ffd55ac6f44,166809173,0,0x0,8
tick,0x7ffd55ac6f44,166824693,0,0x0,8
tick,0x7ffd55ac6f44,166840618,0,0x0,8
tick,0x7ffd55ac6f44,166856207,0,0x0,8
tick,0x7ffd55ac6f44,166872325,0,0x0,8
tick,0x7ffd55ac6f44,166887619,0,0x0,8
tick,0x7ffd55ac6f44,166903434,0,0x0,8
tick,0x7ffd55ac6f44,166918618,0,0x0,8
tick,0x7ffd55ac6f44,166933411,0,0x0,8
tick,0x7ffd55ac6f44,166949126,0,0x0,8
tick,0x7ffd55ac6f44,166965152,0,0x0,8
tick,0x7ffd55ac6f44,166980699,0,0x0,8
tick,0x7ffd55ac6f44,166995399,0,0x0,8
tick,0x7ffd55ac6f44,167010891,0,0x0,8
tick,0x7ffd55ac6f44,167026213,0,0x0,8
tick,0x7ffd55ac6f44,167042311,0,0x0,8
tick,0x7ffd55ac6f44,167057333,0,0x0,8
tick,0x7ffd55ac6f44,167072496,0,0x0,8
tick,0x7ffd55ac6f44,167087904,0,0x0,8
tick,0x7ffd55ac6f44,167103500,0,0x0,8
tick,0x7ffd55ac6f44,167118615,0,0x0,8
tick,0x7ffd55ac6f44,167134716,0,0x0,8
tick,0x7ffd55ac6f44,167149724,0,0x0,8
tick,0x7ffd55ac6f44,167165267,0,0x0,8
tick,0x7ffd55ac6f44,167180790,0,0x0,8
tick,0x7ffd55ac6f44,167195467,0,0x0,8
tick,0x7ffd55ac6f44,167211371,0,0x0,8
tick,0x7ffd55ac6f44,167226838,0,0x0,8
tick,0x7ffd55ac6f44,167242355,0,0x0,8
tick,0x7ffd55ac6f44,167257283,0,0x0,8
tick,0x7ffd55ac6f44,167272980,0,0x0,8
tick,0x7ffd55ac6f44,167288851,0,0x0,8
tick,0x7ffd55ac6f44,167304320,0,0x0,8
tick,0x7ffd55ac6f44,167319112,0,0x0,8
tick,0x7ffd55ac6f44,167334112,0,0x0,8
tick,0x7ffd55ac6f44,167349208,0,0x0,8
tick,0x7ffd55ac6f44,167364634,0,0x0,8
tick,0x7ffd55ac6f44,167380906,0,0x0,8
tick,0x7ffd55ac6f44,167396633,0,0x0,8
tick,0x7ffd55ac6f44,167412317,0,0x0,8
tick,0x7ffd55ac6f44,167427689,0,0x0,8
tick,0x7ffd55ac6f44,167443584,0,0x0,8
tick,0x7ffd55ac6f44,167459780,0,0x0,8
tick,0x7ffd55ac6f44,167475354,0,0x0,8
tick,0x7ffd55ac6f44,167491160,0,0x0,8
tick,0x7ffd55ac6f44,167507109,0,0x0,8
tick,0x7ffd55ac6f44,167522410,0,0x0,8
tick,0x7ffd55ac6f44,167536930,0,0x0,8
tick,0x7ffd55ac6f44,167552384,0,0x0,8
tick,0x7ffd55ac6f44,167567638,0,0x0,8
tick,0x7ffd55ac6f44,167583789,0,0x0,8
tick,0x7ffd55ac6f44,167599121,0,0x0,8
tick,0x7ffd55ac6f44,167614427,0,0x0,8
tick,0x7ffd55ac6f44,167630573,0,0x0,8
tick,0x7ffd55ac6f44,167646561,0,0x0,8
tick,0x7ffd55ac6f44,167662469,0,0x0,8
tick,0x7ffd55ac6f44,167677744,0,0x0,8
tick,0x7ffd55ac6f44,167693415,0,0x0,8
tick,0x7ffd55ac6f44,167708975,0,0x0,8
tick,0x7ffd55ac6f44,167723721,0,0x0,8
tick,0x7ffd55ac6f44,167738728,0,0x0,8
tick,0x7ffd55ac6f44,167753695,0,0x0,8
tick,0x7ffd55ac6f44,167769609,0,0x0,8
tick,0x7ffd55ac6f44,167785340,0,0x0,8
tick,0x7ffd55ac6f44,167800966,0,0x0,8
tick,0x7ffd55ac6f44,167815722,0,0x0,8
tick,0x7ffd55ac6f44,167830759,0,0x0,8
tick,0x7ffd55ac6f44,167846230,0,0x0,8
tick,0x7ffd55ac6f44,167861586,0,0x0,8
tick,0x7ffd55ac6f44,167876291,0,0x0,8
tick,0x7ffd55ac6f44,167891283,0,0x0,8
tick,0x7ffd55ac6f44,167906580,0,0x0,8
tick,0x7ffd55ac6f44,167921645,0,0x0,8
tick,0x7ffd55ac6f44,167937344,0,0x0,8
tick,0x7ffd55ac6f44,167953387,0,0x0,8
tick,0x7ffd55ac6f44,167969266,0,0x0,8
tick,0x7ffd55ac6f44,167984565,0,0x0,8
tick,0x7ffd55ac6f44,167999746,0,0x0,8
tick,0x7ffd55ac6f44,168015499,0,0x0,8
tick,0x7ffd55ac6f44,168030777,0,0x0,8
tick,0x7ffd55ac6f44,168045421,0,0x0,8
tick,0x7ffd55ac6f44,168061399,0,0x0,8
tick,0x7ffd55ac6f44,168076636,0,0x0,8
tick,0x7ffd55ac6f44,168091972,0,0x0,8
tick,0x7ffd55ac6f44,168107888,0,0x0,8
tick,0x7ffd55ac6f44,168123538,0,0x0,8
tick,0x7ffd55ac6f44,168139450,0,0x0,8
tick,0x7ffd55ac6f44,168155099,0,0x0,8
tick,0x7ffd55ac6f44,168170443,0,0x0,8
tick,0x7ffd55ac6f44,168186002,0,0x0,8
tick,0x7ffd55ac6f44,168201363,0,0x0,8
tick,0x7ffd55ac6f44,168216344,0,0x0,8
tick,0x7ffd55ac6f44,168232182,0,0x0,8
tick,0x7ffd55ac6f44,168247654,0,0x0,8
tick,0x7ffd55ac6f44,168263414,0,0x0,8
tick,0x7ffd55ac6f44,168278802,0,0x0,8
tick,0x7ffd55ac6f44,168294464,0,0x0,8
tick,0x7ffd55ac6f44,168310475,0,0x0,8
tick,0x7ffd55ac6f44,168325638,0,0x0,8
tick,0x7ffd55ac6f44,168340798,0,0x0,8
tick,0x7ffd55ac6f44,168355597,0,0x0,8
tick,0x7ffd55ac6f44,168370633,0,0x0,8
tick,0x7ffd55ac6f44,168386580,0,0x0,8
tick,0x7ffd55ac6f44,168402488,0,0x0,8
tick,0x7ffd55ac6f44,168417505,0,0x0,8
tick,0x7ffd55ac6f44,168433519,0,0x0,8
tick,0x7ffd55ac6f44,168448775,0,0x0,8
tick,0x7ffd55ac6f44,168464504,0,0x0,8
tick,0x7ffd55ac6f44,168480275,0,0x0,8
tick,0x7ffd55ac6f44,168496047,0,0x0,8
tick,0x7ffd55ac6f44,168511315,0,0x0,8
tick,0x7ffd55ac6f44,168527250,0,0x0,8
tick,0x7ffd55ac6f44,168542424,0,0x0,8
tick,0x7ffd55ac6f44,168558132,0,0x0,8
tick,0x7ffd55ac6f44,168574013,0,0x0,8
tick,0x7ffd55ac6f44,168589466,0,0x0,8
tick,0x7ffd55ac6f44,168605090,0,0x0,8
tick,0x7ffd55ac6f44,168620370,0,0x0,8
tick,0x7ffd55ac6f44,168635494,0,0x0,8
tick,0x7ffd55ac6f44,168650867,0,0x0,8
tick,0x7ffd55ac6f44,168665805,0,0x0,8
tick,0x7ffd55ac6f44,168680988,0,0x0,8
tick,0x7ffd55ac6f44,168696750,0,0x0,8
tick,0x7ffd55ac6f44,168712000,0,0x0,8
tick,0x7ffd55ac6f44,168727006,0,0x0,8
tick,0x7ffd55ac6f44,168742437,0,0x0,8
tick,0x7ffd55ac6f44,168757527,0,0x0,8
tick,0x7ffd55ac6f44,168773561,0,0x0,8
tick,0x7ffd55ac6f44,168789075,0,0x0,8
tick,0x7ffd55ac6f44,168804474,0,0x0,8
tick,0x7ffd55ac6f44,168820082,0,0x0,8
tick,0x7ffd55ac6f44,168835439,0,0x0,8
tick,0x7ffd55ac6f44,168850960,0,0x0,8
tick,0x7ffd55ac6f44,168866337,0,0x0,8
tick,0x7ffd55ac6f44,168882149,0,0x0,8
tick,0x7ffd55ac6f44,168897930,0,0x0,8
tick,0x7ffd55ac6f44,168913468,0,0x0,8
tick,0x7ffd55ac6f44,168928303,0,0x0,8
tick,0x7ffd55ac6f44,168943301,0,0x0,8
tick,0x7ffd55ac6f44,168958733,0,0x0,8
tick,0x7ffd55ac6f44,168974219,0,0x0,8
tick,0x7ffd55ac6f44,168989577,0,0x0,8
tick,0x7ffd55ac6f44,169005576,0,0x0,8
tick,0x7ffd55ac6f44,169020838,0,0x0,8
tick,0x7ffd55ac6f44,169036325,0,0x0,8
tick,0x7ffd55ac6f44,169051626,0,0x0,8
tick,0x7ffd55ac6f44,169067555,0,0x0,8
tick,0x7ffd55ac6f44,169082977,0,0x0,8
tick,0x7ffd55ac6f44,169098846,0,0x0,8
tick,0x7ffd55ac6f44,169113636,0,0x0,8
tick,0x7ffd55ac6f44,169128737,0,0x0,8
tick,0x7ffd55ac6f44,169144323,0,0x0,8
tick,0x7ffd55ac6f44,169159614,0,0x0,8
tick,0x7ffd55ac6f44,169175064,0,0x0,8
tick,0x7ffd55ac6f44,169190347,0,0x0,8
tick,0x7ffd55ac6f44,169205531,0,0x0,8
tick,0x7ffd55ac6f44,169221062,0,0x0,8
tick,0x7ffd55ac6f44,169236882,0,0x0,8
tick,0x7ffd55ac6f44,169252341,0,0x0,8
tick,0x7ffd55ac6f44,169267553,0,0x0,8
tick,0x7ffd55ac6f44,169283473,0,0x0,8
tick,0x7ffd55ac6f44,169299207,0,0x0,8
tick,0x7ffd55ac6f44,169314786,0,0x0,8
tick,0x7ffd55ac6f44,169330395,0,0x0,8
tick,0x7ffd55ac6f44,169346409,0,0x0,8
tick,0x7ffd55ac6f44,169362370,0,0x0,8
tick,0x7ffd55ac6f44,169378331,0,0x0,8
tick,0x7ffd55ac6f44,169394511,0,0x0,8
tick,0x7ffd55ac6f44,169410416,0,0x0,8
tick,0x7ffd55ac6f44,169425920,0,0x0,8
tick,0x7ffd55ac6f44,169440867,0,0x0,8
tick,0x7ffd55ac6f44,169456325,0,0x0,8
tick,0x7ffd55ac6f44,169472307,0,0x0,8
tick,0x7ffd55ac6f44,169487425,0,0x0,8
tick,0x7ffd55ac6f44,169503583,0,0x0,8
tick,0x7ffd55ac6f44,169519480,0,0x0,8
tick,0x7ffd55ac6f44,169534573,0,0x0,8
tick,0x7ffd55ac6f44,169550954,0,0x0,8
tick,0x7ffd55ac6f44,169566234,0,0x0,8
tick,0x7ffd55ac6f44,169582309,0,0x0,8
tick,0x7ffd55ac6f44,169598264,0,0x0,8
tick,0x7ffd55ac6f44,169613505,0,0x0,8
tick,0x7ffd55ac6f44,169628795,0,0x0,8
tick,0x7ffd55ac6f44,169643939,0,0x0,8
tick,0x7ffd55ac6f44,169659642,0,0x0,8
tick,0x7ffd55ac6f44,169675351,0,0x0,8
tick,0x7ffd55ac6f44,169690552,0,0x0,8
tick,0x7ffd55ac6f44,169705361,0,0x0,8
tick,0x7ffd55ac6f44,169720262,0,0x0,8
tick,0x7ffd55ac6f44,169735419,0,0x0,8
tick,0x7ffd55ac6f44,169751462,0,0x0,8
tick,0x7ffd55ac6f44,169767697,0,0x0,8
tick,0x7ffd55ac6f44,169783540,0,0x0,8
tick,0x7ffd55ac6f44,169798505,0,0x0,8
tick,0x7ffd55ac6f44,169814017,0,0x0,8
tick,0x7ffd55ac6f44,169829302,0,0x0,8
tick,0x7ffd55ac6f44,169844702,0,0x0,8
tick,0x7ffd55ac6f44,169861005,0,0x0,8
tick,0x7ffd55ac6f44,169876930,0,0x0,8
tick,0x7ffd55ac6f44,169892961,0,0x0,8
tick,0x7ffd55ac6f44,169908922,0,0x0,8
tick,0x7ffd55ac6f44,169924194,0,0x0,8
tick,0x7ffd55ac6f44,169939645,0,0x0,8
tick,0x7ffd55ac6f44,169955327,0,0x0,8
tick,0x7ffd55ac6f44,169971437,0,0x0,8
tick,0x7ffd55ac6f44,169987555,0,0x0,8
tick,0x7ffd55ac6f44,170002240,0,0x0,8
tick,0x7ffd55ac6f44,170017319,0,0x0,8
tick,0x7ffd55ac6f44,170033516,0,0x0,8
tick,0x7ffd55ac6f44,170049071,0,0x0,8
tick,0x7ffd55ac6f44,170064572,0,0x0,8
tick,0x7ffd55ac6f44,170080533,0,0x0,8
tick,0x7ffd55ac6f44,170095856,0,0x0,8
tick,0x7ffd55ac6f44,170111310,0,0x0,8
tick,0x7ffd55ac6f44,170126415,0,0x0,8
tick,0x7ffd55ac6f44,170142227,0,0x0,8
tick,0x7ffd55ac6f44,170157707,0,0x0,8
tick,0x7ffd55ac6f44,170173850,0,0x0,8
tick,0x7ffd55ac6f44,170189916,0,0x0,8
tick,0x7ffd55ac6f44,170205377,0,0x0,8
tick,0x7ffd55ac6f44,170221321,0,0x0,8
tick,0x7ffd55ac6f44,170237691,0,0x0,8
tick,0x7ffd55ac6f44,170253356,0,0x0,8
tick,0x7ffd55ac6f44,170269004,0,0x0,8
tick,0x7ffd55ac6f44,170284664,0,0x0,8
tick,0x7ffd55ac6f44,170300767,0,0x0,8
tick,0x7ffd55ac6f44,170315454,0,0x0,8
tick,0x7ffd55ac6f44,170330835,0,0x0,8
tick,0x7ffd55ac6f44,170345722,0,0x0,8
tick,0x7ffd55ac6f44,170361294,0,0x0,8
tick,0x7ffd55ac6f44,170376199,0,0x0,8
tick,0x7ffd55ac6f44,170391425,0,0x0,8
tick,0x7ffd55ac6f44,170406915,0,0x0,8
tick,0x7ffd55ac6f44,170422333,0,0x0,8
tick,0x7ffd55ac6f44,170437248,0,0x0,8
tick,0x7ffd55ac6f44,170452256,0,0x0,8
tick,0x7ffd55ac6f44,170467416,0,0x0,8
tick,0x7ffd55ac6f44,170483234,0,0x0,8
tick,0x7ffd55ac6f44,170498273,0,0x0,8
tick,0x7ffd55ac6f44,170513937,0,0x0,8
tick,0x7ffd55ac6f44,170528929,0,0x0,8
tick,0x7ffd55ac6f44,170544969,0,0x0,8
tick,0x7ffd55ac6f44,170560937,0,0x0,8
tick,0x7ffd55ac6f44,170576913,0,0x0,8
tick,0x7ffd55ac6f44,170592473,0,0x0,8
tick,0x7ffd55ac6f44,170608735,0,0x0,8
tick,0x7ffd55ac6f44,170624636,0,0x0,8
tick,0x7ffd55ac6f44,170640546,0,0x0,8
tick,0x7ffd55ac6f44,170656238,0,0x0,8
tick,0x7ffd55ac6f44,170672261,0,0x0,8
tick,0x7ffd55ac6f44,170687959,0,0x0,8
tick,0x7ffd55ac6f44,170703282,0,0x0,8
tick,0x7ffd55ac6f44,170718294,0,0x0,8
tick,0x7ffd55ac6f44,170734282,0,0x0,8
tick,0x7ffd55ac6f44,170750384,0,0x0,8
tick,0x7ffd55ac6f44,170765411,0,0x0,8
tick,0x7ffd55ac6f44,170780342,0,0x0,8
tick,0x7ffd55ac6f44,170795332,0,0x0,8
tick,0x7ffd55ac6f44,170810545,0,0x0,8
tick,0x7ffd55ac6f44,170826406,0,0x0,8
tick,0x7ffd55ac6f44,170842298,0,0x0,8
tick,0x7ffd55ac6f44,170858280,0,0x0,8
tick,0x7ffd55ac6f44,170874360,0,0x0,8
tick,0x7ffd55ac6f44,170890393,0,0x0,8
tick,0x7ffd55ac6f44,170906428,0,0x0,8
tick,0x7ffd55ac6f44,170922329,0,0x0,8
tick,0x7ffd55ac6f44,170937511,0,0x0,8
tick,0x7ffd55ac6f44,170952527,0,0x0,8
tick,0x7ffd55ac6f44,170967523,0,0x0,8
tick,0x7ffd55ac6f44,170982499,0,0x0,8
tick,0x7ffd55ac6f44,170997533,0,0x0,8
tick,0x7ffd55ac6f44,171012847,0,0x0,8
tick,0x7ffd55ac6f44,171028097,0,0x0,8
tick,0x7ffd55ac6f44,171043118,0,0x0,8
tick,0x7ffd55ac6f44,171059039,0,0x0,8
tick,0x7ffd55ac6f44,171074577,0,0x0,8
tick,0x7ffd55ac6f44,171090328,0,0x0,8
tick,0x7ffd55ac6f44,171105790,0,0x0,8
tick,0x7ffd55ac6f44,171120755,0,0x0,8
tick,0x7ffd55ac6f44,171135797,0,0x0,8
tick,0x7ffd55ac6f44,171151322,0,0x0,8
tick,0x7ffd55ac6f44,171166759,0,0x0,8
tick,0x7ffd55ac6f44,171183311,0,0x0,8
tick,0x7ffd55ac6f44,171198807,0,0x0,8
tick,0x7ffd55ac6f44,171214657,0,0x0,8
tick,0x7ffd55ac6f44,171230619,0,0x0,8
tick,0x7ffd55ac6f44,171246479,0,0x0,8
tick,0x7ffd55ac6f44,171262016,0,0x0,8
tick,0x7ffd55ac6f44,171278046,0,0x0,8
tick,0x7ffd55ac6f44,171293530,0,0x0,8
tick,0x7ffd55ac6f44,171308717,0,0x0,8
tick,0x7ffd55ac6f44,171324205,0,0x0,8
tick,0x7ffd55ac6f44,171340073,0,0x0,8
tick,0x7ffd55ac6f44,171355615,0,0x0,8
tick,0x7ffd55ac6f44,171371027,0,0x0,8
tick,0x7ffd55ac6f44,171385940,0,0x0,8
tick,0x7ffd55ac6f44,171401085,0,0x0,8
tick,0x7ffd55ac6f44,171416981,0,0x0,8
tick,0x7ffd55ac6f44,171432343,0,0x0,8
tick,0x7ffd55ac6f44,171447593,0,0x0,8
tick,0x7ffd55ac6f44,171462948,0,0x0,8
tick,0x7ffd55ac6f44,171478909,0,0x0,8
tick,0x7ffd55ac6f44,171494025,0,0x0,8
tick,0x7ffd55ac6f44,171509046,0,0x0,8
tick,0x7ffd55ac6f44,171525037,0,0x0,8
tick,0x7ffd55ac6f44,171541061,0,0x0,8
tick,0x7ffd55ac6f44,171556021,0,0x0,8
tick,0x7ffd55ac6f44,171571300,0,0x0,8
tick,0x7ffd55ac6f44,171586859,0,0x0,8
tick,0x7ffd55ac6f44,171602070,0,0x0,8
tick,0x7ffd55ac6f44,171617200,0,0x0,8
tick,0x7ffd55ac6f44,171633234,0,0x0,8
tick,0x7ffd55ac6f44,171648878,0,0x0,8
tick,0x7ffd55ac6f44,171665085,0,0x0,8
tick,0x7ffd55ac6f44,171679917,0,0x0,8
tick,0x7ffd55ac6f44,171696090,0,0x0,8
tick,0x7ffd55ac6f44,171710877,0,0x0,8
tick,0x7ffd55ac6f44,171725867,0,0x0,8
tick,0x7ffd55ac6f44,171740852,0,0x0,8
tick,0x7ffd55ac6f44,171755852,0,0x0,8
tick,0x7ffd55ac6f44,171770866,0,0x0,8
tick,0x7ffd55ac6f44,171785999,0,0x0,8
tick,0x7ffd55ac6f44,171801139,0,0x0,8
tick,0x7ffd55ac6f44,171816638,0,0x0,8
tick,0x7ffd55ac6f44,171832123,0,0x0,8
tick,0x7ffd55ac6f44,171848396,0,0x0,8
tick,0x7ffd55ac6f44,171863789,0,0x0,8
tick,0x7ffd55ac6f44,171879698,0,0x0,8
tick,0x7ffd55ac6f44,171894697,0,0x0,8
tick,0x7ffd55ac6f44,171910286,0,0x0,8
tick,0x7ffd55ac6f44,171926028,0,0x0,8
tick,0x7ffd55ac6f44,171941955,0,0x0,8
tick,0x7ffd55ac6f44,171957495,0,0x0,8
tick,0x7ffd55ac6f44,171973326,0,0x0,8
tick,0x7ffd55ac6f44,171988779,0,0x0,8
tick,0x7ffd55ac6f44,172004818,0,0x0,8
tick,0x7ffd55ac6f44,172019737,0,0x0,8
tick,0x7ffd55ac6f44,172034860,0,0x0,8
tick,0x7ffd55ac6f44,172050668,0,0x0,8
tick,0x7ffd55ac6f44,172065814,0,0x0,8
tick,0x7ffd55ac6f44,172080660,0,0x0,8
tick,0x7ffd55ac6f44,172096226,0,0x0,8
tick,0x7ffd55ac6f44,172111287,0,0x0,8
tick,0x7ffd55ac6f44,172126231,0,0x0,8
tick,0x7ffd55ac6f44,172141318,0,0x0,8
tick,0x7ffd55ac6f44,172156438,0,0x0,8
tick,0x7ffd55ac6f44,172171302,0,0x0,8
tick,0x7ffd55ac6f44,172186434,0,0x0,8
tick,0x7ffd55ac6f44,172202229,0,0x0,8
tick,0x7ffd55ac6f44,172217577,0,0x0,8
tick,0x7ffd55ac6f44,172233431,0,0x0,8
tick,0x7ffd55ac6f44,172249061,0,0x0,8
tick,0x7ffd55ac6f44,172264473,0,0x0,8
tick,0x7ffd55ac6f44,172279740,0,0x0,8
tick,0x7ffd55ac6f44,172295421,0,0x0,8
tick,0x7ffd55ac6f44,172310772,0,0x0,8
tick,0x7ffd55ac6f44,172326483,0,0x0,8
tick,0x7ffd55ac6f44,172342453,0,0x0,8
tick,0x7ffd55ac6f44,172357874,0,0x0,8
tick,0x7ffd55ac6f44,172373329,0,0x0,8
tick,0x7ffd55ac6f44,172388811,0,0x0,8
tick,0x7ffd55ac6f44,172403851,0,0x0,8
tick,0x7ffd55ac6f44,172418768,0,0x0,8
tick,0x7ffd55ac6f44,172433689,0,0x0,8
tick,0x7ffd55ac6f44,172449161,0,0x0,8
tick,0x7ffd55ac6f44,172464630,0,0x0,8
tick,0x7ffd55ac6f44,172480807,0,0x0,8
tick,0x7ffd55ac6f44,172495524,0,0x0,8
tick,0x7ffd55ac6f44,172510536,0,0x0,8
tick,0x7ffd55ac6f44,172525586,0,0x0,8
tick,0x7ffd55ac6f44,172540396,0,0x0,8
tick,0x7ffd55ac6f44,172555430,0,0x0,8
tick,0x7ffd55ac6f44,172571231,0,0x0,8
tick,0x7ffd55ac6f44,172586251,0,0x0,8
tick,0x7ffd55ac6f44,172602350,0,0x0,8
tick,0x7ffd55ac6f44,172618268,0,0x0,8
tick,0x7ffd55ac6f44,172634219,0,0x0,8
tick,0x7ffd55ac6f44,172649485,0,0x0,8
tick,0x7ffd55ac6f44,172665228,0,0x0,8
tick,0x7ffd55ac6f44,172680230,0,0x0,8
tick,0x7ffd55ac6f44,172695169,0,0x0,8
tick,0x7ffd55ac6f44,172710704,0,0x0,8
tick,0x7ffd55ac6f44,172725810,0,0x0,8
tick,0x7ffd55ac6f44,172741393,0,0x0,8
tick,0x7ffd55ac6f44,172757532,0,0x0,8
tick,0x7ffd55ac6f44,172773445,0,0x0,8
tick,0x7ffd55ac6f44,172788778,0,0x0,8
tick,0x7ffd55ac6f44,172804429,0,0x0,8
tick,0x7ffd55ac6f44,172819774,0,0x0,8
tick,0x7ffd55ac6f44,172835349,0,0x0,8
tick,0x7ffd55ac6f44,172850825,0,0x0,8
tick,0x7ffd55ac6f44,172866113,0,0x0,8
tick,0x7ffd55ac6f44,172881573,0,0x0,8
tick,0x7ffd55ac6f44,172897725,0,0x0,8
tick,0x7ffd55ac6f44,172913672,0,0x0,8
tick,0x7ffd55ac6f44,172928873,0,0x0,8
tick,0x7ffd55ac6f44,172944148,0,0x0,8
tick,0x7ffd55ac6f44,172960114,0,0x0,8
tick,0x7ffd55ac6f44,172976180,0,0x0,8
tick,0x7ffd55ac6f44,172991268,0,0x0,8
tick,0x7ffd55ac6f44,173006082,0,0x0,8
tick,0x7ffd55ac6f44,173021313,0,0x0,8
tick,0x7ffd55ac6f44,173037285,0,0x0,8
tick,0x7ffd55ac6f44,173052506,0,0x0,8
tick,0x7ffd55ac6f44,173067863,0,0x0,8
tick,0x7ffd55ac6f44,173083649,0,0x0,8
tick,0x7ffd55ac6f44,173099811,0,0x0,8
tick,0x7ffd55ac6f44,173115189,0,0x0,8
tick,0x7ffd55ac6f44,173130744,0,0x0,8
tick,0x7ffd55ac6f44,173146248,0,0x0,8
tick,0x7ffd55ac6f44,173161530,0,0x0,8
tick,0x7ffd55ac6f44,173177653,0,0x0,8
tick,0x7ffd55ac6f44,173193369,0,0x0,8
tick,0x7ffd55ac6f44,173208879,0,0x0,8
tick,0x7ffd55ac6f44,173224674,0,0x0,8
tick,0x7ffd55ac6f44,173240527,0,0x0,8
tick,0x7ffd55ac6f44,173255805,0,0x0,8
tick,0x7ffd55ac6f44,173270817,0,0x0,8
tick,0x7ffd55ac6f44,173286248,0,0x0,8
tick,0x7ffd55ac6f44,173301647,0,0x0,8
tick,0x7ffd55ac6f44,173317371,0,0x0,8
tick,0x7ffd55ac6f44,173333663,0,0x0,8
tick,0x7ffd55ac6f44,173349086,0,0x0,8
tick,0x7ffd55ac6f44,173363780,0,0x0,8
tick,0x7ffd55ac6f44,173379062,0,0x0,8
tick,0x7ffd55ac6f44,173394838,0,0x0,8
tick,0x7ffd55ac6f44,173410406,0,0x0,8
tick,0x7ffd55ac6f44,173426224,0,0x0,8
tick,0x7ffd55ac6f44,173441502,0,0x0,8
tick,0x7ffd55ac6f44,173457661,0,0x0,8
tick,0x7ffd55ac6f44,173473689,0,0x0,8
tick,0x7ffd55ac6f44,173489629,0,0x0,8
tick,0x7ffd55ac6f44,173504883,0,0x0,8
tick,0x7ffd55ac6f44,173520972,0,0x0,8
tick,0x7ffd55ac6f44,173536463,0,0x0,8
tick,0x7ffd55ac6f44,173551450,0,0x0,8
tick,0x7ffd55ac6f44,173566120,0,0x0,8
tick,0x7ffd55ac6f44,173581395,0,0x0,8
tick,0x7ffd55ac6f44,173597016,0,0x0,8
tick,0x7ffd55ac6f44,173612528,0,0x0,8
tick,0x7ffd55ac6f44,173627447,0,0x0,8
tick,0x7ffd55ac6f44,173643436,0,0x0,8
tick,0x7ffd55ac6f44,173659452,0,0x0,8
tick,0x7ffd55ac6f44,173675538,0,0x0,8
tick,0x7ffd55ac6f44,173690439,0,0x0,8
tick,0x7ffd55ac6f44,173705509,0,0x0,8
tick,0x7ffd55ac6f44,173720640,0,0x0,8
tick,0x7ffd55ac6f44,173735487,0,0x0,8
tick,0x7ffd55ac6f44,173750867,0,0x0,8
tick,0x7ffd55ac6f44,173765513,0,0x0,8
tick,0x7ffd55ac6f44,173781603,0,0x0,8
tick,0x7ffd55ac6f44,173796564,0,0x0,8
tick,0x7ffd55ac6f44,173811803,0,0x0,8
tick,0x7ffd55ac6f44,173826616,0,0x0,8
tick,0x7ffd55ac6f44,173841471,0,0x0,8
tick,0x7ffd55ac6f44,173857469,0,0x0,8
tick,0x7ffd55ac6f44,173873508,0,0x0,8
tick,0x7ffd55ac6f44,173889556,0,0x0,8
tick,0x7ffd55ac6f44,173905478,0,0x0,8
tick,0x7ffd55ac6f44,173920742,0,0x0,8
tick,0x7ffd55ac6f44,173935957,0,0x0,8
tick,0x7ffd55ac6f44,173951607,0,0x0,8
tick,0x7ffd55ac6f44,173966456,0,0x0,8
tick,0x7ffd55ac6f44,173981926,0,0x0,8
tick,0x7ffd55ac6f44,173997246,0,0x0,8
tick,0x7ffd55ac6f44,174012281,0,0x0,8
tick,0x7ffd55ac6f44,174027221,0,0x0,8
tick,0x7ffd55ac6f44,174043240,0,0x0,8
tick,0x7ffd55ac6f44,174058765,0,0x0,8
tick,0x7ffd55ac6f44,174074411,0,0x0,8
tick,0x7ffd55ac6f44,174089861,0,0x0,8
tick,0x7ffd55ac6f44,174105123,0,0x0,8
tick,0x7ffd55ac6f44,174119601,0,0x0,8
tick,0x7ffd55ac6f44,174134284,0,0x0,8
tick,0x7ffd55ac6f44,174150044,0,0x0,8
tick,0x7ffd55ac6f44,174165412,0,0x0,8
tick,0x7ffd55ac6f44,174181435,0,0x0,8
tick,0x7ffd55ac6f44,174196603,0,0x0,8
tick,0x7ffd55ac6f44,174212033,0,0x0,8
tick,0x7ffd55ac6f44,174227119,0,0x0,8
tick,0x7ffd55ac6f44,174242330,0,0x0,8
tick,0x7ffd55ac6f44,174257579,0,0x0,8
tick,0x7ffd55ac6f44,174273128,0,0x0,8
tick,0x7ffd55ac6f44,174288453,0,0x0,8
tick,0x7ffd55ac6f44,174303818,0,0x0,8
tick,0x7ffd55ac6f44,174319769,0,0x0,8
tick,0x7ffd55ac6f44,174335345,0,0x0,8
tick,0x7ffd55ac6f44,174350534,0,0x0,8
tick,0x7ffd55ac6f44,174365537,0,0x0,8
tick,0x7ffd55ac6f44,174381031,0,0x0,8
tick,0x7ffd55ac6f44,174395862,0,0x0,8
tick,0x7ffd55ac6f44,174411220,0,0x0,8
tick,0x7ffd55ac6f44,174427452,0,0x0,8
tick,0x7ffd55ac6f44,174443217,0,0x0,8
tick,0x7ffd55ac6f44,174459163,0,0x0,8
tick,0x7ffd55ac6f44,174475143,0,0x0,8
tick,0x7ffd55ac6f44,174491195,0,0x0,8
tick,0x7ffd55ac6f44,174507106,0,0x0,8
tick,0x7ffd55ac6f44,174522203,0,0x0,8
tick,0x7ffd55ac6f44,174537101,0,0x0,8
tick,0x7ffd55ac6f44,174552128,0,0x0,8
tick,0x7ffd55ac6f44,174566906,0,0x0,8
tick,0x7ffd55ac6f44,174582131,0,0x0,8
tick,0x7ffd55ac6f44,174597019,0,0x0,8
tick,0x7ffd55ac6f44,174612058,0,0x0,8
tick,0x7ffd55ac6f44,174627180,0,0x0,8
tick,0x7ffd55ac6f44,174641857,0,0x0,8
tick,0x7ffd55ac6f44,174656988,0,0x0,8
tick,0x7ffd55ac6f44,174672202,0,0x0,8
tick,0x7ffd55ac6f44,174688224,0,0x0,8
tick,0x7ffd55ac6f44,174704666,0,0x0,8
tick,0x7ffd55ac6f44,174720025,0,0x0,8
tick,0x7ffd55ac6f44,174736062,0,0x0,8
tick,0x7ffd55ac6f44,174752258,0,0x0,8
tick,0x7ffd55ac6f44,174768291,0,0x0,8
tick,0x7ffd55ac6f44,174783068,0,0x0,8
tick,0x7ffd55ac6f44,174799290,0,0x0,8
tick,0x7ffd55ac6f44,174815180,0,0x0,8
tick,0x7ffd55ac6f44,174830324,0,0x0,8
tick,0x7ffd55ac6f44,174845110,0,0x0,8
tick,0x7ffd55ac6f44,174860354,0,0x0,8
tick,0x7ffd55ac6f44,174875310,0,0x0,8
tick,0x7ffd55ac6f44,174890449,0,0x0,8
tick,0x7ffd55ac6f44,174905289,0,0x0,8
tick,0x7ffd55ac6f44,174920108,0,0x0,8
tick,0x7ffd55ac6f44,174935393,0,0x0,8
tick,0x7ffd55ac6f44,174950068,0,0x0,8
tick,0x7ffd55ac6f44,174965614,0,0x0,8
tick,0x7ffd55ac6f44,174981114,0,0x0,8
tick,0x7ffd55ac6f44,174996016,0,0x0,8
tick,0x7ffd55ac6f44,175011057,0,0x0,8
tick,0x7ffd55ac6f44,175027039,0,0x0,8
tick,0x7ffd55ac6f44,175042981,0,0x0,8
tick,0x7ffd55ac6f44,175059003,0,0x0,8
tick,0x7ffd55ac6f44,175075051,0,0x0,8
tick,0x7ffd55ac6f44,175090019,0,0x0,8
tick,0x7ffd55ac6f44,175104992,0,0x0,8
tick,0x7ffd55ac6f44,175120068,0,0x0,8
tick,0x7ffd55ac6f44,175135002,0,0x0,8
tick,0x7ffd55ac6f44,175150047,0,0x0,8
tick,0x7ffd55ac6f44,175165014,0,0x0,8
tick,0x7ffd55ac6f44,175180036,0,0x0,8
tick,0x7ffd55ac6f44,175195032,0,0x0,8
tick,0x7ffd55ac6f44,175210019,0,0x0,8
tick,0x7ffd55ac6f44,175224993,0,0x0,8
tick,0x7ffd55ac6f44,175240004,0,0x0,8
tick,0x7ffd55ac6f44,175255012,0,0x0,8
tick,0x7ffd55ac6f44,175270038,0,0x0,8
tick,0x7ffd55ac6f44,175285111,0,0x0,8
tick,0x7ffd55ac6f44,175301139,0,0x0,8
tick,0x7ffd55ac6f44,175317060,0,0x0,8
tick,0x7ffd55ac6f44,175333058,0,0x0,8
tick,0x7ffd55ac6f44,175349096,0,0x0,8
tick,0x7ffd55ac6f44,175365058,0,0x0,8
tick,0x7ffd55ac6f44,175381025,0,0x0,8
tick,0x7ffd55ac6f44,175397039,0,0x0,8
tick,0x7ffd55ac6f44,175413019,0,0x0,8
tick,0x7ffd55ac6f44,175428543,0,0x0,8
tick,0x7ffd55ac6f44,175443149,0,0x0,8
tick,0x7ffd55ac6f44,175459440,0,0x0,8
tick,0x7ffd55ac6f44,175475618,0,0x0,8
tick,0x7ffd55ac6f44,175491499,0,0x0,8
tick,0x7ffd55ac6f44,175506613,0,0x0,8
tick,0x7ffd55ac6f44,175521905,0,0x0,8
tick,0x7ffd55ac6f44,175537397,0,0x0,8
tick,0x7ffd55ac6f44,175553719,0,0x0,8
tick,0x7ffd55ac6f44,175568826,0,0x0,8
tick,0x7ffd55ac6f44,175584326,0,0x0,8
tick,0x7ffd55ac6f44,175599750,0,0x0,8
tick,0x7ffd55ac6f44,175615182,0,0x0,8
tick,0x7ffd55ac6f44,175630478,0,0x0,8
tick,0x7ffd55ac6f44,175645926,0,0x0,8
tick,0x7ffd55ac6f44,175661188,0,0x0,8
tick,0x7ffd55ac6f44,175676284,0,0x0,8
tick,0x7ffd55ac6f44,175691875,0,0x0,8
tick,0x7ffd55ac6f44,175707106,0,0x0,8
tick,0x7ffd55ac6f44,175723084,0,0x0,8
tick,0x7ffd55ac6f44,175738132,0,0x0,8
tick,0x7ffd55ac6f44,175753022,0,0x0,8
tick,0x7ffd55ac6f44,175768551,0,0x0,8
tick,0x7ffd55ac6f44,175784637,0,0x0,8
tick,0x7ffd55ac6f44,175800492,0,0x0,8
tick,0x7ffd55ac6f44,175815502,0,0x0,8
tick,0x7ffd55ac6f44,175831558,0,0x0,8
tick,0x7ffd55ac6f44,175847046,0,0x0,8
tick,0x7ffd55ac6f44,175862994,0,0x0,8
tick,0x7ffd55ac6f44,175878762,0,0x0,8
tick,0x7ffd55ac6f44,175894350,0,0x0,8
tick,0x7ffd55ac6f44,175910029,0,0x0,8
tick,0x7ffd55ac6f44,175925266,0,0x0,8
tick,0x7ffd55ac6f44,175940365,0,0x0,8
tick,0x7ffd55ac6f44,175955419,0,0x0,8
tick,0x7ffd55ac6f44,175970071,0,0x0,8
tick,0x7ffd55ac6f44,175985191,0,0x0,8
tick,0x7ffd55ac6f44,176001082,0,0x0,8
tick,0x7ffd55ac6f44,176016537,0,0x0,8
tick,0x7ffd55ac6f44,176031629,0,0x0,8
tick,0x7ffd55ac6f44,176046835,0,0x0,8
tick,0x7ffd55ac6f44,176062176,0,0x0,8
tick,0x7ffd55ac6f44,176077746,0,0x0,8
tick,0x7ffd55ac6f44,176093548,0,0x0,8
tick,0x7ffd55ac6f44,176109416,0,0x0,8
tick,0x7ffd55ac6f44,176124420,0,0x0,8
tick,0x7ffd55ac6f44,176139726,0,0x0,8
tick,0x7ffd55ac6f44,176155152,0,0x0,8
tick,0x7ffd55ac6f44,176171239,0,0x0,8
tick,0x7ffd55ac6f44,176186314,0,0x0,8
tick,0x7ffd55ac6f44,176201514,0,0x0,8
tick,0x7ffd55ac6f44,176216738,0,0x0,8
tick,0x7ffd55ac6f44,176232849,0,0x0,8
tick,0x7ffd55ac6f44,176248161,0,0x0,8
tick,0x7ffd55ac6f44,176263441,0,0x0,8
tick,0x7ffd55ac6f44,176279559,0,0x0,8
tick,0x7ffd55ac6f44,176294326,0,0x0,8
tick,0x7ffd55ac6f44,176309627,0,0x0,8
tick,0x7ffd55ac6f44,176325072,0,0x0,8
tick,0x7ffd55ac6f44,176340312,0,0x0,8
tick,0x7ffd55ac6f44,176356303,0,0x0,8
tick,0x7ffd55ac6f44,176372318,0,0x0,8
tick,0x7ffd55ac6f44,176387854,0,0x0,8
tick,0x7ffd55ac6f44,176403466,0,0x0,8
tick,0x7ffd55ac6f44,176419546,0,0x0,8
tick,0x7ffd55ac6f44,176435373,0,0x0,8
tick,0x7ffd55ac6f44,176450569,0,0x0,8
tick,0x7ffd55ac6f44,176466620,0,0x0,8
tick,0x7ffd55ac6f44,176482626,0,0x0,8
tick,0x7ffd55ac6f44,176497672,0,0x0,8
tick,0x7ffd55ac6f44,176513584,0,0x0,8
tick,0x7ffd55ac6f44,176529314,0,0x0,8
tick,0x7ffd55ac6f44,176544388,0,0x0,8
tick,0x7ffd55ac6f44,176560172,0,0x0,8
tick,0x7ffd55ac6f44,176576102,0,0x0,8
tick,0x7ffd55ac6f44,176592350,0,0x0,8
tick,0x7ffd55ac6f44,176607696,0,0x0,8
tick,0x7ffd55ac6f44,176623473,0,0x0,8
tick,0x7ffd55ac6f44,176638389,0,0x0,8
tick,0x7ffd55ac6f44,176653148,0,0x0,8
tick,0x7ffd55ac6f44,176668771,0,0x0,8
tick,0x7ffd55ac6f44,176684123,0,0x0,8
tick,0x7ffd55ac6f44,176700115,0,0x0,8
tick,0x7ffd55ac6f44,176715340,0,0x0,8
tick,0x7ffd55ac6f44,176730692,0,0x0,8
tick,0x7ffd55ac6f44,176746064,0,0x0,8
tick,0x7ffd55ac6f44,176761874,0,0x0,8
tick,0x7ffd55ac6f44,176777272,0,0x0,8
tick,0x7ffd55ac6f44,176793691,0,0x0,8
tick,0x7ffd55ac6f44,176809361,0,0x0,8
tick,0x7ffd55ac6f44,176824588,0,0x0,8
tick,0x7ffd55ac6f44,176839523,0,0x0,8
tick,0x7ffd55ac6f44,176854291,0,0x0,8
tick,0x7ffd55ac6f44,176869217,0,0x0,8
tick,0x7ffd55ac6f44,176885279,0,0x0,8
tick,0x7ffd55ac6f44,176900808,0,0x0,8
tick,0x7ffd55ac6f44,176915907,0,0x0,8
tick,0x7ffd55ac6f44,176931010,0,0x0,8
tick,0x7ffd55ac6f44,176946657,0,0x0,8
tick,0x7ffd55ac6f44,176962004,0,0x0,8
tick,0x7ffd55ac6f44,176978034,0,0x0,8
tick,0x7ffd55ac6f44,176993631,0,0x0,8
tick,0x7ffd55ac6f44,177009124,0,0x0,8
tick,0x7ffd55ac6f44,177025083,0,0x0,8
tick,0x7ffd55ac6f44,177040177,0,0x0,8
tick,0x7ffd55ac6f44,177055266,0,0x0,8
tick,0x7ffd55ac6f44,177070548,0,0x0,8
tick,0x7ffd55ac6f44,177086101,0,0x0,8
tick,0x7ffd55ac6f44,177101938,0,0x0,8
tick,0x7ffd55ac6f44,177117653,0,0x0,8
tick,0x7ffd55ac6f44,177133376,0,0x0,8
tick,0x7ffd55ac6f44,177148534,0,0x0,8
tick,0x7ffd55ac6f44,177164523,0,0x0,8
tick,0x7ffd55ac6f44,177179914,0,0x0,8
tick,0x7ffd55ac6f44,177195245,0,0x0,8
tick,0x7ffd55ac6f44,177209810,0,0x0,8
tick,0x7ffd55ac6f44,177225334,0,0x0,8
tick,0x7ffd55ac6f44,177240835,0,0x0,8
tick,0x7ffd55ac6f44,177256684,0,0x0,8
tick,0x7ffd55ac6f44,177272222,0,0x0,8
tick,0x7ffd55ac6f44,177288089,0,0x0,8
tick,0x7ffd55ac6f44,177303830,0,0x0,8
tick,0x7ffd55ac6f44,177319504,0,0x0,8
tick,0x7ffd55ac6f44,177335219,0,0x0,8
tick,0x7ffd55ac6f44,177351318,0,0x0,8
tick,0x7ffd55ac6f44,177367449,0,0x0,8
tick,0x7ffd55ac6f44,177382985,0,0x0,8
tick,0x7ffd55ac6f44,177398439,0,0x0,8
tick,0x7ffd55ac6f44,177413412,0,0x0,8
tick,0x7ffd55ac6f44,177428868,0,0x0,8
tick,0x7ffd55ac6f44,177444254,0,0x0,8
tick,0x7ffd55ac6f44,177459311,0,0x0,8
tick,0x7ffd55ac6f44,177474317,0,0x0,8
tick,0x7ffd55ac6f44,177489765,0,0x0,8
tick,0x7ffd55ac6f44,177504662,0,0x0,8
tick,0x7ffd55ac6f44,177519491,0,0x0,8
tick,0x7ffd55ac6f44,177535814,0,0x0,8
tick,0x7ffd55ac6f44,177550600,0,0x0,8
tick,0x7ffd55ac6f44,177565491,0,0x0,8
tick,0x7ffd55ac6f44,177583845,0,0x0,8
tick,0x7ffd55ac6f44,177597074,0,0x0,8
tick,0x7ffd55ac6f44,177611480,0,0x0,8
tick,0x7ffd55ac6f44,177626552,0,0x0,8
tick,0x7ffd55ac6f44,177642491,0,0x0,8
tick,0x7ffd55ac6f44,177658455,0,0x0,8
tick,0x7ffd55ac6f44,177674433,0,0x0,8
tick,0x7ffd55ac6f44,177690994,0,0x0,8
tick,0x7ffd55ac6f44,177706465,0,0x0,8
tick,0x7ffd55ac6f44,177722513,0,0x0,8
tick,0x7ffd55ac6f44,177738496,0,0x0,8
tick,0x7ffd55ac6f44,177754408,0,0x0,8
tick,0x7ffd55ac6f44,177770860,0,0x0,8
tick,0x7ffd55ac6f44,177786389,0,0x0,8
tick,0x7ffd55ac6f44,177801429,0,0x0,8
tick,0x7ffd55ac6f44,177816448,0,0x0,8
tick,0x7ffd55ac6f44,177832439,0,0x0,8
tick,0x7ffd55ac6f44,177847466,0,0x0,8
tick,0x7ffd55ac6f44,177862434,0,0x0,8
tick,0x7ffd55ac6f44,177878451,0,0x0,8
tick,0x7ffd55ac6f44,177894402,0,0x0,8
tick,0x7ffd55ac6f44,177910409,0,0x0,8
tick,0x7ffd55ac6f44,177925388,0,0x0,8
tick,0x7ffd55ac6f44,177940371,0,0x0,8
tick,0x7ffd55ac6f44,177955382,0,0x0,8
tick,0x7ffd55ac6f44,177970377,0,0x0,8
tick,0x7ffd55ac6f44,177985389,0,0x0,8
tick,0x7ffd55ac6f44,178000450,0,0x0,8
tick,0x7ffd55ac6f44,178015374,0,0x0,8
tick,0x7ffd55ac6f44,178030417,0,0x0,8
tick,0x7ffd55ac6f44,178046420,0,0x0,8
tick,0x7ffd55ac6f44,178062634,0,0x0,8
tick,0x7ffd55ac6f44,178077388,0,0x0,8
tick,0x7ffd55ac6f44,178092490,0,0x0,8
tick,0x7ffd55ac6f44,178108432,0,0x0,8
tick,0x7ffd55ac6f44,178123443,0,0x0,8
tick,0x7ffd55ac6f44,178139038,0,0x0,8
tick,0x7ffd55ac6f44,178154571,0,0x0,8
tick,0x7ffd55ac6f44,178169362,0,0x0,8
tick,0x7ffd55ac6f44,178184656,0,0x0,8
tick,0x7ffd55ac6f44,178199864,0,0x0,8
tick,0x7ffd55ac6f44,178214886,0,0x0,8
tick,0x7ffd55ac6f44,178229698,0,0x0,8
tick,0x7ffd55ac6f44,178244622,0,0x0,8
tick,0x7ffd55ac6f44,178260642,0,0x0,8
tick,0x7ffd55ac6f44,178276244,0,0x0,8
tick,0x7ffd55ac6f44,178292197,0,0x0,8
tick,0x7ffd55ac6f44,178307227,0,0x0,8
tick,0x7ffd55ac6f44,178322235,0,0x0,8
tick,0x7ffd55ac6f44,178337211,0,0x0,8
tick,0x7ffd55ac6f44,178352369,0,0x0,8
tick,0x7ffd55ac6f44,178367251,0,0x0,8
tick,0x7ffd55ac6f44,178382381,0,0x0,8
tick,0x7ffd55ac6f44,178398534,0,0x0,8
tick,0x7ffd55ac6f44,178414656,0,0x0,8
tick,0x7ffd55ac6f44,178430623,0,0x0,8
tick,0x7ffd55ac6f44,178446617,0,0x0,8
tick,0x7ffd55ac6f44,178462326,0,0x0,8
tick,0x7ffd55ac6f44,178476997,0,0x0,8
tick,0x7ffd55ac6f44,178492733,0,0x0,8
tick,0x7ffd55ac6f44,178508634,0,0x0,8
tick,0x7ffd55ac6f44,178523855,0,0x0,8
tick,0x7ffd55ac6f44,178538683,0,0x0,8
tick,0x7ffd55ac6f44,178553887,0,0x0,8
tick,0x7ffd55ac6f44,178568907,0,0x0,8
tick,0x7ffd55ac6f44,178583639,0,0x0,8
tick,0x7ffd55ac6f44,178599008,0,0x0,8
tick,0x7ffd55ac6f44,178614830,0,0x0,8
tick,0x7ffd55ac6f44,178630621,0,0x0,8
tick,0x7ffd55ac6f44,178645906,0,0x0,8
tick,0x7ffd55ac6f44,178660891,0,0x0,8
tick,0x7ffd55ac6f44,178676693,0,0x0,8
tick,0x7ffd55ac6f44,178691687,0,0x0,8
tick,0x7ffd55ac6f44,178707301,0,0x0,8
tick,0x7ffd55ac6f44,178723298,0,0x0,8
tick,0x7ffd55ac6f44,178739290,0,0x0,8
tick,0x7ffd55ac6f44,178754857,0,0x0,8
tick,0x7ffd55ac6f44,178770858,0,0x0,8
tick,0x7ffd55ac6f44,178786218,0,0x0,8
tick,0x7ffd55ac6f44,178801209,0,0x0,8
tick,0x7ffd55ac6f44,178816325,0,0x0,8
tick,0x7ffd55ac6f44,178832303,0,0x0,8
tick,0x7ffd55ac6f44,178847140,0,0x0,8
tick,0x7ffd55ac6f44,178862214,0,0x0,8
tick,0x7ffd55ac6f44,178878249,0,0x0,8
tick,0x7ffd55ac6f44,178893502,0,0x0,8
tick,0x7ffd55ac6f44,178908426,0,0x0,8
tick,0x7ffd55ac6f44,178923493,0,0x0,8
tick,0x7ffd55ac6f44,178939468,0,0x0,8
tick,0x7ffd55ac6f44,178955530,0,0x0,8
tick,0x7ffd55ac6f44,178971356,0,0x0,8
tick,0x7ffd55ac6f44,178986905,0,0x0,8
tick,0x7ffd55ac6f44,179002307,0,0x0,8
tick,0x7ffd55ac6f44,179017553,0,0x0,8
tick,0x7ffd55ac6f44,179032107,0,0x0,8
tick,0x7ffd55ac6f44,179047182,0,0x0,8
tick,0x7ffd55ac6f44,179062661,0,0x0,8
tick,0x7ffd55ac6f44,179077613,0,0x0,8
tick,0x7ffd55ac6f44,179092839,0,0x0,8
tick,0x7ffd55ac6f44,179107906,0,0x0,8
tick,0x7ffd55ac6f44,179123247,0,0x0,8
tick,0x7ffd55ac6f44,179138237,0,0x0,8
tick,0x7ffd55ac6f44,179153524,0,0x0,8
tick,0x7ffd55ac6f44,179168514,0,0x0,8
tick,0x7ffd55ac6f44,179184061,0,0x0,8
tick,0x7ffd55ac6f44,179199900,0,0x0,8
tick,0x7ffd55ac6f44,179215883,0,0x0,8
tick,0x7ffd55ac6f44,179231040,0,0x0,8
tick,0x7ffd55ac6f44,179246390,0,0x0,8
tick,0x7ffd55ac6f44,179261894,0,0x0,8
tick,0x7ffd55ac6f44,179277238,0,0x0,8
tick,0x7ffd55ac6f44,179292497,0,0x0,8
tick,0x7ffd55ac6f44,179308129,0,0x0,8
tick,0x7ffd55ac6f44,179323149,0,0x0,8
tick,0x7ffd55ac6f44,179338616,0,0x0,8
tick,0x7ffd55ac6f44,179353410,0,0x0,8
tick,0x7ffd55ac6f44,179368607,0,0x0,8
tick,0x7ffd55ac6f44,179383273,0,0x0,8
tick,0x7ffd55ac6f44,179398405,0,0x0,8
tick,0x7ffd55ac6f44,179413198,0,0x0,8
tick,0x7ffd55ac6f44,179428361,0,0x0,8
tick,0x7ffd55ac6f44,179444210,0,0x0,8
tick,0x7ffd55ac6f44,179459819,0,0x0,8
tick,0x7ffd55ac6f44,179475457,0,0x0,8
tick,0x7ffd55ac6f44,179491012,0,0x0,8
tick,0x7ffd55ac6f44,179507121,0,0x0,8
tick,0x7ffd55ac6f44,179522580,0,0x0,8
tick,0x7ffd55ac6f44,179538132,0,0x0,8
tick,0x7ffd55ac6f44,179553919,0,0x0,8
tick,0x7ffd55ac6f44,179569978,0,0x0,8
tick,0x7ffd55ac6f44,179585510,0,0x0,8
tick,0x7ffd55ac6f44,179600621,0,0x0,8
tick,0x7ffd55ac6f44,179615744,0,0x0,8
tick,0x7ffd55ac6f44,179631202,0,0x0,8
tick,0x7ffd55ac6f44,179646229,0,0x0,8
tick,0x7ffd55ac6f44,179661438,0,0x0,8
tick,0x7ffd55ac6f44,179676363,0,0x0,8
tick,0x7ffd55ac6f44,179691251,0,0x0,8
tick,0x7ffd55ac6f44,179706283,0,0x0,8
tick,0x7ffd55ac6f44,179722226,0,0x0,8
tick,0x7ffd55ac6f44,179737464,0,0x0,8
tick,0x7ffd55ac6f44,179752349,0,0x0,8
tick,0x7ffd55ac6f44,179767755,0,0x0,8
tick,0x7ffd55ac6f44,179782632,0,0x0,8
tick,0x7ffd55ac6f44,179797855,0,0x0,8
tick,0x7ffd55ac6f44,179813151,0,0x0,8
tick,0x7ffd55ac6f44,179828061,0,0x0,8
tick,0x7ffd55ac6f44,179843069,0,0x0,8
tick,0x7ffd55ac6f44,179858082,0,0x0,8
tick,0x7ffd55ac6f44,179873807,0,0x0,8
tick,0x7ffd55ac6f44,179888609,0,0x0,8
tick,0x7ffd55ac6f44,179904114,0,0x0,8
tick,0x7ffd55ac6f44,179919150,0,0x0,8
tick,0x7ffd55ac6f44,179934123,0,0x0,8
tick,0x7ffd55ac6f44,179949352,0,0x0,8
tick,0x7ffd55ac6f44,179964739,0,0x0,8
tick,0x7ffd55ac6f44,179980664,0,0x0,8
tick,0x7ffd55ac6f44,179996698,0,0x0,8
tick,0x7ffd55ac6f44,180011678,0,0x0,8
tick,0x7ffd55ac6f44,180026650,0,0x0,8
tick,0x7ffd55ac6f44,180042622,0,0x0,8
tick,0x7ffd55ac6f44,180058622,0,0x0,8
tick,0x7ffd55ac6f44,180073601,0,0x0,8
tick,0x7ffd55ac6f44,180088534,0,0x0,8
tick,0x7ffd55ac6f44,180104567,0,0x0,8
tick,0x7ffd55ac6f44,180119549,0,0x0,8
tick,0x7ffd55ac6f44,180134562,0,0x0,8
tick,0x7ffd55ac6f44,180149580,0,0x0,8
tick,0x7ffd55ac6f44,180164520,0,0x0,8
tick,0x7ffd55ac6f44,180179582,0,0x0,8
tick,0x7ffd55ac6f44,180194631,0,0x0,8
tick,0x7ffd55ac6f44,180210642,0,0x0,8
tick,0x7ffd55ac6f44,180226575,0,0x0,8
tick,0x7ffd55ac6f44,180241551,0,0x0,8
tick,0x7ffd55ac6f44,180256581,0,0x0,8
tick,0x7ffd55ac6f44,180271580,0,0x0,8
tick,0x7ffd55ac6f44,180286621,0,0x0,8
tick,0x7ffd55ac6f44,180302548,0,0x0,8
tick,0x7ffd55ac6f44,180318549,0,0x0,8
tick,0x7ffd55ac6f44,180334611,0,0x0,8
tick,0x7ffd55ac6f44,180349539,0,0x0,8
tick,0x7ffd55ac6f44,180364570,0,0x0,8
tick,0x7ffd55ac6f44,180380657,0,0x0,8
tick,0x7ffd55ac6f44,180395698,0,0x0,8
tick,0x7ffd55ac6f44,180410553,0,0x0,8
tick,0x7ffd55ac6f44,180425564,0,0x0,8
tick,0x7ffd55ac6f44,180440634,0,0x0,8
tick,0x7ffd55ac6f44,180455589,0,0x0,8
tick,0x7ffd55ac6f44,180470578,0,0x0,8
tick,0x7ffd55ac6f44,180486632,0,0x0,8
tick,0x7ffd55ac6f44,180502614,0,0x0,8
tick,0x7ffd55ac6f44,180517553,0,0x0,8
tick,0x7ffd55ac6f44,180532551,0,0x0,8
tick,0x7ffd55ac6f44,180548681,0,0x0,8
tick,0x7ffd55ac6f44,180563667,0,0x0,8
tick,0x7ffd55ac6f44,180578603,0,0x0,8
tick,0x7ffd55ac6f44,180594682,0,0x0,8
tick,0x7ffd55ac6f44,180610916,0,0x0,8
tick,0x7ffd55ac6f44,180625566,0,0x0,8
tick,0x7ffd55ac6f44,180640571,0,0x0,8
tick,0x7ffd55ac6f44,180655588,0,0x0,8
tick,0x7ffd55ac6f44,180670613,0,0x0,8
tick,0x7ffd55ac6f44,180685559,0,0x0,8
tick,0x7ffd55ac6f44,180700522,0,0x0,8
tick,0x7ffd55ac6f44,180715589,0,0x0,8
tick,0x7ffd55ac6f44,180730546,0,0x0,8
tick,0x7ffd55ac6f44,180746686,0,0x0,8
tick,0x7ffd55ac6f44,180762593,0,0x0,8
tick,0x7ffd55ac6f44,180777567,0,0x0,8
tick,0x7ffd55ac6f44,180792566,0,0x0,8
tick,0x7ffd55ac6f44,180807554,0,0x0,8
tick,0x7ffd55ac6f44,180822580,0,0x0,8
tick,0x7ffd55ac6f44,180837534,0,0x0,8
tick,0x7ffd55ac6f44,180852672,0,0x0,8
tick,0x7ffd55ac6f44,180867564,0,0x0,8
tick,0x7ffd55ac6f44,180882572,0,0x0,8
tick,0x7ffd55ac6f44,180897632,0,0x0,8
tick,0x7ffd55ac6f44,180912564,0,0x0,8
tick,0x7ffd55ac6f44,180927578,0,0x0,8
tick,0x7ffd55ac6f44,180943555,0,0x0,8
tick,0x7ffd55ac6f44,180959548,0,0x0,8
tick,0x7ffd55ac6f44,180974546,0,0x0,8
tick,0x7ffd55ac6f44,180989576,0,0x0,8
tick,0x7ffd55ac6f44,181005610,0,0x0,8
tick,0x7ffd55ac6f44,181020556,0,0x0,8
tick,0x7ffd55ac6f44,181035555,0,0x0,8
tick,0x7ffd55ac6f44,181050540,0,0x0,8
tick,0x7ffd55ac6f44,181066558,0,0x0,8
tick,0x7ffd55ac6f44,181081547,0,0x0,8
tick,0x7ffd55ac6f44,181096587,0,0x0,8
tick,0x7ffd55ac6f44,181111579,0,0x0,8
tick,0x7ffd55ac6f44,181126612,0,0x0,8
tick,0x7ffd55ac6f44,181142565,0,0x0,8
tick,0x7ffd55ac6f44,181158536,0,0x0,8
tick,0x7ffd55ac6f44,181173536,0,0x0,8
tick,0x7ffd55ac6f44,181188585,0,0x0,8
tick,0x7ffd55ac6f44,181204548,0,0x0,8
tick,0x7ffd55ac6f44,181219564,0,0x0,8
tick,0x7ffd55ac6f44,181234561,0,0x0,8
tick,0x7ffd55ac6f44,181249547,0,0x0,8
tick,0x7ffd55ac6f44,181264586,0,0x0,8
tick,0x7ffd55ac6f44,181279570,0,0x0,8
tick,0x7ffd55ac6f44,181294578,0,0x0,8
tick,0x7ffd55ac6f44,181309584,0,0x0,8
tick,0x7ffd55ac6f44,181324797,0,0x0,8
tick,0x7ffd55ac6f44,181340782,0,0x0,8
tick,0x7ffd55ac6f44,181355822,0,0x0,8
tick,0x7ffd55ac6f44,181371754,0,0x0,8
tick,0x7ffd55ac6f44,181387353,0,0x0,8
tick,0x7ffd55ac6f44,181402379,0,0x0,8
tick,0x7ffd55ac6f44,181418355,0,0x0,8
tick,0x7ffd55ac6f44,181434349,0,0x0,8
tick,0x7ffd55ac6f44,181449335,0,0x0,8
tick,0x7ffd55ac6f44,181464213,0,0x0,8
tick,0x7ffd55ac6f44,181480210,0,0x0,8
tick,0x7ffd55ac6f44,181495217,0,0x0,8
tick,0x7ffd55ac6f44,181510254,0,0x0,8
tick,0x7ffd55ac6f44,181526136,0,0x0,8
tick,0x7ffd55ac6f44,181542149,0,0x0,8
tick,0x7ffd55ac6f44,181557025,0,0x0,8
tick,0x7ffd55ac6f44,181573020,0,0x0,8
tick,0x7ffd55ac6f44,181588065,0,0x0,8
tick,0x7ffd55ac6f44,181603095,0,0x0,8
tick,0x7ffd55ac6f44,181619044,0,0x0,8
tick,0x7ffd55ac6f44,181635019,0,0x0,8
tick,0x7ffd55ac6f44,181650838,0,0x0,8
tick,0x7ffd55ac6f44,181666439,0,0x0,8
tick,0x7ffd55ac6f44,181682538,0,0x0,8
tick,0x7ffd55ac6f44,181697067,0,0x0,8
tick,0x7ffd55ac6f44,181711774,0,0x0,8
tick,0x7ffd55ac6f44,181727154,0,0x0,8
tick,0x7ffd55ac6f44,181743146,0,0x0,8
tick,0x7ffd55ac6f44,181758053,0,0x0,8
tick,0x7ffd55ac6f44,181772913,0,0x0,8
tick,0x7ffd55ac6f44,181789062,0,0x0,8
tick,0x7ffd55ac6f44,181803804,0,0x0,8
tick,0x7ffd55ac6f44,181819043,0,0x0,8
tick,0x7ffd55ac6f44,181834239,0,0x0,8
tick,0x7ffd55ac6f44,181850063,0,0x0,8
tick,0x7ffd55ac6f44,181866109,0,0x0,8
tick,0x7ffd55ac6f44,181881091,0,0x0,8
tick,0x7ffd55ac6f44,181895878,0,0x0,8
tick,0x7ffd55ac6f44,181911794,0,0x0,8
tick,0x7ffd55ac6f44,181926983,0,0x0,8
tick,0x7ffd55ac6f44,181942467,0,0x0,8
tick,0x7ffd55ac6f44,181957926,0,0x0,8
tick,0x7ffd55ac6f44,181973343,0,0x0,8
tick,0x7ffd55ac6f44,181988349,0,0x0,8
tick,0x7ffd55ac6f44,182003242,0,0x0,8
tick,0x7ffd55ac6f44,182018267,0,0x0,8
tick,0x7ffd55ac6f44,182034400,0,0x0,8
tick,0x7ffd55ac6f44,182049335,0,0x0,8
tick,0x7ffd55ac6f44,182064362,0,0x0,8
tick,0x7ffd55ac6f44,182079373,0,0x0,8
tick,0x7ffd55ac6f44,182095495,0,0x0,8
tick,0x7ffd55ac6f44,182110380,0,0x0,8
tick,0x7ffd55ac6f44,182126347,0,0x0,8
tick,0x7ffd55ac6f44,182142371,0,0x0,8
tick,0x7ffd55ac6f44,182157040,0,0x0,8
tick,0x7ffd55ac6f44,182172039,0,0x0,8
tick,0x7ffd55ac6f44,182188019,0,0x0,8
tick,0x7ffd55ac6f44,182202999,0,0x0,8
tick,0x7ffd55ac6f44,182219063,0,0x0,8
tick,0x7ffd55ac6f44,182233939,0,0x0,8
tick,0x7ffd55ac6f44,182248863,0,0x0,8
tick,0x7ffd55ac6f44,182263893,0,0x0,8
tick,0x7ffd55ac6f44,182278906,0,0x0,8
tick,0x7ffd55ac6f44,182294877,0,0x0,8
tick,0x7ffd55ac6f44,182311016,0,0x0,8
tick,0x7ffd55ac6f44,182327017,0,0x0,8
tick,0x7ffd55ac6f44,182342251,0,0x0,8
tick,0x7ffd55ac6f44,182356982,0,0x0,8
tick,0x7ffd55ac6f44,182372205,0,0x0,8
tick,0x7ffd55ac6f44,182387281,0,0x0,8
tick,0x7ffd55ac6f44,182403164,0,0x0,8
tick,0x7ffd55ac6f44,182418574,0,0x0,8
tick,0x7ffd55ac6f44,182433899,0,0x0,8
tick,0x7ffd55ac6f44,182449642,0,0x0,8
tick,0x7ffd55ac6f44,182465292,0,0x0,8
tick,0x7ffd55ac6f44,182480233,0,0x0,8
tick,0x7ffd55ac6f44,182494954,0,0x0,8
tick,0x7ffd55ac6f44,182509570,0,0x0,8
tick,0x7ffd55ac6f44,182524513,0,0x0,8
tick,0x7ffd55ac6f44,182539788,0,0x0,8
tick,0x7ffd55ac6f44,182555623,0,0x0,8
tick,0x7ffd55ac6f44,182571165,0,0x0,8
tick,0x7ffd55ac6f44,182586199,0,0x0,8
tick,0x7ffd55ac6f44,182601896,0,0x0,8
tick,0x7ffd55ac6f44,182617776,0,0x0,8
tick,0x7ffd55ac6f44,182633099,0,0x0,8
tick,0x7ffd55ac6f44,182648847,0,0x0,8
tick,0x7ffd55ac6f44,182664256,0,0x0,8
tick,0x7ffd55ac6f44,182680328,0,0x0,8
tick,0x7ffd55ac6f44,182695213,0,0x0,8
tick,0x7ffd55ac6f44,182710662,0,0x0,8
tick,0x7ffd55ac6f44,182726628,0,0x0,8
tick,0x7ffd55ac6f44,182742059,0,0x0,8
tick,0x7ffd55ac6f44,182757808,0,0x0,8
tick,0x7ffd55ac6f44,182773077,0,0x0,8
tick,0x7ffd55ac6f44,182789091,0,0x0,8
tick,0x7ffd55ac6f44,182805058,0,0x0,8
tick,0x7ffd55ac6f44,182819853,0,0x0,8
tick,0x7ffd55ac6f44,182835190,0,0x0,8
tick,0x7ffd55ac6f44,182851072,0,0x0,8
tick,0x7ffd55ac6f44,182866081,0,0x0,8
tick,0x7ffd55ac6f44,182881106,0,0x0,8
tick,0x7ffd55ac6f44,182896075,0,0x0,8
tick,0x7ffd55ac6f44,182911145,0,0x0,8
tick,0x7ffd55ac6f44,182926089,0,0x0,8
tick,0x7ffd55ac6f44,182940992,0,0x0,8
tick,0x7ffd55ac6f44,182956994,0,0x0,8
tick,0x7ffd55ac6f44,182973081,0,0x0,8
tick,0x7ffd55ac6f44,182987974,0,0x0,8
tick,0x7ffd55ac6f44,183002973,0,0x0,8
tick,0x7ffd55ac6f44,183018081,0,0x0,8
tick,0x7ffd55ac6f44,183033601,0,0x0,8
tick,0x7ffd55ac6f44,183049104,0,0x0,8
tick,0x7ffd55ac6f44,183064557,0,0x0,8
tick,0x7ffd55ac6f44,183080045,0,0x0,8
tick,0x7ffd55ac6f44,183095588,0,0x0,8
tick,0x7ffd55ac6f44,183111111,0,0x0,8
tick,0x7ffd55ac6f44,183127059,0,0x0,8
tick,0x7ffd55ac6f44,183142175,0,0x0,8
tick,0x7ffd55ac6f44,183157047,0,0x0,8
tick,0x7ffd55ac6f44,183172168,0,0x0,8
tick,0x7ffd55ac6f44,183187564,0,0x0,8
tick,0x7ffd55ac6f44,183203089,0,0x0,8
tick,0x7ffd55ac6f44,183218179,0,0x0,8
tick,0x7ffd55ac6f44,183234009,0,0x0,8
tick,0x7ffd55ac6f44,183249305,0,0x0,8
tick,0x7ffd55ac6f44,183265136,0,0x0,8
tick,0x7ffd55ac6f44,183281088,0,0x0,8
tick,0x7ffd55ac6f44,183295779,0,0x0,8
tick,0x7ffd55ac6f44,183310824,0,0x0,8
tick,0x7ffd55ac6f44,183325878,0,0x0,8
tick,0x7ffd55ac6f44,183340786,0,0x0,8
tick,0x7ffd55ac6f44,183355765,0,0x0,8
tick,0x7ffd55ac6f44,183370779,0,0x0,8
tick,0x7ffd55ac6f44,183385866,0,0x0,8
tick,0x7ffd55ac6f44,183401045,0,0x0,8
tick,0x7ffd55ac6f44,183416825,0,0x0,8
tick,0x7ffd55ac6f44,183431942,0,0x0,8
tick,0x7ffd55ac6f44,183446872,0,0x0,8
tick,0x7ffd55ac6f44,183462850,0,0x0,8
tick,0x7ffd55ac6f44,183478735,0,0x0,8
tick,0x7ffd55ac6f44,183494269,0,0x0,8
tick,0x7ffd55ac6f44,183510288,0,0x0,8
tick,0x7ffd55ac6f44,183526341,0,0x0,8
tick,0x7ffd55ac6f44,183542371,0,0x0,8
tick,0x7ffd55ac6f44,183558310,0,0x0,8
tick,0x7ffd55ac6f44,183574336,0,0x0,8
tick,0x7ffd55ac6f44,183590486,0,0x0,8
tick,0x7ffd55ac6f44,183606335,0,0x0,8
tick,0x7ffd55ac6f44,183622285,0,0x0,8
tick,0x7ffd55ac6f44,183637287,0,0x0,8
tick,0x7ffd55ac6f44,183652301,0,0x0,8
tick,0x7ffd55ac6f44,183668313,0,0x0,8
tick,0x7ffd55ac6f44,183684370,0,0x0,8
tick,0x7ffd55ac6f44,183700300,0,0x0,8
tick,0x7ffd55ac6f44,183715897,0,0x0,8
tick,0x7ffd55ac6f44,183730322,0,0x0,8
tick,0x7ffd55ac6f44,183746328,0,0x0,8
tick,0x7ffd55ac6f44,183762534,0,0x0,8
tick,0x7ffd55ac6f44,183778334,0,0x0,8
tick,0x7ffd55ac6f44,183794386,0,0x0,8
tick,0x7ffd55ac6f44,183809378,0,0x0,8
tick,0x7ffd55ac6f44,183824556,0,0x0,8
tick,0x7ffd55ac6f44,183839331,0,0x0,8
tick,0x7ffd55ac6f44,183855323,0,0x0,8
tick,0x7ffd55ac6f44,183871376,0,0x0,8
tick,0x7ffd55ac6f44,183886304,0,0x0,8
tick,0x7ffd55ac6f44,183901315,0,0x0,8
tick,0x7ffd55ac6f44,183916355,0,0x0,8
tick,0x7ffd55ac6f44,183931305,0,0x0,8
tick,0x7ffd55ac6f44,183946309,0,0x0,8
tick,0x7ffd55ac6f44,183961303,0,0x0,8
tick,0x7ffd55ac6f44,183976405,0,0x0,8
tick,0x7ffd55ac6f44,183991312,0,0x0,8
tick,0x7ffd55ac6f44,184006316,0,0x0,8
tick,0x7ffd55ac6f44,184021303,0,0x0,8
tick,0x7ffd55ac6f44,184036337,0,0x0,8
tick,0x7ffd55ac6f44,184051019,0,0x0,8
tick,0x7ffd55ac6f44,184066031,0,0x0,8
tick,0x7ffd55ac6f44,184081030,0,0x0,8
tick,0x7ffd55ac6f44,184097118,0,0x0,8
tick,0x7ffd55ac6f44,184113039,0,0x0,8
tick,0x7ffd55ac6f44,184129002,0,0x0,8
tick,0x7ffd55ac6f44,184145014,0,0x0,8
tick,0x7ffd55ac6f44,184161012,0,0x0,8
tick,0x7ffd55ac6f44,184177024,0,0x0,8
tick,0x7ffd55ac6f44,184193074,0,0x0,8
tick,0x7ffd55ac6f44,184209033,0,0x0,8
tick,0x7ffd55ac6f44,184224123,0,0x0,8
tick,0x7ffd55ac6f44,184239020,0,0x0,8
tick,0x7ffd55ac6f44,184254031,0,0x0,8
tick,0x7ffd55ac6f44,184269026,0,0x0,8
tick,0x7ffd55ac6f44,184284038,0,0x0,8
tick,0x7ffd55ac6f44,184300155,0,0x0,8
tick,0x7ffd55ac6f44,184315127,0,0x0,8
tick,0x7ffd55ac6f44,184330119,0,0x0,8
tick,0x7ffd55ac6f44,184346161,0,0x0,8
tick,0x7ffd55ac6f44,184361122,0,0x0,8
tick,0x7ffd55ac6f44,184376031,0,0x0,8
tick,0x7ffd55ac6f44,184391090,0,0x0,8
tick,0x7ffd55ac6f44,184407052,0,0x0,8
tick,0x7ffd55ac6f44,184423059,0,0x0,8
tick,0x7ffd55ac6f44,184438123,0,0x0,8
tick,0x7ffd55ac6f44,184453038,0,0x0,8
tick,0x7ffd55ac6f44,184468035,0,0x0,8
tick,0x7ffd55ac6f44,184483014,0,0x0,8
tick,0x7ffd55ac6f44,184498056,0,0x0,8
tick,0x7ffd55ac6f44,184513033,0,0x0,8
tick,0x7ffd55ac6f44,184528009,0,0x0,8
tick,0x7ffd55ac6f44,184544074,0,0x0,8
tick,0x7ffd55ac6f44,184560013,0,0x0,8
tick,0x7ffd55ac6f44,184575065,0,0x0,8
tick,0x7ffd55ac6f44,184591048,0,0x0,8
tick,0x7ffd55ac6f44,184606121,0,0x0,8
tick,0x7ffd55ac6f44,184622037,0,0x0,8
tick,0x7ffd55ac6f44,184637077,0,0x0,8
tick,0x7ffd55ac6f44,184652330,0,0x0,8
tick,0x7ffd55ac6f44,184667143,0,0x0,8
tick,0x7ffd55ac6f44,184682055,0,0x0,8
tick,0x7ffd55ac6f44,184697120,0,0x0,8
tick,0x7ffd55ac6f44,184712124,0,0x0,8
tick,0x7ffd55ac6f44,184727062,0,0x0,8
tick,0x7ffd55ac6f44,184743025,0,0x0,8
tick,0x7ffd55ac6f44,184758021,0,0x0,8
tick,0x7ffd55ac6f44,184773030,0,0x0,8
tick,0x7ffd55ac6f44,184788991,0,0x0,8
tick,0x7ffd55ac6f44,184805062,0,0x0,8
tick,0x7ffd55ac6f44,184820010,0,0x0,8
tick,0x7ffd55ac6f44,184835029,0,0x0,8
tick,0x7ffd55ac6f44,184850023,0,0x0,8
tick,0x7ffd55ac6f44,184865068,0,0x0,8
tick,0x7ffd55ac6f44,184881512,0,0x0,8
tick,0x7ffd55ac6f44,184897069,0,0x0,8
tick,0x7ffd55ac6f44,184912052,0,0x0,8
tick,0x7ffd55ac6f44,184927304,0,0x0,8
tick,0x7ffd55ac6f44,184943068,0,0x0,8
tick,0x7ffd55ac6f44,184959083,0,0x0,8
tick,0x7ffd55ac6f44,184974104,0,0x0,8
tick,0x7ffd55ac6f44,184989282,0,0x0,8
tick,0x7ffd55ac6f44,185004338,0,0x0,8
tick,0x7ffd55ac6f44,185019017,0,0x0,8
tick,0x7ffd55ac6f44,185034492,0,0x0,8
tick,0x7ffd55ac6f44,185049831,0,0x0,8
tick,0x7ffd55ac6f44,185064749,0,0x0,8
tick,0x7ffd55ac6f44,185079722,0,0x0,8
tick,0x7ffd55ac6f44,185095377,0,0x0,8
tick,0x7ffd55ac6f44,185111213,0,0x0,8
tick,0x7ffd55ac6f44,185126589,0,0x0,8
tick,0x7ffd55ac6f44,185141856,0,0x0,8
tick,0x7ffd55ac6f44,185157829,0,0x0,8
tick,0x7ffd55ac6f44,185173786,0,0x0,8
tick,0x7ffd55ac6f44,185189248,0,0x0,8
tick,0x7ffd55ac6f44,185205208,0,0x0,8
tick,0x7ffd55ac6f44,185220910,0,0x0,8
tick,0x7ffd55ac6f44,185236669,0,0x0,8
tick,0x7ffd55ac6f44,185251824,0,0x0,8
tick,0x7ffd55ac6f44,185267087,0,0x0,8
tick,0x7ffd55ac6f44,185283022,0,0x0,8
tick,0x7ffd55ac6f44,185299059,0,0x0,8
tick,0x7ffd55ac6f44,185315099,0,0x0,8
tick,0x7ffd55ac6f44,185331047,0,0x0,8
tick,0x7ffd55ac6f44,185347047,0,0x0,8
tick,0x7ffd55ac6f44,185363028,0,0x0,8
tick,0x7ffd55ac6f44,185378024,0,0x0,8
tick,0x7ffd55ac6f44,185394040,0,0x0,8
tick,0x7ffd55ac6f44,185410027,0,0x0,8
tick,0x7ffd55ac6f44,185425021,0,0x0,8
tick,0x7ffd55ac6f44,185440157,0,0x0,8
tick,0x7ffd55ac6f44,185455540,0,0x0,8
tick,0x7ffd55ac6f44,185471467,0,0x0,8
tick,0x7ffd55ac6f44,185486445,0,0x0,8
tick,0x7ffd55ac6f44,185502331,0,0x0,8
tick,0x7ffd55ac6f44,185519240,0,0x0,8
tick,0x7ffd55ac6f44,185534336,0,0x0,8
tick,0x7ffd55ac6f44,185549994,0,0x0,8
tick,0x7ffd55ac6f44,185565409,0,0x0,8
tick,0x7ffd55ac6f44,185581318,0,0x0,8
tick,0x7ffd55ac6f44,185597851,0,0x0,8
tick,0x7ffd55ac6f44,185613152,0,0x0,8
tick,0x7ffd55ac6f44,185628359,0,0x0,8
tick,0x7ffd55ac6f44,185644467,0,0x0,8
tick,0x7ffd55ac6f44,185660069,0,0x0,8
tick,0x7ffd55ac6f44,185675794,0,0x0,8
tick,0x7ffd55ac6f44,185690776,0,0x0,8
tick,0x7ffd55ac6f44,185706550,0,0x0,8
tick,0x7ffd55ac6f44,185722106,0,0x0,8
tick,0x7ffd55ac6f44,185737685,0,0x0,8
tick,0x7ffd55ac6f44,185753373,0,0x0,8
tick,0x7ffd55ac6f44,185769307,0,0x0,8
tick,0x7ffd55ac6f44,185784912,0,0x0,8
tick,0x7ffd55ac6f44,185799649,0,0x0,8
tick,0x7ffd55ac6f44,185815149,0,0x0,8
tick,0x7ffd55ac6f44,185830149,0,0x0,8
tick,0x7ffd55ac6f44,185845364,0,0x0,8
tick,0x7ffd55ac6f44,185860864,0,0x0,8
tick,0x7ffd55ac6f44,185875504,0,0x0,8
tick,0x7ffd55ac6f44,185891177,0,0x0,8
tick,0x7ffd55ac6f44,185906844,0,0x0,8
tick,0x7ffd55ac6f44,185922027,0,0x0,8
tick,0x7ffd55ac6f44,185937996,0,0x0,8
tick,0x7ffd55ac6f44,185953475,0,0x0,8
tick,0x7ffd55ac6f44,185968877,0,0x0,8
tick,0x7ffd55ac6f44,185984715,0,0x0,8
tick,0x7ffd55ac6f44,185999984,0,0x0,8
tick,0x7ffd55ac6f44,186015335,0,0x0,8
tick,0x7ffd55ac6f44,186030911,0,0x0,8
tick,0x7ffd55ac6f44,186046156,0,0x0,8
tick,0x7ffd55ac6f44,186061271,0,0x0,8
tick,0x7ffd55ac6f44,186076398,0,0x0,8
tick,0x7ffd55ac6f44,186091901,0,0x0,8
tick,0x7ffd55ac6f44,186107206,0,0x0,8
tick,0x7ffd55ac6f44,186123386,0,0x0,8
tick,0x7ffd55ac6f44,186138731,0,0x0,8
tick,0x7ffd55ac6f44,186154372,0,0x0,8
tick,0x7ffd55ac6f44,186169303,0,0x0,8
tick,0x7ffd55ac6f44,186185294,0,0x0,8
tick,0x7ffd55ac6f44,186200419,0,0x0,8
tick,0x7ffd55ac6f44,186215483,0,0x0,8
tick,0x7ffd55ac6f44,186231280,0,0x0,8
tick,0x7ffd55ac6f44,186246626,0,0x0,8
tick,0x7ffd55ac6f44,186262061,0,0x0,8
tick,0x7ffd55ac6f44,186278468,0,0x0,8
tick,0x7ffd55ac6f44,186294173,0,0x0,8
tick,0x7ffd55ac6f44,186310102,0,0x0,8
tick,0x7ffd55ac6f44,186326163,0,0x0,8
tick,0x7ffd55ac6f44,186342089,0,0x0,8
tick,0x7ffd55ac6f44,186357080,0,0x0,8
tick,0x7ffd55ac6f44,186372062,0,0x0,8
tick,0x7ffd55ac6f44,186388105,0,0x0,8
tick,0x7ffd55ac6f44,186404108,0,0x0,8
tick,0x7ffd55ac6f44,186418904,0,0x0,8
tick,0x7ffd55ac6f44,186434309,0,0x0,8
tick,0x7ffd55ac6f44,186450154,0,0x0,8
tick,0x7ffd55ac6f44,186465892,0,0x0,8
tick,0x7ffd55ac6f44,186480988,0,0x0,8
tick,0x7ffd55ac6f44,186496213,0,0x0,8
tick,0x7ffd55ac6f44,186511223,0,0x0,8
tick,0x7ffd55ac6f44,186526266,0,0x0,8
tick,0x7ffd55ac6f44,186542303,0,0x0,8
tick,0x7ffd55ac6f44,186558199,0,0x0,8
tick,0x7ffd55ac6f44,186574265,0,0x0,8
tick,0x7ffd55ac6f44,186590242,0,0x0,8
tick,0x7ffd55ac6f44,186606056,0,0x0,8
tick,0x7ffd55ac6f44,186621337,0,0x0,8
tick,0x7ffd55ac6f44,186636985,0,0x0,8
tick,0x7ffd55ac6f44,186652149,0,0x0,8
tick,0x7ffd55ac6f44,186667406,0,0x0,8
tick,0x7ffd55ac6f44,186683256,0,0x0,8
tick,0x7ffd55ac6f44,186698533,0,0x0,8
tick,0x7ffd55ac6f44,186714291,0,0x0,8
tick,0x7ffd55ac6f44,186730292,0,0x0,8
tick,0x7ffd55ac6f44,186746223,0,0x0,8
tick,0x7ffd55ac6f44,186761197,0,0x0,8
tick,0x7ffd55ac6f44,186776226,0,0x0,8
tick,0x7ffd55ac6f44,186791337,0,0x0,8
tick,0x7ffd55ac6f44,186806456,0,0x0,8
tick,0x7ffd55ac6f44,186821783,0,0x0,8
tick,0x7ffd55ac6f44,186837538,0,0x0,8
tick,0x7ffd55ac6f44,186852800,0,0x0,8
tick,0x7ffd55ac6f44,186868739,0,0x0,8
tick,0x7ffd55ac6f44,186884220,0,0x0,8
tick,0x7ffd55ac6f44,186900063,0,0x0,8
tick,0x7ffd55ac6f44,186915926,0,0x0,8
tick,0x7ffd55ac6f44,186932099,0,0x0,8
tick,0x7ffd55ac6f44,186947019,0,0x0,8
tick,0x7ffd55ac6f44,186962055,0,0x0,8
tick,0x7ffd55ac6f44,186977620,0,0x0,8
tick,0x7ffd55ac6f44,186993038,0,0x0,8
tick,0x7ffd55ac6f44,187008238,0,0x0,8
tick,0x7ffd55ac6f44,187023373,0,0x0,8
tick,0x7ffd55ac6f44,187039443,0,0x0,8
tick,0x7ffd55ac6f44,187055018,0,0x0,8
tick,0x7ffd55ac6f44,187070845,0,0x0,8
tick,0x7ffd55ac6f44,187086355,0,0x0,8
tick,0x7ffd55ac6f44,187101981,0,0x0,8
tick,0x7ffd55ac6f44,187118006,0,0x0,8
tick,0x7ffd55ac6f44,187133234,0,0x0,8
tick,0x7ffd55ac6f44,187148439,0,0x0,8
tick,0x7ffd55ac6f44,187164536,0,0x0,8
tick,0x7ffd55ac6f44,187180438,0,0x0,8
tick,0x7ffd55ac6f44,187196477,0,0x0,8
tick,0x7ffd55ac6f44,187212297,0,0x0,8
tick,0x7ffd55ac6f44,187228017,0,0x0,8
tick,0x7ffd55ac6f44,187244546,0,0x0,8
tick,0x7ffd55ac6f44,187260185,0,0x0,8
tick,0x7ffd55ac6f44,187275402,0,0x0,8
tick,0x7ffd55ac6f44,187291185,0,0x0,8
tick,0x7ffd55ac6f44,187307201,0,0x0,8
tick,0x7ffd55ac6f44,187322401,0,0x0,8
tick,0x7ffd55ac6f44,187338427,0,0x0,8
tick,0x7ffd55ac6f44,187354236,0,0x0,8
tick,0x7ffd55ac6f44,187369508,0,0x0,8
tick,0x7ffd55ac6f44,187384988,0,0x0,8
tick,0x7ffd55ac6f44,187400630,0,0x0,8
tick,0x7ffd55ac6f44,187415838,0,0x0,8
tick,0x7ffd55ac6f44,187430842,0,0x0,8
tick,0x7ffd55ac6f44,187448176,0,0x0,8
tick,0x7ffd55ac6f44,187461915,0,0x0,8
tick,0x7ffd55ac6f44,187476922,0,0x0,8
tick,0x7ffd55ac6f44,187492006,0,0x0,8
tick,0x7ffd55ac6f44,187506910,0,0x0,8
tick,0x7ffd55ac6f44,187522881,0,0x0,8
tick,0x7ffd55ac6f44,187538885,0,0x0,8
tick,0x7ffd55ac6f44,187554879,0,0x0,8
tick,0x7ffd55ac6f44,187570072,0,0x0,8
tick,0x7ffd55ac6f44,187586118,0,0x0,8
tick,0x7ffd55ac6f44,187602109,0,0x0,8
tick,0x7ffd55ac6f44,187618118,0,0x0,8
tick,0x7ffd55ac6f44,187634065,0,0x0,8
tick,0x7ffd55ac6f44,187650095,0,0x0,8
tick,0x7ffd55ac6f44,187665899,0,0x0,8
tick,0x7ffd55ac6f44,187680974,0,0x0,8
tick,0x7ffd55ac6f44,187695961,0,0x0,8
tick,0x7ffd55ac6f44,187712003,0,0x0,8
tick,0x7ffd55ac6f44,187727440,0,0x0,8
tick,0x7ffd55ac6f44,187742385,0,0x0,8
tick,0x7ffd55ac6f44,187757471,0,0x0,8
tick,0x7ffd55ac6f44,187773634,0,0x0,8
tick,0x7ffd55ac6f44,187789656,0,0x0,8
tick,0x7ffd55ac6f44,187805090,0,0x0,8
tick,0x7ffd55ac6f44,187819812,0,0x0,8
tick,0x7ffd55ac6f44,187835457,0,0x0,8
tick,0x7ffd55ac6f44,187850810,0,0x0,8
tick,0x7ffd55ac6f44,187866532,0,0x0,8
tick,0x7ffd55ac6f44,187882428,0,0x0,8
tick,0x7ffd55ac6f44,187897818,0,0x0,8
tick,0x7ffd55ac6f44,187912623,0,0x0,8
tick,0x7ffd55ac6f44,187927943,0,0x0,8
tick,0x7ffd55ac6f44,187943601,0,0x0,8
tick,0x7ffd55ac6f44,187958989,0,0x0,8
tick,0x7ffd55ac6f44,187974858,0,0x0,8
tick,0x7ffd55ac6f44,187991006,0,0x0,8
tick,0x7ffd55ac6f44,188006877,0,0x0,8
tick,0x7ffd55ac6f44,188022595,0,0x0,8
tick,0x7ffd55ac6f44,188038075,0,0x0,8
tick,0x7ffd55ac6f44,188053200,0,0x0,8
tick,0x7ffd55ac6f44,188068083,0,0x0,8
tick,0x7ffd55ac6f44,188082910,0,0x0,8
tick,0x7ffd55ac6f44,188098133,0,0x0,8
tick,0x7ffd55ac6f44,188114065,0,0x0,8
tick,0x7ffd55ac6f44,188130063,0,0x0,8
tick,0x7ffd55ac6f44,188146118,0,0x0,8
tick,0x7ffd55ac6f44,188162152,0,0x0,8
tick,0x7ffd55ac6f44,188178040,0,0x0,8
tick,0x7ffd55ac6f44,188194040,0,0x0,8
tick,0x7ffd55ac6f44,188209634,0,0x0,8
tick,0x7ffd55ac6f44,188225047,0,0x0,8
tick,0x7ffd55ac6f44,188241106,0,0x0,8
tick,0x7ffd55ac6f44,188257010,0,0x0,8
tick,0x7ffd55ac6f44,188273051,0,0x0,8
tick,0x7ffd55ac6f44,188289132,0,0x0,8
tick,0x7ffd55ac6f44,188305062,0,0x0,8
tick,0x7ffd55ac6f44,188320285,0,0x0,8
tick,0x7ffd55ac6f44,188336312,0,0x0,8
tick,0x7ffd55ac6f44,188352057,0,0x0,8
tick,0x7ffd55ac6f44,188368129,0,0x0,8
tick,0x7ffd55ac6f44,188384122,0,0x0,8
tick,0x7ffd55ac6f44,188400024,0,0x0,8
tick,0x7ffd55ac6f44,188415044,0,0x0,8
tick,0x7ffd55ac6f44,188430235,0,0x0,8
tick,0x7ffd55ac6f44,188446233,0,0x0,8
tick,0x7ffd55ac6f44,188461234,0,0x0,8
tick,0x7ffd55ac6f44,188476616,0,0x0,8
tick,0x7ffd55ac6f44,188491533,0,0x0,8
tick,0x7ffd55ac6f44,188506335,0,0x0,8
tick,0x7ffd55ac6f44,188521985,0,0x0,8
tick,0x7ffd55ac6f44,188537305,0,0x0,8
tick,0x7ffd55ac6f44,188553107,0,0x0,8
tick,0x7ffd55ac6f44,188568638,0,0x0,8
tick,0x7ffd55ac6f44,188584701,0,0x0,8
tick,0x7ffd55ac6f44,188600736,0,0x0,8
tick,0x7ffd55ac6f44,188616631,0,0x0,8
tick,0x7ffd55ac6f44,188632629,0,0x0,8
tick,0x7ffd55ac6f44,188648619,0,0x0,8
tick,0x7ffd55ac6f44,188664678,0,0x0,8
tick,0x7ffd55ac6f44,188679666,0,0x0,8
tick,0x7ffd55ac6f44,188695859,0,0x0,8
tick,0x7ffd55ac6f44,188710668,0,0x0,8
tick,0x7ffd55ac6f44,188725834,0,0x0,8
tick,0x7ffd55ac6f44,188741004,0,0x0,8
tick,0x7ffd55ac6f44,188755722,0,0x0,8
tick,0x7ffd55ac6f44,188770646,0,0x0,8
tick,0x7ffd55ac6f44,188786659,0,0x0,8
tick,0x7ffd55ac6f44,188802671,0,0x0,8
tick,0x7ffd55ac6f44,188818656,0,0x0,8
tick,0x7ffd55ac6f44,188834640,0,0x0,8
tick,0x7ffd55ac6f44,188850056,0,0x0,8
tick,0x7ffd55ac6f44,188865152,0,0x0,8
tick,0x7ffd55ac6f44,188881052,0,0x0,8
tick,0x7ffd55ac6f44,188896387,0,0x0,8
tick,0x7ffd55ac6f44,188911868,0,0x0,8
tick,0x7ffd55ac6f44,188927496,0,0x0,8
tick,0x7ffd55ac6f44,188943032,0,0x0,8
tick,0x7ffd55ac6f44,188958525,0,0x0,8
tick,0x7ffd55ac6f44,188974576,0,0x0,8
tick,0x7ffd55ac6f44,188989650,0,0x0,8
tick,0x7ffd55ac6f44,189004824,0,0x0,8
tick,0x7ffd55ac6f44,189020110,0,0x0,8
tick,0x7ffd55ac6f44,189035140,0,0x0,8
tick,0x7ffd55ac6f44,189050031,0,0x0,8
tick,0x7ffd55ac6f44,189065628,0,0x0,8
tick,0x7ffd55ac6f44,189081118,0,0x0,8
tick,0x7ffd55ac6f44,189096095,0,0x0,8
tick,0x7ffd55ac6f44,189111076,0,0x0,8
tick,0x7ffd55ac6f44,189125770,0,0x0,8
tick,0x7ffd55ac6f44,189141725,0,0x0,8
tick,0x7ffd55ac6f44,189157263,0,0x0,8
tick,0x7ffd55ac6f44,189173337,0,0x0,8
tick,0x7ffd55ac6f44,189188063,0,0x0,8
tick,0x7ffd55ac6f44,189203182,0,0x0,8
tick,0x7ffd55ac6f44,189218865,0,0x0,8
tick,0x7ffd55ac6f44,189234247,0,0x0,8
tick,0x7ffd55ac6f44,189249095,0,0x0,8
tick,0x7ffd55ac6f44,189264739,0,0x0,8
tick,0x7ffd55ac6f44,189280614,0,0x0,8
tick,0x7ffd55ac6f44,189296442,0,0x0,8
tick,0x7ffd55ac6f44,189311713,0,0x0,8
tick,0x7ffd55ac6f44,189327595,0,0x0,8
tick,0x7ffd55ac6f44,189343537,0,0x0,8
tick,0x7ffd55ac6f44,189359350,0,0x0,8
tick,0x7ffd55ac6f44,189374614,0,0x0,8
tick,0x7ffd55ac6f44,189390083,0,0x0,8
tick,0x7ffd55ac6f44,189405492,0,0x0,8
tick,0x7ffd55ac6f44,189421279,0,0x0,8
tick,0x7ffd55ac6f44,189436022,0,0x0,8
tick,0x7ffd55ac6f44,189451288,0,0x0,8
tick,0x7ffd55ac6f44,189467645,0,0x0,8
tick,0x7ffd55ac6f44,189483559,0,0x0,8
tick,0x7ffd55ac6f44,189499988,0,0x0,8
tick,0x7ffd55ac6f44,189514651,0,0x0,8
tick,0x7ffd55ac6f44,189530395,0,0x0,8
tick,0x7ffd55ac6f44,189546296,0,0x0,8
tick,0x7ffd55ac6f44,189562347,0,0x0,8
tick,0x7ffd55ac6f44,189578401,0,0x0,8
tick,0x7ffd55ac6f44,189593626,0,0x0,8
tick,0x7ffd55ac6f44,189609535,0,0x0,8
tick,0x7ffd55ac6f44,189625409,0,0x0,8
tick,0x7ffd55ac6f44,189640777,0,0x0,8
tick,0x7ffd55ac6f44,189655244,0,0x0,8
tick,0x7ffd55ac6f44,189670781,0,0x0,8
tick,0x7ffd55ac6f44,189686257,0,0x0,8
tick,0x7ffd55ac6f44,189702144,0,0x0,8
tick,0x7ffd55ac6f44,189718391,0,0x0,8
tick,0x7ffd55ac6f44,189733884,0,0x0,8
tick,0x7ffd55ac6f44,189749957,0,0x0,8
tick,0x7ffd55ac6f44,189765823,0,0x0,8
tick,0x7ffd55ac6f44,189781629,0,0x0,8
tick,0x7ffd55ac6f44,189797841,0,0x0,8
tick,0x7ffd55ac6f44,189813330,0,0x0,8
tick,0x7ffd55ac6f44,189829320,0,0x0,8
tick,0x7ffd55ac6f44,189845380,0,0x0,8
tick,0x7ffd55ac6f44,189860697,0,0x0,8
tick,0x7ffd55ac6f44,189875503,0,0x0,8
tick,0x7ffd55ac6f44,189891011,0,0x0,8
tick,0x7ffd55ac6f44,189906249,0,0x0,8
tick,0x7ffd55ac6f44,189922469,0,0x0,8
tick,0x7ffd55ac6f44,189938349,0,0x0,8
tick,0x7ffd55ac6f44,189953859,0,0x0,8
tick,0x7ffd55ac6f44,189969243,0,0x0,8
tick,0x7ffd55ac6f44,189984864,0,0x0,8
tick,0x7ffd55ac6f44,190000506,0,0x0,8
tick,0x7ffd55ac6f44,190015429,0,0x0,8
tick,0x7ffd55ac6f44,190031452,0,0x0,8
tick,0x7ffd55ac6f44,190047460,0,0x0,8
tick,0x7ffd55ac6f44,190062653,0,0x0,8
tick,0x7ffd55ac6f44,190078844,0,0x0,8
tick,0x7ffd55ac6f44,190094267,0,0x0,8
tick,0x7ffd55ac6f44,190109751,0,0x0,8
tick,0x7ffd55ac6f44,190125239,0,0x0,8
tick,0x7ffd55ac6f44,190140659,0,0x0,8
tick,0x7ffd55ac6f44,190156186,0,0x0,8
tick,0x7ffd55ac6f44,190171047,0,0x0,8
tick,0x7ffd55ac6f44,190186081,0,0x0,8
tick,0x7ffd55ac6f44,190202149,0,0x0,8
tick,0x7ffd55ac6f44,190218102,0,0x0,8
tick,0x7ffd55ac6f44,190233990,0,0x0,8
tick,0x7ffd55ac6f44,190249142,0,0x0,8
tick,0x7ffd55ac6f44,190264096,0,0x0,8
tick,0x7ffd55ac6f44,190280145,0,0x0,8
tick,0x7ffd55ac6f44,190295899,0,0x0,8
tick,0x7ffd55ac6f44,190311110,0,0x0,8
tick,0x7ffd55ac6f44,190326034,0,0x0,8
tick,0x7ffd55ac6f44,190341074,0,0x0,8
tick,0x7ffd55ac6f44,190356390,0,0x0,8
tick,0x7ffd55ac6f44,190372125,0,0x0,8
tick,0x7ffd55ac6f44,190388071,0,0x0,8
tick,0x7ffd55ac6f44,190404104,0,0x0,8
tick,0x7ffd55ac6f44,190420081,0,0x0,8
tick,0x7ffd55ac6f44,190435860,0,0x0,8
tick,0x7ffd55ac6f44,190452100,0,0x0,8
tick,0x7ffd55ac6f44,190467341,0,0x0,8
tick,0x7ffd55ac6f44,190482964,0,0x0,8
tick,0x7ffd55ac6f44,190499231,0,0x0,8
tick,0x7ffd55ac6f44,190515000,0,0x0,8
tick,0x7ffd55ac6f44,190530126,0,0x0,8
tick,0x7ffd55ac6f44,190545035,0,0x0,8
tick,0x7ffd55ac6f44,190560544,0,0x0,8
tick,0x7ffd55ac6f44,190576711,0,0x0,8
tick,0x7ffd55ac6f44,190592582,0,0x0,8
tick,0x7ffd55ac6f44,190607799,0,0x0,8
tick,0x7ffd55ac6f44,190623789,0,0x0,8
tick,0x7ffd55ac6f44,190639928,0,0x0,8
tick,0x7ffd55ac6f44,190655756,0,0x0,8
tick,0x7ffd55ac6f44,190670761,0,0x0,8
tick,0x7ffd55ac6f44,190686615,0,0x0,8
tick,0x7ffd55ac6f44,190702129,0,0x0,8
tick,0x7ffd55ac6f44,190717079,0,0x0,8
tick,0x7ffd55ac6f44,190732017,0,0x0,8
tick,0x7ffd55ac6f44,190748005,0,0x0,8
tick,0x7ffd55ac6f44,190763757,0,0x0,8
tick,0x7ffd55ac6f44,190778829,0,0x0,8
tick,0x7ffd55ac6f44,190794908,0,0x0,8
tick,0x7ffd55ac6f44,190809854,0,0x0,8
tick,0x7ffd55ac6f44,190825889,0,0x0,8
tick,0x7ffd55ac6f44,190842032,0,0x0,8
tick,0x7ffd55ac6f44,190857826,0,0x0,8
tick,0x7ffd55ac6f44,190872867,0,0x0,8
tick,0x7ffd55ac6f44,190888890,0,0x0,8
tick,0x7ffd55ac6f44,190904921,0,0x0,8
tick,0x7ffd55ac6f44,190920778,0,0x0,8
tick,0x7ffd55ac6f44,190936874,0,0x0,8
tick,0x7ffd55ac6f44,190952826,0,0x0,8
tick,0x7ffd55ac6f44,190967840,0,0x0,8
tick,0x7ffd55ac6f44,190982839,0,0x0,8
tick,0x7ffd55ac6f44,190997818,0,0x0,8
tick,0x7ffd55ac6f44,191012834,0,0x0,8
tick,0x7ffd55ac6f44,191027850,0,0x0,8
tick,0x7ffd55ac6f44,191043072,0,0x0,8
tick,0x7ffd55ac6f44,191059571,0,0x0,8
tick,0x7ffd55ac6f44,191074382,0,0x0,8
tick,0x7ffd55ac6f44,191089532,0,0x0,8
tick,0x7ffd55ac6f44,191105388,0,0x0,8
tick,0x7ffd55ac6f44,191120545,0,0x0,8
tick,0x7ffd55ac6f44,191135482,0,0x0,8
tick,0x7ffd55ac6f44,191151475,0,0x0,8
tick,0x7ffd55ac6f44,191167089,0,0x0,8
tick,0x7ffd55ac6f44,191182860,0,0x0,8
tick,0x7ffd55ac6f44,191197906,0,0x0,8
tick,0x7ffd55ac6f44,191212973,0,0x0,8
tick,0x7ffd55ac6f44,191227963,0,0x0,8
tick,0x7ffd55ac6f44,191242990,0,0x0,8
tick,0x7ffd55ac6f44,191258978,0,0x0,8
tick,0x7ffd55ac6f44,191274020,0,0x0,8
tick,0x7ffd55ac6f44,191290215,0,0x0,8
tick,0x7ffd55ac6f44,191306032,0,0x0,8
tick,0x7ffd55ac6f44,191321980,0,0x0,8
tick,0x7ffd55ac6f44,191337899,0,0x0,8
tick,0x7ffd55ac6f44,191353723,0,0x0,8
tick,0x7ffd55ac6f44,191369460,0,0x0,8
tick,0x7ffd55ac6f44,191385202,0,0x0,8
tick,0x7ffd55ac6f44,191400438,0,0x0,8
tick,0x7ffd55ac6f44,191415772,0,0x0,8
tick,0x7ffd55ac6f44,191431889,0,0x0,8
tick,0x7ffd55ac6f44,191446557,0,0x0,8
tick,0x7ffd55ac6f44,191461280,0,0x0,8
tick,0x7ffd55ac6f44,191477312,0,0x0,8
tick,0x7ffd55ac6f44,191492332,0,0x0,8
tick,0x7ffd55ac6f44,191507660,0,0x0,8
tick,0x7ffd55ac6f44,191523393,0,0x0,8
tick,0x7ffd55ac6f44,191539397,0,0x0,8
tick,0x7ffd55ac6f44,191555381,0,0x0,8
tick,0x7ffd55ac6f44,191571514,0,0x0,8
tick,0x7ffd55ac6f44,191587489,0,0x0,8
tick,0x7ffd55ac6f44,191603993,0,0x0,8
tick,0x7ffd55ac6f44,191619555,0,0x0,8
tick,0x7ffd55ac6f44,191635737,0,0x0,8
tick,0x7ffd55ac6f44,191650522,0,0x0,8
tick,0x7ffd55ac6f44,191665518,0,0x0,8
tick,0x7ffd55ac6f44,191680532,0,0x0,8
tick,0x7ffd55ac6f44,191696487,0,0x0,8
tick,0x7ffd55ac6f44,191712463,0,0x0,8
tick,0x7ffd55ac6f44,191727435,0,0x0,8
tick,0x7ffd55ac6f44,191743496,0,0x0,8
tick,0x7ffd55ac6f44,191759458,0,0x0,8
tick,0x7ffd55ac6f44,191775470,0,0x0,8
tick,0x7ffd55ac6f44,191791538,0,0x0,8
tick,0x7ffd55ac6f44,191807504,0,0x0,8
tick,0x7ffd55ac6f44,191822497,0,0x0,8
tick,0x7ffd55ac6f44,191837470,0,0x0,8
tick,0x7ffd55ac6f44,191853439,0,0x0,8
tick,0x7ffd55ac6f44,191868473,0,0x0,8
tick,0x7ffd55ac6f44,191883231,0,0x0,8
tick,0x7ffd55ac6f44,191899195,0,0x0,8
tick,0x7ffd55ac6f44,191915191,0,0x0,8
tick,0x7ffd55ac6f44,191930146,0,0x0,8
tick,0x7ffd55ac6f44,191946195,0,0x0,8
tick,0x7ffd55ac6f44,191961142,0,0x0,8
tick,0x7ffd55ac6f44,191976145,0,0x0,8
tick,0x7ffd55ac6f44,191992161,0,0x0,8
tick,0x7ffd55ac6f44,192008162,0,0x0,8
tick,0x7ffd55ac6f44,192024185,0,0x0,8
tick,0x7ffd55ac6f44,192040388,0,0x0,8
tick,0x7ffd55ac6f44,192055585,0,0x0,8
tick,0x7ffd55ac6f44,192071189,0,0x0,8
tick,0x7ffd55ac6f44,192086938,0,0x0,8
tick,0x7ffd55ac6f44,192102480,0,0x0,8
tick,0x7ffd55ac6f44,192117695,0,0x0,8
tick,0x7ffd55ac6f44,192133346,0,0x0,8
tick,0x7ffd55ac6f44,192148578,0,0x0,8
tick,0x7ffd55ac6f44,192164475,0,0x0,8
tick,0x7ffd55ac6f44,192180422,0,0x0,8
tick,0x7ffd55ac6f44,192196364,0,0x0,8
tick,0x7ffd55ac6f44,192211949,0,0x0,8
tick,0x7ffd55ac6f44,192226821,0,0x0,8
tick,0x7ffd55ac6f44,192241829,0,0x0,8
tick,0x7ffd55ac6f44,192257698,0,0x0,8
tick,0x7ffd55ac6f44,192272298,0,0x0,8
tick,0x7ffd55ac6f44,192288475,0,0x0,8
tick,0x7ffd55ac6f44,192304388,0,0x0,8
tick,0x7ffd55ac6f44,192319696,0,0x0,8
tick,0x7ffd55ac6f44,192334986,0,0x0,8
tick,0x7ffd55ac6f44,192350988,0,0x0,8
tick,0x7ffd55ac6f44,192366918,0,0x0,8
tick,0x7ffd55ac6f44,192382974,0,0x0,8
tick,0x7ffd55ac6f44,192398919,0,0x0,8
tick,0x7ffd55ac6f44,192414876,0,0x0,8
tick,0x7ffd55ac6f44,192429884,0,0x0,8
tick,0x7ffd55ac6f44,192445941,0,0x0,8
tick,0x7ffd55ac6f44,192462038,0,0x0,8
tick,0x7ffd55ac6f44,192476979,0,0x0,8
tick,0x7ffd55ac6f44,192492957,0,0x0,8
tick,0x7ffd55ac6f44,192508993,0,0x0,8
tick,0x7ffd55ac6f44,192523967,0,0x0,8
tick,0x7ffd55ac6f44,192539011,0,0x0,8
tick,0x7ffd55ac6f44,192554030,0,0x0,8
tick,0x7ffd55ac6f44,192570018,0,0x0,8
tick,0x7ffd55ac6f44,192584996,0,0x0,8
tick,0x7ffd55ac6f44,192599991,0,0x0,8
tick,0x7ffd55ac6f44,192616009,0,0x0,8
tick,0x7ffd55ac6f44,192631053,0,0x0,8
tick,0x7ffd55ac6f44,192646679,0,0x0,8
tick,0x7ffd55ac6f44,192662778,0,0x0,8
tick,0x7ffd55ac6f44,192678737,0,0x0,8
tick,0x7ffd55ac6f44,192694708,0,0x0,8
tick,0x7ffd55ac6f44,192710758,0,0x0,8
tick,0x7ffd55ac6f44,192725782,0,0x0,8
tick,0x7ffd55ac6f44,192741741,0,0x0,8
tick,0x7ffd55ac6f44,192756744,0,0x0,8
tick,0x7ffd55ac6f44,192771718,0,0x0,8
tick,0x7ffd55ac6f44,192787712,0,0x0,8
tick,0x7ffd55ac6f44,192803694,0,0x0,8
tick,0x7ffd55ac6f44,192819690,0,0x0,8
tick,0x7ffd55ac6f44,192834718,0,0x0,8
tick,0x7ffd55ac6f44,192849747,0,0x0,8
tick,0x7ffd55ac6f44,192865806,0,0x0,8
tick,0x7ffd55ac6f44,192880719,0,0x0,8
tick,0x7ffd55ac6f44,192895761,0,0x0,8
tick,0x7ffd55ac6f44,192911717,0,0x0,8
tick,0x7ffd55ac6f44,192926725,0,0x0,8
tick,0x7ffd55ac6f44,192941722,0,0x0,8
tick,0x7ffd55ac6f44,192956730,0,0x0,8
tick,0x7ffd55ac6f44,192972736,0,0x0,8
tick,0x7ffd55ac6f44,192988728,0,0x0,8
tick,0x7ffd55ac6f44,193004761,0,0x0,8
tick,0x7ffd55ac6f44,193020741,0,0x0,8
tick,0x7ffd55ac6f44,193036722,0,0x0,8
tick,0x7ffd55ac6f44,193052034,0,0x0,8
tick,0x7ffd55ac6f44,193068054,0,0x0,8
tick,0x7ffd55ac6f44,193083174,0,0x0,8
tick,0x7ffd55ac6f44,193098687,0,0x0,8
tick,0x7ffd55ac6f44,193114709,0,0x0,8
tick,0x7ffd55ac6f44,193130070,0,0x0,8
tick,0x7ffd55ac6f44,193145647,0,0x0,8
tick,0x7ffd55ac6f44,193161023,0,0x0,8
tick,0x7ffd55ac6f44,193176813,0,0x0,8
tick,0x7ffd55ac6f44,193192268,0,0x0,8
tick,0x7ffd55ac6f44,193207626,0,0x0,8
tick,0x7ffd55ac6f44,193223268,0,0x0,8
tick,0x7ffd55ac6f44,193238412,0,0x0,8
tick,0x7ffd55ac6f44,193253656,0,0x0,8
tick,0x7ffd55ac6f44,193269220,0,0x0,8
tick,0x7ffd55ac6f44,193285091,0,0x0,8
tick,0x7ffd55ac6f44,193301084,0,0x0,8
tick,0x7ffd55ac6f44,193317077,0,0x0,8
tick,0x7ffd55ac6f44,193333122,0,0x0,8
tick,0x7ffd55ac6f44,193349121,0,0x0,8
tick,0x7ffd55ac6f44,193363787,0,0x0,8
tick,0x7ffd55ac6f44,193379018,0,0x0,8
tick,0x7ffd55ac6f44,193395072,0,0x0,8
tick,0x7ffd55ac6f44,193410188,0,0x0,8
tick,0x7ffd55ac6f44,193425610,0,0x0,8
tick,0x7ffd55ac6f44,193441235,0,0x0,8
tick,0x7ffd55ac6f44,193457103,0,0x0,8
tick,0x7ffd55ac6f44,193473320,0,0x0,8
tick,0x7ffd55ac6f44,193488735,0,0x0,8
tick,0x7ffd55ac6f44,193504404,0,0x0,8
tick,0x7ffd55ac6f44,193519812,0,0x0,8
tick,0x7ffd55ac6f44,193535252,0,0x0,8
tick,0x7ffd55ac6f44,193551427,0,0x0,8
tick,0x7ffd55ac6f44,193566230,0,0x0,8
tick,0x7ffd55ac6f44,193581683,0,0x0,8
tick,0x7ffd55ac6f44,193597349,0,0x0,8
tick,0x7ffd55ac6f44,193612233,0,0x0,8
tick,0x7ffd55ac6f44,193627791,0,0x0,8
tick,0x7ffd55ac6f44,193643636,0,0x0,8
tick,0x7ffd55ac6f44,193658801,0,0x0,8
tick,0x7ffd55ac6f44,193674389,0,0x0,8
tick,0x7ffd55ac6f44,193689481,0,0x0,8
tick,0x7ffd55ac6f44,193705685,0,0x0,8
tick,0x7ffd55ac6f44,193721583,0,0x0,8
tick,0x7ffd55ac6f44,193736738,0,0x0,8
tick,0x7ffd55ac6f44,193751743,0,0x0,8
tick,0x7ffd55ac6f44,193767398,0,0x0,8
tick,0x7ffd55ac6f44,193783362,0,0x0,8
tick,0x7ffd55ac6f44,193799577,0,0x0,8
tick,0x7ffd55ac6f44,193814556,0,0x0,8
tick,0x7ffd55ac6f44,193829621,0,0x0,8
tick,0x7ffd55ac6f44,193845911,0,0x0,8
tick,0x7ffd55ac6f44,193861036,0,0x0,8
tick,0x7ffd55ac6f44,193877013,0,0x0,8
tick,0x7ffd55ac6f44,193892872,0,0x0,8
tick,0x7ffd55ac6f44,193908441,0,0x0,8
tick,0x7ffd55ac6f44,193924013,0,0x0,8
tick,0x7ffd55ac6f44,193939822,0,0x0,8
tick,0x7ffd55ac6f44,193955292,0,0x0,8
tick,0x7ffd55ac6f44,193970902,0,0x0,8
tick,0x7ffd55ac6f44,193986652,0,0x0,8
tick,0x7ffd55ac6f44,194002613,0,0x0,8
tick,0x7ffd55ac6f44,194017582,0,0x0,8
tick,0x7ffd55ac6f44,194032648,0,0x0,8
tick,0x7ffd55ac6f44,194048666,0,0x0,8
tick,0x7ffd55ac6f44,194064641,0,0x0,8
tick,0x7ffd55ac6f44,194080615,0,0x0,8
tick,0x7ffd55ac6f44,194095585,0,0x0,8
tick,0x7ffd55ac6f44,194110605,0,0x0,8
tick,0x7ffd55ac6f44,194125605,0,0x0,8
tick,0x7ffd55ac6f44,194141692,0,0x0,8
tick,0x7ffd55ac6f44,194156702,0,0x0,8
tick,0x7ffd55ac6f44,194171664,0,0x0,8
tick,0x7ffd55ac6f44,194187625,0,0x0,8
tick,0x7ffd55ac6f44,194203041,0,0x0,8
tick,0x7ffd55ac6f44,194217865,0,0x0,8
tick,0x7ffd55ac6f44,194232915,0,0x0,8
tick,0x7ffd55ac6f44,194247867,0,0x0,8
tick,0x7ffd55ac6f44,194263362,0,0x0,8
tick,0x7ffd55ac6f44,194279050,0,0x0,8
tick,0x7ffd55ac6f44,194294189,0,0x0,8
tick,0x7ffd55ac6f44,194309136,0,0x0,8
tick,0x7ffd55ac6f44,194324468,0,0x0,8
tick,0x7ffd55ac6f44,194340438,0,0x0,8
tick,0x7ffd55ac6f44,194355503,0,0x0,8
tick,0x7ffd55ac6f44,194371177,0,0x0,8
tick,0x7ffd55ac6f44,194386378,0,0x0,8
tick,0x7ffd55ac6f44,194401781,0,0x0,8
tick,0x7ffd55ac6f44,194417453,0,0x0,8
tick,0x7ffd55ac6f44,194432326,0,0x0,8
tick,0x7ffd55ac6f44,194447701,0,0x0,8
tick,0x7ffd55ac6f44,194463894,0,0x0,8
tick,0x7ffd55ac6f44,194478961,0,0x0,8
tick,0x7ffd55ac6f44,194494443,0,0x0,8
tick,0x7ffd55ac6f44,194510462,0,0x0,8
tick,0x7ffd55ac6f44,194525489,0,0x0,8
tick,0x7ffd55ac6f44,194540591,0,0x0,8
tick,0x7ffd55ac6f44,194555845,0,0x0,8
tick,0x7ffd55ac6f44,194571284,0,0x0,8
tick,0x7ffd55ac6f44,194587448,0,0x0,8
tick,0x7ffd55ac6f44,194602604,0,0x0,8
tick,0x7ffd55ac6f44,194617635,0,0x0,8
tick,0x7ffd55ac6f44,194633295,0,0x0,8
tick,0x7ffd55ac6f44,194648379,0,0x0,8
tick,0x7ffd55ac6f44,194664200,0,0x0,8
tick,0x7ffd55ac6f44,194679981,0,0x0,8
tick,0x7ffd55ac6f44,194695449,0,0x0,8
tick,0x7ffd55ac6f44,194711045,0,0x0,8
tick,0x7ffd55ac6f44,194725422,0,0x0,8
tick,0x7ffd55ac6f44,194740873,0,0x0,8
tick,0x7ffd55ac6f44,194756456,0,0x0,8
tick,0x7ffd55ac6f44,194772231,0,0x0,8
tick,0x7ffd55ac6f44,194787901,0,0x0,8
tick,0x7ffd55ac6f44,194803504,0,0x0,8
tick,0x7ffd55ac6f44,194819712,0,0x0,8
tick,0x7ffd55ac6f44,194835264,0,0x0,8
tick,0x7ffd55ac6f44,194851361,0,0x0,8
tick,0x7ffd55ac6f44,194867781,0,0x0,8
tick,0x7ffd55ac6f44,194882928,0,0x0,8
tick,0x7ffd55ac6f44,194897652,0,0x0,8
tick,0x7ffd55ac6f44,194912656,0,0x0,8
tick,0x7ffd55ac6f44,194927640,0,0x0,8
tick,0x7ffd55ac6f44,194943255,0,0x0,8
tick,0x7ffd55ac6f44,194959598,0,0x0,8
tick,0x7ffd55ac6f44,194974987,0,0x0,8
tick,0x7ffd55ac6f44,194991033,0,0x0,8
tick,0x7ffd55ac6f44,195006918,0,0x0,8
tick,0x7ffd55ac6f44,195024207,0,0x0,8
tick,0x7ffd55ac6f44,195038936,0,0x0,8
tick,0x7ffd55ac6f44,195053896,0,0x0,8
tick,0x7ffd55ac6f44,195069997,0,0x0,8
tick,0x7ffd55ac6f44,195085929,0,0x0,8
tick,0x7ffd55ac6f44,195100959,0,0x0,8
tick,0x7ffd55ac6f44,195115991,0,0x0,8
tick,0x7ffd55ac6f44,195131961,0,0x0,8
tick,0x7ffd55ac6f44,195146882,0,0x0,8
tick,0x7ffd55ac6f44,195162941,0,0x0,8
tick,0x7ffd55ac6f44,195178942,0,0x0,8
tick,0x7ffd55ac6f44,195193924,0,0x0,8
tick,0x7ffd55ac6f44,195209603,0,0x0,8
tick,0x7ffd55ac6f44,195224726,0,0x0,8
tick,0x7ffd55ac6f44,195240926,0,0x0,8
tick,0x7ffd55ac6f44,195256173,0,0x0,8
tick,0x7ffd55ac6f44,195271656,0,0x0,8
tick,0x7ffd55ac6f44,195286838,0,0x0,8
tick,0x7ffd55ac6f44,195302269,0,0x0,8
tick,0x7ffd55ac6f44,195317742,0,0x0,8
tick,0x7ffd55ac6f44,195332232,0,0x0,8
tick,0x7ffd55ac6f44,195347742,0,0x0,8
tick,0x7ffd55ac6f44,195363295,0,0x0,8
tick,0x7ffd55ac6f44,195379319,0,0x0,8
tick,0x7ffd55ac6f44,195395778,0,0x0,8
tick,0x7ffd55ac6f44,195411313,0,0x0,8
tick,0x7ffd55ac6f44,195426324,0,0x0,8
tick,0x7ffd55ac6f44,195442137,0,0x0,8
tick,0x7ffd55ac6f44,195456311,0,0x0,8
tick,0x7ffd55ac6f44,195471539,0,0x0,8
tick,0x7ffd55ac6f44,195487434,0,0x0,8
tick,0x7ffd55ac6f44,195502382,0,0x0,8
tick,0x7ffd55ac6f44,195518285,0,0x0,8
tick,0x7ffd55ac6f44,195533284,0,0x0,8
tick,0x7ffd55ac6f44,195548215,0,0x0,8
tick,0x7ffd55ac6f44,195564312,0,0x0,8
tick,0x7ffd55ac6f44,195580450,0,0x0,8
tick,0x7ffd55ac6f44,195596452,0,0x0,8
tick,0x7ffd55ac6f44,195612948,0,0x0,8
tick,0x7ffd55ac6f44,195627911,0,0x0,8
tick,0x7ffd55ac6f44,195643463,0,0x0,8
tick,0x7ffd55ac6f44,195658924,0,0x0,8
tick,0x7ffd55ac6f44,195673471,0,0x0,8
tick,0x7ffd55ac6f44,195688756,0,0x0,8
tick,0x7ffd55ac6f44,195704638,0,0x0,8
tick,0x7ffd55ac6f44,195720420,0,0x0,8
tick,0x7ffd55ac6f44,195735583,0,0x0,8
tick,0x7ffd55ac6f44,195750683,0,0x0,8
tick,0x7ffd55ac6f44,195766706,0,0x0,8
tick,0x7ffd55ac6f44,195782382,0,0x0,8
tick,0x7ffd55ac6f44,195798164,0,0x0,8
tick,0x7ffd55ac6f44,195813902,0,0x0,8
tick,0x7ffd55ac6f44,195829313,0,0x0,8
tick,0x7ffd55ac6f44,195844428,0,0x0,8
tick,0x7ffd55ac6f44,195860728,0,0x0,8
tick,0x7ffd55ac6f44,195876188,0,0x0,8
tick,0x7ffd55ac6f44,195892194,0,0x0,8
tick,0x7ffd55ac6f44,195907705,0,0x0,8
tick,0x7ffd55ac6f44,195922505,0,0x0,8
tick,0x7ffd55ac6f44,195937921,0,0x0,8
tick,0x7ffd55ac6f44,195953640,0,0x0,8
tick,0x7ffd55ac6f44,195968811,0,0x0,8
tick,0x7ffd55ac6f44,195984343,0,0x0,8
tick,0x7ffd55ac6f44,196000092,0,0x0,8
tick,0x7ffd55ac6f44,196015302,0,0x0,8
tick,0x7ffd55ac6f44,196031392,0,0x0,8
tick,0x7ffd55ac6f44,196047461,0,0x0,8
tick,0x7ffd55ac6f44,196063528,0,0x0,8
tick,0x7ffd55ac6f44,196079909,0,0x0,8
tick,0x7ffd55ac6f44,196095619,0,0x0,8
tick,0x7ffd55ac6f44,196111623,0,0x0,8
tick,0x7ffd55ac6f44,196127421,0,0x0,8
tick,0x7ffd55ac6f44,196143797,0,0x0,8
tick,0x7ffd55ac6f44,196158886,0,0x0,8
tick,0x7ffd55ac6f44,196173626,0,0x0,8
tick,0x7ffd55ac6f44,196188442,0,0x0,8
tick,0x7ffd55ac6f44,196204352,0,0x0,8
tick,0x7ffd55ac6f44,196219398,0,0x0,8
tick,0x7ffd55ac6f44,196234508,0,0x0,8
tick,0x7ffd55ac6f44,196250452,0,0x0,8
tick,0x7ffd55ac6f44,196265673,0,0x0,8
tick,0x7ffd55ac6f44,196280832,0,0x0,8
tick,0x7ffd55ac6f44,196296256,0,0x0,8
tick,0x7ffd55ac6f44,196311578,0,0x0,8
tick,0x7ffd55ac6f44,196327646,0,0x0,8
tick,0x7ffd55ac6f44,196343330,0,0x0,8
tick,0x7ffd55ac6f44,196358843,0,0x0,8
tick,0x7ffd55ac6f44,196374488,0,0x0,8
tick,0x7ffd55ac6f44,196390062,0,0x0,8
tick,0x7ffd55ac6f44,196406105,0,0x0,8
tick,0x7ffd55ac6f44,196421798,0,0x0,8
tick,0x7ffd55ac6f44,196437655,0,0x0,8
tick,0x7ffd55ac6f44,196453729,0,0x0,8
tick,0x7ffd55ac6f44,196468911,0,0x0,8
tick,0x7ffd55ac6f44,196484254,0,0x0,8
tick,0x7ffd55ac6f44,196499949,0,0x0,8
tick,0x7ffd55ac6f44,196515384,0,0x0,8
tick,0x7ffd55ac6f44,196530832,0,0x0,8
tick,0x7ffd55ac6f44,196546412,0,0x0,8
tick,0x7ffd55ac6f44,196562466,0,0x0,8
tick,0x7ffd55ac6f44,196578317,0,0x0,8
tick,0x7ffd55ac6f44,196593339,0,0x0,8
tick,0x7ffd55ac6f44,196608974,0,0x0,8
tick,0x7ffd55ac6f44,196624399,0,0x0,8
tick,0x7ffd55ac6f44,196640001,0,0x0,8
tick,0x7ffd55ac6f44,196655233,0,0x0,8
tick,0x7ffd55ac6f44,196670042,0,0x0,8
tick,0x7ffd55ac6f44,196685595,0,0x0,8
tick,0x7ffd55ac6f44,196701424,0,0x0,8
tick,0x7ffd55ac6f44,196716321,0,0x0,8
tick,0x7ffd55ac6f44,196732240,0,0x0,8
tick,0x7ffd55ac6f44,196747661,0,0x0,8
tick,0x7ffd55ac6f44,196763557,0,0x0,8
tick,0x7ffd55ac6f44,196778920,0,0x0,8
tick,0x7ffd55ac6f44,196794379,0,0x0,8
tick,0x7ffd55ac6f44,196809992,0,0x0,8
tick,0x7ffd55ac6f44,196825723,0,0x0,8
tick,0x7ffd55ac6f44,196840588,0,0x0,8
tick,0x7ffd55ac6f44,196856034,0,0x0,8
tick,0x7ffd55ac6f44,196871809,0,0x0,8
tick,0x7ffd55ac6f44,196887602,0,0x0,8
tick,0x7ffd55ac6f44,196903627,0,0x0,8
tick,0x7ffd55ac6f44,196918889,0,0x0,8
tick,0x7ffd55ac6f44,196934165,0,0x0,8
tick,0x7ffd55ac6f44,196949750,0,0x0,8
tick,0x7ffd55ac6f44,196964929,0,0x0,8
tick,0x7ffd55ac6f44,196980222,0,0x0,8
tick,0x7ffd55ac6f44,196995399,0,0x0,8
tick,0x7ffd55ac6f44,197011145,0,0x0,8
tick,0x7ffd55ac6f44,197026470,0,0x0,8
tick,0x7ffd55ac6f44,197042566,0,0x0,8
tick,0x7ffd55ac6f44,197058393,0,0x0,8
tick,0x7ffd55ac6f44,197073688,0,0x0,8
tick,0x7ffd55ac6f44,197089019,0,0x0,8
tick,0x7ffd55ac6f44,197105553,0,0x0,8
tick,0x7ffd55ac6f44,197121437,0,0x0,8
tick,0x7ffd55ac6f44,197137962,0,0x0,8
tick,0x7ffd55ac6f44,197152966,0,0x0,8
tick,0x7ffd55ac6f44,197168166,0,0x0,8
tick,0x7ffd55ac6f44,197183808,0,0x0,8
tick,0x7ffd55ac6f44,197198809,0,0x0,8
tick,0x7ffd55ac6f44,197214820,0,0x0,8
tick,0x7ffd55ac6f44,197230059,0,0x0,8
tick,0x7ffd55ac6f44,197246067,0,0x0,8
tick,0x7ffd55ac6f44,197261054,0,0x0,8
tick,0x7ffd55ac6f44,197276058,0,0x0,8
tick,0x7ffd55ac6f44,197292034,0,0x0,8
tick,0x7ffd55ac6f44,197308019,0,0x0,8
tick,0x7ffd55ac6f44,197324055,0,0x0,8
tick,0x7ffd55ac6f44,197340154,0,0x0,8
tick,0x7ffd55ac6f44,197354822,0,0x0,8
tick,0x7ffd55ac6f44,197370576,0,0x0,8
tick,0x7ffd55ac6f44,197386555,0,0x0,8
tick,0x7ffd55ac6f44,197402149,0,0x0,8
tick,0x7ffd55ac6f44,197418134,0,0x0,8
tick,0x7ffd55ac6f44,197433636,0,0x0,8
tick,0x7ffd55ac6f44,197449709,0,0x0,8
tick,0x7ffd55ac6f44,197464612,0,0x0,8
tick,0x7ffd55ac6f44,197479962,0,0x0,8
tick,0x7ffd55ac6f44,197496082,0,0x0,8
tick,0x7ffd55ac6f44,197512082,0,0x0,8
tick,0x7ffd55ac6f44,197527071,0,0x0,8
tick,0x7ffd55ac6f44,197542134,0,0x0,8
tick,0x7ffd55ac6f44,197557914,0,0x0,8
tick,0x7ffd55ac6f44,197572632,0,0x0,8
tick,0x7ffd55ac6f44,197588027,0,0x0,8
tick,0x7ffd55ac6f44,197604018,0,0x0,8
tick,0x7ffd55ac6f44,197620030,0,0x0,8
tick,0x7ffd55ac6f44,197635878,0,0x0,8
tick,0x7ffd55ac6f44,197651859,0,0x0,8
tick,0x7ffd55ac6f44,197666820,0,0x0,8
tick,0x7ffd55ac6f44,197682791,0,0x0,8
tick,0x7ffd55ac6f44,197698868,0,0x0,8
tick,0x7ffd55ac6f44,197713888,0,0x0,8
tick,0x7ffd55ac6f44,197728889,0,0x0,8
tick,0x7ffd55ac6f44,197744861,0,0x0,8
tick,0x7ffd55ac6f44,197760194,0,0x0,8
tick,0x7ffd55ac6f44,197776108,0,0x0,8
tick,0x7ffd55ac6f44,197790831,0,0x0,8
tick,0x7ffd55ac6f44,197805873,0,0x0,8
tick,0x7ffd55ac6f44,197821570,0,0x0,8
tick,0x7ffd55ac6f44,197837388,0,0x0,8
tick,0x7ffd55ac6f44,197853481,0,0x0,8
tick,0x7ffd55ac6f44,197868664,0,0x0,8
tick,0x7ffd55ac6f44,197884151,0,0x0,8
tick,0x7ffd55ac6f44,197899090,0,0x0,8
tick,0x7ffd55ac6f44,197914255,0,0x0,8
tick,0x7ffd55ac6f44,197929581,0,0x0,8
tick,0x7ffd55ac6f44,197944868,0,0x0,8
tick,0x7ffd55ac6f44,197960706,0,0x0,8
tick,0x7ffd55ac6f44,197976452,0,0x0,8
tick,0x7ffd55ac6f44,197992498,0,0x0,8
tick,0x7ffd55ac6f44,198007791,0,0x0,8
tick,0x7ffd55ac6f44,198023695,0,0x0,8
tick,0x7ffd55ac6f44,198039828,0,0x0,8
tick,0x7ffd55ac6f44,198055207,0,0x0,8
tick,0x7ffd55ac6f44,198070459,0,0x0,8
tick,0x7ffd55ac6f44,198086087,0,0x0,8
tick,0x7ffd55ac6f44,198102092,0,0x0,8
tick,0x7ffd55ac6f44,198117901,0,0x0,8
tick,0x7ffd55ac6f44,198134061,0,0x0,8
tick,0x7ffd55ac6f44,198149274,0,0x0,8
tick,0x7ffd55ac6f44,198165293,0,0x0,8
tick,0x7ffd55ac6f44,198181334,0,0x0,8
tick,0x7ffd55ac6f44,198196300,0,0x0,8
tick,0x7ffd55ac6f44,198212108,0,0x0,8
tick,0x7ffd55ac6f44,198227318,0,0x0,8
tick,0x7ffd55ac6f44,198242611,0,0x0,8
tick,0x7ffd55ac6f44,198257730,0,0x0,8
tick,0x7ffd55ac6f44,198274274,0,0x0,8
tick,0x7ffd55ac6f44,198289621,0,0x0,8
tick,0x7ffd55ac6f44,198305489,0,0x0,8
tick,0x7ffd55ac6f44,198320658,0,0x0,8
tick,0x7ffd55ac6f44,198335419,0,0x0,8
tick,0x7ffd55ac6f44,198351311,0,0x0,8
tick,0x7ffd55ac6f44,198365485,0,0x0,8
tick,0x7ffd55ac6f44,198381303,0,0x0,8
tick,0x7ffd55ac6f44,198396383,0,0x0,8
tick,0x7ffd55ac6f44,198411446,0,0x0,8
tick,0x7ffd55ac6f44,198426289,0,0x0,8
tick,0x7ffd55ac6f44,198442343,0,0x0,8
tick,0x7ffd55ac6f44,198458316,0,0x0,8
tick,0x7ffd55ac6f44,198473570,0,0x0,8
tick,0x7ffd55ac6f44,198489589,0,0x0,8
tick,0x7ffd55ac6f44,198505002,0,0x0,8
tick,0x7ffd55ac6f44,198520499,0,0x0,8
tick,0x7ffd55ac6f44,198536397,0,0x0,8
tick,0x7ffd55ac6f44,198551668,0,0x0,8
tick,0x7ffd55ac6f44,198567683,0,0x0,8
tick,0x7ffd55ac6f44,198583434,0,0x0,8
tick,0x7ffd55ac6f44,198599344,0,0x0,8
tick,0x7ffd55ac6f44,198614870,0,0x0,8
tick,0x7ffd55ac6f44,198630264,0,0x0,8
tick,0x7ffd55ac6f44,198645260,0,0x0,8
tick,0x7ffd55ac6f44,198661687,0,0x0,8
tick,0x7ffd55ac6f44,198677331,0,0x0,8
tick,0x7ffd55ac6f44,198693350,0,0x0,8
tick,0x7ffd55ac6f44,198708994,0,0x0,8
tick,0x7ffd55ac6f44,198724651,0,0x0,8
tick,0x7ffd55ac6f44,198740098,0,0x0,8
tick,0x7ffd55ac6f44,198755349,0,0x0,8
tick,0x7ffd55ac6f44,198771176,0,0x0,8
tick,0x7ffd55ac6f44,198786495,0,0x0,8
tick,0x7ffd55ac6f44,198802477,0,0x0,8
tick,0x7ffd55ac6f44,198818442,0,0x0,8
tick,0x7ffd55ac6f44,198833471,0,0x0,8
tick,0x7ffd55ac6f44,198848496,0,0x0,8
tick,0x7ffd55ac6f44,198864196,0,0x0,8
tick,0x7ffd55ac6f44,198879791,0,0x0,8
tick,0x7ffd55ac6f44,198894545,0,0x0,8
tick,0x7ffd55ac6f44,198909700,0,0x0,8
tick,0x7ffd55ac6f44,198924565,0,0x0,8
tick,0x7ffd55ac6f44,198939729,0,0x0,8
tick,0x7ffd55ac6f44,198954750,0,0x0,8
tick,0x7ffd55ac6f44,198969837,0,0x0,8
tick,0x7ffd55ac6f44,198984640,0,0x0,8
tick,0x7ffd55ac6f44,198999830,0,0x0,8
tick,0x7ffd55ac6f44,199014876,0,0x0,8
tick,0x7ffd55ac6f44,199030379,0,0x0,8
tick,0x7ffd55ac6f44,199045343,0,0x0,8
tick,0x7ffd55ac6f44,199060717,0,0x0,8
tick,0x7ffd55ac6f44,199076242,0,0x0,8
tick,0x7ffd55ac6f44,199091304,0,0x0,8
tick,0x7ffd55ac6f44,199106677,0,0x0,8
tick,0x7ffd55ac6f44,199122393,0,0x0,8
tick,0x7ffd55ac6f44,199138005,0,0x0,8
tick,0x7ffd55ac6f44,199153487,0,0x0,8
tick,0x7ffd55ac6f44,199169226,0,0x0,8
tick,0x7ffd55ac6f44,199184774,0,0x0,8
tick,0x7ffd55ac6f44,199200624,0,0x0,8
tick,0x7ffd55ac6f44,199216652,0,0x0,8
tick,0x7ffd55ac6f44,199232641,0,0x0,8
tick,0x7ffd55ac6f44,199248699,0,0x0,8
tick,0x7ffd55ac6f44,199264718,0,0x0,8
tick,0x7ffd55ac6f44,199279693,0,0x0,8
tick,0x7ffd55ac6f44,199295648,0,0x0,8
